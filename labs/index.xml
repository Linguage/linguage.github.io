<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Lab on Linguage</title><link>https://linguage.github.io/labs/</link><description>Recent content in Lab on Linguage</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Tue, 19 Aug 2025 15:06:53 +0800</lastBuildDate><atom:link href="https://linguage.github.io/labs/index.xml" rel="self" type="application/rss+xml"/><item><title>构建压缩感知（Compressed Sensing, CS）算法代码</title><link>https://linguage.github.io/labs/compressed_sensing_gemini_pro/</link><pubDate>Tue, 19 Aug 2025 15:06:53 +0800</pubDate><guid>https://linguage.github.io/labs/compressed_sensing_gemini_pro/</guid><description>&lt;h1 id="构建压缩感知compressed-sensing-cs算法代码">构建压缩感知（Compressed Sensing, CS）算法代码&lt;/h1>
&lt;p>构建压缩感知（Compressed Sensing, CS）算法代码通常涉及以下几个核心步骤。压缩感知理论指出，如果信号是稀疏的或可压缩的，那么就可以用远少于奈奎斯特采样定理所要求的采样点来精确地重建信号。&lt;/p></description></item></channel></rss>