<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>管理 on Linguista</title>
    <link>https://linguage.github.io/tags/%E7%AE%A1%E7%90%86/</link>
    <description>Recent content in 管理 on Linguista</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="https://linguage.github.io/tags/%E7%AE%A1%E7%90%86/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title> pooled-risk 公司管理公司</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/prcmc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/prcmc/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_en/prcmc/&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;link-card&#34; data-url=&#34;https://www.paulgraham.com/prcmc.html&#34;&gt;&#xA;  &lt;a class=&#34;link-card__fallback&#34; href=&#34;https://www.paulgraham.com/prcmc.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&#xA;    https://www.paulgraham.com/prcmc.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;pooled-risk-公司管理公司&#34;&gt;pooled-risk 公司管理公司&lt;/h1&gt;&#xA;&lt;p&gt;2008年7月&lt;/p&gt;&#xA;&lt;p&gt;在今年创业学校的演讲中，David Heinemeier Hansson 建议创业创始人应该用老式的方式做事。不要期望通过建立有价值的公司然后在&amp;quot;流动性事件&amp;quot;中出售股票来致富，创始人应该创办能赚钱的公司并依靠收入生活。&lt;/p&gt;&#xA;&lt;p&gt;听起来是个好计划。让我们思考一下做到这一点的最佳方式。&lt;/p&gt;&#xA;&lt;p&gt;依靠公司收入生活的一个缺点是你必须持续经营它。任何经营自己业务的人都会告诉你，这需要你全神贯注。你不能只是在业务开始顺利后就撒手不管，否则它们会很快停止顺利发展。&lt;/p&gt;&#xA;&lt;p&gt;创业创始人的主要经济动机似乎是自由和安全。他们想要足够的钱，以便（a）不必担心钱用完，（b）可以按自己的意愿度过时间。经营自己的业务两者都不提供。你当然没有自由：没有老板如此苛刻。你也没有安全，因为如果你停止关注公司，收入就会消失，你的收入也会随之消失。&lt;/p&gt;&#xA;&lt;p&gt;对大多数人来说，最好的情况是，当公司发展到一定规模时，你能雇人替你管理。假设你能找到一个真正好的经理。那么你就能同时拥有自由和安全。你可以想对业务投入多少关注就投入多少，知道你的经理会让事情顺利运行。既然如此，收入会继续流入，所以你也会有安全感。&lt;/p&gt;&#xA;&lt;p&gt;当然会有一些创始人不喜欢这个想法：那些非常喜欢经营自己公司以至于没有其他更喜欢做的事情的人。但这个群体肯定很小。在大多数业务中成功的方法是狂热地关注客户需求。你自己的愿望与这个强大的外部力量的要求完全吻合的几率有多大？&lt;/p&gt;&#xA;&lt;p&gt;当然，经营自己的公司可能相当有趣。Viaweb比我以前做过的任何工作都更有趣。而且因为我从中赚了更多的钱，它提供了我做过的任何事情中收入与无聊感的最高比率，数量级差异很大。但这是我能想象的最有趣的工作吗？不是。&lt;/p&gt;&#xA;&lt;p&gt;处于相同位置的创始人数量是渐近的还是仅仅很大，肯定有很多这样的人。对他们来说，正确的方法是最终将公司交给职业经理人，如果他们能找到足够好的人的话。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;到目前为止一切顺利。但如果你的经理被公交车撞了怎么办？你真正想要的是一家管理公司来为你经营公司。这样你就不依赖任何一个人。&lt;/p&gt;&#xA;&lt;p&gt;如果你拥有租赁房产，你可以雇公司为你管理。有些公司会做所有事情，从寻找租户到修理漏水。当然，经营公司比管理租赁房产复杂得多，但让我们假设有管理公司可以为你做这件事。他们会收取很多费用，但这不是值得的吗？为了额外的安心，我愿意牺牲很大一部分收入。&lt;/p&gt;&#xA;&lt;p&gt;我意识到我描述的已经听起来好得令人难以置信，但我能想到一种方法让它更有吸引力。如果公司管理公司存在，它们可以为客户提供额外的服务：它们可以通过汇集风险来让客户确保回报。毕竟，即使完美的经理也无法在公司整个市场消亡时拯救公司，就像物业经理无法在大楼烧毁时拯救你一样。但管理足够多公司的公司可以向所有客户说：我们将合并你所有公司的收入，并支付你相应的份额。&lt;/p&gt;&#xA;&lt;p&gt;如果这样的管理公司存在，它们会提供最大程度的自由和安全。有人会为你经营公司，即使公司不幸倒闭，你也会受到保护。&lt;/p&gt;&#xA;&lt;p&gt;让我们思考这样的管理公司如何组织。最简单的方法是创造一种代表他们管理的公司总池的新股票。当你签约时，你会用你公司的股票换取这个池子的股份，比例基于双方同意的公司价值估计。然后你会自动获得整个池子回报的份额。&lt;/p&gt;&#xA;&lt;p&gt;问题在于这种交易很难撤销，你不能切换管理公司。但他们有一种解决方法：假设所有公司管理公司聚在一起并同意让他们的客户交换所有池子的股份。那么实际上，你可以同时选择所有管理公司以你想要的任何比例为你经营公司，并随心所欲地改变主意。&lt;/p&gt;&#xA;&lt;p&gt;如果这样的pooled-risk公司管理公司存在，对大多数遵循David建议路线的人来说，签约一个似乎是理想的计划。&lt;/p&gt;&#xA;&lt;p&gt;好消息：它们确实存在。我刚刚描述的是被上市公司收购。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;不幸的是，尽管收购者在结构上与pooled-risk公司管理公司相同，但他们并不这样看待自己。对于物业管理公司，你可以随时走进去说&amp;quot;为我管理我的租赁房产&amp;quot;，他们就会做。而收购者，在撰写本文时，极度善变。有时他们处于购买情绪，会大幅超额支付；有时他们不感兴趣。他们就像由疯子经营的物业管理公司。或者更准确地说，由本杰明·格雷厄姆的&amp;quot;市场先生&amp;quot;经营。&lt;/p&gt;&#xA;&lt;p&gt;所以虽然平均而言上市公司收购者表现得像pooled-risk公司经理，但你需要几年的时间窗口来获得平均情况表现。如果你等待足够长的时间（比如五年），你可能会遇到某个收购者热衷于购买你的上升周期。但你不能选择它何时发生。&lt;/p&gt;&#xA;&lt;p&gt;你不能假设投资者会支持你等待所需的时间。你的公司必须赚钱。关于多早开始关注这一点意见不一。Joe Kraus说你应该立即尝试向客户收费。然而，一些最成功的创业公司，包括谷歌，最初忽略收入，专门专注于开发。答案可能取决于你创办的公司类型。我可以想象在某些公司中，试图销售会是产品设计的好启发，而在其他公司中，这只会分散注意力。测试可能是它是否帮助你理解用户。&lt;/p&gt;&#xA;&lt;p&gt;你可以选择你认为最适合你创办的公司类型的收入策略，只要你是盈利的。盈利确保你至少获得收购市场的平均水平——在这种情况下，上市公司确实表现得像pooled-risk公司管理公司。&lt;/p&gt;&#xA;&lt;p&gt;David说应该创办公司依靠其收入生活并没有错。错误在于认为这在某种程度上与创办公司并出售它是对立的。事实上，对大多数人来说，后者只是前者的最佳情况。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;&lt;em&gt;感谢 Trevor Blackwell、Jessica Livingston、Michael Mandel、Robert Morris 和 Fred Wilson 阅读本文草稿。&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;俄文翻译&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>&#34;艺术家要发布&#34;的另一面</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/artistsship/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/artistsship/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_en/artistsship/&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;link-card&#34; data-url=&#34;https://www.paulgraham.com/artistsship.html&#34;&gt;&#xA;  &lt;a class=&#34;link-card__fallback&#34; href=&#34;https://www.paulgraham.com/artistsship.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&#xA;    https://www.paulgraham.com/artistsship.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;艺术家要发布的另一面&#34;&gt;&amp;ldquo;艺术家要发布&amp;quot;的另一面&lt;/h1&gt;&#xA;&lt;p&gt;2008年11月&lt;/p&gt;&#xA;&lt;p&gt;大公司与创业公司之间的区别之一是，大公司往往已经制定了防止犯错的程序。创业公司走路就像幼儿，不断撞到东西，跌倒。大公司则更加谨慎。&lt;/p&gt;&#xA;&lt;p&gt;组织中审核的逐渐积累是一种学习，基于发生在自己或类似组织身上的灾难。例如，在与一个破产并无法交付的供应商签订合同后，公司可能会要求所有供应商在投标前证明自己有偿付能力。&lt;/p&gt;&#xA;&lt;p&gt;随着公司的发展，他们不可避免地会有更多这样的审核，要么是为了应对他们遭受的灾难，要么（可能更常见的是）通过从更大的公司雇佣带来新灾难防范习惯的人。&lt;/p&gt;&#xA;&lt;p&gt;组织从错误中学习是自然的。问题是，提出新审核的人几乎从不考虑审核本身有成本。&lt;/p&gt;&#xA;&lt;h2 id=&#34;每个审核都有成本&#34;&gt;每个审核都有成本。&lt;/h2&gt;&#xA;&lt;p&gt;例如，考虑让供应商验证其偿付能力的情况。这难道不是仅仅谨慎吗？但实际上它可能有巨大成本。显然，双方提供和检查供应商偿付能力证明的人有直接的时间成本。但真正的成本是你从未听说过的：本会是最佳供应商的公司，但因为无法腾出精力进行验证而没有投标。或者本会是最佳供应商的公司，但偿付能力却刚好低于门槛——当然这个门槛会被定得偏高，因为没有明显的提高成本。&lt;/p&gt;&#xA;&lt;p&gt;每当组织中有人提议添加新审核时，他们应该不仅解释收益，还要解释成本。无论他们分析得多么糟糕，这个元审核至少会提醒每个人必须存在成本，并让他们去寻找它。&lt;/p&gt;&#xA;&lt;p&gt;如果公司开始这样做，他们会发现一些意外。Joel Spolsky最近在Y Combinator谈到向企业客户销售软件。他说，在大多数公司中，成本高达约1000美元的软件可以由个人经理无需任何额外批准购买。超过这个门槛，软件购买通常必须由委员会批准。但是为软件供应商处理这个过程如此昂贵，以至于收费少于50000美元没有意义。这意味着如果你制造了一个本来可能收费5000美元的东西，你必须以50000美元的价格出售。&lt;/p&gt;&#xA;&lt;p&gt;委员会的目的是确保公司不浪费钱。然而结果是公司支付了10倍的价格。&lt;/p&gt;&#xA;&lt;p&gt;购买审核总是昂贵的，因为向你销售东西越困难，它就必须成本越高。而且不是线性的。如果你足够难以销售，最擅长制造东西的人根本不想费心。唯一会向你销售的是专门向你销售的公司。那么你已经陷入了全新的低效率水平。市场机制不再保护你，因为好的供应商已经不在市场上了。&lt;/p&gt;&#xA;&lt;p&gt;这样的事情不断发生在所有最大的组织中，政府。但政府实施的审核可能导致的问题不仅仅是多付钱。政府实施的审核可能破坏整个国家的经济。直到大约1400年，中国比欧洲更富有，技术更先进。欧洲超越的一个原因是中国政府限制了长途贸易航行。因此欧洲人开始探索并最终主导世界其他地区，包括中国。&lt;/p&gt;&#xA;&lt;p&gt;在更近的时代，《萨班斯-奥克斯利法案》实际上摧毁了美国IPO市场。这不是立法者的意图。他们只是想为上市公司添加更多审核。但他们忘记了考虑成本。他们忘记了即将上市的公司通常相当紧张，而对通用电气来说可能容易承受的几个额外审核的重量，足以阻止年轻公司上市。&lt;/p&gt;&#xA;&lt;p&gt;一旦你开始思考审核的成本，你就可以开始问其他有趣的问题。成本是在增加还是减少？在某些地区是否比其他地区高？哪里会不连续地增加？如果大型组织开始问这样的问题，他们会学到一些令人恐惧的事情。&lt;/p&gt;&#xA;&lt;h2 id=&#34;我认为审核的成本实际上可能在增加&#34;&gt;我认为审核的成本实际上可能在增加。&lt;/h2&gt;&#xA;&lt;p&gt;原因是软件在公司中扮演着越来越重要的角色，而编写软件的人特别受到审核的伤害。&lt;/p&gt;&#xA;&lt;p&gt;程序员与许多类型的工人不同，最好的程序员实际上更愿意努力工作。在大多数类型的工作中似乎并非如此。当我在快餐店工作时，我们并不喜欢繁忙时段。当我过去修剪草坪时，我绝对不喜欢一周下雨后草长得很长的时候。&lt;/p&gt;&#xA;&lt;p&gt;然而，程序员在写更多代码时更喜欢。或者更准确地说，在发布更多代码时更喜欢。程序员喜欢做出改变。好的程序员，无论如何。&lt;/p&gt;&#xA;&lt;p&gt;对于好的程序员来说，为创业公司工作的最大好处之一是发布的审核很少。在真正的创业公司中，根本没有外部审核。如果你早上有一个新功能的想法，你可以在午餐前编写它并将其推送到生产服务器。当你能做到这一点时，你会有更多想法。&lt;/p&gt;&#xA;&lt;p&gt;在大公司，软件必须经过各种批准才能发布。这样做的成本可能是巨大的——实际上是不连续的。最近我和三个程序员交谈，他们的创业公司几年前被一家大公司收购。当他们独立时，他们可以立即发布更改。现在，他们说，他们能在生产服务器上发布代码的最快速度是两周。&lt;/p&gt;&#xA;&lt;p&gt;这不仅让他们生产力降低。这让他们讨厌为收购者工作。&lt;/p&gt;&#xA;&lt;p&gt;这里是程序员多么喜欢能够努力工作的一个迹象：这些人会付钱来立即发布代码，像过去那样。我问他们是否愿意用收购价的10%来换取立即发布代码的能力，三个人立即说愿意。然后我问他们愿意用收购价的最大百分比来换取它。他们说他们不想思考，因为他们不想知道自己会多高，但我得到的印象可能高达一半。&lt;/p&gt;&#xA;&lt;p&gt;他们会牺牲数十万，也许是数百万美元，只是为了能够向用户交付更多软件。你知道吗？让他们这样做是完全安全的。事实上，收购者会更好；这些人不仅不会破坏任何东西，他们会完成更多工作。所以收购者实际上以更高的成本获得了更差的绩效。就像批准软件购买的委员会一样。&lt;/p&gt;&#xA;&lt;p&gt;正如难以销售的最大危险不是你多付钱，而是最好的供应商甚至不会向你销售，对程序员应用太多审核的最大危险不是你会让他们不高效，而是好的程序员甚至不想为你工作。&lt;/p&gt;&#xA;&lt;p&gt;史蒂夫·乔布斯著名的格言&amp;quot;艺术家要发布&amp;quot;有两个方面。艺术家不仅能够发布。他们坚持要发布。所以如果你不让人发布，你就不会有任何艺术家。&lt;/p&gt;</description>
    </item>
    <item>
      <title>你本不该有老板</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/boss/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/boss/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_en/boss/&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;link-card&#34; data-url=&#34;https://www.paulgraham.com/boss.html&#34;&gt;&#xA;  &lt;a class=&#34;link-card__fallback&#34; href=&#34;https://www.paulgraham.com/boss.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&#xA;    https://www.paulgraham.com/boss.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;你本不该有老板&#34;&gt;你本不该有老板&lt;/h1&gt;&#xA;&lt;p&gt;想要创业吗？获得Y Combinator的资助。&lt;/p&gt;&#xA;&lt;p&gt;2008年3月，2008年6月修订&lt;/p&gt;&#xA;&lt;p&gt;技术倾向于将正常与自然分开。我们的身体不是被设计来吃富裕国家人们吃的食物，也不是来进行这么少的运动。我们的工作方式可能也有类似的问题：正常的工作对我们智力的伤害可能就像白面粉或糖对我们身体的伤害一样。&lt;/p&gt;&#xA;&lt;p&gt;在与创业创始人共事几年后，我开始怀疑这一点。我现在已经与200多个创始人合作过，我注意到在自己创业公司工作的程序员与在大组织工作的程序员之间有明显的区别。我不会说创始人看起来更快乐， necessarily；创业可能非常有压力。也许最好的说法是，他们在你的身体在长跑时比坐在沙发上吃甜甜圈时更快乐的意义上更快乐。&lt;/p&gt;&#xA;&lt;p&gt;虽然他们在统计上不正常，但创业创始人似乎在以对人类更自然的方式工作。&lt;/p&gt;&#xA;&lt;p&gt;去年我在非洲，看到很多以前只在动物园里见过的野生动物。它们看起来多么不同，这很了不起。特别是狮子。野外的狮子似乎有十倍的活力。它们就像是不同的动物。我怀疑为自己工作对人类来说感觉更好，就像生活在野外对像狮子这样广泛活动的捕食者来说一定感觉更好一样。动物园的生活更容易，但这不是它们被设计的生活。&lt;/p&gt;&#xA;&lt;h2 id=&#34;树&#34;&gt;树&lt;/h2&gt;&#xA;&lt;p&gt;在大公司工作有什么不自然的？问题的根源在于人类不是被设计在如此大的群体中工作。&lt;/p&gt;&#xA;&lt;p&gt;当你在野外看到动物时，你注意到的另一件事是，每个物种都在特定大小的群体中茁壮成长。一群黑斑羚可能有100只成年个体；狒狒可能20只；狮子很少10只。人类似乎也被设计在群体中工作，我读到的关于狩猎采集者的内容与组织研究和我的经验相符，表明理想的大小大致是：8人的群体工作良好；到20人时它们变得难以管理；50人的群体真的很笨拙。[1] 无论上限是多少，我们显然不是被设计在几百人的群体中工作。然而——由于与技术而非人性有关的原因——很多人在拥有数百或数千员工的公司工作。&lt;/p&gt;&#xA;&lt;p&gt;公司知道那么大的群体无法工作，所以它们将自己分成足够小以一起工作的单位。但为了协调这些，它们必须引入新的东西：老板。&lt;/p&gt;&#xA;&lt;p&gt;这些较小的群体总是按树状结构排列。你的老板是你的群体附着到树上的点。但是当你使用这个技巧将大群体分成小群体时，会发生一些奇怪的事情，我从未听有人明确提及。在你上一级的群体中，你的老板代表你的整个群体。10个经理的群体不仅仅是10个人以通常方式一起工作的群体。它真的是群体的群体。这意味着为了让10个经理的群体像只是10个个体一样一起工作，每个经理工作的群体必须像一个人一样工作——工人和经理之间只能分享相当于一个人的自由。&lt;/p&gt;&#xA;&lt;p&gt;在实践中，一群人永远无法像一个人一样行动。但在以这种方式分成群体的大组织中，压力总是在那个方向上。每个群体都尽力像人类被设计工作的小个体群体一样工作。创造它的目的就是如此。当你传播这种约束时，结果是每个人获得的行动自由与整个树的大小成反比。[2]&lt;/p&gt;&#xA;&lt;p&gt;任何在大组织工作过的人都感受到过这一点。即使你的群体只有10个人，你也能感受到在100名员工的公司和10,000名员工的公司工作的区别。&lt;/p&gt;&#xA;&lt;h2 id=&#34;玉米糖浆&#34;&gt;玉米糖浆&lt;/h2&gt;&#xA;&lt;p&gt;大组织中的10人群体是一种虚假的部落。你与之互动的人数大约是正确的。但缺少了一些东西：个人主动性。狩猎采集部落的自由度要高得多。领导者比部落其他成员有更多的权力，但他们通常不像老板那样告诉他们做什么和什么时候做。&lt;/p&gt;&#xA;&lt;p&gt;这不是你老板的错。真正的问题是在你上面的层级群体中，你的整个群体是一个虚拟的人。你的老板只是约束传递给你的方式。&lt;/p&gt;&#xA;&lt;p&gt;所以在大组织中的10人群体中工作同时感觉既对又错。表面上它感觉像是你被设计工作的群体类型，但缺少了一些重要的东西。大公司的工作就像高果糖玉米糖浆：它具有你喜欢的东西的一些品质，但灾难性地缺乏其他品质。&lt;/p&gt;&#xA;&lt;p&gt;确实，食物是解释通常工作方式有什么问题的绝佳隐喻。&lt;/p&gt;&#xA;&lt;p&gt;例如，在大公司工作是默认要做的事情，至少对程序员来说。能有多糟糕？嗯，食物很清楚地显示了这一点。如果你今天被随机放在美国的一个地方，你周围几乎所有的食物对你都是有害的。人类不是被设计来吃白面粉、精制糖、高果糖玉米糖浆和氢化植物油的。然而，如果你分析普通杂货店的内容，你可能会发现这四种成分占了大部分热量。&amp;ldquo;正常&amp;quot;食物对你非常糟糕。唯一吃人类被设计实际吃的东西的人是伯克利的几个穿Birkenstock鞋的怪人。&lt;/p&gt;&#xA;&lt;p&gt;如果&amp;quot;正常&amp;quot;食物对我们如此糟糕，为什么它如此普遍？主要有两个原因。一是它有更直接的吸引力。你可能在吃那个披萨一小时后感觉糟糕，但吃前几口感觉很好。另一个是规模经济。生产垃圾食品可以规模化；生产新鲜蔬菜不行。这意味着（a）垃圾食品可以非常便宜，（b）值得花很多钱来营销它。&lt;/p&gt;&#xA;&lt;p&gt;如果人们必须在便宜、大量营销、短期有吸引力的东西和昂贵、晦涩、长期有吸引力的东西之间选择，你认为大多数人会选择哪个？&lt;/p&gt;&#xA;&lt;p&gt;工作也是如此。普通的麻省理工学院毕业生想在谷歌或微软工作，因为它是一个公认的品牌，很安全，他们会立即得到高薪。这是他们午餐吃的披萨的工作等价物。缺点只有在以后才会显现，而且只是一种模糊的不适感。&lt;/p&gt;&#xA;&lt;p&gt;同时，创业公司的创始人和早期员工，就像伯克利的穿Birkenstock鞋的怪人：虽然只是人口的极少数，但他们是像人类被设计那样生活的人。在人工世界里，只有极端主义者自然地生活。&lt;/p&gt;&#xA;&lt;h2 id=&#34;程序员&#34;&gt;程序员&lt;/h2&gt;&#xA;&lt;p&gt;大公司工作的限制性对程序员来说尤其困难，因为编程的本质是构建新事物。销售人员每天做大致相同的推销；支持人员回答大致相同的问题；但一旦你写了一段代码，你就不需要再写它了。所以像程序员被设计那样工作的程序员总是在创造新事物。当你是一个组织的一部分，其结构给予每个人的自由与树的大小成反比时，当你做新事情时，你会面临阻力。&lt;/p&gt;&#xA;&lt;p&gt;这似乎是规模大的必然结果。即使在最聪明的公司也是如此。最近我与一个创始人交谈，他考虑一毕业就创业，但去了谷歌工作，因为他认为在那里会学到更多。他没有学到预期的那么多。程序员通过做来学习，而他想做的大多数事情，他都不能——有时因为公司不让他，但常常因为公司的代码不让他。在遗留代码的阻力、在如此大的组织中进行开发的开销，以及其他群体拥有的接口施加的限制之间，他只能尝试他想做的事情的一小部分。他说他在自己的创业公司学到了更多，尽管他必须做公司的所有杂事以及编程，因为至少当他编程时，他可以做任何他想做的事情。&lt;/p&gt;&#xA;&lt;p&gt;下游的障碍向上游传播。如果不允许你实现新想法，你就会停止有新想法。反之亦然：当你做任何你想做的事情时，你对做什么有更多的想法。所以为自己工作使你的大脑更强大，就像低限制排气系统使发动机更强大一样。&lt;/p&gt;&#xA;&lt;p&gt;为自己工作不一定要意味着创业，当然。但在大公司的常规工作和自己的创业公司之间做决定的程序员可能会在创业中学到更多。&lt;/p&gt;&#xA;&lt;p&gt;通过调整你工作的公司规模，你可以调整你获得的自由量。如果你创办公司，你将有最多的自由。如果你成为前10名员工之一，你将拥有几乎与创始人一样多的自由。即使是100人的公司也会感觉与1000人的公司不同。&lt;/p&gt;&#xA;&lt;p&gt;在小公司工作不确保自由。大组织的树状结构设置了自由的的上限，而不是下限。小公司的头可能仍然选择成为暴君。关键是大组织被其结构 compelled 成为暴君。&lt;/p&gt;&#xA;&lt;h2 id=&#34;后果&#34;&gt;后果&lt;/h2&gt;&#xA;&lt;p&gt;这对组织和个人都有真正的后果。一个是公司随着规模变大不可避免地会变慢，无论它们多么努力保持创业精神。这是每个大组织被迫采用的树状结构的结果。&lt;/p&gt;&#xA;&lt;p&gt;或者说，大组织只有避免树状结构才能避免变慢。而且由于人性限制了可以一起工作的群体规模，我能想象的更大群体避免树状结构的唯一方法是没有结构：让每个群体实际上是独立的，像市场经济组成部分那样一起工作。&lt;/p&gt;&#xA;&lt;p&gt;这可能值得探索。我怀疑已经有一些高度可分的业务倾向于这种方式。但我不知道有任何技术公司这样做。&lt;/p&gt;&#xA;&lt;p&gt;公司可以做的比构建自己为海绵少的一件事是：保持小规模。如果我是对的，那么在每个阶段保持公司尽可能小确实有回报。特别是技术公司。这意味着雇佣最好的人加倍重要。平庸的雇佣伤害你两次：他们完成的更少，但它们也使你变大，因为你需要更多人来解决给定的问题。&lt;/p&gt;&#xA;&lt;p&gt;对个人来说结果是一样的：瞄准小规模。在大组织工作总是会糟糕，组织越大，越糟糕。&lt;/p&gt;&#xA;&lt;p&gt;几年前我写的一篇文章中，我建议即将毕业的 seniors 在创办自己的公司之前为另一家公司工作几年。我现在要修改这个。如果你愿意，可以为另一家公司工作，但只在小公司，如果你想创办自己的创业公司，就继续吧。&lt;/p&gt;&#xA;&lt;p&gt;我建议大学毕业生不要立即创业的原因是我觉得大多数人会失败。而且他们会失败。但有雄心的程序员做自己的事情并失败比去大公司工作更好。当然他们会学到更多。他们甚至在财务上可能更好。很多二十出头的人陷入债务，因为他们的费用增长比离开学校时看起来如此高的工资更快。至少如果你创业并失败，你的净资产将是零而不是负数。[3]&lt;/p&gt;&#xA;&lt;p&gt;我们现在资助了这么多不同类型的创始人，我们有足够的数据看到模式，在大公司工作似乎没有好处。工作过几年的人确实比刚毕业的人看起来更好，但只是因为他们年长那么多。&lt;/p&gt;&#xA;&lt;p&gt;来自大公司的人往往看起来有点保守。很难说有多少是大公司使他们那样的，有多少是使他们首先在大公司工作的自然保守。但很大一部分肯定是学到的。我知道因为我看到它消失了。&lt;/p&gt;&#xA;&lt;p&gt;看到这种情况发生如此多次是让我相信为自己工作，或者至少为小群体工作，是程序员的自然生活方式的事情之一。到达Y Combinator的创始人经常有难民般的被压抑神态。三个月后他们 transformed：他们有如此多的信心，似乎长高了几英寸。[4] 这听起来很奇怪，他们似乎同时更担心和更快乐。这正是我描述野外狮子看起来的方式。&lt;/p&gt;&#xA;&lt;p&gt;看着员工转变为创始人使清楚两个人之间的差异主要是由于环境——特别是大公司的环境对程序员有毒。在他们自己创业公司工作的头几周，他们似乎活了过来，因为他们终于以人们被设计的方式工作了。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 当我说人类被 meant 或设计以某种方式生活时，我指的是通过进化。&lt;/p&gt;&#xA;&lt;p&gt;[2] 不仅仅是叶子受苦。约束向上和向下传播。所以经理也受到约束；他们不能只是做事情，而必须通过下属行动。&lt;/p&gt;&#xA;&lt;p&gt;[3] 不要用信用卡为你的创业融资。用债务为创业融资通常是愚蠢的举动，而信用卡债务是最愚蠢的。信用卡债务是个坏主意， period。它是邪恶公司为绝望和愚蠢的人设置的陷阱。&lt;/p&gt;&#xA;&lt;p&gt;[4] 我们资助的创始人曾经更年轻（最初我们鼓励本科生申请），前几次我看到这个时，我常想知道他们是否真的在身体上长高了。&lt;/p&gt;&#xA;&lt;p&gt;感谢Trevor Blackwell、Ross Boucher、Aaron Iba、Abby Kirigin、Ivan Kirigin、Jessica Livingston和Robert Morris阅读本文的草稿。&lt;/p&gt;</description>
    </item>
    <item>
      <title>创始人模式</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/foundermode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/foundermode/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_en/foundermode/&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;link-card&#34; data-url=&#34;https://www.paulgraham.com/foundermode.html&#34;&gt;&#xA;  &lt;a class=&#34;link-card__fallback&#34; href=&#34;https://www.paulgraham.com/foundermode.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&#xA;    https://www.paulgraham.com/foundermode.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;创始人模式&#34;&gt;创始人模式&lt;/h1&gt;&#xA;&lt;p&gt;2024年9月&lt;/p&gt;&#xA;&lt;p&gt;在上周的YC活动上，Brian Chesky发表了一个让所有在场者都难忘的演讲。之后我交谈的大多数创始人都说这是他们听过的最好的演讲。Ron Conway有生以来第一次忘记记笔记。我不打算在这里重现他的演讲，而是想讨论它提出的一个问题。&lt;/p&gt;&#xA;&lt;p&gt;Brian演讲的主题是关于如何运营大公司的传统智慧是错误的。随着Airbnb的发展，善意的人们建议他必须以某种方式运营公司才能实现规模化。他们的建议可以乐观地概括为&amp;quot;雇用优秀的人才，给他们空间去完成工作&amp;quot;。他遵循了这个建议，结果却是灾难性的。因此他必须自己找出更好的方法，部分是通过研究Steve Jobs如何运营苹果公司。到目前为止，这似乎是有效的。Airbnb的自由现金流利润率现在是硅谷最好的之一。&lt;/p&gt;&#xA;&lt;p&gt;这个活动的观众包括许多我们资助的最成功的创始人，一个接一个地说，同样的事情也发生在他们身上。他们也得到了关于如何随着公司发展而运营公司的相同建议，但这些建议不但没有帮助他们的公司，反而损害了他们。&lt;/p&gt;&#xA;&lt;p&gt;为什么每个人都告诉这些创始人错误的事情？这对我来说是个很大的谜团。经过一番思考后，我找到了答案：他们被告知的是如何运营一个你没有创立的公司——如果你只是一个职业经理人，如何运营公司。但这种运营方式对创始人来说效果要差得多，以至于感觉是错误的。创始人可以做经理人做不到的事情，而不做这些事情对创始人来说感觉是错误的，因为它确实是错误的。&lt;/p&gt;&#xA;&lt;p&gt;实际上，有两种不同的运营公司的方式：创始人模式和经理人模式。直到现在，即使是硅谷的大多数人也隐含地假设扩大创业公司的规模意味着切换到经理人模式。但我们可以从尝试过这种模式的创始人的沮丧中，以及他们试图摆脱它的成功中，推断出另一种模式的存在。&lt;/p&gt;&#xA;&lt;p&gt;据我所知，没有专门关于创始人模式的书籍。商学院不知道它的存在。到目前为止，我们只有个别创始人为自己摸索的实验。但现在我们知道我们要寻找什么，我们可以搜索它。我希望几年后创始人模式会和经理人模式一样被很好地理解。我们已经可以猜测它会有所不同的一些方式。&lt;/p&gt;&#xA;&lt;p&gt;经理人被教导运营公司的方式似乎类似于模块化设计，在这种意义上，你将组织架构图的子树视为黑盒子。你告诉你的直接下属该做什么，而由他们来找出如何做的方法。但你不会介入他们工作的细节。那将是微观管理他们，这是不好的。&lt;/p&gt;&#xA;&lt;p&gt;雇用优秀的人才，给他们空间去完成工作。这样描述时听起来很棒，不是吗？但实际上，从创始人的报告中判断，这通常意味着：雇用职业伪装者，让他们把公司搞垮。&lt;/p&gt;&#xA;&lt;p&gt;我在Brian的演讲中和之后与创始人交谈时注意到的一个主题是被煤气灯效应操纵的想法。创始人感觉他们从两边都被煤气灯效应操纵——那些告诉他们必须像经理人一样运营公司的人，以及当他们这样做时为他们工作的人。通常当你周围的每个人都不同意你时，你的默认假设应该是你错了。但这是一个罕见的例外。没有做过创始人的风险投资人不知道创始人应该如何运营公司，而C级高管作为一个阶层，包括一些世界上最有技巧的说谎者。[1]&lt;/p&gt;&#xA;&lt;p&gt;无论创始人模式包含什么，很明显它会打破CEO应该只通过他或她的直接下属与公司接触的原则。&amp;ldquo;跳级&amp;quot;会议将成为常态，而不是一个如此不寻常以至于有特定名称的做法。一旦你放弃这个约束，就有大量的排列组合可供选择。&lt;/p&gt;&#xA;&lt;p&gt;例如，Steve Jobs过去每年为他认为的苹果公司最重要的100人举办一次静修活动，而这100人并不是组织架构图上最高的100人。你能想象在普通公司要做到这一点需要多大的意志力吗？然而想象一下这样的事情会有多有用。它可以让大公司感觉像创业公司。Steve如果这些静修活动不起作用，大概就不会继续举办它们了。但我从未听说过另一家公司这样做。那么这是一个好主意，还是一个坏主意？我们仍然不知道。这就是我们对创始人模式了解得如此之少的原因。[2]&lt;/p&gt;&#xA;&lt;p&gt;显然，创始人不能像运营20人公司那样继续运营2000人的公司。必须有某种程度的授权。自主权的边界在哪里，以及它们有多清晰，可能会因公司而异。它们甚至会随着经理人在同一公司内赢得信任而随时间变化。因此创始人模式比经理人模式更复杂。但它也会更有效。我们已经从个别创始人摸索着朝这个方向发展的例子中知道了这一点。&lt;/p&gt;&#xA;&lt;p&gt;实际上，我要对创始人模式做出的另一个预测是，一旦我们弄清楚它是什么，我们会发现许多个别创始人已经几乎到达了那里——除了他们所做的事情被许多人视为古怪或更糟。[3]&lt;/p&gt;&#xA;&lt;p&gt;奇怪的是，我们仍然对创始人模式知之甚少，这是一个令人鼓舞的想法。看看创始人已经取得的成就，然而他们是在逆着不良建议的逆风中取得这些成就的。想象一下，一旦我们能告诉他们如何像Steve Jobs而不是John Sculley那样运营公司，他们会取得什么成就。&lt;/p&gt;&#xA;&lt;h3 id=&#34;注释&#34;&gt;注释&lt;/h3&gt;&#xA;&lt;p&gt;[1] 表达这个陈述更外交的方式是说，经验丰富的C级高管通常非常擅长向上管理。而且我认为任何了解这个世界的人都不会对此有异议。&lt;/p&gt;&#xA;&lt;p&gt;[2] 如果举办这种静修活动的做法变得如此普遍，以至于即使是政治主导的成熟公司也开始这样做，我们可以通过被邀请者在组织架构图上的平均深度来量化公司的衰老程度。&lt;/p&gt;&#xA;&lt;p&gt;[3] 我还有一个不太乐观的预测：一旦创始人模式的概念确立，人们就会开始滥用它。无法委派他们应该委派的事情的创始人会以创始人模式为借口。或者不是创始人的经理人会决定他们应该试图表现得像创始人。这在某种程度上可能有效，但当它不起作用时，结果会很混乱；模块化方法至少可以限制糟糕CEO所能造成的损害。&lt;/p&gt;&#xA;&lt;p&gt;感谢Brian Chesky、Patrick Collison、Ron Conway、Jessica Livingston、Elon Musk、Ryan Petersen、Harj Taggar和Garry Tan阅读本文的草稿。&lt;/p&gt;</description>
    </item>
    <item>
      <title>创造者的日程表，管理者的日程表</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/makersschedule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/makersschedule/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_en/makersschedule/&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;link-card&#34; data-url=&#34;https://www.paulgraham.com/makersschedule.html&#34;&gt;&#xA;  &lt;a class=&#34;link-card__fallback&#34; href=&#34;https://www.paulgraham.com/makersschedule.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&#xA;    https://www.paulgraham.com/makersschedule.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;创造者的日程表管理者的日程表&#34;&gt;创造者的日程表，管理者的日程表&lt;/h1&gt;&#xA;&lt;p&gt;2009年7月&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;&amp;hellip;仅仅意识到有约会，有时就会困扰一整天。&amp;rdquo;&#xA;– 查尔斯·狄更斯&lt;/p&gt;&#xA;&lt;p&gt;程序员如此讨厌会议的一个原因是，他们与其他人的日程表类型不同。会议对他们来说成本更高。&lt;/p&gt;&#xA;&lt;p&gt;有两种类型的日程表，我称之为管理者的日程表和创造者的日程表。管理者的日程表是为老板设计的。它体现在传统的约会簿中，每天被划分为一小时的时间段。如果需要，你可以为单个任务屏蔽几个小时，但默认情况下你每小时都会改变正在做的事情。&lt;/p&gt;&#xA;&lt;p&gt;当你这样使用时间时，与某人会面只是一个实际问题。在你的日程表中找一个空闲的时间段，预约他们，就完成了。&lt;/p&gt;&#xA;&lt;p&gt;大多数有权力的人都在管理者的日程表上。这是指挥的日程表。但还有一种使用时间的方式在创造事物的人中很常见，比如程序员和作家。他们通常更喜欢至少以半天为单位使用时间。你无法在一小时的时间内很好地写作或编程。那 barely 是足够开始的时间。&lt;/p&gt;&#xA;&lt;p&gt;当你按照创造者的日程表工作时，会议是灾难性的。一个会议可以毁掉整个下午，因为它把下午分成两部分，每部分都太小，无法做任何困难的事情。而且你必须记得去参加会议。这对于管理者的日程表上的人来说不是问题。下一个小时总是有事情；唯一的问题是什么。但当创造者的日程表上的人有会议时，他们必须考虑它。&lt;/p&gt;&#xA;&lt;p&gt;对于创造者日程表上的人来说，开会就像抛出异常。它不仅让你从一个任务切换到另一个任务；它改变了你工作的模式。&lt;/p&gt;&#xA;&lt;p&gt;我发现一个会议有时会影响一整天。一个会议通常会破坏至少半天，通过打乱上午或下午。此外，有时还有连锁效应。如果我知道下午会被打断，我在上午开始一些雄心勃勃的事情的可能性就会稍微降低。我知道这听起来可能过于敏感，但如果你是创造者，想想你自己的情况。当想到有一整天的时间可以工作，没有任何约会时，你的精神不会振奋吗？嗯，这意味着当你没有这样的时间时，你的精神会相应地低落。而雄心勃勃的项目按定义接近你能力的极限。士气的小幅下降就足以扼杀它们。&lt;/p&gt;&#xA;&lt;p&gt;每种类型的日程表本身都运作良好。当它们相遇时，问题就出现了。由于大多数有权力的人都在管理者的日程表上，他们有能力让每个人都按照他们的频率共振，如果他们想的话。但更聪明的人会克制自己，如果他们知道为他们工作的一些人需要大块的时间来工作。&lt;/p&gt;&#xA;&lt;p&gt;我们的情况是不寻常的。几乎所有的投资者，包括我认识的所有风险投资家，都在管理者的日程表上。但Y Combinator按照创造者的日程表运行。Rtm、Trevor和我这样做是因为我们一直如此，Jessica也主要是如此，因为她与我们同步。&lt;/p&gt;&#xA;&lt;p&gt;如果开始有更多像我们这样的公司，我不会感到惊讶。我怀疑创始人可能越来越能够抵抗，或至少推迟，转变为管理者，就像几十年前他们开始能够抵抗从牛仔裤换成西装一样。&lt;/p&gt;&#xA;&lt;p&gt;我们如何在创造者的日程表上为这么多创业公司提供建议？通过使用在创造者的日程表中模拟管理者日程表的经典设备：办公时间。我每周几次留出一大块时间来见我们资助的创始人。这些时间块是在我工作日的末尾，我写了一个注册程序，确保给定办公时间内的所有预约都集中在末尾。因为它们在我的一天结束时到来，这些会议从来不会中断。（除非他们的工作日与我的同时结束，会议可能会中断他们的，但既然他们预约了，对他们来说一定是值得的。）在繁忙时期，办公时间有时会变得足够长，以至于压缩了一天，但它们从不中断它。&lt;/p&gt;&#xA;&lt;p&gt;当我们在90年代为自己的创业公司工作时，我发展出了另一个划分一天的技巧。我每天从晚餐编程到大约凌晨3点，因为在晚上没有人能打断我。然后我会睡到大约上午11点，进来工作直到晚餐，我称之为&amp;quot;业务事情&amp;quot;。我从来没有用这些术语思考过，但实际上我每天都有两个工作日，一个在管理者的日程表上，一个在创造者的日程表上。&lt;/p&gt;&#xA;&lt;p&gt;当你按照管理者的日程表工作时，你可以做一些在创造者的日程表上永远不想做的事情：你可以进行试探性会议。你可以见某人只是为了互相认识。如果你的日程表有空闲的时间段，为什么不呢？也许结果你们可以在某种程度上互相帮助。&lt;/p&gt;&#xA;&lt;p&gt;硅谷的商界人士（实际上是整个世界）一直在进行试探性会议。如果你在管理者的日程表上，它们实际上是免费的。它们如此普遍，以至于有独特的语言来提议它们：例如，说你想要&amp;quot;喝杯咖啡&amp;quot;。&lt;/p&gt;&#xA;&lt;p&gt;但是，如果你在创造者的日程表上，试探性会议的成本非常可怕。这使我们陷入某种困境。每个人都认为，像其他投资者一样，我们在管理者的日程表上运行。所以他们向我们介绍他们认为我们应该见面的人，或者给我们发邮件提议我们喝杯咖啡。在这一点上，我们有两个选择，都不好：我们可以与他们见面，失去半天的工作；或者我们可以尝试避免与他们见面，可能会冒犯他们。&lt;/p&gt;&#xA;&lt;p&gt;直到最近，我们自己对问题的根源还不清楚。我们只是想当然地认为我们必须要么破坏我们的日程表，要么冒犯人。但现在我意识到发生了什么，也许有第三种选择：写一些解释两种类型日程表的东西。也许最终，如果管理者的日程表和创造者的日程表之间的冲突开始被更广泛地理解，它会变得不那么成问题。&lt;/p&gt;&#xA;&lt;p&gt;我们这些在创造者日程表上的人愿意妥协。我们知道我们必须有一定数量的会议。我们只要求那些在管理者日程表上的人理解成本。&lt;/p&gt;&#xA;&lt;p&gt;感谢 Sam Altman、Trevor Blackwell、Paul Buchheit、Jessica Livingston 和 Robert Morris 阅读本文的草稿。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;相关：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;如何做你喜欢的事&lt;/li&gt;&#xA;&lt;li&gt;好的和坏的拖延&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>商业可以从开源中学到什么</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/opensource/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/opensource/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_en/opensource/&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;link-card&#34; data-url=&#34;https://www.paulgraham.com/opensource.html&#34;&gt;&#xA;  &lt;a class=&#34;link-card__fallback&#34; href=&#34;https://www.paulgraham.com/opensource.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&#xA;    https://www.paulgraham.com/opensource.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;商业可以从开源中学到什么&#34;&gt;商业可以从开源中学到什么&lt;/h1&gt;&#xA;&lt;p&gt;2005年8月&lt;/p&gt;&#xA;&lt;p&gt;（本文源自2005年Oscon大会的演讲。）&lt;/p&gt;&#xA;&lt;p&gt;最近，公司对开源的关注越来越多。十年前，微软似乎真的有可能将其垄断扩展到服务器领域。现在可以肯定地说，开源已经阻止了这种情况的发生。最近的一项调查发现，52%的公司正在用Linux服务器替换Windows服务器。[1]&lt;/p&gt;&#xA;&lt;p&gt;我认为，更重要的是这52%是哪些公司。在这一点上，任何提议在服务器上运行Windows的人都应该准备好解释他们对服务器的了解比Google、Yahoo和Amazon多什么。&lt;/p&gt;&#xA;&lt;p&gt;但商业可以从开源中学到的最重要的东西不是关于Linux或Firefox，而是关于产生它们的力量。最终，这些力量将影响的远不止你使用什么软件。&lt;/p&gt;&#xA;&lt;p&gt;我们或许可以通过开源和博客的三角定位来把握这些潜在力量。你可能已经注意到，它们有很多共同之处。&lt;/p&gt;&#xA;&lt;p&gt;像开源一样，博客是人们自己做、免费做、因为他们喜欢而做的事情。像开源黑客一样，博客作者与为钱工作的人竞争，而且经常获胜。确保质量的方法也是一样的：达尔文式的。公司通过防止员工搞砸的规则来确保质量。但当受众可以相互交流时，你就不需要那种规则了。人们只是生产他们想要的任何东西；好的东西传播开来，坏的则被忽视。在这两种情况下，受众的反馈都改进了最好的作品。&lt;/p&gt;&#xA;&lt;p&gt;博客和开源的另一个共同点是Web。人们总是愿意免费做伟大的工作，但在Web之前，接触受众或在项目上合作更加困难。&lt;/p&gt;&#xA;&lt;h2 id=&#34;业余爱好者&#34;&gt;业余爱好者&lt;/h2&gt;&#xA;&lt;p&gt;我认为商业必须学习的最重要新原则是，人们对自己喜欢的东西会工作得更努力。嗯，这对任何人来说都不是新闻。那么我怎么能说商业必须学习它呢？当我说商业不知道这一点时，我的意思是商业结构没有反映这一点。&lt;/p&gt;&#xA;&lt;p&gt;商业仍然反映了一个更古老的模式，以法语工作的词travailleur为例。它有一个英语表亲travail，它的意思是折磨。[2]&lt;/p&gt;&#xA;&lt;p&gt;然而，事实证明这不是关于工作的最后定论。随着社会变得越来越富裕，他们学到的一些关于工作的事情很像他们学到的一些关于饮食的事情。我们现在知道，最健康的饮食是我们的农民祖先因为贫穷而被迫吃的饮食。像丰富的食物一样，只有当你得不到足够的懒惰时，它才似乎令人向往。我认为我们被设计来工作，就像我们被设计吃一定量的纤维一样，如果我们不这样做，我们会感到不舒服。&lt;/p&gt;&#xA;&lt;p&gt;为爱而工作的人有一个名字：业余爱好者。这个词现在有如此坏的内涵，以至于我们忘记了它的词源，尽管它就在我们眼前。&amp;ldquo;Amateur&amp;quot;最初是一个相当恭维的词。但在二十世纪，要成为专业人士，而业余爱好者，根据定义，不是专业人士。&lt;/p&gt;&#xA;&lt;p&gt;这就是为什么商业界对开源的一个教训如此惊讶：为爱而工作的人经常超过为钱而工作的人。用户从Explorer切换到Firefox不是因为想要修改源代码。他们切换是因为它是更好的浏览器。&lt;/p&gt;&#xA;&lt;p&gt;不是微软不努力。他们知道控制浏览器是保持垄断的关键之一。他们面临的问题与他们在操作系统领域面临的问题相同：他们无法支付足够的钱让人们建造比一群有灵感的黑客免费建造的更好的东西。&lt;/p&gt;&#xA;&lt;p&gt;我怀疑专业化一直被高估了——不仅是从为钱工作的字面意义上，还包括形式和超然等内涵。不可思议的是，比如在1970年，我认为专业化主要是一种时尚，是由二十世纪存在的条件驱动的。&lt;/p&gt;&#xA;&lt;p&gt;其中最强大的是&amp;quot;渠道&amp;quot;的存在。引人注目的是，同样的术语用于产品和信息：有分销渠道，以及电视和广播频道。&lt;/p&gt;&#xA;&lt;p&gt;正是这种渠道的狭窄性使专业人士似乎比业余爱好者优越得多。例如，专业记者的工作职位很少，所以竞争确保了普通记者都相当不错。而任何人都可以在酒吧里表达对当前事件的看法。因此，在酒吧里表达意见的普通人与撰写这个主题的记者相比听起来像个白痴。&lt;/p&gt;&#xA;&lt;p&gt;在Web上，发布你想法的门槛甚至更低。你不需要买饮料，他们甚至让孩子进入。数百万人在线发布，他们写作的平均水平，正如你可能预期的，不是很好。这导致媒体中的一些人得出结论，博客不构成太大威胁——博客只是一种时尚。&lt;/p&gt;&#xA;&lt;p&gt;实际上，时尚的是&amp;quot;博客&amp;quot;这个词，至少是印刷媒体现在使用它的方式。他们所说的&amp;quot;博主&amp;quot;不是以网络日志格式发布的人，而是在线发布的任何人。随着Web成为默认的发布媒介，这将变成一个问题。所以我想为在线发布的人建议一个替代词。怎么样用&amp;quot;作家&amp;rdquo;？&lt;/p&gt;&#xA;&lt;p&gt;那些因为在线写作的平均质量低而忽视它的印刷媒体人士忽略了一个重要观点：没有人读普通的博客。在渠道的旧世界里，谈论平均质量是有意义的，因为不管你喜欢与否，你得到的就是那个。但现在你可以阅读任何你想要的作家。所以在线写作的平均质量不是印刷媒体竞争的对象。他们竞争的是在线最好的写作。而且，像微软一样，他们正在输。&lt;/p&gt;&#xA;&lt;p&gt;我从自己作为读者的经历知道这一点。虽然大多数印刷出版物都在线，但我可能在个人网站上读两三篇文章，才会在报纸或杂志的网站上读一篇。&lt;/p&gt;&#xA;&lt;p&gt;当我读，比如说，《纽约时报》的故事时，我从不通过《纽约时报》首页到达它们。我大多通过聚合器如Google News、Slashdot或Delicious找到它们。聚合器显示了你可以比渠道做得好多少。《纽约时报》首页是为《纽约时报》工作的人写的文章列表。Delicious是有趣的文章列表。只有现在你可以并排看到两者，你才注意到重叠是多么少。&lt;/p&gt;&#xA;&lt;p&gt;印刷媒体中的大多数文章都很无聊。例如，总统注意到大多数选民现在认为入侵伊拉克是个错误，所以他向全国发表演讲以争取支持。那有什么咬人的呢？我没有听演讲，但我可能可以准确告诉你他说了什么。像这样的演讲，从最字面的意义上说，不是新闻：里面没有什么新东西。[3]&lt;/p&gt;&#xA;&lt;p&gt;在大多数关于出错的&amp;quot;新闻&amp;quot;中，除了名字和地点，也没有什么新东西。一个孩子被绑架；有龙卷风；渡轮沉没；有人被鲨鱼咬伤；小型飞机坠毁。你从这些故事中学到了什么关于世界的事情？绝对没有。它们是离群的数据点；使它们引人入胜的东西也使它们变得无关紧要。&lt;/p&gt;&#xA;&lt;p&gt;就像在软件中一样，当专业人士生产这样的垃圾时，如果业余爱好者能做得更好，也就不足为奇了。成也渠道，败也渠道：如果你依赖寡头垄断，你会陷入难以克服的坏习惯，当你突然遇到竞争时。[4]&lt;/p&gt;&#xA;&lt;h2 id=&#34;工作场所&#34;&gt;工作场所&lt;/h2&gt;&#xA;&lt;p&gt;博客和开源软件的另一个共同点是它们通常是在家工作的人制作的。这可能看起来并不令人惊讶。但应该是。这相当于一架自制飞机击落F-18的建筑上的等价物。公司花费数百万建造办公楼，只为一个目的：作为工作场所。然而，在自己家里工作的人，他们的家甚至不是设计为工作场所的，最终却更有生产力。&lt;/p&gt;&#xA;&lt;p&gt;这证明了许多人怀疑的事情。普通办公室是完成工作的糟糕地方。使办公室变坏的很多东西恰恰是我们与专业化相关的品质。办公室的无菌性应该是为了暗示效率。但暗示效率和实际上有效率是不同的事情。&lt;/p&gt;&#xA;&lt;p&gt;普通工作场所的氛围对生产力来说就像画在汽车侧面的火焰对速度一样。而且不仅仅是办公室看起来很 bleak。人们的行为方式也同样糟糕。&lt;/p&gt;&#xA;&lt;p&gt;在初创公司中情况不同。初创公司通常从公寓开始。他们没有匹配的米色小隔间，而是有各种他们买来的二手家具。他们工作时间不规律，穿着最随意的衣服。他们看任何他们想在线看的东西，而不担心是否&amp;quot;工作安全&amp;quot;。办公室愉快、平淡的语言被邪恶的幽默所取代。你知道吗？公司在这个阶段可能是有史以来最有生产力的。&lt;/p&gt;&#xA;&lt;p&gt;也许这不是巧合。也许专业化的某些方面实际上是一个净损失。&lt;/p&gt;&#xA;&lt;p&gt;对我来说，传统办公室最令人沮丧的方面是你应该在特定时间在那里。公司里通常有几个人真的必须这样，但大多数员工工作时间固定是因为公司无法衡量他们的生产力。&lt;/p&gt;&#xA;&lt;p&gt;办公时间背后的基本想法是，如果你不能让人们工作，你至少可以防止他们玩乐。如果员工每天必须在建筑物里待一定数量的小时，并且在那里被禁止做非工作的事情，那么他们一定是在工作。理论上。在实践中，他们花费大量时间在无人地带，在那里他们既不工作也不玩乐。&lt;/p&gt;&#xA;&lt;p&gt;如果你能衡量人们做了多少工作，许多公司不需要任何固定的工作日。你可以说：这是你必须做的。无论何时何地，只要你喜欢就做。如果你的工作需要与公司里的其他人交谈，那么你可能需要在这里一定时间。否则我们不关心。&lt;/p&gt;&#xA;&lt;p&gt;这可能看起来乌托邦，但这就是我们告诉来为我们公司工作的人的话。没有固定的办公时间。我从不早于上午11点出现。但我们说这个不是为了仁慈。我们说：如果你在这里工作，我们期望你完成很多事情。不要试图仅仅通过多在这里来欺骗我们。&lt;/p&gt;&#xA;&lt;p&gt;面子时间模式的问题不仅令人沮丧，而且假装工作的人打断了实际工作的人。我确信面子时间模式是大型组织有这么多会议的主要原因。人均而言，大型组织完成的很少。然而所有这些人每天必须在现场至少八小时。当这么多时间进入一端而如此少的成就从另一端出来时，总会有所让步。而会议是填补松懈的主要机制。&lt;/p&gt;&#xA;&lt;p&gt;我曾经做了一份朝九晚五的常规工作，我记得很清楚会议期间 strange, cozy的感觉。因为新奇，我很清楚地意识到我正在为编程获得报酬。这似乎令人惊讶，好像我桌上有一台机器，无论我做什么，每两分钟吐出一美元纸币。即使我在浴室里！但因为想象中的机器一直在运行，我觉得我应该总是在工作。所以会议感觉令人愉快地放松。它们算作工作，就像编程一样，但它们容易得多。你只需要坐着看起来注意力集中。&lt;/p&gt;&#xA;&lt;p&gt;会议就像有网络效应的鸦片。电子邮件在较小程度上也是如此。除了时间的直接成本外，还有碎片化的成本——把人们的一天分解成太小而无法利用的碎片。&lt;/p&gt;&#xA;&lt;p&gt;你可以通过突然移除某些东西来看你对它有多依赖。所以对于大公司，我提议以下实验。留出一天禁止会议——每个人都必须整天坐在办公桌前，在没有中断的情况下工作，做他们可以在不与任何人交谈的情况下做的事情。大多数工作需要一定量的沟通，但我确信许多员工可以找到八小时的自己可以做的事情。你可以称之为&amp;quot;工作日&amp;quot;。&lt;/p&gt;&#xA;&lt;p&gt;假装工作的另一个问题是它通常看起来比真实工作更好。当我写作或编程时，我花在思考上的时间和实际打字的时间一样多。一半的时间我坐着喝茶，或在附近散步。这是一个关键阶段——这是想法来源的地方——然而在大多数办公室里，我会感到内疚，因为其他人看起来都很忙。&lt;/p&gt;&#xA;&lt;p&gt;在你有可以比较的东西之前，很难看出一些做法有多糟糕。这就是开源，甚至在某些情况下的博客如此重要的原因之一。它们向我们展示了真实工作的样子。&lt;/p&gt;&#xA;&lt;p&gt;我们目前正在资助八家新的初创公司。一个朋友问他们在办公空间方面做什么，当我说我们期望他们在他们找到居住的任何公寓里工作时，他似乎感到惊讶。但我们提出这个不是为了省钱。我们这样做是因为我们希望他们的软件是好的。在糟糕的非正式空间工作是初创公司在没有意识到的情况下做对的事情之一。一旦你进入办公室，工作和生活就开始分离。&lt;/p&gt;&#xA;&lt;p&gt;这就是专业化的关键信条之一。工作和生活应该分开。但那部分，我确信，是一个错误。&lt;/p&gt;&#xA;&lt;h2 id=&#34;自下而上&#34;&gt;自下而上&lt;/h2&gt;&#xA;&lt;p&gt;我们可以从开源和博客中学到的第三个大教训是，想法可以从底部冒出来，而不是从顶部流下来。开源和博客都是自下而上工作的：人们制作他们想要的东西，最好的东西胜出。&lt;/p&gt;&#xA;&lt;p&gt;这听起来熟悉吗？这是市场经济的原则。具有讽刺意味的是，虽然开源和博客是免费做的，但那些世界类似于市场经济，而大多数公司，尽管他们谈论自由市场的价值，内部却像共产主义国家一样运作。&lt;/p&gt;&#xA;&lt;p&gt;有两个力量一起引导设计：关于接下来做什么的想法，以及质量的执行。在渠道时代，两者都从顶部流下来。例如，报纸编辑给记者分配故事，然后编辑他们写的东西。&lt;/p&gt;&#xA;&lt;p&gt;开源和博客向我们展示了事情不必那样运作。想法甚至质量的执行都可以自下而上地流动。在这两种情况下，结果不仅是可接受的，而且是更好的。例如，开源软件更可靠正是因为它是开源的；任何人都可以发现错误。&lt;/p&gt;&#xA;&lt;p&gt;写作也是如此。当我们接近出版时，我发现我非常担心《黑客与画家》中没有在线的文章。一旦一篇文章有了几千次浏览，我对它就相当有信心了。但这些文章受到的审查 literally 少了数量级。感觉就像发布没有测试过的软件。&lt;/p&gt;&#xA;&lt;p&gt;这就是所有出版过去的样子。如果你能让十个人阅读手稿，你就很幸运了。但我已经变得如此习惯在线发布，以至于旧的方法现在看起来令人担忧地不可靠，就像在你习惯了GPS之后通过航位推法导航。&lt;/p&gt;&#xA;&lt;p&gt;我喜欢在线出版的另一个事情是你可以写你想写的，随时发布。今年早些时候我写了一些似乎适合杂志的东西，所以我把它发给我认识的一个编辑。在等待回音时，我惊讶地发现自己希望他们拒绝它。然后我可以立即把它放上网。如果他们接受了，几个月内不会有人读到它，在此期间我必须逐字斗争以拯救它不被某个二十五岁的文字编辑破坏。[5]&lt;/p&gt;&#xA;&lt;p&gt;许多员工想为他们工作的公司建造伟大的东西，但管理层往往不让他们。我们中有多少人听过员工去管理层说，请让我们建造这个东西为你赚钱——而公司说不的故事？最著名的例子可能是Steve Wozniak，他最初想为他当时的雇主HP建造微型计算机。他们拒绝了他。在失误测量仪上，这一事件与IBM接受DOS的非排他性许可证相当。但我认为这种情况一直发生。我们通常没有听说，因为要证明自己是对的，你必须辞职并创办自己的公司，就像Wozniak那样。&lt;/p&gt;&#xA;&lt;h2 id=&#34;初创公司&#34;&gt;初创公司&lt;/h2&gt;&#xA;&lt;p&gt;所以这些，我认为，是开源和博客可以教给商业的三个大教训：(1) 人们对自己喜欢的东西工作得更努力，(2) 标准的办公环境非常没有生产力，(3) 自下而上往往比自上而下效果更好。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
