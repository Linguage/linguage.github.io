<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Viaweb on Linguista</title>
    <link>https://linguage.github.io/tags/viaweb/</link>
    <description>Recent content in Viaweb on Linguista</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="https://linguage.github.io/tags/viaweb/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>6,631,372</title>
      <link>https://linguage.github.io/paul_graham/essays_en/6631327/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_en/6631327/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_zh/6631327/&#34;&gt;中文版本&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;6631372&#34;&gt;6,631,372&lt;/h1&gt;&#xA;&lt;p&gt;6,631,372 March 2006, rev August 2009&lt;/p&gt;&#xA;&lt;p&gt;A couple days ago I found to my surprise that I&amp;rsquo;d been granted a patent. It issued in 2003, but no one told me. I wouldn&amp;rsquo;t know about it now except that a few months ago, while visiting Yahoo, I happened to run into a Big Cheese I knew from working there in the late nineties. He brought up something called Revenue Loop, which Viaweb had been working on when they bought us.&lt;/p&gt;</description>
    </item>
    <item>
      <title>6,631,372</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/6631327/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/6631327/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_en/6631327/&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;6631372&#34;&gt;6,631,372&lt;/h1&gt;&#xA;&lt;p&gt;6,631,372 2006年3月，修订于2009年8月&lt;/p&gt;&#xA;&lt;p&gt;几天前，我惊讶地发现我被授予了一项专利。它在2003年颁发，但没有人告诉我。如果不是几个月前访问雅虎时，我碰巧遇到了一个我在90年代末在那里工作时认识的大人物，我现在还不知道这件事。他提到了一个叫做收入循环（Revenue Loop）的东西，这是Viaweb在被他们收购时正在研发的东西。&lt;/p&gt;&#xA;&lt;p&gt;这个想法基本上是，你不按文本&amp;quot;相关性&amp;quot;（如搜索引擎当时那样）排序搜索结果，也不按广告商出价（如Overture那样）排序，而是按出价乘以交易数量来排序。通常你会对购物搜索这样做，但事实上，我们方案的一个特点是它会自动检测哪些搜索是购物搜索。&lt;/p&gt;&#xA;&lt;p&gt;如果你只按出价排序结果，你可能会使搜索结果变得无用，因为前面的结果可能被那些出价最高的蹩脚网站占据。但如果你按出价乘以交易数量排序，远不是出卖，你得到了一个更好的相关性衡量标准。还有什么比访问网站并购买某物更能表明某人对搜索结果满意呢？&lt;/p&gt;&#xA;&lt;p&gt;当然，这个算法自动最大化搜索引擎的收入。&lt;/p&gt;&#xA;&lt;p&gt;现在每个人都专注于这种方法，但在1998年很少有人这样做。1998年都是关于销售横幅广告。我们不知道这一点，所以当我们发现看起来是进行购物搜索的最佳方式时，我们非常兴奋。&lt;/p&gt;&#xA;&lt;p&gt;当雅虎考虑收购我们时，我们在纽约与杨致远见了面。我现在意识到，对他来说，这应该是那些会议之一，你去考察一个你已经基本决定收购的公司，只是确保他们是不错的人。我们被期望的不过是聊天，显得聪明和合理。当我跳到白板上开始展示我们令人兴奋的新技术时，他一定感到沮丧。&lt;/p&gt;&#xA;&lt;p&gt;当他看起来完全不在意时，我也同样沮丧。当时我想，&amp;ldquo;天哪，这家伙真是扑克脸。我们向他展示的必须是排序产品搜索结果的最佳方式，而他甚至不好奇。&amp;ldquo;直到很久以后我才明白他为什么不在意。1998年，广告商为网站广告支付的费用过高。1998年，如果广告商支付流量对他们的最大价值，雅虎的收入就会减少。&lt;/p&gt;&#xA;&lt;p&gt;当然，现在情况不同了。现在这种事情很流行。所以当几个月前在雅虎食堂遇到我从前的雅虎高管时，他记得的第一件事不是（幸运的是）我与他所有的争吵，而是收入循环。&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;嗯，&amp;ldquo;我说，&amp;ldquo;我想我们确实为此申请了专利。我不确定我离开后申请发生了什么。&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;真的吗？那将是一个重要的专利。&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;所以有人调查了一下，果然，那项专利申请在之后的几年里继续进行，最终在2003年获得批准。&lt;/p&gt;&#xA;&lt;p&gt;实际上，阅读时让我感到震惊的主要是，律师在某个时候搞乱了我清晰明了的写作。某个聪明的拼写检查用户将其中一部分变成了禅宗般的不可理解：&lt;/p&gt;&#xA;&lt;p&gt;此外，常见的拼写错误将趋于修复。例如，如果搜索&amp;quot;compact disc player&amp;quot;的用户最终在提供compact disc players的网站上花费了大量金钱，那么这些页面对于该搜索短语将具有更高的相关性，即使短语&amp;quot;compact disc player&amp;quot;不存在于那些页面上。（那个&amp;quot;compat disc player&amp;quot;不是拼写错误，伙计们。）&lt;/p&gt;&#xA;&lt;p&gt;想要看到原始的优美散文，请参见1998年2月的临时申请，那时我们还是Viaweb，负担不起付钱给律师把每一个&amp;quot;a lot of&amp;quot;变成&amp;quot;considerable&amp;rdquo;。&lt;/p&gt;&#xA;&lt;hr&gt;</description>
    </item>
    <item>
      <title>Lisp for Web-Based Applications</title>
      <link>https://linguage.github.io/paul_graham/essays_en/lwba/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_en/lwba/</guid>
      <description>&lt;h1 id=&#34;lisp-for-web-based-applications&#34;&gt;Lisp for Web-Based Applications&lt;/h1&gt;&#xA;&lt;p&gt;After a link to Beating the Averages was posted on slashdot, some readers wanted to hear in more detail about the specific technical advantages we got from using Lisp in Viaweb. For those who are interested, here are some excerpts from a talk I gave in April 2001 at BBN Labs in Cambridge, MA.&lt;/p&gt;&#xA;&lt;p&gt;BBN Talk Excerpts (ASCII)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Snapshot: Viaweb, June 1998</title>
      <link>https://linguage.github.io/paul_graham/essays_en/vw/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_en/vw/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_zh/vw/&#34;&gt;中文版本&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;snapshot-viaweb-june-1998&#34;&gt;Snapshot: Viaweb, June 1998&lt;/h1&gt;&#xA;&lt;p&gt;January 2012&lt;/p&gt;&#xA;&lt;p&gt;A few hours before the Yahoo acquisition was announced in June 1998 I took a snapshot of Viaweb&amp;rsquo;s site. I thought it might be interesting to look at one day.The first thing one notices is is how tiny the pages are. Screens were a lot smaller in 1998. If I remember correctly, our frontpage used to just fit in the size window people typically used then.Browsers then (IE 6 was still 3 years in the future) had few fonts and they weren&amp;rsquo;t antialiased. If you wanted to make pages that looked good, you had to render display text as images.You may notice a certain similarity between the Viaweb and Y Combinator logos. We did that as an inside joke when we started YC. Considering how basic a red circle is, it seemed surprising to me when we started Viaweb how few other companies used one as their logo. A bit later I realized why.On the Company page you&amp;rsquo;ll notice a mysterious individual called John McArtyem. Robert Morris (aka Rtm) was so publicity averse after the Worm that he didn&amp;rsquo;t want his name on the site. I managed to get him to agree to a compromise: we could use his bio but not his name. He has since relaxed a bit on that point.Trevor graduated at about the same time the acquisition closed, so in the course of 4 days he went from impecunious grad student to millionaire PhD. The culmination of my career as a writer of press releases was one celebrating his graduation, illustrated with a drawing I did of him during a meeting.(Trevor also appears as Trevino Bagwell in our directory of web designers merchants could hire to build stores for them. We inserted him as a ringer in case some competitor tried to spam our web designers. We assumed his logo would deter any actual customers, but it did not.)Back in the 90s, to get users you had to get mentioned in magazines and newspapers. There were not the same ways to get found online that there are today. So we used to pay a PR firm $16,000 a month to get us mentioned in the press. Fortunately reporters liked us.In our advice about getting traffic from search engines (I don&#39;t think the term SEO had been coined yet), we say there are only 7 that matter: Yahoo, AltaVista, Excite, WebCrawler, InfoSeek, Lycos, and HotBot. Notice anything missing? Google was incorporated that September.We supported online transactions via a company called Cybercash, since if we lacked that feature we&#39;d have gotten beaten up in product comparisons. But Cybercash was so bad and most stores&#39; order volumes were so low that it was better if merchants processed orders like phone orders. We had a page in our site trying to talk merchants out of doing real time authorizations.The whole site was organized like a funnel, directing people to the test drive. It was a novel thing to be able to try out software online. We put cgi-bin in our dynamic urls to fool competitors about how our software worked.We had some well known users. Needless to say, Frederick&#39;s of Hollywood got the most traffic. We charged a flat fee of $300/month for big stores, so it was a little alarming to have users who got lots of traffic. I once calculated how much Frederick&amp;rsquo;s was costing us in bandwidth, and it was about $300/month.Since we hosted all the stores, which together were getting just over 10 million page views per month in June 1998, we consumed what at the time seemed a lot of bandwidth. We had 2 T1s (3 Mb/sec) coming into our offices. In those days there was no AWS. Even colocating servers seemed too risky, considering how often things went wrong with them. So we had our servers in our offices. Or more precisely, in Trevor&amp;rsquo;s office. In return for the unique privilege of sharing his office with no other humans, he had to share it with 6 shrieking tower servers. His office was nicknamed the Hot Tub on account of the heat they generated. Most days his stack of window air conditioners could keep up.For describing pages, we had a template language called RTML, which supposedly stood for something, but which in fact I named after Rtm. RTML was Common Lisp augmented by some macros and libraries, and concealed under a structure editor that made it look like it had syntax.Since we did continuous releases, our software didn&amp;rsquo;t actually have versions. But in those days the trade press expected versions, so we made them up. If we wanted to get lots of attention, we made the version number an integer. That &amp;ldquo;version 4.0&amp;rdquo; icon was generated by our own button generator, incidentally. The whole Viaweb site was made with our software, even though it wasn&amp;rsquo;t an online store, because we wanted to experience what our users did.At the end of 1997, we released a general purpose shopping search engine called Shopfind. It was pretty advanced for the time. It had a programmable crawler that could crawl most of the different stores online and pick out the products.&lt;/p&gt;</description>
    </item>
    <item>
      <title>基于Web应用的Lisp</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/lwba/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/lwba/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_en/lwba/&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;基于web应用的lisp&#34;&gt;基于Web应用的Lisp&lt;/h1&gt;&#xA;&lt;p&gt;在《击败平均值》的链接被发布在slashdot上之后，一些读者希望更详细地了解我们在Viaweb中使用Lisp获得的具体技术优势。对于那些感兴趣的人，以下是我2001年4月在剑桥BBN实验室的演讲节选。&lt;/p&gt;&#xA;&lt;p&gt;BBN演讲节选（ASCII）&lt;/p&gt;</description>
    </item>
    <item>
      <title>快照：Viaweb，1998年6月</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/vw/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/vw/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_en/vw/&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;快照viaweb1998年6月&#34;&gt;快照：Viaweb，1998年6月&lt;/h1&gt;&#xA;&lt;p&gt;2012年1月&lt;/p&gt;&#xA;&lt;p&gt;在雅虎收购宣布前几个小时，我拍下了Viaweb网站的快照。我想有一天看看可能会很有趣。&lt;/p&gt;&#xA;&lt;p&gt;首先注意到的是页面是多么小。1998年的屏幕要小得多。如果我没记错的话，我们的首页刚好能适应人们当时通常使用的窗口大小。&lt;/p&gt;&#xA;&lt;p&gt;那时的浏览器（IE6还要3年才会出现）字体很少，而且没有抗锯齿。如果你想让页面看起来好看，你必须将显示文本渲染为图像。&lt;/p&gt;&#xA;&lt;p&gt;你可能会注意到Viaweb和Y Combinator的标志之间有某种相似之处。当我们创办YC时，我们这样做是为了开个内部玩笑。考虑到红色圆圈是多么基础的东西，当我们创办Viaweb时，我很惊讶其他使用红色圆圈作为标志的公司如此之少。稍后我明白了原因。&lt;/p&gt;&#xA;&lt;p&gt;在公司页面上，你会注意到一个名叫John McArtyem的神秘人物。Robert Morris（又名Rtm）在蠕虫事件后如此厌恶 publicity，以至于他不想让自己的名字出现在网站上。我设法让他同意妥协：我们可以使用他的简介，但不能使用他的名字。从那时起，他在这一点上稍微放松了一些。&lt;/p&gt;&#xA;&lt;p&gt;Trevor大约在收购完成时毕业，所以在4天的时间里，他从身无分文的研究生变成了百万富翁博士。我作为新闻稿撰写者的职业生涯 culminating 是一篇庆祝他毕业的新闻稿，配有一张我在会议期间为他画的插图。&lt;/p&gt;&#xA;&lt;p&gt;（Trevor也在我们的网页设计师目录中作为Trevino Bagwell出现，这些设计师是商家可以雇佣来为他们建造商店的。我们在其中安插了一个托儿，以防有竞争对手试图向我们的网页设计师发送垃圾邮件。我们假设他的标志会阻止任何真正的客户，但事实并非如此。）&lt;/p&gt;&#xA;&lt;p&gt;回到90年代，为了获得用户，你必须在杂志和报纸上被提及。当时没有像现在这样的在线被发现的方式。所以我们过去每月支付一家公关公司16,000美元让我们在新闻中被提及。幸运的是，记者们喜欢我们。&lt;/p&gt;&#xA;&lt;p&gt;在我们关于从搜索引擎获得流量的建议中（我认为SEO这个词还没有被创造出来），我们说只有7个重要的：Yahoo、AltaVista、Excite、WebCrawler、InfoSeek、Lycos和HotBot。注意到少了什么吗？谷歌那年9月才成立。&lt;/p&gt;&#xA;&lt;p&gt;我们通过一家名为Cybercash的公司支持在线交易，因为如果我们缺乏这个功能，我们会在产品比较中被 beaten up。但Cybercash是如此糟糕，而且大多数商店的订单量如此之低，以至于商家像处理电话订单一样处理订单会更好。我们网站上有一个页面试图说服商家不要进行实时授权。&lt;/p&gt;&#xA;&lt;p&gt;整个网站像一个漏斗一样组织，引导人们进行试驾。能够在线试用软件是件新奇事。我们在动态url中放入cgi-bin来欺骗竞争对手关于我们的软件如何工作。&lt;/p&gt;&#xA;&lt;p&gt;我们有一些知名用户。不用说，好莱坞的Frederick&amp;rsquo;s获得了最多的流量。我们对大商店收取每月300美元的固定费用，所以拥有大量流量的用户有点令人担忧。我曾经计算过Frederick&amp;rsquo;s在带宽上花了我们多少钱，大约是每月300美元。&lt;/p&gt;&#xA;&lt;p&gt;由于我们托管所有商店，这些商店在1998年6月每月总共获得超过1000万次页面浏览，我们消耗了在当时看起来相当多的带宽。我们的办公室有2条T1线路（3 Mb/sec）。在那个时代没有AWS。甚至将服务器托管似乎也太冒险了，考虑到它们经常出问题。所以我们的服务器在办公室里。或者更准确地说，在Trevor的办公室里。作为与没有其他人共享他办公室的独特特权，他必须与6台尖叫的塔式服务器共享。他的办公室因为它们产生的热量而被戏称为&amp;quot;热水浴缸&amp;quot;。大多数日子，他的一堆窗式空调还能应付。&lt;/p&gt;&#xA;&lt;p&gt;为了描述页面，我们有一种叫做RTML的模板语言，据说代表某种东西，但事实上我是以Rtm的名字命名的。RTML是Common Lisp，通过一些宏和库增强，并隐藏在一个结构编辑器后面，使它看起来好像有语法。&lt;/p&gt;&#xA;&lt;p&gt;由于我们持续发布，我们的软件实际上没有版本。但在那些日子里，行业媒体期望有版本，所以我们就编造了一些。如果我们想获得大量关注，我们把版本号设为整数。那个&amp;quot;4.0版本&amp;quot;图标顺便说一句是由我们自己的按钮生成器生成的。整个Viaweb网站都是用我们的软件制作的，尽管它不是一个在线商店，因为我们想体验我们的用户的感受。&lt;/p&gt;&#xA;&lt;p&gt;1997年底，我们发布了一个叫做Shopfind的通用购物搜索引擎。在当时它相当先进。它有一个可编程的爬虫，可以爬取网上大多数不同的商店并挑选出产品。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
