<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>创新 on Linguista</title>
    <link>https://linguage.github.io/tags/%E5%88%9B%E6%96%B0/</link>
    <description>Recent content in 创新 on Linguista</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Mon, 13 Dec 2021 20:01:05 +0000</lastBuildDate>
    <atom:link href="https://linguage.github.io/tags/%E5%88%9B%E6%96%B0/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>对穴居人来说，几乎没有什么东西是资源</title>
      <link>https://linguage.github.io/naval/zh/to-a-caveman-very-few-things-are-resources.zh/</link>
      <pubDate>Mon, 13 Dec 2021 20:01:05 +0000</pubDate>
      <guid>https://linguage.github.io/naval/zh/to-a-caveman-very-few-things-are-resources.zh/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://linguage.github.io/naval/orig/to-a-caveman-very-few-things-are-resources/&#34;&gt;原文(English)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;grid grid-cols-2 gap-4 md:grid-cols-2&#34;&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://nav.al/caveman&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://nav.al/caveman&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://nav.al/caveman&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://x.com/naval/status/1002103360646823936&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://x.com/naval/status/1002103360646823936&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://x.com/naval/status/1002103360646823936&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;/div&gt;&#xA;&lt;h1 id=&#34;对穴居人来说几乎没有什么东西是资源&#34;&gt;对穴居人来说，几乎没有什么东西是资源&lt;/h1&gt;&#xA;&lt;p&gt;&lt;strong&gt;2021年12月13日&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;曾经有一段时间，煤炭并不是一种资源&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;&lt;strong&gt;Brett:&lt;/strong&gt;&#xA;英国独立电视台曾有一则报道，谈论亚马逊产生了多少所谓的浪费，说亚马逊经常销毁大量产品。&lt;/p&gt;&#xA;&lt;p&gt;我想，&amp;ldquo;为什么这些人要对他们一无所知的企业发表意见？&amp;ldquo;他们难道更希望亚马逊拥有完美知识，精确知道需要生产多少产品吗？换句话说，这是一种认识论上不可能实现的情况。还是他们更希望亚马逊生产不足量的产品，这样想购买的人实际上无法买到？&lt;/p&gt;&#xA;&lt;p&gt;当然，亚马逊的做法是生产比他们需要的略多一些。任何企业都是这样做的。他们时不时会生产比当前需求略多一些的产品。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Naval:&lt;/strong&gt;&#xA;我曾经有一位风险投资家跟我争论，说鞋的种类太多了，这是资本主义失败的例子，因为没有人需要这么多类型的运动鞋。&lt;/p&gt;&#xA;&lt;p&gt;我问他的问题是，&amp;ldquo;你是什么时候知道鞋子太多的？&amp;ldquo;历史上有哪个时间点我们决定鞋子已经太多了？在我们需要更多鞋子之前，因为我们需要更有弹性的鞋子，我们需要更耐用的鞋子，我们需要更厚鞋底的鞋子，我们需要更轻的鞋子，我们需要各种惊人的鞋子创新。&lt;/p&gt;&#xA;&lt;p&gt;然后在某个时刻，有人决定，&amp;ldquo;实际上我们有足够的鞋子了。现在我们需要消灭所有其他鞋类产品线。&amp;ldquo;你是从哪里得出这个想法的，你恰好出生在正确的时间和地点，能够确定我们确实有足够的鞋子了？&lt;/p&gt;&#xA;&lt;p&gt;这是每个人都容易陷入的一种狭隘观念。&lt;/p&gt;&#xA;&lt;p&gt;还有一个更宏观的版本，就是这种&amp;quot;我们正在耗尽资源&amp;quot;的哲学。它始于这样一种观念：地球是有限的，存在有限的资源集合，我们正在消耗所有这些资源。因此，如果我们不抑制消费，我们都会死亡。&lt;/p&gt;&#xA;&lt;p&gt;首先，你是怎么决定是地球的？你怎么决定你的城镇没有耗尽资源？为什么城镇不是你想要拯救的实际区域，而城镇之外的一切都是外国和无法到达的？&lt;/p&gt;&#xA;&lt;p&gt;为什么要把边界画在地球周围？我们可以去太阳系。我们可以去银河系，我们可以去宇宙。我们可以去多元宇宙。如果你知道如何利用它们，那里有很多资源。&lt;/p&gt;&#xA;&lt;p&gt;然后，你如何定义什么是资源？资源只是通过知识你可以从一种东西转换成另一种东西的东西。&lt;/p&gt;&#xA;&lt;p&gt;曾经有一段时间，煤炭不是资源；铁不是资源。对穴居人来说，几乎没有什么东西是资源——只有少数可食用植物和一些可食用动物，仅此而已。&lt;/p&gt;&#xA;&lt;p&gt;驯化、收获作物、冶金、化学、物理、开发发动机和火箭——所有这些都是将我们认为毫无价值的东西变成资源的过程。铀从完全毫无价值变成了令人难以置信的资源。&lt;/p&gt;&#xA;&lt;p&gt;这种有限资源的世界模型隐含地假定了有限的知识。它说知识创造已经结束。我们被困在目前这个点，因此，基于我们目前拥有的知识，这些就是我们所有可用的资源。现在我们必须开始保护。&lt;/p&gt;&#xA;&lt;p&gt;但知识是我们总能创造更多的东西。&lt;/p&gt;</description>
    </item>
    <item>
      <title>想法是新的石油</title>
      <link>https://linguage.github.io/naval/zh/ideas-are-the-new-oil.zh/</link>
      <pubDate>Wed, 17 Nov 2021 18:10:12 +0000</pubDate>
      <guid>https://linguage.github.io/naval/zh/ideas-are-the-new-oil.zh/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://linguage.github.io/naval/orig/ideas-are-the-new-oil/&#34;&gt;原文(English)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;grid grid-cols-2 gap-4 md:grid-cols-2&#34;&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://nav.al/ideas&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://nav.al/ideas&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://nav.al/ideas&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://x.com/naval/status/1002103360646823936&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://x.com/naval/status/1002103360646823936&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://x.com/naval/status/1002103360646823936&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;/div&gt;&#xA;&lt;h1 id=&#34;想法是新的石油&#34;&gt;想法是新的石油&lt;/h1&gt;&#xA;&lt;p&gt;&lt;strong&gt;2021年11月17日&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;所有新财富都是由想法创造的&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;&lt;strong&gt;Naval:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;人类有征服的历史，因为我们争夺完全相同的资源，但即使在人类历史上，最早的探险家也是商人。他们出去寻找香料、黄金、丝绸、要驯化的新植物、新动物。&lt;/p&gt;&#xA;&lt;p&gt;他们出去不一定是为了征服土地。最终他们这样做了，因为当你被困在地球上时，面临着有限资源的困境。但一旦你拥有离开地球的技术，有限资源的问题就消失了。&lt;/p&gt;&#xA;&lt;p&gt;如果你想要某种资源，那么你就去找一颗&lt;strong&gt;中子星&lt;/strong&gt;，或者去找一个恒星系统。你不会去追逐一个小小的行星。外面有无限的克卜勒行星，它们会更接近这些资源。&lt;/p&gt;&#xA;&lt;p&gt;人们想要的是想法和贸易。&lt;/p&gt;&#xA;&lt;p&gt;如果你看看现代社会——尽管我知道这不是普遍的看法——随着我们变得更加文明，我们正在变得不那么好战。原因是，你不再为了自然资源而征服俄罗斯。现在世界上最富有的地方是拥有最好想法的地方。硅谷曾一度作为财富创造引擎位居榜首，因为它拥有最好的想法。&lt;/p&gt;&#xA;&lt;p&gt;新的石油就是想法。它完全是数字化的。所有新财富都是在想法领域创造的。&lt;/p&gt;&#xA;&lt;p&gt;事实上，如果你今天作为一个年轻有抱负的人开始，你不会学习房地产；你不会学习煤炭和石油开采；你不会进入物理资源的开采来创造财富。你进入想法领域。你进入编程、书籍、电影、博客和播客以及建造机器人，这些大部分都是知识产权。&lt;/p&gt;&#xA;&lt;p&gt;即使作为人类文明，我们也在远离征服物理资源，更多地转向想法的交易。&lt;/p&gt;&#xA;&lt;p&gt;人类物种的负面情景是，我们太多的大国和民族国家认为他们已经达到了想法的最大化，现在是时候节省资源了。他们最终摧毁了改进、纠错和创造的手段，最终陷入停滞。&lt;/p&gt;&#xA;&lt;p&gt;然后，想法生成来自一小部分城邦，这些城邦必须抵御这些庞大、更具掠夺性、僵化的国家。&lt;/p&gt;&#xA;&lt;p&gt;人们谈论中国多么令人印象深刻——&amp;ldquo;看看他们的火箭&amp;rdquo;，或者&amp;quot;看看他们的GDP&amp;quot;，或者&amp;quot;看看他们建造的城市&amp;quot;。等他们发明了什么新东西再告诉我。等他们想出了一些我们从未有过的惊人想法，建造了我们从未有过的技术再告诉我。因为到目前为止，这一切都是模仿性的。他们只是利用了从我们这里学到的技术，现在正在追赶。他们只是将其规模化，因为他们有更多的人。&lt;/p&gt;&#xA;&lt;p&gt;等他们的人均GDP超过我们时再告诉我。等他们发明了我们不知道如何制造的药物或疫苗或航天器或能量发生器或聚变反应堆时再告诉我。等威权社会自上而下地弄清楚如何建造全新的事物，当它更具创造力，当他们的艺术更好，当他们的科学更好，当他们的技术更好时再告诉我。&lt;/p&gt;&#xA;&lt;p&gt;等这种情况发生在民主、自由、资本主义社会之上时再告诉我，因为我从未见过这种情况，从来没有。&lt;/p&gt;</description>
    </item>
    <item>
      <title>悲观主义似乎是一种理智上严肃的立场</title>
      <link>https://linguage.github.io/naval/zh/pessimism-seems-like-an-intellectually-serious-position.zh/</link>
      <pubDate>Mon, 17 May 2021 19:49:42 +0000</pubDate>
      <guid>https://linguage.github.io/naval/zh/pessimism-seems-like-an-intellectually-serious-position.zh/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://linguage.github.io/naval/orig/pessimism-seems-like-an-intellectually-serious-position/&#34;&gt;原文(English)&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;grid grid-cols-2 gap-4 md:grid-cols-2&#34;&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://nav.al/pessimism&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://nav.al/pessimism&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://nav.al/pessimism&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://x.com/naval/status/1002103360646823936&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://x.com/naval/status/1002103360646823936&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://x.com/naval/status/1002103360646823936&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;/div&gt;&#xA;&lt;h1 id=&#34;悲观主义似乎是一种理智上严肃的立场&#34;&gt;悲观主义似乎是一种理智上严肃的立场&lt;/h1&gt;&#xA;&lt;p&gt;2021年5月17日&lt;/p&gt;&#xA;&lt;p&gt;我们通过创新走出了之前的困境&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Brett:&lt;/strong&gt;&#xA;如果你是学者，能够解释所有存在的问题、这些问题有多危险，以及为什么需要资金来更深入地研究它们，这似乎是理智上严肃的立场；而声称我们能解决问题的人听起来有点过于理想化。&lt;/p&gt;&#xA;&lt;p&gt;事实上，合作、协作和资源开发将推动知识经济发展，使我们能够解决这些问题。&lt;/p&gt;&#xA;&lt;p&gt;如果你能皱着眉头站在TED演讲观众面前说：&amp;ldquo;这些是我们将要死亡的方式，地球将要毁灭的方式，以及我们将要走向灭亡的方式&amp;rdquo;，这似乎总是显得更加理智严肃。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Naval:&lt;/strong&gt;&#xA;我很内疚录制了其中一个&lt;a href=&#34;%E5%85%B3%E4%BA%8E%E7%BB%88%E7%BB%93%E8%80%85%E7%82%B8%E6%AF%81%E5%9C%B0%E7%90%83&#34;&gt;末日预言播客&lt;/a&gt;。那是我最后悔的一期播客。我们进行了一次很棒的对话，但我从根本上不同意我们应该因为世界将要终结而放慢脚步的观点。&lt;/p&gt;&#xA;&lt;p&gt;唯一的出路就是通过进步。&lt;/p&gt;&#xA;&lt;p&gt;我没有像推广其他播客那样推广那期播客。当我阅读Deutsch时，我明白了原因：悲观主义是一个容易陷入的陷阱，但它暗示人类没有创造力。悲观主义不承认我们通过创新走出之前困境的所有方式。&lt;/p&gt;&#xA;&lt;p&gt;企业家天生乐观，因为他们因乐观而获得回报。正如你所说，知识分子因悲观而获得回报。所以存在激励偏差。&lt;/p&gt;&#xA;&lt;p&gt;如果你是悲观主义者，你会从其他人那里获得反馈。这是一种社会行为。你在说服别人接受你的悲观主义。但企业家从自然和自由市场获得反馈，我相信这些是更现实的反馈机制。&lt;/p&gt;&#xA;&lt;p&gt;到目前为止，大多数悲观的预测都被证明是错误的。如果你看看世界应该终结或环境灾难应该发生的时间表，它们都相当错误。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Lisp的不同之处</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/diff/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/diff/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_en/diff/&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/diff.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/diff.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/diff.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;lisp的不同之处&#34;&gt;Lisp的不同之处&lt;/h1&gt;&#xA;&lt;p&gt;2001年12月（修订于2002年5月）&lt;/p&gt;&#xA;&lt;p&gt;（本文是回应LL1邮件列表上一些问题而产生的。现在已收录在《书呆子的复仇》中。）&lt;/p&gt;&#xA;&lt;p&gt;当McCarthy在1950年代末设计Lisp时，它是对现有语言的彻底突破，其中最重要的是Fortran。&lt;/p&gt;&#xA;&lt;p&gt;Lisp体现了九个新思想：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;条件语句。&lt;/strong&gt; 条件语句是if-then-else结构。现在我们认为这是理所当然的。它们是McCarthy在开发Lisp过程中发明的。（当时的Fortran只有条件goto，紧密基于底层硬件的分支指令。）McCarthy是Algol委员会的成员，他将条件语句引入Algol，随后传播到大多数其他语言。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;函数类型。&lt;/strong&gt; 在Lisp中，函数是一等对象——它们是一种数据类型，就像整数、字符串等，并且有字面表示，可以存储在变量中，可以作为参数传递，等等。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;递归。&lt;/strong&gt; 递归当然在Lisp之前作为数学概念存在，但Lisp是第一个支持递归的编程语言。（可以说这在使函数成为一等对象中是隐含的。）&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;变量的新概念。&lt;/strong&gt; 在Lisp中，所有变量实际上都是指针。具有类型的是值，而不是变量，赋值或绑定变量意味着复制指针，而不是它们指向的内容。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;垃圾回收。&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;由表达式组成的程序。&lt;/strong&gt; Lisp程序是表达式的树，每个表达式都返回一个值。（在某些Lisp中，表达式可以返回多个值。）这与Fortran和大多数后续语言形成对比，后者区分表达式和语句。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;在Fortran中有这种区别是很自然的，因为（在输入格式为打孔卡的语言中不足为奇）该语言是面向行的。你不能嵌套语句。因此，虽然你需要表达式来进行数学运算，但让其他任何东西返回值都没有意义，因为不可能有任何东西在等待它。&lt;/p&gt;&#xA;&lt;p&gt;随着块结构语言的出现，这个限制消失了，但那时已经太晚了。表达式和语句的区别已经根深蒂固。它从Fortran传播到Algol，然后传播到它们的后代。&lt;/p&gt;&#xA;&lt;p&gt;当一种语言完全由表达式构成时，你可以任意组合表达式。你可以说（使用Arc语法）&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(if foo (= x 1) (= x 2))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或者&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(= x (if foo 1 2))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;7&#34;&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;符号类型。&lt;/strong&gt; 符号与字符串的不同在于你可以通过比较指针来测试相等性。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;使用符号树表示代码的记号。&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;整个语言始终可用。&lt;/strong&gt; 读取时间、编译时间和运行时间之间没有真正的区别。你可以在读取时编译或运行代码，在编译时读取或运行代码，在运行时读取或编译代码。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;在读取时运行代码允许用户重新编程Lisp的语法；在编译时运行代码是宏的基础；在运行时编译是Lisp用作扩展语言的基础，如在Emacs等程序中；在运行时读取使程序能够使用s表达式进行通信，这个想法最近被重新发明为XML。&lt;/p&gt;&#xA;&lt;p&gt;当Lisp首次发明时，所有这些想法都与当时的普通编程实践相去甚远，后者主要由1950年代末可用的硬件决定。&lt;/p&gt;&#xA;&lt;p&gt;随着时间的推移，体现在一系列流行语言中的默认语言逐渐向Lisp演变。1-5现在已经广泛传播。6开始出现在主流中。Python具有7的一种形式，尽管似乎没有任何语法支持它。8（与9一起）是使Lisp宏成为可能的特性，到目前为止仍然是Lisp独有的，也许是因为（a）它需要那些括号，或者同样糟糕的东西，（b）如果你添加这最后的力量增量，你不能再声称发明了一种新语言，而只是设计了一种新的Lisp方言 ;-)&lt;/p&gt;&#xA;&lt;p&gt;虽然对当今的程序员有用，但通过描述Lisp与其他语言采用的随机权宜之计的差异来描述它是很奇怪的。这可能不是McCarthy对它的看法。Lisp不是设计来修复Fortran中的错误；它更像是试图将计算公理化的副产品。&lt;/p&gt;&#xA;&lt;p&gt;相关链接：&lt;/p&gt;</description>
    </item>
    <item>
      <title>一场本地革命？</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/revolution/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/revolution/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_en/revolution/&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/revolution.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/revolution.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/revolution.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;一场本地革命&#34;&gt;一场本地革命？&lt;/h1&gt;&#xA;&lt;p&gt;2009年4月&lt;/p&gt;&#xA;&lt;p&gt;最近我意识到我脑中一直有两个想法，如果结合起来会爆炸。&lt;/p&gt;&#xA;&lt;p&gt;第一个是创业公司可能代表一个新的经济阶段，规模相当于工业革命。我不确定这一点，但似乎有相当大的可能性是真实的。作为创业公司的创始人或早期员工，人们的生产力要高得多——想象一下，如果拉里和谢尔盖去一家大公司工作，他们的成就会有多少减少——而那种规模的改进可以改变社会习俗。&lt;/p&gt;&#xA;&lt;p&gt;第二个想法是创业公司是一种在某些专门从事它的地方繁荣的企业类型——硅谷专门从事创业公司，就像洛杉矶专门从事电影，或纽约专门从事金融一样。[1]&lt;/p&gt;&#xA;&lt;p&gt;如果两个都是真的呢？如果创业公司既是一个新的经济阶段，又是一种只在某些中心繁荣的企业类型呢？&lt;/p&gt;&#xA;&lt;p&gt;如果是这样，这场革命将是特别革命性的。所有以前的革命都传播了。农业、城市和工业化都广泛传播。如果创业公司最终像电影业一样，只有少数几个中心和一个主导中心，那将产生新颖的后果。&lt;/p&gt;&#xA;&lt;p&gt;已经有迹象表明创业公司可能不会特别广泛传播。创业公司的传播似乎比工业革命的传播慢得多，尽管现在的通信速度快得多。&lt;/p&gt;&#xA;&lt;p&gt;在博尔顿与瓦特成立后的几十年内，蒸汽机散布在北欧和北美各地。工业化有一段时间没有传播到这些地区以外。它只传播到有强大中产阶级的地方——即私人公民可以发财而不被没收的国家。否则，投资工厂就不值得了。但在有强大中产阶级的国家，工业技术很容易扎根。单个矿山或工厂主可以决定安装蒸汽机，几年内他可能会找到当地的人来为他制造一个。所以蒸汽机传播很快。而且它们传播广泛，因为矿山和工厂的位置是由河流、港口和原材料来源等特征决定的。[2]&lt;/p&gt;&#xA;&lt;p&gt;创业公司似乎不那么容易传播，部分是因为它们更多是社会的而不是技术的现象，部分是因为它们不与地理相关。单个欧洲制造商可以进口工业技术，它们会工作得很好。但这似乎对创业公司不太有效：你需要一个专业知识的社区，就像你在电影业中一样。[3] 此外，没有相同的力量推动创业公司传播。一旦铁路或电网被发明，每个地区都必须拥有它们。没有铁路或电力的地区是一个丰富的潜在市场。但这对创业公司来说不是真的。不需要法国的微软或德国的谷歌。&lt;/p&gt;&#xA;&lt;p&gt;政府可能决定他们想在当地鼓励创业公司，但政府政策不能像真正的需求那样将它们召唤出来。&lt;/p&gt;&#xA;&lt;p&gt;这一切将如何发展？如果我现在必须预测，我会说创业公司会传播，但非常缓慢，因为它们的传播将不是由政府政策（不会起作用）或市场需求（不存在）驱动的，而是在它发生的程度上，由迄今为止导致创业文化传播的相同随机因素驱动。而这种随机因素将越来越被现有创业中心的吸引力所压倒。&lt;/p&gt;&#xA;&lt;p&gt;硅谷之所以在那里，是因为威廉·肖克利想搬回他长大的帕洛阿尔托，被他吸引到西部与他一起工作的专家们非常喜欢那里而留了下来。西雅图作为科技中心的地位很大程度上归功于同样的原因：盖茨和艾伦想回家。否则，阿尔伯克基可能会在排名中拥有西雅图的位置。波士顿是一个科技中心，因为它是美国乃至世界的知识之都。如果电池风险投资公司没有拒绝Facebook，波士顿现在在创业雷达屏幕上会大得多。&lt;/p&gt;&#xA;&lt;p&gt;但当然，Facebook在硅谷而不是波士顿获得资助并非巧合。硅谷比波士顿有更多更大胆的投资者，甚至本科生都知道这一点。&lt;/p&gt;&#xA;&lt;p&gt;波士顿的例子说明了在这个游戏的后期建立一个新的创业中心的困难。如果你想通过重现现有创业中心发生的方式来创建一个创业中心，方法是在一个如此美好的地方建立一流的研究大学，以至于富人想住在那里。那么这个城市将对两个你需要的群体都友好：创始人和投资者。这就是产生硅谷的组合。但硅谷没有硅谷与之竞争。如果你现在尝试在一个好地方建立一所伟大大学来创建创业中心，它会更难开始，因为它产生的许多最好的创业公司会被吸引到现有的创业中心。&lt;/p&gt;&#xA;&lt;p&gt;最近我提出了一个潜在的捷径：付钱让创业公司搬迁。一旦你有足够多的优秀创业公司在一个地方，它将创造一个自我维持的连锁反应。创始人会开始搬到那里而不需要付钱，因为那是他们的同行所在的地方，投资者也会出现，因为那是交易所在的地方。&lt;/p&gt;&#xA;&lt;p&gt;在实践中，我怀疑任何政府都有胆量尝试这个，或者有正确的头脑来做。我并不是作为一个实用的建议，而更多是对故意创建创业中心所需最低限度的探索。&lt;/p&gt;&#xA;&lt;p&gt;最可能的情况是（1）没有政府会成功建立创业中心，（2）创业文化的传播将因此由迄今为止驱动它的随机因素驱动，但是（3）这些因素将越来越被现有创业中心的吸引力所压倒。结果：这场革命，如果它是一场革命的话，将是异常本地化的。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 有两种非常不同类型的创业公司：一种是自然演化的，另一种是为了&amp;quot;商业化&amp;quot;科学发现而被召唤出来的。大多数计算机/软件创业公司现在是第一种，大多数制药创业公司是第二种。当我在本文中谈论创业公司时，我指的是第一种创业公司。使第二种创业公司传播没有困难：你所要做的就是资助医学研究实验室；商业化专家们抛出的任何新发现就像建造一个新机场一样简单。第二种创业公司既不需要也不产生创业文化。但这意味着拥有第二种创业公司不会让你得到第一种创业公司。费城就是一个例子：很多第二种创业公司，但几乎没有第一种。&lt;/p&gt;&#xA;&lt;p&gt;顺便说一句，谷歌可能看起来像第二种创业公司的一个例子，但它不是。谷歌不是商业化的PageRank。他们可以使用另一种算法，一切都会是一样的。使谷歌成为谷歌的是他们在网络演化的关键时期关心做好搜索。&lt;/p&gt;&#xA;&lt;p&gt;[2] 瓦特没有发明蒸汽机。他的关键发明是一个使蒸汽机效率显著提高的改进：独立的冷凝器。但这简化了他的作用。他对问题有如此不同的态度，并以如此大的能量接近它，以至于他改变了这个领域。也许最准确的说法是瓦特重新发明了蒸汽机。&lt;/p&gt;&#xA;&lt;p&gt;[3] 这里最大的反例是Skype。如果你做的事情在美国会被关闭，那么位于别处就成为优势。这就是为什么Kazaa取代了Napster。创始人从运行Kazaa获得的专业知识和联系有助于确保Skype的成功。&lt;/p&gt;&#xA;&lt;p&gt;感谢帕特里克·科利森、杰西卡·利文斯顿和弗雷德·威尔逊阅读本文草稿。&lt;/p&gt;</description>
    </item>
    <item>
      <title>专利承诺</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/patentpledge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/patentpledge/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_en/patentpledge/&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/patentpledge.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/patentpledge.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/patentpledge.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;专利承诺&#34;&gt;专利承诺&lt;/h1&gt;&#xA;&lt;p&gt;2011年8月&lt;/p&gt;&#xA;&lt;p&gt;我最近意识到，我们也许能够解决专利问题的一部分，而无需等待政府。&lt;/p&gt;&#xA;&lt;p&gt;我从来没有100%确定专利是帮助还是阻碍技术进步。当我还是个孩子的时候，我认为它们有帮助。我认为它们保护发明人免于被大公司窃取想法。也许在过去，当更多东西是物理的时候，这更真实。但无论专利总体上是否是好事，似乎确实有使用它们的坏方式。而且由于专利的坏用途似乎在增加，对专利改革的呼吁也在增加。&lt;/p&gt;&#xA;&lt;p&gt;专利改革的问题在于它必须通过政府。那往往很慢。但最近我意识到我们也可以在下游攻击问题。除了在专利发布时掐断专利流外，在某些情况下，我们也许能够在它们被使用时掐断它。&lt;/p&gt;&#xA;&lt;p&gt;使用专利的一种明显不鼓励创新的方式是，当拥有糟糕产品的老牌公司使用专利来压制拥有好产品的小竞争对手时。这种滥用类型我们也许能够减少，而无需通过政府。&lt;/p&gt;&#xA;&lt;p&gt;这样做的方法是让那些不屑于玩这种把戏的公司公开承诺不这样做。然后，那些不会做出这种承诺的公司将非常显眼。潜在员工不会想为他们工作。投资者也将能够看到他们是那种通过诉讼而不是通过制造好产品来竞争的公司。&lt;/p&gt;&#xA;&lt;p&gt;承诺如下：不首先使用软件专利针对少于25人的公司。&lt;/p&gt;&#xA;&lt;p&gt;我故意为了简洁而牺牲了精确性。专利承诺没有法律约束力。它就像谷歌的&amp;quot;不作恶&amp;quot;。他们没有定义什么是邪恶，但通过公开这样说，他们说自己愿意被一个标准约束，比如奥驰亚就不是。虽然有限制，但&amp;quot;不作恶&amp;quot;对谷歌有好处。技术公司通过吸引最有生产力的人来获胜，而最有生产力的人被那些对自己要求高于法律要求的雇主所吸引。[1]&lt;/p&gt;&#xA;&lt;p&gt;专利承诺实际上是一个更狭窄但开源的&amp;quot;不作恶&amp;quot;。我鼓励每家技术公司采用它。如果你想帮助修复专利问题，鼓励你的雇主采用。&lt;/p&gt;&#xA;&lt;p&gt;大多数技术公司已经不会降低到对创业公司使用专利。你没有看到谷歌或Facebook因专利侵权而起诉创业公司。他们不需要。所以对于更好的技术公司，专利承诺不需要改变行为。他们只是承诺做他们无论如何都会做的事情。当所有不会对创业公司使用专利的公司都这样说了，坚持者将非常显眼。&lt;/p&gt;&#xA;&lt;p&gt;专利承诺不能解决专利的每一个问题。例如，它不会阻止专利流氓；他们已经是被排斥者。但专利承诺确实解决的问题可能比专利流氓的问题更严重。专利流氓只是寄生虫。笨拙的寄生虫偶尔可能会杀死宿主，但这不是它的目标。而因专利侵权而起诉创业公司的公司通常这样做，明确的目标是让他们的产品远离市场。&lt;/p&gt;&#xA;&lt;p&gt;对创业公司使用专利的公司是在根本上攻击创新。现在任何人都可以对这个问题做一些事情，而无需等待政府：询问公司的立场。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;专利承诺网站&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;注释：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;[1] 因为承诺故意含糊，我们在解释时需要常识。甚至反之亦然：承诺含糊是为了让人们在解释时使用常识。&lt;/p&gt;&#xA;&lt;p&gt;例如，我故意避免说25人是否必须是员工，或者承包商是否也算。如果一个公司必须在这种精细程度上吹毛求疵，说明诉讼是否会违反专利承诺，这可能仍然是一种卑鄙的行为。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;没有发生的投资&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>为什么创业中心有效</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/hubs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/hubs/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_en/hubs/&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/hubs.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/hubs.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/hubs.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;为什么创业中心有效&#34;&gt;为什么创业中心有效&lt;/h1&gt;&#xA;&lt;p&gt;想要创业？获得Y Combinator的投资。&lt;/p&gt;&#xA;&lt;p&gt;2011年10月&lt;/p&gt;&#xA;&lt;p&gt;如果你按人口排序查看美国城市名单，每 capita 的成功创业公司数量相差几个数量级。不知何故，大多数地方似乎都被喷洒了创业杀虫剂。&lt;/p&gt;&#xA;&lt;p&gt;我对这个问题的思考有很多年。我可以看出，普通城镇就像创业野心的蟑螂旅馆：聪明、有雄心的人进去，但没有创业公司出来。但我从来没能弄清楚旅馆内部到底发生了什么——到底是什么在杀死所有潜在的创业公司。[1]&lt;/p&gt;&#xA;&lt;p&gt;几周前，我终于想通了。我把问题框错了。问题不是大多数城镇杀死创业公司。而是死亡是创业公司的默认状态，大多数城镇不会拯救它们。与其认为大多数地方被喷洒了创业杀虫剂，不如更准确地认为所有创业公司都被毒药毒害了，少数地方被喷洒了解药。&lt;/p&gt;&#xA;&lt;p&gt;其他地方的创业公司只是在做创业公司自然做的事情：失败。真正的问题是，像硅谷这样的地方是什么在拯救创业公司？[2]&lt;/p&gt;&#xA;&lt;h2 id=&#34;环境&#34;&gt;环境&lt;/h2&gt;&#xA;&lt;p&gt;我认为解药有两个组成部分：身处一个创业公司很酷的地方，以及与能帮助你的人偶然相遇。而驱动这两者的都是你周围的创业公司数量。&lt;/p&gt;&#xA;&lt;p&gt;第一个组成部分在创业公司生命的第一阶段特别有帮助，那时你从仅仅对创办公司感兴趣到真正去做。创办创业公司是一个相当大的飞跃。这是一件不寻常的事情。但在硅谷，这似乎很正常。[3]&lt;/p&gt;&#xA;&lt;p&gt;在大多数地方，如果你创办创业公司，人们会把你当作失业者对待。硅谷的人不会仅仅因为你创办公司就自动印象深刻，但他们会关注。任何在这里呆了足够时间的人都知道不要默认持怀疑态度，无论你看起来多么没有经验，或者你的想法听起来多么没有前途，因为他们都见过没有经验、想法听起来没有前途的创始人在几年后成为亿万富翁。&lt;/p&gt;&#xA;&lt;p&gt;周围有人关心你在做什么是一种非常强大的力量。即使是最有意志的人也会受其影响。在我们创办Y Combinator大约一年后，我对一家知名风险投资公司的合作伙伴说了一些话，这给了他（错误的）印象，认为我正在考虑创办另一家创业公司。他回应得如此热切，以至于大约半秒钟我发现自己正在考虑这样做。&lt;/p&gt;&#xA;&lt;p&gt;在大多数其他城市，创办创业公司的远景似乎不真实。在硅谷，这不仅是真实的，而且是时尚的。这无疑导致许多不应该创办创业公司的人去创办了。但我认为这没关系。很少有人适合经营创业公司，而且很难提前预测哪些是（我从试图预测的行业中深知这一点），所以很多不应该创办创业公司的人创办创业公司可能是最佳状态。只要你处于生命中的一个阶段，能够承受失败的风险，找出你是否适合经营创业公司的最好方法就是尝试。&lt;/p&gt;&#xA;&lt;h2 id=&#34;机遇&#34;&gt;机遇&lt;/h2&gt;&#xA;&lt;p&gt;解药的第二个组成部分是与能帮助你的人偶然相遇。这种力量在两个阶段都起作用：既包括从想创办创业公司到实际创办的过渡，也包括从创办公司到成功的过渡。偶然相遇的力量比周围人关心创业公司变化更大，后者像一种影响每个人的背景辐射，但在其最强时，它要强大得多。&lt;/p&gt;&#xA;&lt;p&gt;偶然相遇产生奇迹来补偿创业公司特有的灾难。在硅谷，可怕的事情不断发生在创业公司身上，就像在其他地方的创业公司一样。硅谷的创业公司更有可能成功的原因是，伟大的事情也发生在它们身上。在硅谷，闪电有一个符号位。&lt;/p&gt;&#xA;&lt;p&gt;例如，你创办了一个针对大学生的网站，决定搬到帕洛阿尔托过一个夏天在那里工作。然后在帕洛阿尔托的一个随机的郊区街道上，你偶然遇到了肖恩·帕克，他非常了解这个领域，因为他自己创办了一家类似的创业公司，而且他也认识所有投资者。而且，他对2004年的创始人保留公司控制权有先进的看法。&lt;/p&gt;&#xA;&lt;p&gt;你无法确切地说奇迹会是什么，或者甚至肯定会有一个奇迹发生。最多只能说：如果你在创业中心，意想不到的好事情可能会发生在你身上，特别是如果你应得的话。&lt;/p&gt;&#xA;&lt;p&gt;我敢打赌，即使是我们资助的创业公司也是如此。即使我们努力为他们有目的地制造事情发生，硅谷有帮助的偶然相遇的频率如此之高，这仍然是我们能提供的显著增量。&lt;/p&gt;&#xA;&lt;p&gt;偶然相遇的作用类似于放松在产生想法中的作用。大多数人都有这样的经历：努力解决某个问题，无法解决，放弃去睡觉，然后在早上的淋浴中想到答案。让答案出现的是让你的思绪稍微漂移——从而从你前一晚一直在追求的错误路径漂移到旁边正确的路径上。&lt;/p&gt;&#xA;&lt;p&gt;偶然相遇让你的相识关系漂移，就像淋浴让你的思绪漂移一样。两种情况下的关键都是它们漂移的程度恰到好处。拉里·佩奇和谢尔盖·布林之间的会面是一个好例子。他们让他们的相识关系漂移，但只是稍微漂移；他们都在与有很多共同点的人会面。&lt;/p&gt;&#xA;&lt;p&gt;对于拉里·佩奇来说，解药最重要的组成部分是谢尔盖·布林，反之亦然。解药是人。使硅谷有效的不是它的物理基础设施，不是天气，也不是任何类似的东西。那些帮助它开始，但现在反应是自我维持的，驱动它的是人。&lt;/p&gt;&#xA;&lt;p&gt;许多观察家注意到，创业中心最显著的特点之一是人们互相帮助的程度，没有任何期望得到回报。我不确定为什么会这样。也许是因为创业公司不像大多数类型的企业那样是零和游戏；它们很少被竞争对手杀死。也许是因为这么多创业公司创始人有科学背景，在科学中鼓励合作。&lt;/p&gt;&#xA;&lt;p&gt;Y C的大部分功能是加速这个过程。我们是硅谷中的一个硅谷，在那里，从事创业公司的人员密度和他们互相帮助的意愿都被人为地放大了。&lt;/p&gt;&#xA;&lt;h2 id=&#34;数量&#34;&gt;数量&lt;/h2&gt;&#xA;&lt;p&gt;解药的两个组成部分——鼓励创业公司的环境，以及与能帮助你的人偶然相遇——都是由同样的潜在原因驱动的：你周围的创业公司数量。要创建一个创业中心，你需要很多对创业感兴趣的人。&lt;/p&gt;&#xA;&lt;p&gt;有三个原因。第一个，很明显，是如果你没有足够的密度，偶然相遇就不会发生。[4] 第二个是不同的创业公司需要如此不同的东西，所以你需要很多人来为每个创业公司提供它们最需要的东西。2004年的肖恩·帕克正是Facebook所需要的。另一个创业公司可能需要一个数据库专家，或者一个在电影行业有人脉的人。&lt;/p&gt;&#xA;&lt;p&gt;顺便说一下，这就是我们资助这么多公司的原因之一。社区越大，其中包含拥有你最需要的那个人的人的机会就越大。&lt;/p&gt;&#xA;&lt;p&gt;你需要很多人来创建创业中心的第三个原因是，一旦你有足够多的人对同一个问题感兴趣，他们就开始设定社会规范。而当周围的气氛鼓励你做本来似乎过于雄心勃勃的事情时，这是一件特别有价值的事情。在大多数地方，气氛把你拉向平均值。&lt;/p&gt;&#xA;&lt;p&gt;几天前我飞进湾区。每次飞越硅谷时我都会注意到这一点：不知何故你能感觉到有什么事情正在发生。显然，你可以从地方看起来多么好看出繁荣。但繁荣有不同的种类。硅谷看起来不像波士顿，不像纽约，不像洛杉矶，不像华盛顿特区。我试图想用一个词来描述硅谷辐射的感觉，我想到的词是乐观主义。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 我并不是说在创业公司很少的城市不可能成功，只是更难。如果你足够擅长产生自己的士气，你可以在没有外部鼓励的情况下生存。Wufoo基于坦帕，他们成功了。但Wufoo的人是异常自律的。&lt;/p&gt;&#xA;&lt;p&gt;[2] 顺便说一句，这种现象不仅限于创业公司。大多数不寻常的雄心都会失败，除非拥有它们的人设法找到正确类型的社区。&lt;/p&gt;&#xA;&lt;p&gt;[3] 创办公司很常见，但创办创业公司很少见。我在其他地方谈论过这两者之间的区别，但本质上创业公司是一种为规模而设计的新业务。大多数新业务是服务业务，除了罕见情况外，这些业务不会扩展。&lt;/p&gt;&#xA;&lt;p&gt;[4] 当我写这篇文章时，我见证了硅谷创业公司人员密度的证据。杰西卡和我骑自行车去帕洛阿尔托的大学大道，在极好的Oren&amp;rsquo;s Hummus吃午饭。当我们走进去时，我们遇到查理·齐弗坐在门附近。塞琳娜·托巴卡瓦拉在出去时停下来打招呼。然后乔什·威尔逊进来取外卖订单。午饭后我们去吃冷冻酸奶。在路上我们遇到了拉杰特·苏里。当我们到达酸奶店时，我们发现戴夫·沈在那里，当我们走出去时，我们遇到了尤里·萨加洛夫。我们和他走了一个街区左右，然后遇到了穆扎米尔·扎维里，然后又走了一个街区后我们遇到了艾丁·森库特。这是帕洛阿尔托的日常生活。我没有试图遇见人；我只是在吃午饭。而且我敢肯定，我看到的每个我认识的创业公司或投资者，还有5个我不认识的。如果罗恩·康威和我们在一起，他会遇到30个他认识的人。&lt;/p&gt;</description>
    </item>
    <item>
      <title>为什么创业公司在美国聚集</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/america/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/america/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_en/america/&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/america.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/america.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/america.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;为什么创业公司在美国聚集&#34;&gt;为什么创业公司在美国聚集&lt;/h1&gt;&#xA;&lt;p&gt;2006年5月&lt;/p&gt;&#xA;&lt;p&gt;（本文源自于Xtech会议的主题演讲。）&lt;/p&gt;&#xA;&lt;p&gt;创业公司会聚集在某些地方。硅谷和波士顿有很多，而芝加哥和迈阿密则很少。一个想要创业公司的国家可能也需要复制形成这些聚集地的任何条件。&lt;/p&gt;&#xA;&lt;p&gt;我曾声称秘诀是有一所优秀的大学靠近聪明人喜欢的城镇。如果你在美国建立起这些条件，创业公司将像水滴凝结在冰冷的金属上一样不可避免地形成。但当我考虑在另一个国家复制硅谷需要什么时，很明显美国是一个特别潮湿的环境。创业公司在这里更容易形成。&lt;/p&gt;&#xA;&lt;p&gt;在另一个国家尝试创建硅谷绝不是毫无希望的。不仅有与硅谷匹敌的空间，还有超越它的空间。但如果你想做到这一点，你必须理解创业公司在美国获得的优势。&lt;/p&gt;&#xA;&lt;h3 id=&#34;1-美国允许移民&#34;&gt;1. 美国允许移民。&lt;/h3&gt;&#xA;&lt;p&gt;例如，我怀疑是否可能在日本复制硅谷，因为硅谷最显著的特征之一就是移民。那里有一半的人说话带有口音。而日本人不喜欢移民。当考虑如何创建日本硅谷时，我怀疑他们无意识地将问题框定为如何创建一个只由日本人组成的硅谷。这种框定问题的方式几乎注定失败。&lt;/p&gt;&#xA;&lt;p&gt;硅谷必须成为聪明人和雄心勃勃的人的圣地，如果你不让人进入，你就不能拥有圣地。&lt;/p&gt;&#xA;&lt;p&gt;当然，说美国比日本更开放移民并没有什么了不起的。移民政策是一个竞争对手可能做得更好的领域。&lt;/p&gt;&#xA;&lt;h3 id=&#34;2-美国是一个富裕的国家&#34;&gt;2. 美国是一个富裕的国家。&lt;/h3&gt;&#xA;&lt;p&gt;我可以看到有一天印度会产生硅谷的竞争对手。显然他们有合适的人才：你可以从当前硅谷中的印度人数量看出来。印度本身的问题在于它仍然太贫穷。&lt;/p&gt;&#xA;&lt;p&gt;在贫穷国家，我们认为理所当然的东西缺失了。我一个访问印度的朋友在火车站的台阶上扭伤了脚踝。当她转身看发生了什么事时，她发现台阶的高度都不同。在工业化国家，我们一辈子都在走台阶，却从未想过这个问题，因为有一种基础设施可以防止建造这样的楼梯。&lt;/p&gt;&#xA;&lt;p&gt;美国从未像现在某些国家那样贫穷。美国城市的街道上从未有过成群的乞丐。所以我们没有关于从成群乞丐阶段发展到硅谷阶段需要什么的数据。你能同时拥有两者，还是必须在拥有硅谷之前有某种基线繁荣？&lt;/p&gt;&#xA;&lt;p&gt;我怀疑经济发展存在某种速度限制。经济是由人组成的，而态度每代只能改变一定数量。[1]&lt;/p&gt;&#xA;&lt;h3 id=&#34;3-美国还不是警察国家&#34;&gt;3. 美国还不是警察国家。&lt;/h3&gt;&#xA;&lt;p&gt;我可以看到另一个想要拥有硅谷的国家是中国。但我怀疑他们也还不能做到。中国似乎仍然是一个警察国家，尽管现在的统治者相比前任似乎开明，但即使是开明的专制也只能让你在经济强国道路上走一部分。&lt;/p&gt;&#xA;&lt;p&gt;它可以为你建立工厂来制造其他地方设计的东西。但是，它能为你带来设计师吗？想象力能在人们不能批评政府的地方蓬勃发展吗？想象力意味着拥有奇特的想法，而在技术上拥有奇特想法很难不在政治上也拥有奇特想法。而且，许多技术思想确实具有政治含义。所以，如果你压制异议，反压力将传播到技术领域。[2]&lt;/p&gt;&#xA;&lt;p&gt;新加坡将面临类似的问题。新加坡似乎非常意识到鼓励创业公司的重要性。但是，虽然积极的政府干预可能使港口高效运行，但它不能诱使创业公司出现。一个禁止嚼口香糖的国家距离创建旧金山还有很长的路要走。&lt;/p&gt;&#xA;&lt;p&gt;你需要旧金山吗？是否可能存在一条通过服从和合作而不是个人主义走向创新的替代路线？有可能，但我打赌不会。大多数富有想象力的人似乎都分享某种刺人的独立性，无论何时何地。你可以在第欧根尼告诉亚历山大离开他的光和两千年后费曼在洛斯阿拉莫斯撬保险箱中看到这一点。[3] 富有想象力的人不想追随或领导。当每个人都能做自己想做的事情时，他们最有生产力。&lt;/p&gt;&#xA;&lt;p&gt;具有讽刺意味的是，在所有富裕国家中，美国最近失去了最多的公民自由。但我还不太担心。我希望现任政府下台后，美国文化自然的开放性会重新确立。&lt;/p&gt;&#xA;&lt;h3 id=&#34;4-美国大学更好&#34;&gt;4. 美国大学更好。&lt;/h3&gt;&#xA;&lt;p&gt;你需要一所优秀的大学来孕育硅谷，到目前为止，美国以外还很少。我问了几个美国计算机科学教授，他们最钦佩欧洲的哪些大学，他们基本上都说&amp;quot;剑桥&amp;quot;，然后停顿了很久，试图想出其他的。似乎没有多少其他地方的大学能与美国最好的大学相比，至少在技术方面。&lt;/p&gt;&#xA;&lt;p&gt;在某些国家，这是 deliberate 政策的结果。德国和荷兰政府，也许是出于对精英主义的恐惧，试图确保所有大学在质量上大致相等。缺点是没有一个特别好的。最好的教授被分散了，而不是像在美国那样集中。这可能使他们效率较低，因为他们没有好同事来激励他们。这也意味着没有一所大学足够好到可以作为圣地，吸引外国人才并导致创业公司在其周围形成。&lt;/p&gt;&#xA;&lt;p&gt;德国的情况很奇怪。德国人发明了现代大学，直到1930年代，他们的大学是世界上最好的。现在他们没有一所突出的大学。当我思考这个问题时，我发现自己在想：&amp;ldquo;我能理解德国大学在1930年代排斥犹太人后是如何衰退的。但它们现在肯定应该恢复过来了。&amp;rdquo; 然后我意识到：也许不会。德国剩下的犹太人很少，我认识的大多数犹太人都不想搬到那里。如果你拿任何一所伟大的美国大学并移除犹太人，你会有一些相当大的空白。所以也许在德国尝试建立硅谷是毫无希望的，因为你无法建立你需要作为种子的大学水平。[4]&lt;/p&gt;&#xA;&lt;p&gt;美国大学自然竞争，因为许多是私立的。要复制美国大学的质量，你可能也必须复制这一点。如果大学由中央政府控制，互相拉扯会将它们都拉向平均水平：新的X研究所最终会落在一个有影响力政治家所在地区的大学，而不是它应该在的地方。&lt;/p&gt;&#xA;&lt;h3 id=&#34;5-在美国你可以解雇员工&#34;&gt;5. 在美国你可以解雇员工。&lt;/h3&gt;&#xA;&lt;p&gt;我认为在欧洲创建创业公司的最大障碍之一是对就业的态度。众所周知，严格的劳动法伤害了每家公司，但对创业公司尤其如此，因为创业公司最少时间可以浪费在官僚麻烦上。&lt;/p&gt;&#xA;&lt;p&gt;解雇员工的困难对创业公司来说是一个特殊问题，因为他们没有冗余。每个人都必须做好自己的工作。&lt;/p&gt;&#xA;&lt;p&gt;但问题不仅仅是某个创业公司可能在解雇他们需要的人方面遇到问题。跨行业和国家，表现和就业保障之间存在强烈的负相关。演员和导演在每部电影结束时都会被解雇，所以他们每次都必须交付产品。初级教授在几年后默认被解雇，除非大学选择授予他们终身教职。职业运动员知道如果他们只是打了几场坏比赛就会被拉下场。在规模的另一端（至少在美国）是汽车工人、纽约市教师和公务员，他们都几乎不可能被解雇。趋势如此明显，你必须故意视而不见才能看不到。&lt;/p&gt;&#xA;&lt;p&gt;表现不是一切，你会说？那么，汽车工人、教师和公务员比演员、教授和职业运动员更快乐吗？&lt;/p&gt;&#xA;&lt;p&gt;欧洲公众舆论显然会容忍在他们真正关心表现的行业中被解雇的人。不幸的是，他们唯一足够关心的行业到目前为止是足球。但这至少是一个先例。&lt;/p&gt;&#xA;&lt;h3 id=&#34;6-在美国工作与就业的关联较少&#34;&gt;6. 在美国，工作与就业的关联较少。&lt;/h3&gt;&#xA;&lt;p&gt;在欧洲和日本等更传统的地方，问题比就业法更深。更危险的是它们反映的态度：雇员是一种仆人，雇主有责任保护他们。在美国过去也是如此。在1970年，你仍然应该在大公司找到工作，理想情况下你会为它工作一辈子。作为回报，公司会照顾你：他们会努力不解雇你，支付你的医疗费用，并在你年老时支持你。&lt;/p&gt;&#xA;&lt;p&gt;就业逐渐摆脱了这种家长式的色彩，变成了一种简单的经济交换。但新模式的重要性不仅仅是它使创业公司更容易成长。更重要的是，我认为它使人们更容易创办创业公司。&lt;/p&gt;&#xA;&lt;p&gt;即使在美国，大多数大学毕业的孩子仍然认为他们应该找工作，好像你不能成为某人的雇员就无法富有成效一样。但你越少将工作与就业等同，创办创业公司就越容易。当你将职业视为一系列不同类型的工作，而不是对单个雇主的终身服务时，创办自己公司的风险就更小，因为你只替换一个部分，而不是丢弃整个事情。&lt;/p&gt;</description>
    </item>
    <item>
      <title>为什么推特很重要</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/twitter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/twitter/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_en/twitter/&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/twitter.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/twitter.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/twitter.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;为什么推特很重要&#34;&gt;为什么推特很重要&lt;/h1&gt;&#xA;&lt;p&gt;2009年4月&lt;/p&gt;&#xA;&lt;p&gt;奥姆·马利克是许多问为什么推特如此重要的人中最新的一个。&lt;/p&gt;&#xA;&lt;p&gt;原因是它是一种新的消息传递协议，你不指定接收者。新协议很少见。或者更准确地说，真正流行起来的新协议很少。常用的只有少数几个：TCP/IP（互联网）、SMTP（电子邮件）、HTTP（网络）等等。所以任何新协议都是大事。但推特是由私人公司拥有的协议。那就更罕见了。&lt;/p&gt;&#xA;&lt;p&gt;奇怪的是，推特创始人缓慢将其货币化的事实，从长远来看可能被证明是一个优势。因为他们没有试图过度控制它，推特对每个人来说都感觉像以前的协议。人们忘记了它是一家私人公司拥有的。这一定使推特更容易传播。&lt;/p&gt;</description>
    </item>
    <item>
      <title>为什么搬到创业中心</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/startuphubs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/startuphubs/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_en/startuphubs/&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/startuphubs.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/startuphubs.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/startuphubs.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;为什么搬到创业中心&#34;&gt;为什么搬到创业中心&lt;/h1&gt;&#xA;&lt;p&gt;2007年10月&lt;/p&gt;&#xA;&lt;p&gt;在我上次演讲后，其中一个组织者走上台进行即兴反驳。这从未发生过。我只听到了前几句话，但这足以告诉我说了什么让他不高兴的话：创业公司如果搬到硅谷会做得更好。&lt;/p&gt;&#xA;&lt;p&gt;这次会议在伦敦举行，大多数观众似乎来自英国。所以说创业公司应该搬到硅谷似乎像是一种民族主义的言论：一个讨厌的美国人告诉他们，如果他们想把事情做好，他们都应该搬到美国去。&lt;/p&gt;&#xA;&lt;p&gt;实际上我不像看起来那么美国化。我没有说，但我出生时是英国人。就像犹太人当然可以讲犹太笑话一样，我觉得我不必费心对英国观众保持外交辞令。&lt;/p&gt;&#xA;&lt;p&gt;创业公司搬到硅谷会做得更好的想法甚至不是民族主义的。[1] 我对美国创业公司也是这么说的。Y Combinator每6个月在东西海岸之间交替。每隔一轮融资在波士顿。尽管波士顿是美国（和世界）第二大创业中心，但我们告诉那些轮次的创业公司，他们最好的选择是搬到硅谷。如果这对波士顿来说是正确的，那么对其他每个城市来说更是如此。&lt;/p&gt;&#xA;&lt;p&gt;这是关于城市，而不是国家。&lt;/p&gt;&#xA;&lt;p&gt;我认为我可以证明我是对的。你可以轻易地将反对的 argument reduced ad absurdum，大多数人都会同意这是荒谬的。很少有人会愿意声称创业公司的位置根本不重要——在小型农业城镇运营的创业公司不会从搬到创业中心中受益。大多数人能看到在一个有创业基础设施、关于如何使创业公司运作的积累知识以及其他人在尝试做的地方可能会有所帮助。然而，无论你用什么论据来证明创业公司不需要从伦敦搬到硅谷，都可以同样用来证明创业公司不需要从小镇搬到伦敦。&lt;/p&gt;&#xA;&lt;p&gt;城市之间的差异是程度问题。而且，如果几乎所有知情的人都同意，创业公司在硅谷比在波士顿更好，那么他们在硅谷比在其他任何地方都更好。&lt;/p&gt;&#xA;&lt;p&gt;我意识到我可能在这个结论中有既得利益，因为搬到美国的创业公司可能通过Y Combinator进行。但我们资助的美国创业公司会证明我也对他们说了同样的话。&lt;/p&gt;&#xA;&lt;p&gt;我当然不是说每个创业公司都必须去硅谷才能成功。只是说在其他条件相同的情况下，一个地方越是创业中心，创业公司在那里就做得越好。但其他考虑可能超过搬迁的优势。我不是说有家庭的创始人应该连根拔起搬到世界的另一边；那可能太分散注意力了。&lt;/p&gt;&#xA;&lt;p&gt;移民困难可能是留在原地的另一个原因。处理移民问题就像筹集资金：出于某种原因，它似乎消耗你所有的注意力。创业公司负担不起太多这样的注意力。我们资助的一家加拿大创业公司花了大约6个月时间努力搬到美国。最终他们只是放弃了，因为他们负担不起花那么多时间离开他们的软件工作。&lt;/p&gt;&#xA;&lt;p&gt;（如果另一个国家想建立硅谷的竞争对手，他们能做的最好的事情可能是为创始人创建特殊签证。美国的移民政策是硅谷最大的弱点之一。）&lt;/p&gt;&#xA;&lt;p&gt;如果你的创业公司与特定行业相关，你可能最好在其中心之一。做与娱乐相关事情的创业公司可能想在纽约或洛杉矶。&lt;/p&gt;&#xA;&lt;p&gt;最后，如果一个好投资者承诺如果你留在原地就资助你，你可能应该留下。找到投资者很难。你通常不应该放弃确定的融资机会来搬迁。[2]&lt;/p&gt;&#xA;&lt;p&gt;事实上，投资者的质量可能是创业中心的主要优势。硅谷投资者明显比波士顿投资者更具侵略性。一次又一次，我看到我们资助的创业公司被西海岸投资者从波士顿投资者的鼻子底下抢走，波士顿投资者先看到他们但行动太慢。在今年的波士顿Demo Day上，我告诉观众这每年都会发生，所以如果他们看到他们喜欢的创业公司，他们应该向他们提供要约。然而不到一个月又发生了：一个激进的西海岸风险投资人在一周前见过YC资助的创业公司的创始人，击败了认识他多年的波士顿风险投资人。到波士顿风险投资人意识到发生了什么时，交易已经消失了。&lt;/p&gt;&#xA;&lt;p&gt;波士顿投资者会承认他们更保守。一些人想相信这来自城市审慎的扬基性格。但奥卡姆剃刀表明真相不太令人恭维。波士顿投资者可能比硅谷投资者更保守，原因与芝加哥投资者比波士顿投资者更保守相同。他们不太了解创业公司。&lt;/p&gt;&#xA;&lt;p&gt;西海岸投资者更大胆不是因为他们是不负责任的牛仔，也不是因为好天气让他们乐观。他们更大胆是因为他们知道自己在做什么。他们是在钻石斜坡上滑雪的滑雪者。大胆是风险投资的本质。你获得大回报的方式不是试图避免损失，而是试图确保你获得一些大成功。而大成功最初看起来往往有风险。&lt;/p&gt;&#xA;&lt;p&gt;就像Facebook。Facebook是在波士顿创办的。波士顿风险投资公司有第一个机会。但他们说不，所以Facebook搬到了硅谷并在那里筹集资金。拒绝他们的合伙人现在说&amp;quot;这可能被证明是一个错误。&amp;quot;&lt;/p&gt;&#xA;&lt;p&gt;从经验上看，大胆获胜。如果西海岸投资者的侵略性方式会反过来咬他们，那已经是很长时间了。自1970年代以来，硅谷一直领先于波士顿。如果西海岸投资者要受到惩罚，泡沫的破裂就是了。但自那时以来，西海岸只是进一步领先。&lt;/p&gt;&#xA;&lt;p&gt;西海岸投资者对自己的判断足够自信以大胆行动；东海岸投资者则不那么自信；但任何认为东海岸投资者出于谨慎而那样行事的人，应该看看东海岸风险投资人在输给西海岸的风险投资过程中的疯狂反应。&lt;/p&gt;&#xA;&lt;p&gt;除了专业化带来的集中化，创业中心也是市场。而市场通常是集中的。即使现在，当交易员可以在任何地方时，他们聚集在少数几个城市。很难说面对面接触究竟有什么让交易发生的魔力，但无论是什么，技术还没有复制它。&lt;/p&gt;&#xA;&lt;p&gt;在合适的时间沿着大学大道走，你可能会偷听到五个不同的人在电话上谈论交易。事实上，这是Y Combinator一半时间在波士顿的部分原因：全年都难以忍受。但尽管被只思考一件事的人包围有时可能很烦人，但如果那一件事正是你想要做的，那就是你应该在的地方。&lt;/p&gt;&#xA;&lt;p&gt;我最近和一个在谷歌从事搜索工作的人交谈。他在雅虎认识很多人，所以他处于比较两家公司的有利位置。我问他为什么谷歌在搜索方面更好。他说这不是谷歌做的任何特定事情，而是因为他们对搜索的理解要好得多。&lt;/p&gt;&#xA;&lt;p&gt;这就是为什么创业公司在硅谷这样的创业中心蓬勃发展。创业公司是非常专业的业务，像钻石切割一样专业。在创业中心，他们理解这一点。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注意事项&#34;&gt;注意事项&lt;/h2&gt;&#xA;&lt;p&gt;[1] 民族主义想法是相反的：创业公司应该因为所在国家而留在某个城市。如果你真的有&amp;quot;一个世界&amp;quot;的观点，决定从伦敦搬到硅谷与决定从芝加哥搬到硅谷没有什么不同。&lt;/p&gt;&#xA;&lt;p&gt;[2] 然而，对于仅仅似乎会资助你的投资者，你可以忽略。似乎有一天会资助你是投资者说No的方式。&lt;/p&gt;&#xA;&lt;p&gt;感谢Sam Altman、Jessica Livingston、Harjeet Taggar和Kulveer Taggar阅读本文草稿。评论本文。&lt;/p&gt;&#xA;&lt;p&gt;日语翻译&lt;/p&gt;</description>
    </item>
    <item>
      <title>为什么没有更多的Google</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/googles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/googles/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_en/googles/&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/googles.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/googles.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/googles.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;为什么没有更多的google&#34;&gt;为什么没有更多的Google&lt;/h1&gt;&#xA;&lt;p&gt;2008年4月&lt;/p&gt;&#xA;&lt;p&gt;乌迈尔·哈克最近写道，之所以没有更多的Google，是因为大多数初创公司在它们能够改变世界之前就被收购了。Google，尽管微软和雅虎对其表现出了严肃的兴趣——在当时那看起来似乎是有利可图的兴趣——却没有卖掉。Google可能只是雅虎或MSN的搜索框。&lt;/p&gt;&#xA;&lt;p&gt;为什么不是这样？因为Google有一种深刻的目标感：一个让世界变得更好的信念。这听起来很好，但不是真的。Google的创始人在早期是愿意出售的。他们只是想要比收购者愿意支付的更多的钱。&lt;/p&gt;&#xA;&lt;p&gt;Facebook也是如此。他们本来会卖掉的，但雅虎因为出价太少而搞砸了。&lt;/p&gt;&#xA;&lt;p&gt;给收购者的建议：当初创公司拒绝你时，考虑提高你的报价，因为他们想要的天价后来可能会显得很便宜。[1]&lt;/p&gt;&#xA;&lt;p&gt;从我到目前为止看到的证据来看，拒绝收购要约的初创公司通常最终会做得更好。不是总是如此，但通常会有更大的要约到来，甚至是IPO。&lt;/p&gt;&#xA;&lt;p&gt;当然，初创公司在拒绝收购要约时做得更好的原因不一定是所有这样的要约都低估了初创公司。更可能的原因是，那些有胆量拒绝大报价的创始人类型也往往非常成功。这种精神正是你在初创公司中想要的。&lt;/p&gt;&#xA;&lt;p&gt;虽然我确信拉里和谢尔盖现在确实想改变世界，但Google能够生存下来成为一家大型独立公司的原因与Facebook迄今为止保持独立的原因相同：收购者低估了它们。&lt;/p&gt;&#xA;&lt;p&gt;企业并购在这方面是一个奇怪的生意。他们总是错失最好的交易，因为拒绝合理的报价是你能发明的最可靠的测试，用来判断初创公司是否会做大。&lt;/p&gt;&#xA;&lt;h2 id=&#34;风险投资&#34;&gt;风险投资&lt;/h2&gt;&#xA;&lt;p&gt;那么为什么没有更多的Google呢？奇怪的是，这与Google和Facebook保持独立的原因相同：资金 guys 低估了最具创新性的初创公司。&lt;/p&gt;&#xA;&lt;p&gt;没有更多Google的原因不是投资者鼓励创新的初创公司卖掉，而是他们甚至不会资助它们。在我们做Y Combinator的3年里，我学到了很多关于风险投资的知识，因为我们经常不得不与他们密切合作。我学到的最令人惊讶的事情是他们有多么保守。风险投资公司展现了一个大胆鼓励创新的形象。实际上只有少数几家这样做，即使是它们，在现实中比从阅读它们的网站所能猜到的更保守。&lt;/p&gt;&#xA;&lt;p&gt;我过去常常把风险投资家想象成海盗式的：大胆但不择手段。更深入了解后，他们更像是官僚。他们比我过去认为的正直（至少好的那些是），但不太大胆。也许风险投资行业已经改变了。也许他们过去更大胆。但我怀疑是初创公司世界改变了，而不是他们。创办初创公司的低成本意味着平均的好赌注是风险更高的一个，但大多数现有的风险投资公司仍然像在1985年投资硬件初创公司那样运作。&lt;/p&gt;&#xA;&lt;p&gt;霍华德·艾肯说&amp;quot;不要担心人们偷你的想法。如果你的想法足够好，你将不得不把它们塞进人们的喉咙里。&amp;ldquo;当我试图说服风险投资家投资Y Combinator资助的初创公司时，我有类似的感觉。他们对真正新颖的想法感到恐惧，除非创始人足够好的销售员来弥补。&lt;/p&gt;&#xA;&lt;p&gt;但正是大胆的想法产生了最大的回报。任何真正好的新想法对大多数人来说似乎都很糟糕；否则早就有人已经在做了。然而大多数风险投资家是由共识驱动的，不仅在他们的公司内部，而且在风险投资社区内部。决定风险投资家对你初创公司感觉的最大因素是其他风险投资家对它的感觉。我怀疑他们是否意识到这一点，但这种算法保证了他们会错过所有最好的想法。越多的人必须喜欢一个新想法，你就失去越多的离群值。&lt;/p&gt;&#xA;&lt;p&gt;无论下一个Google是谁，他们现在可能正被告知风险投资家等他们有更多&amp;quot;牵引力&amp;quot;时再回来。&lt;/p&gt;&#xA;&lt;p&gt;为什么风险投资家如此保守？这可能是多种因素的结合。他们投资规模很大使他们保守。加上他们投资的是别人的钱，这使他们担心如果做有风险的事情并且失败了，他们会惹上麻烦。加上他们大多数是资金 guy 而不是技术 guy，所以他们不理解他们投资的初创公司做什么。&lt;/p&gt;&#xA;&lt;h2 id=&#34;接下来是什么&#34;&gt;接下来是什么&lt;/h2&gt;&#xA;&lt;p&gt;市场经济的令人兴奋之处在于愚蠢等于机会。在这种情况下也是如此。在初创公司投资中存在一个巨大的、未开发的机会。Y Combinator在最开始资助初创公司。风险投资家在它们已经开始成功时资助它们。但在这两者之间存在一个巨大的缺口。&lt;/p&gt;&#xA;&lt;p&gt;有些公司会给除了创始人之外什么都没有的初创公司2万美元，有些公司会给已经腾飞的初创公司2百万美元，但没有足够的投资者会给一个看起来非常有前途但仍然有一些事情要弄清楚的初创公司20万美元。这个领域主要由个人天使投资者占据——像安迪·贝托尔斯海姆这样的人，他在Google看起来有前途但仍然有一些事情要弄清楚时给了他们10万美元。我喜欢天使，但只是没有足够多的他们，投资对大多数人来说是兼职工作。&lt;/p&gt;&#xA;&lt;p&gt;然而，随着创办初创公司变得越来越便宜，这个稀少占据的领域变得越来越有价值。如今许多初创公司不想筹集数百万美元的A轮融资。他们不需要那么多钱，也不想要随之而来的麻烦。从Y Combinator出来的典型初创公司想要筹集25-50万美元。当他们去风险投资公司时，他们不得不要求更多，因为他们知道风险投资家对这样的小交易不感兴趣。&lt;/p&gt;&#xA;&lt;p&gt;风险投资家是资金经理。他们在寻找方法让大笔资金运作。但初创公司世界正在远离他们目前的模式。&lt;/p&gt;&#xA;&lt;p&gt;初创公司变得更便宜了。这意味着他们想要更少的钱，但也意味着有更多的他们。所以你仍然可以在大笔资金上获得大回报；你只需要更广泛地分散它。&lt;/p&gt;&#xA;&lt;p&gt;我曾试图向风险投资公司解释这一点。不要做一个200万美元的投资，做五个40万美元的投资。那意味着要坐太多的董事会吗？不要坐在他们的董事会。那意味着太多的尽职调查吗？做得更少。如果你在十分之一的估值投资，你只需要有十分之一的把握。&lt;/p&gt;&#xA;&lt;p&gt;这似乎很明显。但我向几家风险投资公司提议，他们拨出一些钱并指定一个合伙人做更多、更小的赌注，他们的反应就像我提议合伙人都戴鼻环一样。他们对他们标准的操作方式如此依赖是显著的。&lt;/p&gt;&#xA;&lt;p&gt;但这里有一个巨大的机会，不管怎样它都会被填补。要么风险投资公司会向下发展进入这个缺口，或者更可能的是，新的投资者会出现来填补它。当这种情况发生时将是好事，因为这些新投资者将被他们做出的投资结构迫使比现在的风险投资家大胆十倍。这将给我们带来更多的Google。至少，只要收购者仍然愚蠢。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 另一个建议：如果你想要获得所有价值，不要在购买后破坏初创公司。给创始人足够的自主权，让他们能够把收购发展成它本来会成为的样子。&lt;/p&gt;&#xA;&lt;p&gt;感谢萨姆·奥特曼、保罗·布赫特、大卫·霍尼克、杰西卡·利文斯顿、罗伯特·莫里斯和弗雷德·威尔逊阅读本文的草稿。&lt;/p&gt;</description>
    </item>
    <item>
      <title>为什么电视输了</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/convergence/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/convergence/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_en/convergence/&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/convergence.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/convergence.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/convergence.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;为什么电视输了&#34;&gt;为什么电视输了&lt;/h1&gt;&#xA;&lt;p&gt;2009年3月&lt;/p&gt;&#xA;&lt;p&gt;大约二十年前，人们注意到计算机和电视正在发生碰撞，并开始猜测它们融合时会产生什么。我们现在知道了答案：计算机。现在很清楚，即使使用&amp;quot;融合&amp;quot;这个词，我们也给了电视太多的信任。这与其说是融合，不如说是替代。人们可能仍然观看他们称之为&amp;quot;电视节目&amp;quot;的东西，但他们主要会在电脑上观看。&lt;/p&gt;&#xA;&lt;p&gt;是什么决定了计算机的胜利？四种力量，其中三种是可以预见的，一种则较难预见。&lt;/p&gt;&#xA;&lt;p&gt;一个可预见的胜利原因是互联网是一个开放平台。任何人都可以在上面构建任何他们想要的东西，市场选择胜者。因此，创新以黑客速度而非大公司速度发生。&lt;/p&gt;&#xA;&lt;p&gt;第二个是摩尔定律，它对互联网带宽发挥了通常的魔力。[1]&lt;/p&gt;&#xA;&lt;p&gt;计算机获胜的第三个原因是盗版。用户喜欢它不仅因为它是免费的，还因为它更方便。Bittorrent和YouTube已经训练了新一代观众，让他们知道观看节目的地方是在电脑屏幕上。[2]&lt;/p&gt;&#xA;&lt;p&gt;更令人惊讶的力量是一种特定类型的创新：社交应用。普通青少年孩子与朋友交谈的能力几乎是无限的。但他们不能一直与朋友在一起。我在高中的时候解决方案是电话。现在是社交网络、多人游戏和各种消息应用。接触它们所有的方式是通过计算机。[3]这意味着每个青少年孩子（a）想要一台连接互联网的计算机，（b）有动力学习如何使用它，（c）在它前面花费无数小时。&lt;/p&gt;&#xA;&lt;p&gt;这是最强大的力量。这就是让每个人都想要计算机的原因。技术迷们得到计算机是因为他们喜欢它们。然后游戏玩家们得到计算机来玩游戏。但让其他人都想要计算机的是与其他人联系：这就是让连奶奶和14岁女孩都想要计算机的原因。在几十年将静脉输液直接注入观众的过程中，娱乐行业的人们可以理解地将他们视为相当被动的。他们以为他们能够支配节目到达观众的方式。但他们低估了他们彼此联系的欲望的力量。&lt;/p&gt;&#xA;&lt;p&gt;Facebook杀死了电视。当然，这是极度简化的，但可能是你能用三个词得到的最接近真相的答案。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;电视网络似乎已经不情愿地看到事情的发展方向，并做出了回应，不情愿地将他们的内容放在网上。但他们仍在拖后腿。他们似乎仍然希望人们在电视上观看节目，就像把故事放在网上的报纸仍然似乎希望人们等到第二天早上阅读印刷在纸上的版本一样。他们都应该面对互联网是主要媒介的事实。&lt;/p&gt;&#xA;&lt;p&gt;如果他们早点这样做，他们会处于更有利的位置。当一个新的媒介出现，强大到足以让在位者感到紧张时，那么它可能强大到足以获胜，他们能做的最好的事情就是立即跳入。&lt;/p&gt;&#xA;&lt;p&gt;不管他们喜欢与否，重大的变化即将到来，因为互联网消解了广播媒体的两大基石：同步性和本地性。在互联网上，你不必向每个人发送相同的信号，也不必从本地源发送给他们。人们将在他们想要的时候观看他们想要的东西，并根据他们最强烈的共同兴趣进行分组。也许他们最强烈的共同兴趣将是他们的物理位置，但我猜不是。这意味着地方电视可能已经死了。它是旧技术施加的限制的产物。如果现在有人从头创建一个基于互联网的电视公司，他们可能有一些针对特定地区的节目的计划，但这不会是首要任务。&lt;/p&gt;&#xA;&lt;p&gt;同步性和本地性是联系在一起的。电视网络附属机构关心10点播放什么，因为这样可以给11点的本地新闻带来观众。然而，这种联系增加了更多的脆弱性而不是力量：人们不是在10点观看节目，因为他们想之后观看新闻。&lt;/p&gt;&#xA;&lt;p&gt;电视网络将对抗这些趋势，因为他们没有足够的灵活性来适应它们。他们受到地方附属机构的束缚，就像汽车公司受到经销商和工会的束缚一样。不可避免的是，运行网络的人将采取简单的路线，并试图让旧模式再运行几年，就像唱片公司所做的那样。&lt;/p&gt;&#xA;&lt;p&gt;《华尔街日报》最近的一篇文章描述了电视网络如何试图增加更多直播节目，部分原因是迫使观众同步观看电视，而不是在适合他们的时候观看录制的节目。他们不是提供观众想要的东西，而是试图强迫他们改变习惯以适应网络过时的商业模式。除非你有垄断或卡特尔来强制执行，否则这永远不会奏效，即使那样也只是暂时有效。&lt;/p&gt;&#xA;&lt;p&gt;网络喜欢直播节目的另一个原因是它们制作成本更低。在那里他们有正确的想法，但他们没有把它推到结论。直播内容可能比网络意识到的便宜得多，利用成本大幅下降的方法是增加数量。网络被看到这整个推理路线所阻止，因为他们仍然认为自己在广播业务中——向每个人发送一个信号。[4]&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;现在是创办任何与电视网络竞争的公司的好时机。这就是很多互联网初创公司在做的事情，尽管他们可能没有把这个作为明确的目标。人们每天只有这么多的休闲时间，而电视是以长时段为前提的（不像谷歌，以快速发送用户为荣），所以占用他们时间的任何东西都在与它竞争。但除了这样的间接竞争对手，我认为电视公司将面临越来越多的直接竞争对手。&lt;/p&gt;&#xA;&lt;p&gt;即使在有线电视中，长尾也被启动新频道必须跨越的门槛过早地截断了。在互联网上它会更长，并且在其中会有更多的流动性。在这个新世界中，现有的参与者将只拥有任何大公司在其市场中的优势。&lt;/p&gt;&#xA;&lt;p&gt;这将改变网络和节目制作人之间的权力平衡。网络曾经是守门人。他们分发你的作品，并在上面销售广告。现在制作节目的人可以自己分发。网络现在提供的主要价值是广告销售。这将使他们处于服务提供商而非出版商的位置。&lt;/p&gt;&#xA;&lt;p&gt;节目将发生更大的变化。在互联网上，没有理由保持他们当前的格式，甚至没有理由保持他们拥有单一格式的事实。确实，即将到来的更有趣的融合是在节目和游戏之间。但对于20年互联网上分发什么样的娱乐，我不敢做出任何预测，除了事情会变化很大。我们将得到最有想象力的人能创造出的任何东西。这就是互联网获胜的原因。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 感谢Trevor Blackwell提出这个观点。他补充说：&amp;ldquo;我记得在90年代初，电话公司高管在谈论融合时眼睛闪闪发光。他们认为大多数节目将按需提供，他们将实施它并赚很多钱。结果没有奏效。他们假设他们的本地网络基础设施对于视频点播至关重要，因为你不可能通过互联网从几个数据中心流式传输。当时（1992年）整个跨州互联网带宽都不足以支持一个视频流。但广域带宽比他们预期的增长更多，他们被iTunes和Hulu击败了。&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;[2] 版权所有者倾向于关注他们看到的盗版方面，即收入损失。因此他们认为推动用户这样做的是免费获得某些东西的愿望。但iTunes表明，如果你让事情变得容易，人们会为在线内容付费。盗版的一个重要因素只是它提供了更好的用户体验。&lt;/p&gt;&#xA;&lt;p&gt;[3] 或者实际上是一台计算机的手机。我没有对将取代电视的设备大小做出任何预测，只是它将有一个浏览器并通过互联网获取数据。&lt;/p&gt;&#xA;&lt;p&gt;[4] Emmett Shear写道：&amp;ldquo;我认为体育的长尾可能比其他类型内容的长尾更大。任何人都可以广播一场对约10,000人有趣的高中橄榄球比赛，即使制作质量不是很好。&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;感谢Sam Altman、Trevor Blackwell、Nancy Cook、Michael Seibel、Emmett Shear和Fred Wilson阅读本文的草稿。&lt;/p&gt;&#xA;&lt;h2 id=&#34;相关&#34;&gt;相关&lt;/h2&gt;&#xA;&lt;p&gt;日语翻译&lt;/p&gt;</description>
    </item>
    <item>
      <title>书呆子的复仇</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/icad/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/icad/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_en/icad/&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/icad.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/icad.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/icad.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;书呆子的复仇&#34;&gt;书呆子的复仇&lt;/h1&gt;&#xA;&lt;p&gt;想要创业？获得Y Combinator的投资。&lt;/p&gt;&#xA;&lt;p&gt;2002年5月&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;我们当时在追逐C++程序员。我们成功地将他们中的许多人拖到了Lisp的路上。&amp;rdquo;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Guy Steele，Java规范合著者&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;在软件行业中，一直存在着一场持续的斗争，一方是尖脑袋的学者，另一方是同样强大的力量——尖头发的老板。大家都知道尖头发的老板是谁，对吧？我认为技术界的大多数人不仅认识这个卡通人物，而且知道他们公司中这个人物的原型是谁。&lt;/p&gt;&#xA;&lt;p&gt;尖头发的老板奇迹般地结合了两个各自常见但很少同时出现的品质：(a)他对技术一无所知，(b)他对技术有非常强烈的看法。&lt;/p&gt;&#xA;&lt;p&gt;假设，例如，你需要编写一个软件。尖头发的老板对这个软件应该如何工作一无所知，也无法区分一种编程语言和另一种，但他知道你应该用什么语言来编写它。完全正确。他认为你应该用Java来编写。&lt;/p&gt;&#xA;&lt;p&gt;他为什么这么认为？让我们来看看尖头发的老板的大脑里面在想什么。他在想的大概是这样的。Java是一个标准。我知道它一定是标准，因为我总是在媒体上看到它。既然它是标准，我使用它就不会惹上麻烦。这也意味着总会有很多Java程序员，所以如果现在为我工作的程序员辞职了——为我工作的程序员总是神秘地辞职——我可以很容易地替换他们。&lt;/p&gt;&#xA;&lt;p&gt;嗯，这听起来并不那么不合理。但这一切都基于一个未言明的假设，而这个假设结果是错误的。尖头发的老板认为所有编程语言都差不多是等价的。如果这是真的，那他完全正确。如果所有语言都等价，当然，使用其他人都在使用的语言。&lt;/p&gt;&#xA;&lt;p&gt;但并非所有语言都是等价的，我想我甚至不需要深入它们之间的差异就能向你证明这一点。如果你在1992年问尖头发的老板软件应该用什么语言编写，他会像今天一样毫不犹豫地回答。软件应该用C++编写。但如果所有语言都等价，为什么尖头发的老板的意见会改变？事实上，Java的开发者为什么要费心创建一种新语言？&lt;/p&gt;&#xA;&lt;p&gt;据推测，如果你创建一种新语言，那是因为你认为它在某些方面比人们已有的语言更好。事实上，Gosling在第一份Java白皮书中明确表示，Java被设计用来解决C++的一些问题。所以事情就是这样：语言并不都是等价的。如果你顺着尖头发的老板的大脑思路追踪到Java，然后再回溯Java的历史到它的起源，你最终会得到一个与你开始时的假设相矛盾的想法。&lt;/p&gt;&#xA;&lt;p&gt;那么，谁是对的？James Gosling，还是尖头发的老板？毫不奇怪，Gosling是对的。某些语言对于某些问题来说比其他语言更好。你知道，这引发了一些有趣的问题。Java被设计为在特定问题上比C++更好。什么问题？什么时候Java更好，什么时候C++更好？是否存在某些情况下其他语言比两者都更好？&lt;/p&gt;&#xA;&lt;p&gt;一旦你开始考虑这个问题，你就打开了一个真正的潘多拉盒子。如果尖头发的老板不得不以全部复杂性来思考这个问题，他的大脑会爆炸。只要他认为所有语言都等价，他所要做的就是选择一个似乎最有势头的语言，既然这更多是时尚问题而不是技术问题，即使他也可能得到正确的答案。但如果语言各不相同，他突然必须同时解两个方程，试图在他一无所知的两件事之间找到最佳平衡：解决他需要解决的问题的二十种左右主要语言的相对适用性，以及为每种语言找到程序员、库等的可能性。如果门后是这样的东西，尖头发的老板不想打开它也就不足为奇了。&lt;/p&gt;&#xA;&lt;p&gt;认为所有编程语言都等价的缺点是这不是真的。但优点是它让你的生活简单得多。我认为这是这个想法如此广泛传播的主要原因。这是一个令人舒适的想法。&lt;/p&gt;&#xA;&lt;p&gt;我们知道Java一定相当不错，因为它是酷的、新的编程语言。或者真是如此吗？如果你从远处看编程语言的世界，看起来Java是最新的事物。（从足够远的地方看，你只能看到Sun支付的大型闪烁广告牌。）但如果你近距离观察这个世界，你会发现酷的程度是不同的。在黑客亚文化中，有一种叫做Perl的语言被认为比Java酷得多。例如，Slashdot就是用Perl生成的。我想你不会发现那些家伙使用Java Server Pages。但还有另一种更新的语言叫做Python，它的用户倾向于看不起Perl，还有更多的语言在等待。&lt;/p&gt;&#xA;&lt;p&gt;如果你按顺序看这些语言，Java、Perl、Python，你会注意到一个有趣的模式。至少，如果你是Lisp黑客，你会注意到这种模式。每一种都比前一种更像Lisp。Python甚至复制了许多Lisp黑客认为是错误的特性。你可以将简单的Lisp程序逐行翻译成Python。现在是2002年，编程语言几乎赶上了1958年。&lt;/p&gt;&#xA;&lt;h2 id=&#34;追上数学&#34;&gt;追上数学&lt;/h2&gt;&#xA;&lt;p&gt;我的意思是，Lisp是John McCarthy在1958年首次发现的，而流行的编程语言现在才赶上他当时发展的想法。&lt;/p&gt;&#xA;&lt;p&gt;现在，这怎么可能是真的？计算机技术不是变化很快的东西吗？我的意思是，在1958年，计算机是冰箱大小的庞然大物，处理能力相当于手表。怎么可能有那么古老的技术仍然相关，更不用说比最新的发展更优越？&lt;/p&gt;&#xA;&lt;p&gt;我来告诉你原因。这是因为Lisp并不是真正被设计为一种编程语言，至少不是我们今天意义上的编程语言。我们所说的编程语言是我们用来告诉计算机做什么的东西。McCarthy最终确实打算发展这种意义上的编程语言，但我们实际得到的Lisp是基于他作为理论练习所做的另一件事——努力定义一个比图灵机更方便的替代方案。正如McCarthy后来所说，&lt;/p&gt;&#xA;&lt;p&gt;展示Lisp比图灵机更整洁的另一种方法是编写一个通用的Lisp函数，并证明它比通用图灵机的描述更简洁、更易理解。这就是Lisp函数eval&amp;hellip;&amp;hellip;它计算Lisp表达式的值&amp;hellip;&amp;hellip;编写eval需要发明一种表示Lisp函数作为Lisp数据的符号，这种符号是为了论文的目的而设计的，并没有想到它会用来实际表达Lisp程序。&lt;/p&gt;&#xA;&lt;p&gt;接下来发生的事情是，在1958年末的某个时候，Steve Russell，McCarthy的一个研究生，看着这个eval的定义，意识到如果将它翻译成机器语言，结果将是一个Lisp解释器。&lt;/p&gt;&#xA;&lt;p&gt;这在当时是一个很大的惊喜。以下是McCarthy后来在采访中对此的评论：&lt;/p&gt;&#xA;&lt;p&gt;Steve Russell说，看，为什么我不来编程这个eval&amp;hellip;&amp;hellip;，我对他说，呵，呵，你把理论和实践混淆了，这个eval是为了阅读，不是为了计算的。但他还是继续做了。也就是说，他把我论文中的eval编译成[IBM] 704机器码，修复了一些错误，然后将其宣传为Lisp解释器，它确实是。在那时，Lisp基本上就有了今天的形式。&lt;/p&gt;&#xA;&lt;p&gt;所以，我想在几周内，McCarthy发现他的理论练习转变为实际的编程语言——而且是一种比他预期更强大的语言。&lt;/p&gt;&#xA;&lt;p&gt;所以，这个1950年代的语言没有过时的简短解释是它不是技术而是数学，而数学不会过时。将Lisp比较的正确对象不是1950年代的硬件，而是，比如说，快速排序算法，它发现于1960年，至今仍然是最快的通用排序算法。&lt;/p&gt;&#xA;&lt;p&gt;1950年代还有另一种语言幸存下来，Fortran，它代表了语言设计的相反方法。Lisp是一段意想不到地转变为编程语言的理论。Fortran是故意被开发为一种编程语言的，但我们现在认为是一种非常低级的语言。&lt;/p&gt;&#xA;&lt;p&gt;1956年开发的Fortran I语言与现在的Fortran是完全不同的动物。Fortran I基本上是带有数学的汇编语言。在某些方面它比最近的汇编语言功能更弱；例如，没有子程序，只有分支。现在的Fortran可以说更接近Lisp而不是Fortran I。&lt;/p&gt;&#xA;&lt;p&gt;Lisp和Fortran是两个独立进化树的树干，一个根植于数学，一个根植于机器架构。这两棵树从那时起一直在收敛。Lisp开始时很强大，在接下来的二十年里变得快速。所谓的主流语言开始时很快，在接下来的四十年里逐渐变得更强大，直到现在它们中最先进的相当接近Lisp。接近，但仍然缺少一些东西。&lt;/p&gt;&#xA;&lt;h2 id=&#34;使lisp不同的东西&#34;&gt;使Lisp不同的东西&lt;/h2&gt;&#xA;&lt;p&gt;当Lisp首次被开发时，它体现了九个新想法。其中一些我们现在认为是理所当然的，其他只在更先进的语言中看到，有两个仍然是Lisp独有的。这九个想法按主流采用的顺序排列，&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;条件语句&lt;/strong&gt;。条件语句是if-then-else结构。我们现在认为这是理所当然的，但Fortran I没有它们。它只有基于底层机器指令的条件goto。&lt;/p&gt;</description>
    </item>
    <item>
      <title>凯特在硅谷看到的</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/kate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/kate/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_en/kate/&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/kate.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/kate.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/kate.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;凯特在硅谷看到的&#34;&gt;凯特在硅谷看到的&lt;/h1&gt;&#xA;&lt;p&gt;2009年8月&lt;/p&gt;&#xA;&lt;p&gt;凯特·库尔托是设计Y Combinator办公室的建筑师。最近我们成功招募她在建筑项目不忙时帮助我们运营YC。虽然她从一开始就听说了很多关于YC的事情，但过去9个月是完全沉浸其中。&lt;/p&gt;&#xA;&lt;p&gt;我在创业世界待了这么久，以至于它对我来说似乎很正常，所以我很好奇听到什么最让她惊讶。这是她的清单：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;有多少创业公司失败。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;凯特原则上知道创业公司风险很大，但她惊讶地看到失败的威胁是多么持续——不仅对于小鱼，甚至对于那些创始人来YC晚餐演讲的著名创业公司也是如此。&lt;/p&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;创业公司的想法变化多大。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;像往常一样，到演示日时，大约一半的创业公司做的事情与他们开始时有显著不同。我们鼓励这样做。创办创业公司就像科学一样，你必须追随真理无论它导向哪里。在世界其他地方，人们不确定想要做什么不会开始事情，一旦开始，他们倾向于继续在初始路径上，即使它是错误的。&lt;/p&gt;&#xA;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;创办创业公司需要多么少的钱。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;在凯特的世界里，一切都是物质的和昂贵的。你几乎无法用创办创业公司的成本翻新一个浴室。&lt;/p&gt;&#xA;&lt;ol start=&#34;4&#34;&gt;&#xA;&lt;li&gt;创始人多么顽强。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;那是她的原话。我同意她，但在她提到这一点之前，我从未意识到这种品质在世界其他大多数地方多么不被欣赏。在大多数组织中，称某人为顽强不会是赞美。&lt;/p&gt;&#xA;&lt;p&gt;这意味着什么，确切地说？它基本上是好斗的小形式。一个顽强的人设法同时既有威胁性又不失尊严。在我看来，这正是一个人在任何类型的工作中想要成为的样子。如果你没有威胁性，你可能没有在做任何新事情，而尊严只是一种装饰。&lt;/p&gt;&#xA;&lt;ol start=&#34;5&#34;&gt;&#xA;&lt;li&gt;硅谷多么技术饱和。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&amp;ldquo;似乎这里的每个人都在这个行业。&amp;ldquo;这不完全是事实，但硅谷和其他地方有质的区别。你倾向于降低声音，因为旁边桌子的人很可能认识你正在谈论的一些人。我在波士顿从未有过这种感觉。好消息是，旁边桌子的人也有可能在某种程度上帮助你。&lt;/p&gt;&#xA;&lt;ol start=&#34;6&#34;&gt;&#xA;&lt;li&gt;YC的演讲者在建议上如此一致。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;实际上，我也注意到了这一点。我总是担心演讲者会通过告诉我们创业公司的事情来让我们处于尴尬位置，但这很少发生。&lt;/p&gt;&#xA;&lt;p&gt;当我问她记得演讲者总是说的具体事情时，她提到：成功的方法是快速推出一些东西，倾听用户，然后迭代；创业公司需要韧性，因为它们总是情绪过山车；大多数风险投资家是羊。&lt;/p&gt;&#xA;&lt;p&gt;我对演讲者多么一贯地倡导快速推出和迭代印象深刻。这是10年前的逆向建议，但现在显然是既定做法。&lt;/p&gt;&#xA;&lt;ol start=&#34;7&#34;&gt;&#xA;&lt;li&gt;成功的创业公司创始人多么随意。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;硅谷大多数著名创始人是你在街上会忽略的人。不仅仅是他们不打扮。他们也没有投射任何权力光环。&amp;ldquo;他们不试图给任何人留下印象。&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;有趣的是，虽然凯特说她永远无法挑选出成功的创始人，但她能认出风险投资家，既通过他们的穿着方式，也通过他们的举止。&lt;/p&gt;&#xA;&lt;ol start=&#34;8&#34;&gt;&#xA;&lt;li&gt;对创始人来说有可以询问建议的人多么重要。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;（我发誓我没有提示这一点。）没有建议&amp;quot;他们会有点迷失。&amp;ldquo;幸运的是，有很多人帮助他们。YC内有帮助其他YC资助创业公司的强大传统。但我们没有发明这个想法：它只是现有硅谷文化的稍微浓缩形式。&lt;/p&gt;&#xA;&lt;ol start=&#34;9&#34;&gt;&#xA;&lt;li&gt;创业公司多么孤独的任务。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;建筑师不断地与他人面对面互动，而做技术创业公司，至少，需要长时间不间断的工作时间。&amp;ldquo;你可以在盒子里做。&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;通过倒置这个清单，我们可以得到&amp;quot;正常&amp;quot;世界的肖像。它充满了人们彼此交谈很多，他们缓慢但和谐地在保守的、昂贵的项目上工作，这些项目的目的地预先决定，他们仔细调整自己的方式以反映他们在等级制度中的位置。&lt;/p&gt;&#xA;&lt;p&gt;这也是对过去的相当准确的描述。所以创业文化可能不仅仅以你期望任何亚文化不同的方式不同，而是一个领先指标。&lt;/p&gt;&#xA;&lt;p&gt;日语翻译&lt;/p&gt;</description>
    </item>
    <item>
      <title>创业想法</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/ideas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/ideas/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_en/ideas/&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/ideas.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/ideas.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/ideas.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;创业想法&#34;&gt;创业想法&lt;/h1&gt;&#xA;&lt;p&gt;2005年10月&lt;/p&gt;&#xA;&lt;p&gt;Y Combinator的创始合伙人之一保罗·格雷厄姆撰写的关于如何为创业公司产生好想法的指南。&lt;/p&gt;&#xA;&lt;p&gt;想要创业？获得Y Combinator的投资。&lt;/p&gt;&#xA;&lt;p&gt;对于想要创办创业公司的人来说，最重要的问题之一是如何获得想法。Y Combinator申请表格中问的第一个问题是&amp;quot;你在做什么？&amp;ldquo;这实际上是问：你有什么想法？&lt;/p&gt;&#xA;&lt;p&gt;令人惊讶的是，申请表中的问题不是&amp;quot;你有什么想法？&amp;ldquo;而是&amp;quot;你在做什么？&amp;ldquo;这是因为我们意识到，大多数申请者实际上并没有想法。他们只是想创办创业公司。这就像想当作家但没有想到要写什么。&lt;/p&gt;&#xA;&lt;p&gt;但是没有想法，你如何创办创业公司？你可能会认为这是不可能的，但事实并非如此。我们资助的大多数初创公司在申请时并没有完全成形的想法。他们只是有一些想法，这些想法在Y Combinator的三个月中逐渐成形。&lt;/p&gt;&#xA;&lt;p&gt;这怎么可能？因为好想法不像大多数人认为的那样来自灵光一现。好想法来自于对问题的观察和解决。&lt;/p&gt;&#xA;&lt;h2 id=&#34;如何获得创业想法&#34;&gt;如何获得创业想法&lt;/h2&gt;&#xA;&lt;p&gt;创业想法不是凭空产生的。它们来自于解决你自己的问题。最好的创业想法是解决你自己遇到的问题。&lt;/p&gt;&#xA;&lt;p&gt;如果你和其他程序员一样，你每天都会遇到一些烦人的问题。大多数时候，你只是容忍它们。但是如果你开始把它们记下来，你会发现它们实际上是创业想法的金矿。&lt;/p&gt;&#xA;&lt;p&gt;当你解决自己的问题时，你就有了优势。你确切地知道问题是什么，因为你亲身经历过。你也知道解决方案是否有效，因为你就是用户。&lt;/p&gt;&#xA;&lt;h2 id=&#34;创业想法的特征&#34;&gt;创业想法的特征&lt;/h2&gt;&#xA;&lt;p&gt;好的创业想法通常具有以下特征：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;它们解决了一个真实的问题&lt;/strong&gt;：不是虚构的问题，而是人们真正遇到的问题。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;它们看起来不像好主意&lt;/strong&gt;：最好的创业想法通常看起来很愚蠢。如果它们看起来像好主意，可能已经有人在做它们了。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;它们是利基市场&lt;/strong&gt;：不要试图为所有人构建产品。从一个小的、特定的市场开始。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;它们可以从小开始&lt;/strong&gt;：你不需要在第一天就构建一个庞大的系统。从最小可行产品开始。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;它们具有可扩展性&lt;/strong&gt;：虽然它们从小开始，但它们有潜力变得很大。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;何时寻找想法&#34;&gt;何时寻找想法&lt;/h2&gt;&#xA;&lt;p&gt;很多人犯的错误是试图坐在那里产生想法。这很少有效。相反，你应该过你的生活，但保持敏锐的观察力。&lt;/p&gt;&#xA;&lt;p&gt;当你注意到有什么事情让你感到沮丧或烦恼时，把它记下来。当你发现自己在思考&amp;quot;应该有更好的方法来做这件事&amp;quot;时，把它写下来。&lt;/p&gt;&#xA;&lt;p&gt;想法往往在你忙于其他事情时出现。保持一个想法列表，定期回顾它。&lt;/p&gt;&#xA;&lt;h2 id=&#34;如何测试想法&#34;&gt;如何测试想法&lt;/h2&gt;&#xA;&lt;p&gt;一旦你有了一个想法，如何测试它是否好？以下是一些方法：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;构建它&lt;/strong&gt;：最好的测试是实际构建它并看看人们是否使用它。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;谈论它&lt;/strong&gt;：与他人讨论你的想法。但不要过度依赖他们的意见。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;研究竞争对手&lt;/strong&gt;：看看是否有人在解决类似的问题。他们的方法如何？&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;问自己一些关键问题&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;这个问题有多普遍？&lt;/li&gt;&#xA;&lt;li&gt;人们愿意为解决方案付钱吗？&lt;/li&gt;&#xA;&lt;li&gt;市场有多大？&lt;/li&gt;&#xA;&lt;li&gt;你能否在竞争对手之前进入市场？&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;常见错误&#34;&gt;常见错误&lt;/h2&gt;&#xA;&lt;p&gt;在寻找创业想法时，人们经常犯以下错误：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;试图追随潮流&lt;/strong&gt;：不要试图追逐最新的热潮。解决真实的问题。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;构建你自己的工具&lt;/strong&gt;：不要构建只有你想使用的东西。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;忽视小问题&lt;/strong&gt;：小问题可能看起来不重要，但它们往往是最好的起点。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;过早放弃&lt;/strong&gt;：好想法需要时间来发展。不要期望立即成功。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;结论&#34;&gt;结论&lt;/h2&gt;&#xA;&lt;p&gt;创业想法不是凭空产生的。它们来自于解决真实的问题。通过保持敏锐的观察力并解决你自己的问题，你可以发现伟大的创业机会。&lt;/p&gt;&#xA;&lt;p&gt;记住，最好的想法往往看起来很愚蠢。如果它们看起来像好主意，可能已经有人在做它们了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>创造新事物的六个原则</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/newthings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/newthings/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_en/newthings/&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/newthings.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/newthings.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/newthings.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;创造新事物的六个原则&#34;&gt;创造新事物的六个原则&lt;/h1&gt;&#xA;&lt;p&gt;2008年2月&lt;/p&gt;&#xA;&lt;p&gt;Arc 发布引发的激烈反应有一个意想不到的后果：它让我意识到我有一种设计哲学。那些更有条理的批评者主要抱怨的是 Arc 看起来太脆弱了。经过多年的工作，我所能展示的只有几千行宏？为什么我没有从事更实质性的问题？&lt;/p&gt;&#xA;&lt;p&gt;当我思考这些评论时，突然意识到它们看起来多么熟悉。这正是人们一开始对 Viaweb、Y Combinator 和我大多数文章所说的那种话。&lt;/p&gt;&#xA;&lt;p&gt;当我们推出 Viaweb 时，在风险投资家和电子商务&amp;quot;专家&amp;quot;看来这似乎很可笑。我们只是公寓里的几个人，这在1995年并不像现在那样酷。而我们所构建的东西，在他们看来，甚至不是软件。对他们来说，软件等于大型的 Windows 应用程序。由于 Viaweb 是他们见到的第一个基于网络的应用程序，它似乎仅仅是一个网站。当他们发现 Viaweb 不处理信用卡交易时（我们第一年确实没有处理），他们更加轻视。交易处理在他们看来就是电子商务的全部。这听起来严肃且困难。&lt;/p&gt;&#xA;&lt;p&gt;然而，神秘的是，Viaweb 最终碾压了所有竞争对手。&lt;/p&gt;&#xA;&lt;p&gt;对 Y Combinator 的最初反应几乎完全相同。它看起来轻得可笑。创业融资意味着 A 轮融资：在数月的严肃、商业化的会议后，给予少数由有资历的人创立的初创公司数百万美元，条件在一英尺厚的文件中描述。Y Combinator 似乎微不足道。现在说 Y Combinator 是否会像 Viaweb 那样成功还为时过早，但从模仿的数量来看，很多人似乎认为我们抓住了重点。&lt;/p&gt;&#xA;&lt;p&gt;我无法衡量我的文章是否成功，除了页面浏览量，但对它们的反应至少与我开始时不同。起初，Slashdot 上的巨魔的默认反应是（翻译成有条理的话）：&amp;ldquo;这家伙是谁，他有什么权威写这些话题？我还没读过这篇文章，但这么短、以如此非正式风格写的东西，在相关学科的专家已经写了很多厚书的情况下，不可能对某个话题有任何有用的见解。&amp;ldquo;现在在新一代网站上有新一代的巨魔，但他们至少已经开始省略最初的&amp;quot;这家伙是谁？&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;现在人们对 Arc 说着与一开始对 Viaweb、Y Combinator 和我大多数文章相同的话。为什么会有这种模式？答案，我意识到，是我对这四者的操作方式都是相同的。&lt;/p&gt;&#xA;&lt;p&gt;这就是：我喜欢找到（a）简单的解决方案（b）来解决被忽视的问题（c）这些问题确实需要解决，并且（d）尽可能非正式地交付它们，（e）从一个非常粗糙的第1版开始，然后（f）快速迭代。&lt;/p&gt;&#xA;&lt;p&gt;当我第一次明确列出这些原则时，我注意到一些引人注目的事情：这几乎是产生轻蔑初始反应的配方。虽然简单的解决方案更好，但它们看起来不像复杂的解决方案那样令人印象深刻。被忽视的问题按定义就是大多数人认为不重要的问题。非正式地交付解决方案意味着人们不能通过呈现方式来判断某些东西，而必须实际理解它，这需要更多工作。而从一个粗糙的第1版开始意味着你的初始努力总是小而不完整的。&lt;/p&gt;&#xA;&lt;p&gt;我当然注意到，人们似乎从来没有在第一时间掌握新想法。我以为这只是因为大多数人都很愚蠢。现在我看到了更多的原因。像一个逆向投资基金，遵循这种策略的人几乎总是在做普通人看来错误的事情。&lt;/p&gt;&#xA;&lt;p&gt;与逆向投资策略一样，这正是重点。这种技术是成功的（长期来看），因为它给了你所有其他人为了显得合法而放弃的优势。如果你处理被忽视的问题，你更有可能发现新事物，因为你的竞争更少。如果你非正式地交付解决方案，你（a）节省了所有本要花费让它们看起来令人印象深刻的努力，（b）避免了欺骗自己以及观众的危险。如果你发布一个粗糙的第1版然后迭代，你的解决方案可以从自然的想象力中受益，正如费曼指出的，这比你自己的更强大。&lt;/p&gt;</description>
    </item>
    <item>
      <title>商业可以从开源中学到什么</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/opensource/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/opensource/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_en/opensource/&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/opensource.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/opensource.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/opensource.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;商业可以从开源中学到什么&#34;&gt;商业可以从开源中学到什么&lt;/h1&gt;&#xA;&lt;p&gt;2005年8月&lt;/p&gt;&#xA;&lt;p&gt;（本文源自2005年Oscon大会的演讲。）&lt;/p&gt;&#xA;&lt;p&gt;最近，公司对开源的关注越来越多。十年前，微软似乎真的有可能将其垄断扩展到服务器领域。现在可以肯定地说，开源已经阻止了这种情况的发生。最近的一项调查发现，52%的公司正在用Linux服务器替换Windows服务器。[1]&lt;/p&gt;&#xA;&lt;p&gt;我认为，更重要的是这52%是哪些公司。在这一点上，任何提议在服务器上运行Windows的人都应该准备好解释他们对服务器的了解比Google、Yahoo和Amazon多什么。&lt;/p&gt;&#xA;&lt;p&gt;但商业可以从开源中学到的最重要的东西不是关于Linux或Firefox，而是关于产生它们的力量。最终，这些力量将影响的远不止你使用什么软件。&lt;/p&gt;&#xA;&lt;p&gt;我们或许可以通过开源和博客的三角定位来把握这些潜在力量。你可能已经注意到，它们有很多共同之处。&lt;/p&gt;&#xA;&lt;p&gt;像开源一样，博客是人们自己做、免费做、因为他们喜欢而做的事情。像开源黑客一样，博客作者与为钱工作的人竞争，而且经常获胜。确保质量的方法也是一样的：达尔文式的。公司通过防止员工搞砸的规则来确保质量。但当受众可以相互交流时，你就不需要那种规则了。人们只是生产他们想要的任何东西；好的东西传播开来，坏的则被忽视。在这两种情况下，受众的反馈都改进了最好的作品。&lt;/p&gt;&#xA;&lt;p&gt;博客和开源的另一个共同点是Web。人们总是愿意免费做伟大的工作，但在Web之前，接触受众或在项目上合作更加困难。&lt;/p&gt;&#xA;&lt;h2 id=&#34;业余爱好者&#34;&gt;业余爱好者&lt;/h2&gt;&#xA;&lt;p&gt;我认为商业必须学习的最重要新原则是，人们对自己喜欢的东西会工作得更努力。嗯，这对任何人来说都不是新闻。那么我怎么能说商业必须学习它呢？当我说商业不知道这一点时，我的意思是商业结构没有反映这一点。&lt;/p&gt;&#xA;&lt;p&gt;商业仍然反映了一个更古老的模式，以法语工作的词travailleur为例。它有一个英语表亲travail，它的意思是折磨。[2]&lt;/p&gt;&#xA;&lt;p&gt;然而，事实证明这不是关于工作的最后定论。随着社会变得越来越富裕，他们学到的一些关于工作的事情很像他们学到的一些关于饮食的事情。我们现在知道，最健康的饮食是我们的农民祖先因为贫穷而被迫吃的饮食。像丰富的食物一样，只有当你得不到足够的懒惰时，它才似乎令人向往。我认为我们被设计来工作，就像我们被设计吃一定量的纤维一样，如果我们不这样做，我们会感到不舒服。&lt;/p&gt;&#xA;&lt;p&gt;为爱而工作的人有一个名字：业余爱好者。这个词现在有如此坏的内涵，以至于我们忘记了它的词源，尽管它就在我们眼前。&amp;ldquo;Amateur&amp;quot;最初是一个相当恭维的词。但在二十世纪，要成为专业人士，而业余爱好者，根据定义，不是专业人士。&lt;/p&gt;&#xA;&lt;p&gt;这就是为什么商业界对开源的一个教训如此惊讶：为爱而工作的人经常超过为钱而工作的人。用户从Explorer切换到Firefox不是因为想要修改源代码。他们切换是因为它是更好的浏览器。&lt;/p&gt;&#xA;&lt;p&gt;不是微软不努力。他们知道控制浏览器是保持垄断的关键之一。他们面临的问题与他们在操作系统领域面临的问题相同：他们无法支付足够的钱让人们建造比一群有灵感的黑客免费建造的更好的东西。&lt;/p&gt;&#xA;&lt;p&gt;我怀疑专业化一直被高估了——不仅是从为钱工作的字面意义上，还包括形式和超然等内涵。不可思议的是，比如在1970年，我认为专业化主要是一种时尚，是由二十世纪存在的条件驱动的。&lt;/p&gt;&#xA;&lt;p&gt;其中最强大的是&amp;quot;渠道&amp;quot;的存在。引人注目的是，同样的术语用于产品和信息：有分销渠道，以及电视和广播频道。&lt;/p&gt;&#xA;&lt;p&gt;正是这种渠道的狭窄性使专业人士似乎比业余爱好者优越得多。例如，专业记者的工作职位很少，所以竞争确保了普通记者都相当不错。而任何人都可以在酒吧里表达对当前事件的看法。因此，在酒吧里表达意见的普通人与撰写这个主题的记者相比听起来像个白痴。&lt;/p&gt;&#xA;&lt;p&gt;在Web上，发布你想法的门槛甚至更低。你不需要买饮料，他们甚至让孩子进入。数百万人在线发布，他们写作的平均水平，正如你可能预期的，不是很好。这导致媒体中的一些人得出结论，博客不构成太大威胁——博客只是一种时尚。&lt;/p&gt;&#xA;&lt;p&gt;实际上，时尚的是&amp;quot;博客&amp;quot;这个词，至少是印刷媒体现在使用它的方式。他们所说的&amp;quot;博主&amp;quot;不是以网络日志格式发布的人，而是在线发布的任何人。随着Web成为默认的发布媒介，这将变成一个问题。所以我想为在线发布的人建议一个替代词。怎么样用&amp;quot;作家&amp;rdquo;？&lt;/p&gt;&#xA;&lt;p&gt;那些因为在线写作的平均质量低而忽视它的印刷媒体人士忽略了一个重要观点：没有人读普通的博客。在渠道的旧世界里，谈论平均质量是有意义的，因为不管你喜欢与否，你得到的就是那个。但现在你可以阅读任何你想要的作家。所以在线写作的平均质量不是印刷媒体竞争的对象。他们竞争的是在线最好的写作。而且，像微软一样，他们正在输。&lt;/p&gt;&#xA;&lt;p&gt;我从自己作为读者的经历知道这一点。虽然大多数印刷出版物都在线，但我可能在个人网站上读两三篇文章，才会在报纸或杂志的网站上读一篇。&lt;/p&gt;&#xA;&lt;p&gt;当我读，比如说，《纽约时报》的故事时，我从不通过《纽约时报》首页到达它们。我大多通过聚合器如Google News、Slashdot或Delicious找到它们。聚合器显示了你可以比渠道做得好多少。《纽约时报》首页是为《纽约时报》工作的人写的文章列表。Delicious是有趣的文章列表。只有现在你可以并排看到两者，你才注意到重叠是多么少。&lt;/p&gt;&#xA;&lt;p&gt;印刷媒体中的大多数文章都很无聊。例如，总统注意到大多数选民现在认为入侵伊拉克是个错误，所以他向全国发表演讲以争取支持。那有什么咬人的呢？我没有听演讲，但我可能可以准确告诉你他说了什么。像这样的演讲，从最字面的意义上说，不是新闻：里面没有什么新东西。[3]&lt;/p&gt;&#xA;&lt;p&gt;在大多数关于出错的&amp;quot;新闻&amp;quot;中，除了名字和地点，也没有什么新东西。一个孩子被绑架；有龙卷风；渡轮沉没；有人被鲨鱼咬伤；小型飞机坠毁。你从这些故事中学到了什么关于世界的事情？绝对没有。它们是离群的数据点；使它们引人入胜的东西也使它们变得无关紧要。&lt;/p&gt;&#xA;&lt;p&gt;就像在软件中一样，当专业人士生产这样的垃圾时，如果业余爱好者能做得更好，也就不足为奇了。成也渠道，败也渠道：如果你依赖寡头垄断，你会陷入难以克服的坏习惯，当你突然遇到竞争时。[4]&lt;/p&gt;&#xA;&lt;h2 id=&#34;工作场所&#34;&gt;工作场所&lt;/h2&gt;&#xA;&lt;p&gt;博客和开源软件的另一个共同点是它们通常是在家工作的人制作的。这可能看起来并不令人惊讶。但应该是。这相当于一架自制飞机击落F-18的建筑上的等价物。公司花费数百万建造办公楼，只为一个目的：作为工作场所。然而，在自己家里工作的人，他们的家甚至不是设计为工作场所的，最终却更有生产力。&lt;/p&gt;&#xA;&lt;p&gt;这证明了许多人怀疑的事情。普通办公室是完成工作的糟糕地方。使办公室变坏的很多东西恰恰是我们与专业化相关的品质。办公室的无菌性应该是为了暗示效率。但暗示效率和实际上有效率是不同的事情。&lt;/p&gt;&#xA;&lt;p&gt;普通工作场所的氛围对生产力来说就像画在汽车侧面的火焰对速度一样。而且不仅仅是办公室看起来很 bleak。人们的行为方式也同样糟糕。&lt;/p&gt;&#xA;&lt;p&gt;在初创公司中情况不同。初创公司通常从公寓开始。他们没有匹配的米色小隔间，而是有各种他们买来的二手家具。他们工作时间不规律，穿着最随意的衣服。他们看任何他们想在线看的东西，而不担心是否&amp;quot;工作安全&amp;quot;。办公室愉快、平淡的语言被邪恶的幽默所取代。你知道吗？公司在这个阶段可能是有史以来最有生产力的。&lt;/p&gt;&#xA;&lt;p&gt;也许这不是巧合。也许专业化的某些方面实际上是一个净损失。&lt;/p&gt;&#xA;&lt;p&gt;对我来说，传统办公室最令人沮丧的方面是你应该在特定时间在那里。公司里通常有几个人真的必须这样，但大多数员工工作时间固定是因为公司无法衡量他们的生产力。&lt;/p&gt;&#xA;&lt;p&gt;办公时间背后的基本想法是，如果你不能让人们工作，你至少可以防止他们玩乐。如果员工每天必须在建筑物里待一定数量的小时，并且在那里被禁止做非工作的事情，那么他们一定是在工作。理论上。在实践中，他们花费大量时间在无人地带，在那里他们既不工作也不玩乐。&lt;/p&gt;&#xA;&lt;p&gt;如果你能衡量人们做了多少工作，许多公司不需要任何固定的工作日。你可以说：这是你必须做的。无论何时何地，只要你喜欢就做。如果你的工作需要与公司里的其他人交谈，那么你可能需要在这里一定时间。否则我们不关心。&lt;/p&gt;&#xA;&lt;p&gt;这可能看起来乌托邦，但这就是我们告诉来为我们公司工作的人的话。没有固定的办公时间。我从不早于上午11点出现。但我们说这个不是为了仁慈。我们说：如果你在这里工作，我们期望你完成很多事情。不要试图仅仅通过多在这里来欺骗我们。&lt;/p&gt;&#xA;&lt;p&gt;面子时间模式的问题不仅令人沮丧，而且假装工作的人打断了实际工作的人。我确信面子时间模式是大型组织有这么多会议的主要原因。人均而言，大型组织完成的很少。然而所有这些人每天必须在现场至少八小时。当这么多时间进入一端而如此少的成就从另一端出来时，总会有所让步。而会议是填补松懈的主要机制。&lt;/p&gt;&#xA;&lt;p&gt;我曾经做了一份朝九晚五的常规工作，我记得很清楚会议期间 strange, cozy的感觉。因为新奇，我很清楚地意识到我正在为编程获得报酬。这似乎令人惊讶，好像我桌上有一台机器，无论我做什么，每两分钟吐出一美元纸币。即使我在浴室里！但因为想象中的机器一直在运行，我觉得我应该总是在工作。所以会议感觉令人愉快地放松。它们算作工作，就像编程一样，但它们容易得多。你只需要坐着看起来注意力集中。&lt;/p&gt;&#xA;&lt;p&gt;会议就像有网络效应的鸦片。电子邮件在较小程度上也是如此。除了时间的直接成本外，还有碎片化的成本——把人们的一天分解成太小而无法利用的碎片。&lt;/p&gt;&#xA;&lt;p&gt;你可以通过突然移除某些东西来看你对它有多依赖。所以对于大公司，我提议以下实验。留出一天禁止会议——每个人都必须整天坐在办公桌前，在没有中断的情况下工作，做他们可以在不与任何人交谈的情况下做的事情。大多数工作需要一定量的沟通，但我确信许多员工可以找到八小时的自己可以做的事情。你可以称之为&amp;quot;工作日&amp;quot;。&lt;/p&gt;&#xA;&lt;p&gt;假装工作的另一个问题是它通常看起来比真实工作更好。当我写作或编程时，我花在思考上的时间和实际打字的时间一样多。一半的时间我坐着喝茶，或在附近散步。这是一个关键阶段——这是想法来源的地方——然而在大多数办公室里，我会感到内疚，因为其他人看起来都很忙。&lt;/p&gt;</description>
    </item>
    <item>
      <title>天才的公交车票理论</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/genius/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/genius/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_en/genius/&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/genius.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/genius.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/genius.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;天才的公交车票理论&#34;&gt;天才的公交车票理论&lt;/h1&gt;&#xA;&lt;p&gt;2019年11月&lt;/p&gt;&#xA;&lt;p&gt;每个人都知道，要做伟大的工作，你需要天赋和决心。但还有一个不太为人理解的第三种成分：对特定话题的痴迷兴趣。&lt;/p&gt;&#xA;&lt;p&gt;为了解释这一点，我需要冒犯某群人的声誉，我选择公交车票收藏者。有人收集旧公交车票。像许多收藏家一样，他们对所收集物品的细节有着痴迷的兴趣。他们能够记住不同类型公交车票之间的区别，这对我们其他人来说很难记住。因为我们不够在乎。花这么多时间思考旧公交车票有什么意义？&lt;/p&gt;&#xA;&lt;p&gt;这引出了这种痴迷的第二特征：没有意义。公交车票收藏者的爱是无私的。他们这样做不是为了给我们留下印象，也不是为了让自己富有，而是为了它本身。&lt;/p&gt;&#xA;&lt;p&gt;当你观察那些做过伟大工作的人的生活时，你会看到一个一致的模式。他们往往从对某个东西的公交车票收藏者式的痴迷开始，这对他们同时代的大多数人来说似乎毫无意义。达尔文关于贝格尔号航行的书籍最显著的特征之一是他对自然史的兴趣深度。他的好奇心似乎无穷无尽。拉马努金也是如此，他一小时一小时地坐在石板上计算级数会发生什么。&lt;/p&gt;&#xA;&lt;p&gt;认为他们是在为后来的发现&amp;quot;奠定基础&amp;quot;是错误的。这个隐喻中有太多的意图。像公交车票收藏者一样，他们这样做是因为他们喜欢。&lt;/p&gt;&#xA;&lt;p&gt;但拉马努金和公交车票收藏者有区别。级数很重要，公交车票不重要。&lt;/p&gt;&#xA;&lt;p&gt;如果我用一句话概括天才的秘诀，可能就是这样：对重要的事情有无私的痴迷。&lt;/p&gt;&#xA;&lt;p&gt;我不是忘记了其他两种成分吗？比你可能想的少。对某个话题的痴迷兴趣既是能力的代理，也是决心的替代品。除非你有足够的数学才能，否则你不会觉得级数有趣。当你对某事痴迷时，你不需要那么多决心：当好奇心拉着你时，你不需要那么努力地推动自己。&lt;/p&gt;&#xA;&lt;p&gt;痴迷兴趣甚至会给你带来好运，在某种程度上任何事情都可以。正如巴斯德所说，机会眷顾有准备的头脑，如果说痴迷的头脑有一个特点的话，那就是它是有准备的。&lt;/p&gt;&#xA;&lt;p&gt;这种痴迷的无私性是其最重要的特征。不仅因为它是真诚的过滤器，而且因为它帮助你发现新想法。&lt;/p&gt;&#xA;&lt;p&gt;导致新想法的路径往往看起来没有希望。如果它们看起来有希望，其他人早就已经探索过了。那些做伟大工作的人如何发现这些被他人忽视的路径？流行的说法是他们只是有更好的视野：因为他们如此有才华，他们看到别人错过的路径。但如果你观察伟大发现是如何做出的，事情并非如此。达尔文并不比其他人更关注个别物种，因为他看到这会导致伟大的发现，而他们没有。他只是对这类事情真的、真的感兴趣。&lt;/p&gt;&#xA;&lt;p&gt;达尔文无法关闭这种兴趣。拉马努金也是如此。他们没有发现那些隐藏的路径是因为它们看起来有希望，而是因为他们情不自禁。正是这让他们能够遵循那些仅仅有野心的人会忽视的路径。&lt;/p&gt;&#xA;&lt;p&gt;什么理性的人会决定写伟大小说的方式是先花几年创造一个虚构的精灵语，像托尔金那样，或者访问英国西南部的每个家庭，像特罗洛普那样？没有人，包括托尔金和特罗洛普。&lt;/p&gt;&#xA;&lt;p&gt;公交车票理论类似于卡莱尔对天才的著名定义：承受痛苦的无限能力。但有两个区别。公交车票理论明确指出，这种无限承受痛苦能力的来源不是无限的勤奋，正如卡莱尔似乎意味的那样，而是收藏家拥有的那种无限兴趣。它还添加了一个重要的限定：对重要事情承受痛苦的无限能力。&lt;/p&gt;&#xA;&lt;p&gt;那么什么重要？你永远无法确定。正因为没有人能预先知道哪些路径有希望，你才能通过做你感兴趣的工作来发现新想法。&lt;/p&gt;&#xA;&lt;p&gt;但你可以使用一些启发式方法来猜测某种痴迷是否可能是重要的。例如，如果你在创造东西，而不仅仅是消费别人创造的东西，它就更有希望。如果你感兴趣的东西很困难，特别是如果它对其他人来说比对你更困难，那就更有希望。而有才华的人的痴迷更可能有希望。当有才华的人对随机事情感兴趣时，它们并不是真正随机的。&lt;/p&gt;&#xA;&lt;p&gt;但你永远无法确定。事实上，这里有一个有趣的想法，如果它是真的，也相当令人不安：可能要做伟大的工作，你还必须浪费大量时间。&lt;/p&gt;&#xA;&lt;p&gt;在许多不同领域，回报与风险成正比。如果这个规则在这里成立，那么找到导致真正伟大工作的路径的方法就是愿意在那些结果证明完全没有希望的事情上花费大量精力。&lt;/p&gt;&#xA;&lt;p&gt;我不确定这是否是真的。一方面，只要你努力做有趣的事情，似乎很难浪费时间。你所做的很多事情最终都是有用的。但另一方面，风险与回报关系的规则如此强大，以至于它似乎在风险发生的任何地方都成立。至少牛顿的案例表明，风险/回报规则在这里成立。他以一个特定的痴迷而闻名，这个痴迷结果证明是前所未有的成果：用数学描述世界。但他还有另外两个痴迷，炼金术和神学，似乎完全是浪费时间。他最终净 ahead。他对我们现在称为物理学的赌注如此成功，以至于超过了其他两个的补偿。但其他两个是否必要，从这个意义上说他必须承担大风险才能做出如此大的发现？我不知道。&lt;/p&gt;&#xA;&lt;p&gt;这是一个更令人不安的想法：一个人可能会做出所有错误的赌注？这可能经常发生。但我们不知道频率，因为这些人没有出名。&lt;/p&gt;&#xA;&lt;p&gt;不仅仅是遵循某个路径的回报难以预测。它们随时间变化很大。1830年是对自然史痴迷的好时机。如果达尔文出生在1709年而不是1809年，我们可能永远不会听说过他。&lt;/p&gt;&#xA;&lt;p&gt;面对这种不确定性，一个人能做什么？一个解决方案是对冲你的赌注，在这种情况下，这意味着遵循明显有希望的路径，而不是你自己的私人痴迷。但就像任何对冲一样，当你降低风险时，你也在降低回报。如果你放弃做你喜欢的工作，而遵循一些更传统雄心勃勃的路径，你可能会错过一些你本来会发现的美妙事情。这也一定经常发生，可能甚至比那些赌注都失败的天才更频繁。&lt;/p&gt;&#xA;&lt;p&gt;另一个解决方案是让自己对许多不同的事情感兴趣。如果你基于哪个似乎迄今为止有效而在同样真实的兴趣之间切换，你不会降低你的上限。但这里也有危险：如果你工作在太多不同的项目上，你可能无法足够深入地进入其中任何一个。&lt;/p&gt;&#xA;&lt;p&gt;公交车票理论的一个有趣之处是，它可能有助于解释为什么不同类型的人在不同类型的工作中表现出色。兴趣的分布比能力不均匀得多。如果做伟大工作只需要天赋，而天赋是均匀分布的，你必须发明复杂的理论来解释我们在各个领域中实际做伟大工作的人中看到的偏斜分布。但可能大部分偏斜有一个更简单的解释：不同的人对不同的东西感兴趣。&lt;/p&gt;&#xA;&lt;p&gt;公交车票理论也解释了为什么人们有了孩子后不太可能做伟大的工作。在这里，兴趣不仅要与外部障碍竞争，还要与另一个兴趣竞争，而这个兴趣对大多数人来说是极其强大的。有了孩子后更难找到工作时间，但这是容易的部分。真正的变化是你不想了。&lt;/p&gt;&#xA;&lt;p&gt;但公交车票理论最令人兴奋的含义是，它提出了鼓励伟大工作的方法。如果天才的秘诀只是天赋加努力，我们能做的就是希望我们有大量能力，并尽可能努力地工作。但如果兴趣是天才的关键成分，我们可能能够通过培养兴趣来培养天才。&lt;/p&gt;&#xA;&lt;p&gt;例如，对非常有野心的人来说，公交车票理论表明，做伟大工作的方式是放松一点。不要咬牙切齿地勤奋追求所有同龄人都同意的最有希望的研究路线，也许你应该尝试只是为了好玩而做一些事情。如果你被困住了，那可能是突破的方向。&lt;/p&gt;&#xA;&lt;p&gt;我一直喜欢汉明的著名双管问题：你领域中最重要的问题是什么，你为什么没有在其中之一上工作？这是一个很好的让自己震惊的方式。但它可能有点过度拟合。问自己可能至少同样有用：如果你能休假一年去做一件可能不重要但会非常有趣的事情，那会是什么？&lt;/p&gt;&#xA;&lt;p&gt;公交车票理论还提出了一种避免随着年龄增长而放缓的方法。也许人们随着年龄增长新想法变少的原因不仅仅是因为他们失去了锋芒。也可能是因为一旦你确立地位，你就不能再像年轻时那样不负责任地搞副项目，那时没有人关心你做什么。&lt;/p&gt;&#xA;&lt;p&gt;解决方案很明显：保持不负责任。但这会很困难，因为你为了防止衰退而承担的看似随机的项目，在外人看来会证明衰退的证据。你自己也不会确定他们是错的。但至少做你想做的工作会更有趣。&lt;/p&gt;&#xA;&lt;p&gt;我们甚至可以在孩子中培养智力公交车票收集的习惯。教育中的通常计划是从广泛、浅显的关注开始，然后逐渐变得更专业化。但我对我的孩子做了相反的事情。我知道我可以依靠他们的学校来处理广泛、浅显的部分，所以我带他们深入。&lt;/p&gt;&#xA;&lt;p&gt;当他们对某事感兴趣时，无论多么随机，我都鼓励他们达到荒谬的、公交车票收藏者式的深度。我这样做不是因为公交车票理论。我这样做是因为我想让他们感受到学习的乐趣，他们永远不会对我让他们学习的东西有这种感觉。必须是他们感兴趣的东西。我只是遵循阻力最小的路径；深度是副产品。但如果在试图向他们展示学习乐趣的同时，我最终训练他们深入，那就更好了。&lt;/p&gt;&#xA;&lt;p&gt;会有任何效果吗？我不知道。但这种不确定性可能是最有趣的一点。关于如何做伟大工作还有很多要学习的。人类文明感觉如此古老，如果我们还没有掌握如此基本的东西，它实际上仍然非常年轻。想到关于发现还有发现要做，这是令人兴奋的。如果那是你感兴趣的那种事情。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 还有其他类型的收集比公交车票更好地说明这一点，但它们也更受欢迎。使用一个较差的例子似乎更好，而不是通过告诉他们他们的爱好不重要来冒犯更多人。&lt;/p&gt;&#xA;&lt;p&gt;[2] 我有点担心使用&amp;quot;无私&amp;quot;这个词，因为有些人错误地相信它意味着不感兴趣。但任何期望成为天才的人都必须知道这样一个基本词的含义，所以我想他们不妨现在就开始。&lt;/p&gt;&#xA;&lt;p&gt;[3] 想想天才一定经常被告知，或告诉自己，停止胡闹并负责任而在萌芽中被扼杀。拉马努金的母亲是一个巨大的促成者。想象一下，如果她不是。想象一下，如果他的父母让他出去找工作，而不是坐在家里做数学。&lt;/p&gt;&#xA;&lt;p&gt;另一方面，任何引用前一段来证明不找工作的人可能是错误的。&lt;/p&gt;&#xA;&lt;p&gt;[4] 1709年的达尔文在时间上相当于空间上的米兰达芬奇。&lt;/p&gt;</description>
    </item>
    <item>
      <title>如何创业</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/start/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/start/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_en/start/&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/start.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/start.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/start.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;如何创业&#34;&gt;如何创业&lt;/h1&gt;&#xA;&lt;p&gt;想要创业？获得Y Combinator的资助。&lt;/p&gt;&#xA;&lt;p&gt;2005年3月&lt;/p&gt;&#xA;&lt;p&gt;（本文源自哈佛计算机协会的一次演讲。）&lt;/p&gt;&#xA;&lt;p&gt;要创建一个成功的创业公司，你需要三样东西：优秀的人才、客户真正想要的产品，以及尽可能少地花钱。大多数失败的创业公司都在这三项中有一项失败。一个三项都做到的创业公司很可能会成功。&lt;/p&gt;&#xA;&lt;p&gt;想想这一点，这很令人兴奋，因为这三项都是可以做到的。困难，但可以做到。而且，既然一个成功的创业公司通常能让其创始人致富，这意味着致富也是可以做到的。困难，但可以做到。&lt;/p&gt;&#xA;&lt;p&gt;如果有一条关于创业公司的信息我想传达，那就是这个。没有哪一步需要魔法般的才华才能解决。&lt;/p&gt;&#xA;&lt;h2 id=&#34;创意&#34;&gt;创意&lt;/h2&gt;&#xA;&lt;p&gt;特别是，你不需要一个绝妙的创意来开始创业。创业公司赚钱的方式是为人们提供比现有技术更好的技术。但人们现有的技术通常非常糟糕，以至于要做到更好并不需要什么才华。&lt;/p&gt;&#xA;&lt;p&gt;例如，谷歌的计划只是创建一个不会糟糕的搜索网站。他们有三个新想法：索引更多的网页，使用链接来对搜索结果进行排名，以及拥有干净、简单的网页和不显眼的基于关键词的广告。最重要的是，他们决心创建一个使用起来很棒的网站。毫无疑问，谷歌内部有很多伟大的技术技巧，但整体计划是 straightforward 的。虽然他们现在可能有更大的野心，但仅这一项每年就能为他们带来十亿美元的收入。[1]&lt;/p&gt;&#xA;&lt;p&gt;还有很多其他领域和谷歌出现之前的搜索一样落后。我可以想到几个为创业公司生成创意的经验法则，但大多数都归结为：观察人们正在尝试做的事情，然后想出如何以一种不会糟糕的方式来做。&lt;/p&gt;&#xA;&lt;p&gt;例如，约会网站现在的糟糕程度远超过谷歌出现之前的搜索。它们都使用同样简单的模式。它们似乎是通过思考如何进行数据库匹配来解决问题的，而不是思考现实世界中的约会是如何运作的。一个大学生可以作为一个课程项目构建更好的东西。而且有大量的资金处于危险之中。在线约会现在是一个有价值的业务，如果它能正常工作，价值可能是一百倍。&lt;/p&gt;&#xA;&lt;p&gt;然而，创业公司的创意仅仅是个开始。许多有抱负的创业公司创始人认为整个过程的关键是初始创意，从那时起你要做的就是执行。风险投资家们更清楚。如果你带着一个绝妙的创意去风险投资公司，告诉他们如果他们签署保密协议你就会告诉他们，大多数人会叫你滚蛋。这表明一个单纯的创意价值多少。市场价格低于签署保密协议的不便。&lt;/p&gt;&#xA;&lt;p&gt;另一个表明初始创意价值不高的迹象是改变计划的创业公司数量。微软的最初计划是通过出售编程语言来赚钱，天知道是些什么东西。他们现在的商业模式直到五年后IBM把它送到他们面前才出现。&lt;/p&gt;&#xA;&lt;p&gt;创业公司的创意当然有价值，但问题是，它们不可转移。它们不是你可以交给别人去执行的东西。它们的价值主要是作为起点：作为让拥有它们的人继续思考的问题。&lt;/p&gt;&#xA;&lt;p&gt;重要的不是创意，而是拥有创意的人。优秀的人可以修复糟糕的创意，但好的创意无法拯救糟糕的人。&lt;/p&gt;&#xA;&lt;h2 id=&#34;人才&#34;&gt;人才&lt;/h2&gt;&#xA;&lt;p&gt;我说的优秀的人是什么意思？我在创业公司期间学到的最好技巧之一是决定雇用谁的标准。你能否把这个人形容为动物？这可能很难翻译成另一种语言，但我认为美国的每个人都明白这意味着什么。这意味着一个对自己的工作有点过于认真的人；一个把自己所做的事情做得非常好，以至于超越了专业，进入了痴迷状态的人。&lt;/p&gt;&#xA;&lt;p&gt;具体含义取决于工作：一个绝不会接受否定的销售人员；一个宁愿熬夜到凌晨4点也不愿带着有bug的代码上床睡觉的黑客；一个会主动给纽约时报记者的手机打电话的公关人员；一个当某物偏离两毫米时会感到身体痛苦的平面设计师。&lt;/p&gt;&#xA;&lt;p&gt;几乎所有为我们工作的人都是他们所做事情方面的动物。负责销售的女士非常顽强，我过去常常为和她通话的潜在客户感到遗憾。你能感觉到他们在钩子上挣扎，但你知道在他们签约之前不会有安宁。&lt;/p&gt;&#xA;&lt;p&gt;如果你想想你认识的人，你会发现动物测试很容易应用。在脑海中想象这个人的形象，想象&amp;quot;某某是个动物&amp;quot;这句话。如果你笑了，他们就不是。在大公司中你不需要或甚至不想要这种品质，但在创业公司中你需要。&lt;/p&gt;&#xA;&lt;p&gt;对于程序员，我们有三个额外的测试。这个人真的聪明吗？如果是，他们能真正完成事情吗？最后，因为一些优秀的黑客有令人难以忍受的性格，我们能忍受他们在身边吗？&lt;/p&gt;&#xA;&lt;p&gt;最后一个测试过滤掉的人出人意料地少。如果有人真的聪明，我们可以忍受任何程度的书呆子气。我们不能忍受的是有很多态度的人。但大多数人都不真正聪明，所以我们的第三个测试基本上是第一个测试的重述。&lt;/p&gt;&#xA;&lt;p&gt;当书呆子令人难以忍受时，通常是因为他们太努力地表现聪明。但他们越聪明，就越感觉不到表现聪明的压力。因此，作为一个规则，你可以通过他们说&amp;quot;我不知道&amp;quot;、&amp;ldquo;也许你是对的&amp;quot;和&amp;quot;我不太理解x&amp;quot;的能力来认识真正聪明的人。&lt;/p&gt;&#xA;&lt;p&gt;这种技术并不总是有效，因为人们可能受到环境的影响。在MIT计算机科学系，似乎有一种表现得像粗鲁自大狂的传统。有人告诉我这最终源于Marvin Minsky，就像经典的飞行员风格据说源自Chuck Yeager一样。即使真正聪明的人在那里也开始这样表现，所以你必须有所宽容。&lt;/p&gt;&#xA;&lt;p&gt;我们有Robert Morris很有帮助，他是我遇到的最愿意说&amp;quot;我不知道&amp;quot;的人之一。（至少，在他成为MIT教授之前是这样。）没有人敢在Robert面前摆架子，因为他显然比他们聪明，但自己却零架子。&lt;/p&gt;&#xA;&lt;p&gt;像大多数创业公司一样，我们的创始于一群朋友，我们雇用的人大部分是通过个人接触。这是创业公司和大公司之间的关键区别。和朋友相处几天，你会比公司通过面试能学到的更多。[2]&lt;/p&gt;&#xA;&lt;p&gt;创业公司在大学周围开始并非巧合，因为那是聪明人相遇的地方。不是人们在MIT和斯坦福的课堂上学到的东西使得技术公司在它们周围兴起。他们可以在班级里唱营火歌曲，只要招生工作正常。&lt;/p&gt;&#xA;&lt;p&gt;如果你开始创业公司，很可能与你从大学或研究生院认识的人一起。所以理论上你应该尽量在学校里与尽可能多的聪明人交朋友，对吗？嗯，不对。不要有意识地拉关系；这对黑客来说效果不好。&lt;/p&gt;&#xA;&lt;p&gt;你在大学里应该做的是做自己的项目。黑客应该这样做，即使他们不计划开始创业公司，因为这是学习如何编程的唯一真正方法。在某些情况下，你可能会与其他学生合作，这是了解优秀黑客的最佳方式。项目甚至可能发展成创业公司。但再次，我不会过于直接地针对任何一个目标。不要强求；只是和你喜欢的人一起做你喜欢的事情。&lt;/p&gt;&#xA;&lt;p&gt;理想情况下，你希望有两到四个创始人。只从一个开始会很难。一个人会觉得开始公司的道德负担难以承受。即使是比尔·盖茨，他似乎能够承受相当大的道德负担，也必须有一个联合创始人。但你不想有那么多创始人，以至于公司开始看起来像团体照。部分是因为你一开始不需要很多人，但主要是因为创始人越多，分歧就越大。当只有两三个创始人时，你知道你必须立即解决争议或灭亡。如果有七八个，分歧可能会持续并硬化成派系。你不想仅仅投票；你需要一致。&lt;/p&gt;&#xA;&lt;p&gt;在技术创业公司中，大多数创业公司都是如此，创始人应该包括技术人员。在互联网泡沫期间，有很多创业公司是由商业人士创立的，然后他们寻找黑客来为他们创建产品。这不太有效。商业人士不擅长决定如何处理技术，因为他们不知道选择是什么，或者哪些问题困难，哪些容易。当商业人士试图雇用黑客时，他们无法分辨哪些是好的。即使是其他黑客也很难做到这一点。对商业人士来说这是轮盘赌。&lt;/p&gt;&#xA;&lt;p&gt;创业公司的创始人是否必须包括商业人士？这取决于情况。当我们开始时，我们认为是这样，我们问了几个人说他们了解这个叫做&amp;quot;商业&amp;quot;的神秘事物，问他们是否愿意成为总裁。但他们都说不，所以我不得不自己做。我发现商业不是什么大秘密。它不像物理或医学那样需要广泛研究的东西。你只是试图让人们为你的东西付钱。&lt;/p&gt;&#xA;&lt;p&gt;我认为我对商业如此神秘的原因是我讨厌做这件事的想法。我想在软件纯粹的智力世界工作，而不是处理客户的世俗问题。不想被拖入某种工作的人常常对它产生一种保护性的无能。Paul Erdos特别擅长这个。似乎甚至不能将葡萄柚切成两半（更不用说去商店买一个），他强迫别人为他做这些事情，把所有时间都留给数学。Erdos是个极端的例子，但大多数丈夫在某种程度上使用相同的伎俩。&lt;/p&gt;&#xA;&lt;p&gt;一旦我被迫放弃我的保护性无能，我发现商业既不像我担心的那么难，也不那么无聊。商业中有些深奥的领域相当困难，比如税法或衍生品定价，但你在创业公司中不需要了解这些。经营创业公司所需的关于商业的所有知识，都是在商学院甚至大学出现之前人们就已经知道的常识。&lt;/p&gt;&#xA;&lt;p&gt;如果你在福布斯400强上逐个查看，在每个有MBA的人名字旁边做个标记，你会学到关于商学院的重要东西。在沃伦·巴菲特之后，你要到第22位才遇到另一个MBA，耐克的CEO菲尔·奈特。前50名中只有5个MBA。你在福布斯400强中注意到的是很多有技术背景的人。比尔·盖茨、史蒂夫·乔布斯、拉里·埃利森、迈克尔·戴尔、杰夫·贝佐斯、戈登·摩尔。技术业务的统治者往往来自技术，而不是商业。所以如果你想投资两年时间来帮助你在商业中成功，证据表明你最好学习如何破解而不是获得MBA。[3]&lt;/p&gt;&#xA;&lt;p&gt;有一个原因你可能想在创业公司中包括商业人士：因为你必须有至少一个愿意并能够专注于客户想要什么的人。有些人认为只有商业人士能做到这一点——黑客可以实现软件，但不能设计它。这是胡说。了解如何编程并不会阻止黑客理解用户，不了解编程也不会神奇地使商业人士能够理解他们。&lt;/p&gt;&#xA;&lt;p&gt;然而，如果你不能理解用户，你应该要么学习如何理解，要么找到一个能够理解用户的联合创始人。这是技术创业公司最重要的问题，也是比其他任何问题都更可能导致失败的原因。&lt;/p&gt;&#xA;&lt;h2 id=&#34;客户想要什么&#34;&gt;客户想要什么&lt;/h2&gt;&#xA;&lt;p&gt;不仅仅是创业公司必须担心这一点。我认为大多数失败的企业都是因为它们没有给客户想要的东西。看看餐馆。很大比例的失败，大约四分之一在第一年。但你能想到一个食物真正很好却倒闭的餐馆吗？&lt;/p&gt;</description>
    </item>
    <item>
      <title>如何创造财富</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/wealth/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/wealth/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_en/wealth/&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/wealth.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/wealth.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/wealth.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;如何创造财富&#34;&gt;如何创造财富&lt;/h1&gt;&#xA;&lt;p&gt;2004年5月&lt;/p&gt;&#xA;&lt;p&gt;（本文最初发表于《黑客与画家》。）&lt;/p&gt;&#xA;&lt;p&gt;想创业吗？获得Y Combinator的资助。&lt;/p&gt;&#xA;&lt;p&gt;如果你想变得富有，你会怎么做？我认为你最好的选择是创办或加入一家创业公司。几百年来，这一直是可靠的致富方式。&amp;ldquo;创业公司&amp;quot;这个词始于1960年代，但其中发生的事情与中世纪风险投资的贸易航行非常相似。&lt;/p&gt;&#xA;&lt;p&gt;创业公司通常涉及技术，以至于&amp;quot;高科技创业公司&amp;quot;这个短语几乎是多余的。创业公司是一家解决困难技术问题的小公司。&lt;/p&gt;&#xA;&lt;p&gt;很多人只知道这些就能变得富有。你不需要懂物理就能成为一名优秀的投手。但我认为理解基本原则可以给你优势。为什么创业公司必须很小？创业公司随着规模变大会不可避免地不再是创业公司吗？为什么他们经常致力于开发新技术？为什么有这么多创业公司销售新药或计算机软件，却没有销售玉米油或洗衣粉的？&lt;/p&gt;&#xA;&lt;h3 id=&#34;命题&#34;&gt;命题&lt;/h3&gt;&#xA;&lt;p&gt;从经济上讲，你可以把创业公司看作是将你整个工作生活压缩到几年的一种方式。你不再是低强度地工作四十年，而是尽你所能地努力工作四年。这在技术领域特别有利可图，因为在那里你为快速工作获得溢价。&lt;/p&gt;&#xA;&lt;p&gt;这是经济命题的简要概述。如果你是一个二十多岁的好黑客，你可以得到一份每年支付约80,000美元的工作。所以平均而言，这样的黑客每年必须为公司创造至少80,000美元的价值才能收支平衡。你可能会工作比公司员工多一倍的时间，而且如果你专注，你在一小时内完成的工作可能是他们的三倍。[1] 你应该再获得至少两倍的倍数，通过消除大公司中可能成为你老板的点发中层经理的阻力。还有一个倍数：你比你的职位描述期望的聪明多少？假设再有三倍。结合所有这些倍数，我声称你可以比你在普通公司工作中的预期效率高36倍。[2] 如果一个相当好的黑客在大公司值每年80,000美元，那么一个非常聪明、非常努力、没有任何公司废话拖慢他的黑客应该能够创造价值约每年300万美元的工作。&lt;/p&gt;&#xA;&lt;p&gt;像所有信封背面的计算一样，这个计算有很多摆动空间。我不会试图为实际数字辩护。但我坚持计算的结构。我并不是说倍数正好是36，但它肯定超过10，并且很少像100那样高。&lt;/p&gt;&#xA;&lt;p&gt;如果每年300万美元看起来很高，请记住我们谈论的是极限情况：你不仅没有休闲时间，而且确实如此努力工作以至于危及你的健康。&lt;/p&gt;&#xA;&lt;p&gt;创业公司不是魔法。它们不改变财富创造的规律。它们只代表了曲线远端的一个点。这里有一个守恒定律在起作用：如果你想赚一百万美元，你必须忍受价值一百万美元的痛苦。例如，赚一百万美元的一种方法是在邮局工作一生，并节省你工资的每一分钱。想象在邮局工作五十年的压力。在创业公司中，你将所有这些压力压缩到三四年中。如果你购买经济规模的痛苦，你确实会获得一定的批量折扣，但你无法逃避基本的守恒定律。如果创办创业公司很容易，每个人都会这么做。&lt;/p&gt;&#xA;&lt;h3 id=&#34;数百万而不是数十亿&#34;&gt;数百万，而不是数十亿&lt;/h3&gt;&#xA;&lt;p&gt;如果每年300万美元对某些人来说看起来很高，对其他人来说看起来会很低。三百万？我怎样才能像比尔·盖茨那样成为亿万富翁？&lt;/p&gt;&#xA;&lt;p&gt;所以让我们现在就把比尔·盖茨排除在外。使用著名的有钱人作为例子不是一个好主意，因为媒体只写最有钱的人，而这些往往是异常值。比尔·盖茨是一个聪明、坚定和勤奋的人，但你需要更多的东西才能赚到他那么多的钱。你还需要非常幸运。&lt;/p&gt;&#xA;&lt;p&gt;任何公司的成功都有很大的随机因素。所以你最终在报纸上读到的人是那些非常聪明、完全专注并且中奖的人。当然比尔是聪明和专注的，但微软碰巧也是商业史上最壮观错误之一的受益者：DOS的许可交易。毫无疑问，比尔做了他所能做的一切来引导IBM犯那个错误，并且他在利用它方面做得非常出色，但如果IBM方面有一个有头脑的人，微软的未来就会大不相同。在那个阶段，微软对IBM几乎没有影响力。他们实际上是一个组件供应商。如果IBM要求独家许可，他们应该这样做，微软仍然会签署协议。这对他们来说仍然意味着很多钱，而IBM可以很容易地从其他地方获得操作系统。&lt;/p&gt;&#xA;&lt;p&gt;相反，IBM最终利用其在市场的所有力量给予微软对PC标准的控制。从那时起，微软所要做的就是执行。他们从未不得不在大胆的决定上押注公司。他们所要做的就是与被许可人打硬球，并相当及时地复制更具创新性的产品。&lt;/p&gt;&#xA;&lt;p&gt;如果IBM没有犯这个错误，微软仍然会是一家成功的公司，但它不可能如此快速地发展壮大。比尔·盖茨会很富有，但他会在福布斯400强的底部附近，与他同龄的其他人在一起。&lt;/p&gt;&#xA;&lt;p&gt;有很多致富的方法，而本文只讨论其中一种。本文是关于通过创造财富并为此获得报酬来赚钱的。还有很多其他获得金钱的方法，包括机会、投机、婚姻、继承、盗窃、勒索、欺诈、垄断、贪污、游说、伪造和勘探。大多数巨大的财富可能涉及其中的几种。&lt;/p&gt;&#xA;&lt;p&gt;作为致富方式，创造财富的优势不仅在于它更合法（许多其他方法现在是非法的），而且在于它更直接。你只需要做人们想要的事情。&lt;/p&gt;&#xA;&lt;h3 id=&#34;货币不是财富&#34;&gt;货币不是财富&lt;/h3&gt;&#xA;&lt;p&gt;如果你想创造财富，理解它是什么会有帮助。财富与货币不是一回事。[3] 财富与人类历史一样古老。事实上，要古老得多；蚂蚁有财富。货币是相对较近的发明。&lt;/p&gt;&#xA;&lt;p&gt;财富是根本的东西。财富是我们想要的东西：食物、衣服、房子、汽车、小玩意儿、去有趣的地方旅行等等。你可以在没有钱的情况下拥有财富。如果你有一台魔术机器，可以按命令为你制造汽车或为你煮晚餐或为你洗衣服，或做任何你想要的事情，你就不需要钱。而如果你在南极洲中部，那里没有什么可买的，你有多少钱都无关紧要。&lt;/p&gt;&#xA;&lt;p&gt;财富是你想要的，而不是钱。但如果财富是重要的东西，为什么每个人都谈论赚钱？这是一种速记：货币是移动财富的一种方式，在实践中它们通常可以互换。但它们不是一回事，除非你计划通过造假来致富，否则谈论赚钱可能会让你更难理解如何赚钱。&lt;/p&gt;&#xA;&lt;p&gt;货币是专业化的副产品。在一个专业化的社会中，你需要的大部分东西，你自己不能制造。如果你想要一个土豆或一支铅笔或一个居住的地方，你必须从别人那里得到。&lt;/p&gt;&#xA;&lt;p&gt;你如何让种土豆的人给你一些？通过给他他想要的东西作为回报。但你不能通过直接与需要它们的人交易东西走得很远。如果你制造小提琴，而当地没有农民想要一个，你怎么吃饭？&lt;/p&gt;&#xA;&lt;p&gt;社会在变得更加专业化时找到的解决方案是将交易变成一个两步过程。你不是直接用小提琴交换土豆，而是用小提琴交换，比如说，银币，然后你可以再用银币交换你需要的任何其他东西。中间的东西——交换媒介——可以是任何稀有且便携的东西。历史上金属是最常见的，但最近我们一直在使用一种称为美元的交换媒介，它并不实际存在。然而，它作为交换媒介起作用，因为它的稀有性由美国政府保证。&lt;/p&gt;&#xA;&lt;p&gt;交换媒介的优势是它使贸易运作。缺点是它倾向于模糊贸易的真正含义。人们认为企业所做的是赚钱。但货币只是中间阶段——只是任何人们想要的东西的速记。大多数企业真正做的是创造财富。他们做人们想要的事情。[4]&lt;/p&gt;&#xA;&lt;h3 id=&#34;饼谬论&#34;&gt;饼谬论&lt;/h3&gt;&#xA;&lt;p&gt;令人惊讶的是，很多人从童年时代起就保留着世界上有固定数量财富的想法。在任何正常的家庭中，任何时刻都有固定数量的钱。但这不是一回事。&lt;/p&gt;&#xA;&lt;p&gt;当在这个语境中谈论财富时，它通常被描述为一张饼。&amp;ldquo;你不能把饼做得更大，&amp;ldquo;政客们说。当你谈论一个家庭银行账户中的资金数量，或政府从一年税收中可获得的数量时，这是真的。如果一个人得到更多，另一个人必须得到更少。&lt;/p&gt;&#xA;&lt;p&gt;我记得小时候相信，如果几个有钱人拥有所有的钱，留给其他人的就更少。许多人似乎继续相信类似的东西直到成年。当你听到有人谈论x%的人口拥有y%的财富时，这种谬论通常在背景中。如果你计划创办创业公司，那么无论你是否意识到，你都在计划证明饼谬论是错误的。&lt;/p&gt;&#xA;&lt;p&gt;在这里让人们误入歧途的是货币的抽象。货币不是财富。它只是我们用来移动财富的东西。所以尽管在某些特定时刻（比如你的家庭，这个月）可能有一定数量的钱可用于与其他人交易你想要的东西，但世界上没有固定数量的财富。你可以创造更多的财富。在整个人类历史中，财富一直在被创造和被破坏（但总体上是创造）。&lt;/p&gt;&#xA;&lt;p&gt;假设你拥有一辆破旧的老爷车。下个夏天你可以不坐在你的屁股上，而是花时间把你的车恢复到原始状态。在此过程中你创造了财富。世界——特别是你——多了一辆原始状态的旧车。而且不仅仅是在某种隐喻意义上。如果你卖掉你的车，你会得到更多的钱。&lt;/p&gt;&#xA;&lt;p&gt;在恢复你的旧车过程中，你让自己变得更富有。你没有让任何人变得更穷。所以显然没有一张固定的饼。事实上，当你这样看时，你会想知道为什么会有人认为有。[5]&lt;/p&gt;&#xA;&lt;h3 id=&#34;工匠&#34;&gt;工匠&lt;/h3&gt;&#xA;&lt;p&gt;最有可能理解财富可以被创造的人是那些擅长制造东西的人，工匠。他们的手工制品变成了商店里的商品。但随着工业化的兴起，工匠越来越少。最大的剩余群体之一是计算机程序员。&lt;/p&gt;&#xA;&lt;p&gt;程序员可以坐在计算机前创造财富。一个好的软件本身就是一个有价值的东西。没有制造来混淆这个问题。你输入的字符是一个完整的、成品。如果有人坐下来写一个不会很糟糕的网络浏览器（顺便说一句，这是个好主意），世界就会因此变得更富有。[5b]&lt;/p&gt;&#xA;&lt;p&gt;公司里的每个人一起工作以创造财富，在制造更多人们想要的东西的意义上。许多员工（例如邮件室或人事部门的人）在远离实际制造东西的地方工作。程序员不是。他们从字面上思考产品，一行一行地。所以对程序员来说更清楚的是，财富是被制造出来的，而不是像饼的切片一样由某种想象中的爸爸分配的。&lt;/p&gt;&#xA;&lt;p&gt;程序员也显然知道财富创造率有巨大的差异。在Viaweb，我们有一个程序员，他是一种生产力怪物。我记得看着他在一个漫长的日子里所做的工作，估计他为公司的市场价值增加了几十万美元。一个伟大的程序员，在状态好的时候，可以在几周内创造价值一百万美元的财富。一个普通的程序员在同一时期会产生零甚至负的财富（例如通过引入错误）。&lt;/p&gt;&#xA;&lt;p&gt;这就是为什么最好的程序员中有这么多是自由主义者。在我们的世界里，你要么沉浮，没有借口。当那些远离财富创造的人——本科生、记者、政客——听说最富有的5%的人拥有一半的总财富时，他们倾向于认为不公正！一个有经验的程序员更可能会想，就这样？最顶尖的5%的程序员可能编写了99%的好软件。&lt;/p&gt;</description>
    </item>
    <item>
      <title>如何成为硅谷</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/siliconvalley/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/siliconvalley/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_en/siliconvalley/&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/siliconvalley.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/siliconvalley.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/siliconvalley.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;如何成为硅谷&#34;&gt;如何成为硅谷&lt;/h1&gt;&#xA;&lt;p&gt;2006年5月&lt;/p&gt;&#xA;&lt;p&gt;（本文源自Xtech大会的主题演讲。）&lt;/p&gt;&#xA;&lt;p&gt;你能在其他地方复制硅谷，还是硅谷有什么独特之处？&lt;/p&gt;&#xA;&lt;p&gt;如果在其他国家复制硅谷很困难，这不会令人惊讶，因为在美国大部分地区你也无法复制它。即使在这里，要创建一个硅谷需要什么？&lt;/p&gt;&#xA;&lt;p&gt;所需要的是合适的人。如果你能让合适的一万人从硅谷搬到布法罗，布法罗就会成为硅谷。[1]&lt;/p&gt;&#xA;&lt;p&gt;这与过去形成了鲜明的对比。直到几十年前，地理位置还是城市的命运。所有伟大的城市都位于水道上，因为城市通过贸易赚钱，而水是唯一经济的运输方式。&lt;/p&gt;&#xA;&lt;p&gt;现在你可以在任何地方创建一个伟大的城市，如果你能让合适的人搬到那里。所以如何创建硅谷的问题变成了：谁是合适的人，你如何让他们搬来？&lt;/p&gt;&#xA;&lt;h2 id=&#34;两种类型&#34;&gt;两种类型&lt;/h2&gt;&#xA;&lt;p&gt;我认为你只需要两种人来创建技术中心：富人和技术怪才。他们是产生创业公司反应中的限制性试剂，因为他们在创业公司开始时是唯一在场的人。其他人都会搬来。&lt;/p&gt;&#xA;&lt;p&gt;观察证实了这一点：在美国，城镇只有在同时拥有富人和技术怪才时才会成为创业中心。例如，迈阿密很少有创业公司，因为虽然那里有很多富人，但很少有技术怪才。那不是技术怪才喜欢的地方。&lt;/p&gt;&#xA;&lt;p&gt;而匹兹堡则有相反的问题：有很多技术怪才，但没有富人。据说美国顶尖的计算机科学系是麻省理工学院、斯坦福大学、伯克利大学和卡内基梅隆大学。麻省理工学院产生了128公路。斯坦福大学和伯克利大学产生了硅谷。但是卡内基梅隆呢？记录在那里跳过了。在名单上更低的位置，华盛顿大学在西雅图产生了一个高科技社区，德克萨斯大学奥斯汀分校在奥斯汀产生了一个。但是匹兹堡发生了什么？还有康奈尔大学所在的伊萨卡，它也在名单上很高，那里发生了什么？&lt;/p&gt;&#xA;&lt;p&gt;我在匹兹堡长大，在康奈尔上大学，所以我可以回答这两个地方。天气很糟糕，特别是在冬天，而且没有有趣的古老城市来弥补，就像波士顿那样。富人不想住在匹兹堡或伊萨卡。所以虽然有很多可以开始创业公司的黑客，但没有人投资他们。&lt;/p&gt;&#xA;&lt;h2 id=&#34;不是官僚&#34;&gt;不是官僚&lt;/h2&gt;&#xA;&lt;p&gt;你真的需要富人吗？让政府投资技术怪才行吗？不，不行。创业投资者是一种特殊类型的富人。他们自己在技术行业往往有很多经验。这（a）帮助他们选择正确的创业公司，（b）意味着他们可以提供建议和人际关系以及金钱。而且他们对结果有个人利益关系这一事实使他们真正关注。&lt;/p&gt;&#xA;&lt;p&gt;官僚本质上与创业投资者是完全相反的人。他们进行创业投资的想法是可笑的。这就像数学家经营《Vogue》——或者更准确地说，《Vogue》的编辑经营数学期刊。[2]&lt;/p&gt;&#xA;&lt;p&gt;虽然确实，官僚做的大多数事情都做得很糟糕。我们通常没有注意到，因为他们只需要与其他官僚竞争。但作为创业投资者，他们必须与经验丰富得多、积极性高得多的专业人士竞争。&lt;/p&gt;&#xA;&lt;p&gt;即使拥有内部风险投资集团的公司也通常禁止他们做出自己的投资决策。大多数只被允许在一些声誉良好的私人风险投资公司愿意担任主要投资者的交易中投资。&lt;/p&gt;&#xA;&lt;h2 id=&#34;不是建筑&#34;&gt;不是建筑&lt;/h2&gt;&#xA;&lt;p&gt;如果你去看硅谷，你看到的是建筑。但正是人使它成为硅谷，而不是建筑。我偶尔读到关于在其他地方建立&amp;quot;技术园&amp;quot;的尝试，好像硅谷的有效成分是办公空间。一篇关于索菲亚·安蒂波利斯的文章夸耀说那里的公司包括思科、康柏、IBM、NCR和北电。法国人难道没有意识到这些不是创业公司吗？&lt;/p&gt;&#xA;&lt;p&gt;为技术公司建造办公大楼不会给你一个硅谷，因为创业公司生命中的关键阶段发生在他们想要那种空间之前。关键阶段是三个人在公寓里运作的时候。无论创业公司在获得资金时在哪里，它都会留在那里。硅谷的决定性品质不是英特尔、苹果或谷歌在那里有办公室，而是它们是在那里起步的。&lt;/p&gt;&#xA;&lt;p&gt;所以如果你想复制硅谷，你需要复制的是那两三个创始人围坐在厨房桌旁决定创办公司的情况。要复制这一点，你需要那些人。&lt;/p&gt;&#xA;&lt;h2 id=&#34;大学&#34;&gt;大学&lt;/h2&gt;&#xA;&lt;p&gt;令人兴奋的是，你所需要的只是人。如果你能吸引临界数量的技术怪才和投资者住在某个地方，你就可以复制硅谷。两个群体都有很高的流动性。他们会去生活好的地方。那么什么让一个地方对他们来说是好的？&lt;/p&gt;&#xA;&lt;p&gt;技术怪才喜欢的是其他技术怪才。聪明人会去其他聪明人在的地方。特别是，去伟大的大学。理论上可能有其他方法吸引他们，但到目前为止，大学似乎是不可或缺的。在美国，没有一流大学——或者至少一流的计算机科学系的技术中心。&lt;/p&gt;&#xA;&lt;p&gt;所以如果你想创建一个硅谷，你不仅需要一所大学，而是世界上顶级的几所之一。它必须足够好，能够起到磁铁的作用，吸引数千英里外的最佳人才。这意味着它必须能够与现有的磁铁如麻省理工学院和斯坦福大学竞争。&lt;/p&gt;&#xA;&lt;p&gt;这听起来很难。实际上可能很容易。我的教授朋友在决定他们想在哪里工作时，首先考虑一件事：其他教师的质量。吸引教授的是好同事。所以如果你能够大规模地招募大量最好的年轻研究人员，你可以一夜之间从无到有创建一所一流的大学。你可以用惊人的少的钱做到这一点。如果你给200人每人300万美元的签约奖金，你可以组建一个能够与世界上任何地方相比的师资队伍。从那时起，连锁反应将是自我维持的。所以无论建立一所平庸大学需要多少钱，再增加大约五亿你就可以拥有一所伟大的大学。[3]&lt;/p&gt;&#xA;&lt;h2 id=&#34;个性&#34;&gt;个性&lt;/h2&gt;&#xA;&lt;p&gt;然而，仅仅创建一所新大学并不足以启动硅谷。大学只是种子。它必须种植在合适的土壤中，否则不会发芽。把它种在错误的地方，你只是创建了另一个卡内基梅隆。&lt;/p&gt;&#xA;&lt;p&gt;要产生创业公司，你的大学必须在一个除了大学之外还有其他吸引力的城镇。它必须是投资者想住的地方，学生毕业后想留下来的地方。&lt;/p&gt;&#xA;&lt;p&gt;两者喜欢很多东西是相同的，因为大多数创业投资者自己就是技术怪才。那么技术怪才在城镇中寻找什么？他们的品味与其他人的品味并不完全不同，因为他们最喜欢的美国城镇中很多也是大型旅游目的地：旧金山、波士顿、西雅图。但他们的品味也不能太主流，因为他们不喜欢其他大型旅游目的地，如纽约、洛杉矶和拉斯维加斯。&lt;/p&gt;&#xA;&lt;p&gt;最近有很多关于&amp;quot;创意阶层&amp;quot;的文章。论点似乎是，由于财富越来越来自想法，城市只有吸引那些有想法的人才能繁荣。这当然是真实的；事实上，这是400年前阿姆斯特丹繁荣的基础。&lt;/p&gt;&#xA;&lt;p&gt;技术怪才的很多品味与一般创意阶层共享。例如，他们喜欢保存完好的古老社区而不是千篇一律的郊区，喜欢本地拥有的商店和餐厅而不是全国连锁店。像创意阶层的其他人一样，他们想住在有个性的地方。&lt;/p&gt;&#xA;&lt;p&gt;什么 exactly 是个性？我认为这是每栋建筑都是不同人群作品的感觉。有个性的城镇是不会感觉批量生产的地方。所以如果你想创建一个创业中心——或者任何吸引&amp;quot;创意阶层&amp;quot;的城镇——你可能必须禁止大型开发项目。当大片区域由单个组织开发时，你总能看出来。[4]&lt;/p&gt;&#xA;&lt;p&gt;大多数有个性的城镇都是古老的，但它们不必是。古老城镇有两个优势：它们更密集，因为它们是在汽车出现之前规划的，而且它们更多样化，因为它们是一次建造一栋建筑。你现在可以两者兼得。只要确保密度的建筑规范，并禁止大规模开发。&lt;/p&gt;&#xA;&lt;p&gt;一个推论是你必须阻止最大的开发者：政府。一个问&amp;quot;我们如何建立硅谷？&amp;ldquo;的政府可能已经通过提问的方式确保了失败。你不是建立硅谷；你让它生长。&lt;/p&gt;&#xA;&lt;h2 id=&#34;技术怪才&#34;&gt;技术怪才&lt;/h2&gt;&#xA;&lt;p&gt;如果你想吸引技术怪才，你需要的不只是有个性的城镇。你需要有正确个性的城镇。技术怪才是创意阶层的独特子集，与其他人有不同的品味。你可以在纽约最清楚地看到这一点，纽约吸引了很多创意人士，但很少有技术怪才。[5]&lt;/p&gt;&#xA;&lt;p&gt;技术怪才喜欢的是人们微笑走动的城镇。这排除了洛杉矶，那里没有人走路，也排除了纽约，那里人们走路，但不微笑。当我在波士顿读研究生时，一个朋友从纽约来看我。在从机场回来的地铁上她问&amp;quot;为什么每个人都在微笑？&amp;ldquo;我看了看，他们没有微笑。只是与她习惯的面部表情相比，他们看起来像在微笑。&lt;/p&gt;&#xA;&lt;p&gt;如果你在纽约生活过，你知道这些面部表情来自哪里。那是那种你的思想可能很兴奋，但你的身体知道它过得很糟糕的地方。人们与其说享受在那里生活，不如说是为了刺激而忍受。而且如果你喜欢某种刺激，纽约是无与伦比的。它是魅力的中心，是所有风格和名声的短半衰期同位素的磁铁。&lt;/p&gt;&#xA;&lt;p&gt;技术怪才不关心魅力，所以对他们来说纽约的吸引力是个谜。喜欢纽约的人会花一大笔钱买一个又小又黑又吵的公寓，为了住在一个酷的人真的很酷的城镇。技术怪才看着这笔交易只看到：花一大笔钱买一个又小又黑又吵的公寓。&lt;/p&gt;&#xA;&lt;p&gt;技术怪才会付溢价住在聪明人真的很聪明的地方，但你不必为此付那么多。这是供求关系：魅力很受欢迎，所以你必须为此付很多钱。&lt;/p&gt;&#xA;&lt;p&gt;大多数技术怪才喜欢更安静的乐趣。他们喜欢咖啡馆而不是俱乐部；二手书店而不是时尚服装店；徒步旅行而不是跳舞；阳光而不是高楼大厦。技术怪才的天堂是伯克利或博尔德。&lt;/p&gt;&#xA;&lt;h2 id=&#34;年轻人&#34;&gt;年轻人&lt;/h2&gt;&#xA;&lt;p&gt;正是年轻的技术怪才创办创业公司，所以城市必须特别吸引他们。美国的创业中心都是感觉年轻的城镇。这不意味着它们必须是新的。剑桥有美国最古老的城镇规划，但它感觉很年轻，因为它充满了学生。&lt;/p&gt;</description>
    </item>
    <item>
      <title>如何独立思考</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/think/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/think/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_en/think/&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/think.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/think.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/think.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;如何独立思考&#34;&gt;如何独立思考&lt;/h1&gt;&#xA;&lt;p&gt;2020年11月&lt;/p&gt;&#xA;&lt;p&gt;有些类型的工作，如果不与同伴有不同的思考，你无法做好。例如，要成为一名成功的科学家，仅仅正确是不够的。你的想法必须既正确又新颖。你不能发表说其他人已经知道的事情的论文。你需要说还没有其他人意识到的事情。&lt;/p&gt;&#xA;&lt;p&gt;投资者也是如此。公开市场投资者仅仅正确预测公司将如何表现是不够的。如果很多其他人做出相同的预测，股票价格将已经反映它，没有赚钱的空间。唯一有价值的见解是大多数其他投资者不分享的见解。&lt;/p&gt;&#xA;&lt;p&gt;你在创业公司创始人身上也看到这种模式。你不想创业去做每个人都同意是好主意的事情，或者已经有其他公司在做它。你必须做一件对大多数其他人来说听起来像坏主意，但你知道不是的事情——比如为几千个爱好者使用的微型计算机编写软件，或者创办一个让人们可以在陌生人地板上租充气床垫的网站。&lt;/p&gt;&#xA;&lt;p&gt;散文家也是如此。告诉人们他们已经知道的事情的散文会很无聊。你必须告诉他们一些新东西。&lt;/p&gt;&#xA;&lt;p&gt;但这种模式并不普遍。事实上，它对大多数类型的工作不成立。在大多数类型的工作中——例如，成为一名管理员——你只需要前一半。你只需要是正确的。其他人都不错并不是必需的。&lt;/p&gt;&#xA;&lt;p&gt;在大多数类型的工作中都有一些新意的空间，但在实践中，在必须独立思考的工作类型和不必须的工作类型之间有相当明显的区别。&lt;/p&gt;&#xA;&lt;p&gt;我希望有人在我小时候告诉我这种区别，因为这是在决定你想做什么类型工作时需要思考的最重要事情之一。你想做那种只能通过与每个人不同思考才能赢的工作吗？我怀疑大多数人的潜意识会在他们的意识有机会之前回答那个问题。我知道我的会。&lt;/p&gt;&#xA;&lt;p&gt;独立思考似乎更多是天生的而不是后天培养的。这意味着如果你选择了错误类型的工作，你将会不快乐。如果你天生独立思考，你会发现成为一名中层管理者很令人沮丧。如果你天生从众，如果你尝试做原创研究，你将会逆风而上。&lt;/p&gt;&#xA;&lt;p&gt;然而，这里的一个困难是，人们经常误解自己在从众到独立思考的光谱上的位置。从众的人不喜欢认为自己是从众的。而且，无论如何，他们真的感觉自己对一切都有自己的想法。他们的信念与同龄人的信念相同只是一个巧合。同时，独立思考的人常常没有意识到他们的想法与常规想法有多不同，至少在他们公开陈述它们之前。[1]&lt;/p&gt;&#xA;&lt;p&gt;到成年时，大多数人大致知道他们有多聪明（在解决预设问题的狭义能力上），因为他们不断地根据它被测试和排名。但学校通常忽视独立思考，除了他们试图压制它的程度。所以我们没有获得关于我们独立思考程度的任何相同类型的反馈。&lt;/p&gt;&#xA;&lt;p&gt;甚至可能有类似邓宁-克鲁格的现象在起作用，其中最从众的人自信他们是独立思考的，而真正独立思考的人担心他们可能不够独立思考。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;你能让自己更独立思考吗？我想是的。这种品质可能主要是天生的，但似乎有方法可以放大它，或者至少不压制它。&lt;/p&gt;&#xA;&lt;p&gt;最有效的技术之一是大多数书呆子无意中实践的：简单地更少知道常规信念是什么。如果你不知道你应该遵守什么，就很难成为从众者。但再次，可能这样的人已经是独立思考的。从众的人可能会因为不知道其他人想什么而感到焦虑，并更努力去寻找。&lt;/p&gt;&#xA;&lt;p&gt;你周围的人很重要。如果你被从众的人包围，这将限制你能表达的想法，而这反过来又将限制你有的想法。但如果你被独立思考的人包围，你将有相反的经历：听到其他人说令人惊讶的事情将鼓励你，并思考更多。&lt;/p&gt;&#xA;&lt;p&gt;因为独立思考的人发现被从众的人包围是不舒服的，一旦有机会，他们倾向于自我隔离。高中的问题在于他们还没有机会这样做。而且高中往往是一个向内看的小世界，其居民缺乏自信，这两者都放大了从众的力量。所以对独立思考的人来说，高中通常是一个糟糕的时期。但即使这里也有一些优势：它教会你避免什么。如果你后来发现自己在一个让你想&amp;quot;这像高中&amp;quot;的情况中，你知道你应该离开。[2]&lt;/p&gt;&#xA;&lt;p&gt;独立思考和从众的人被抛在一起的另一个地方是在成功的创业公司中。创始人和早期员工几乎总是独立思考的；否则创业公司不会成功。但从众的人在数量上大大超过独立思考的人，所以随着公司的发展，独立思考的原始精神不可避免地被稀释。除了公司开始变糟的明显问题外，这还导致了各种各样的问题。最奇怪的问题之一是，创始人发现自己能够与其他公司的创始人比与自己的员工更自由地交谈。[3]&lt;/p&gt;&#xA;&lt;p&gt;幸运的是，你不必把所有时间都花在独立思考的人身上。有一两个你可以定期交谈的就足够了。一旦你找到他们，他们通常和你一样渴望交谈；他们也需要你。虽然大学不再拥有它们过去对教育的垄断，但好大学仍然是遇到独立思考的人的绝佳方式。大多数学生仍将从众，但你至少会发现独立思考的小群体，而不是你在高中可能发现的接近零。&lt;/p&gt;&#xA;&lt;p&gt;另一种方法是反方向：除了培养一小群独立思考的朋友外，尝试尽可能多地遇到不同类型的人。如果你有其他几个同龄人群体，这将减少你直接同龄人的影响。而且如果你是几个不同世界的一部分，你经常可以从一个向另一个导入想法。&lt;/p&gt;&#xA;&lt;p&gt;但我说不同类型的人，不是指人口统计上不同的。为了这个技术有效，他们必须思考不同。所以虽然去其他国家访问是个好主意，但你可能就在拐角处能找到思考不同的人。当我遇到某个对不寻常事物了解很多的人（如果你挖得足够深，这实际上包括每个人），我尝试学习他们知道而其他人不知道的东西。这里几乎总是有惊喜。当你遇到陌生人时，这是开始对话的好方法，但我不是为了对话才这样做。我真的想知道。&lt;/p&gt;&#xA;&lt;p&gt;你也可以通过阅读历史在时间上和空间上扩大影响的来源。当我读历史时，我不仅是为了了解发生了什么，而是尝试进入生活在过去的人的头脑。事情对他们来说看起来如何？这很难做到，但值得努力，就像值得远行去三角定位一个点一样。&lt;/p&gt;&#xA;&lt;p&gt;你也可以采取更明确的措施来防止自己自动接受常规意见。最一般的是培养怀疑态度。当你听到有人说什么时，停下来问自己&amp;quot;这是真的吗？&amp;ldquo;不要大声说出来。我不是建议你给每个与你交谈的人强加证明他们所说的负担，而是你承担评估他们所说的负担。&lt;/p&gt;&#xA;&lt;p&gt;把它当作一个谜题。你知道一些公认的想法后来会被证明是错误的。看看你能否猜测是哪些。最终目标不是在你被告知的事情中找到缺陷，而是找到被损坏想法隐藏的新想法。所以这个游戏应该是对新颖性的激动人心的探索，而不是智力卫生的无聊协议。当你开始问&amp;quot;这是真的吗？&amp;ldquo;时，你会惊讶地发现答案往往不是立即是的。如果你有任何想象力，你更可能有过多的线索可循而不是过少。&lt;/p&gt;&#xA;&lt;p&gt;更一般地说，你的目标应该是不让任何东西未经审视就进入你的头脑，而东西并不总是以陈述的形式进入你的头脑。一些最强大的影响是隐含的。你甚至如何注意到这些？退后一步，观察其他人如何获得他们的想法。&lt;/p&gt;&#xA;&lt;p&gt;当你退后到足够的距离，你可以看到想法像波浪一样在人群中传播。最明显的是在时尚中：你注意到一些人穿某种衬衫，然后越来越多，直到你周围的一半人穿着相同的衬衫。你可能不太在乎你穿什么，但也有智力时尚，你绝对不想参与那些。不仅仅是因为你想要对自己思想的主权，而且是因为不时尚的想法不成比例地可能导致有趣的地方。发现未被发现想法的最好地方是没有人寻找的地方。[4]&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;为了超越这个一般建议，我们需要看看独立思考的内部结构——就像我们需要锻炼的个别肌肉。在我看来，它有三个组成部分：对真理的挑剔，对被告知思考的抵抗，和好奇心。&lt;/p&gt;&#xA;&lt;p&gt;对真理的挑剔意味着不仅仅是不相信虚假的事情。它意味着对信念程度小心。对大多数人来说，信念程度未经审视地冲向极端：不可能的变成不可能，可能的变成确定的。[5] 对独立思考的人来说，这似乎是不可原谅的草率。他们愿意让任何东西进入他们的头脑，从高度推测的假设到（明显）的重言式，但在他们关心的主题上，一切都必须用仔细考虑的信念程度标记。[6]&lt;/p&gt;&#xA;&lt;p&gt;因此，独立思考的人对意识形态有恐惧感，意识形态要求一个人同时接受整个信念集合，并将它们当作信仰条款。对独立思考的人来说，这似乎令人反感，就像对食物挑剔的人会觉得咬一口充满各种不确定年龄和来源成分的潜艇三明治令人反感一样。&lt;/p&gt;&#xA;&lt;p&gt;没有这种对真理的挑剔，你不可能真正独立思考。仅仅有对被告知思考的抵抗是不够的。那种人拒绝常规想法只是为了用最随机的阴谋论取而代之。而且由于这些阴谋论常常是为捕获他们而制造的，他们最终比普通人更不独立思考，因为他们受制于一个比仅仅是常规更苛刻的主人。[7]&lt;/p&gt;&#xA;&lt;p&gt;你能增加对真理的挑剔吗？我想是的。根据我的经验，仅仅思考你挑剔的事情就会导致那种挑剔增长。如果是这样，这是我们仅仅通过想要就能拥有的少数美德之一。而且如果它像其他形式的挑剔，应该也可能在儿童中鼓励。我肯定从我父亲那里得到了强烈的剂量。[8]&lt;/p&gt;&#xA;&lt;p&gt;独立思考的第二个组成部分，对被告知思考的抵抗，是三个中最明显的。但即使这一点也经常被误解。人们犯的最大错误是把它视为仅仅消极的品质。我们使用的语言强化了那个想法。你不循规蹈矩。你不在乎别人想什么。但它不仅仅是一种免疫力。在最独立思考的人中，不想被告知思考的欲望是一种积极的力量。不仅仅是怀疑主义，而是对颠覆常规智慧的想法的积极喜悦，越违反直觉越好。&lt;/p&gt;&#xA;&lt;p&gt;一些最新颖的想法在当时几乎像恶作剧。想想你对新颖想法的反应经常是笑。我不认为新颖想法本身很有趣，而是因为新颖性和幽默分享某种惊奇。但虽然不相同，两者足够接近，以至于有幽默感和独立思考之间有明确的相关性——就像无幽默感和从众之间一样。[9]&lt;/p&gt;&#xA;&lt;p&gt;我不认为我们能显著增加对被告知思考的抵抗。它似乎似乎是独立思考三个组成部分中最天生的；成年时有这种品质的人通常在儿童时就有太明显的迹象。但如果我们不能增加对被告知思考的抵抗，我们至少可以通过让自己被其他独立思考的人包围来支撑它。&lt;/p&gt;&#xA;&lt;p&gt;独立思考的第三个组成部分，好奇心，可能是最有趣的。就我们能对新颖想法来自哪里给出简短答案而言，它是好奇心。那是人们通常在拥有它们之前的感觉。&lt;/p&gt;&#xA;&lt;p&gt;根据我的经验，独立思考和好奇心完美地相互预测。我认识的每个独立思考的人都深深好奇，我认识的每个从众的人都不是。奇怪的是，儿童除外。所有小孩子都好奇。也许原因是即使从众的人在开始时也必须好奇，为了学习常规是什么。而独立思考的人是好奇的贪吃者，即使饱了也继续吃。[10]&lt;/p&gt;&#xA;&lt;p&gt;独立思考的三个组成部分协同工作：对真理的挑剔和对被告知思考的抵抗在你大脑中创造空间，好奇心找到新想法来填充它。&lt;/p&gt;&#xA;&lt;p&gt;有趣的是，三个组成部分可以像肌肉一样在很大程度上相互替代。如果你对真理足够挑剔，你不需要对被告知思考有那么强的抵抗，因为挑剔本身会在你的知识中创造足够的空白。而且任何一个都可以补偿好奇心，因为如果你在大脑中创造足够的空间，你对由此产生的真空的不适将给你的好奇心增加力量。或者好奇心可以补偿它们：如果你足够好奇，你不需要在大脑中清除空间，因为你发现的新想法将把你默认获得的常规想法推出去。&lt;/p&gt;&#xA;&lt;p&gt;因为独立思考的组成部分如此可互换，你可以有不同程度地拥有它们并仍然得到相同的结果。所以独立思考不是单一模式。一些独立思考的人是公开颠覆性的，另一些则是安静地好奇的。但他们都知道秘密握手。&lt;/p&gt;&#xA;&lt;p&gt;有没有方法培养好奇心？首先，你想避免抑制它的情况。你目前正在做的工作在多大程度上激发你的好奇心？如果答案是&amp;quot;不多&amp;rdquo;，也许你应该改变一些事情。&lt;/p&gt;&#xA;&lt;p&gt;你可以采取的培养好奇心的最重要的积极步骤可能是寻找吸引它的主题。很少有成年人对一切都同样好奇，而且你似乎不能选择哪些主题吸引你。所以由你来找到它们。或者必要时发明它们。&lt;/p&gt;&#xA;&lt;p&gt;增加好奇心的另一个方法是纵容它，通过调查你感兴趣的事情。好奇心在这方面不同于大多数其他欲望：纵容它往往增加而不是满足它。问题导致更多问题。&lt;/p&gt;&#xA;&lt;p&gt;好奇心似乎比对真理的挑剔或对被告知思考的抵抗更个人化。在人们拥有后两者的程度上，他们通常相当普遍，而不同的人可以对非常不同的事物好奇。所以也许好奇心是指南针。也许，如果你的目标是发现新颖想法，你的座右铭不应该那么多是&amp;quot;做你爱的&amp;rdquo;，而是&amp;quot;做你好奇的&amp;quot;。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 没有人认同为从众的人这一事实的一个方便后果是，你可以说你喜欢从众的人什么而不会陷入太多麻烦。当我写《从众的四个象限时，我预期从侵略性从众的人那里会有愤怒的风暴，但事实上它相当微弱。他们感觉到文章中有某种他们极度不喜欢的东西，但他们很难找到特定的段落来钉它。&lt;/p&gt;</description>
    </item>
    <item>
      <title>如何获得创业想法</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/startupideas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/startupideas/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_en/startupideas/&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/startupideas.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/startupideas.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/startupideas.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;如何获得创业想法&#34;&gt;如何获得创业想法&lt;/h1&gt;&#xA;&lt;p&gt;2012年11月&lt;/p&gt;&#xA;&lt;p&gt;获得创业想法的方法不是试图思考创业想法。而是寻找问题，最好是你自己遇到的问题。&lt;/p&gt;&#xA;&lt;p&gt;最好的创业想法往往有三个共同点：它们是创始人自己想要的东西，他们自己可以构建的东西，而且很少有人意识到值得做。微软、苹果、雅虎、谷歌和脸书都是以这种方式开始的。&lt;/p&gt;&#xA;&lt;h2 id=&#34;问题&#34;&gt;问题&lt;/h2&gt;&#xA;&lt;p&gt;为什么解决你遇到的问题如此重要？除其他原因外，它确保问题确实存在。说你应该只解决存在的问题，这听起来很明显。然而，迄今为止创业公司最常见的错误是解决没有人存在的问题。&lt;/p&gt;&#xA;&lt;p&gt;我自己也犯了这样的错误。1995年，我创办了一家将艺术画廊在线的公司。但画廊不想上线。这不是艺术业务的运作方式。那我为什么花了6个月时间在这个愚蠢的想法上？因为我没有关注用户。我发明了一个与现实不符的世界模型，并在此基础上工作。直到我试图说服用户为我们构建的东西付费时，我才注意到我的模型是错误的。即使那时，我也花了令人尴尬的长时间才明白。我对我世界模型很执着，而且我在软件上花了很多时间。他们必须想要它！&lt;/p&gt;&#xA;&lt;p&gt;为什么这么多创始人构建没有人想要的东西？因为他们从试图思考创业想法开始。这种方法双重危险：它不仅产生很少的好想法；它产生听起来足够合理以至于骗你为之工作的坏想法。&lt;/p&gt;&#xA;&lt;p&gt;在YC，我们称这些为&amp;quot;编造的&amp;quot;或&amp;quot;情景喜剧&amp;quot;创业想法。想象一个电视节目中的角色开始创业。编剧必须为它发明一些要做的事情。但想出好的创业想法很难。这不是你可以随随便便做的事情。所以（除非他们极其幸运）编剧会想出一个听起来合理但实际上很坏的想法。&lt;/p&gt;&#xA;&lt;p&gt;例如，一个宠物主人社交网络。听起来并不明显错误。数百万人有宠物。通常他们非常关心宠物并花很多钱在他们身上。当然，这些人中会有许多人喜欢一个可以与其他宠物主人交谈的网站。也许不是所有人，但如果只有2%或3%是常客，你可能拥有数百万用户。你可以为他们提供定向广告，也许为高级功能收费。[1]&lt;/p&gt;&#xA;&lt;p&gt;这种想法的危险在于，当你向你养宠物的朋友征求意见时，他们不会说&amp;quot;我永远不会用这个。&amp;ldquo;他们说&amp;quot;是的，也许我能看到使用类似的东西。&amp;ldquo;即使当创业公司推出时，它对很多人来说听起来仍然合理。他们自己不想使用它，至少现在不想，但他们可以想象其他人想要它。将这种反应汇总到整个人口，你就拥有零用户。[2]&lt;/p&gt;&#xA;&lt;h2 id=&#34;井&#34;&gt;井&lt;/h2&gt;&#xA;&lt;p&gt;当创业公司推出时，必须至少有一些用户真正需要他们正在制造的东西——不仅仅是那些可以想象有一天会使用它的人，而是迫切需要它的人。通常这个初始用户群体很小，原因很简单：如果有大量人们迫切需要并且可以用创业公司通常投入版本一的努力量构建的东西，它可能已经存在了。这意味着你必须在一个维度上妥协：你要么构建大量人想要一点的东西，要么构建少量人想要很多的东西。选择后者。并非所有这种类型的想法都是好的创业想法，但几乎所有好的创业想法都是这种类型。&lt;/p&gt;&#xA;&lt;p&gt;想象一个图表，其x轴代表所有可能想要你正在制造的东西的人，y轴代表他们想要它的程度。如果你反转y轴的比例，你可以将公司想象成坑洞。谷歌是一个巨大的陨石坑：数亿人使用它，而且他们非常需要它。一个刚刚起步的创业公司不能期望挖掘出那么大的体积。所以你对你开始时的坑洞形状有两种选择。你可以挖一个宽阔但浅的洞，或者一个狭窄而深的洞，像井一样。&lt;/p&gt;&#xA;&lt;p&gt;编造的创业想法通常是第一种类型。许多人对宠物主人社交网络有轻微兴趣。&lt;/p&gt;&#xA;&lt;p&gt;几乎所有好的创业想法都是第二种类型。微软在制作Altair Basic时是一口井。只有几千个Altair所有者，但没有这个软件他们在用机器语言编程。三十年后，脸书具有相同的形状。他们的第一个网站专门针对哈佛学生，只有几千人，但那几千个用户非常想要它。&lt;/p&gt;&#xA;&lt;p&gt;当你有创业想法时，问自己：谁现在想要这个？谁如此想要它以至于即使是一个他们从未听说过的两人创业公司制造的糟糕版本一，他们也会使用？如果你不能回答这个问题，这个想法可能很坏。[3]&lt;/p&gt;&#xA;&lt;p&gt;你本身并不需要井的狭窄性。你需要的是深度；你在优化深度（和速度）时获得狭窄性作为副产品但你几乎总是会得到它。在实践中，深度和狭窄性之间的联系如此强烈，以至于当你知道一个想法会对特定群体或类型的用户有强烈吸引力时，这是一个好迹象。&lt;/p&gt;&#xA;&lt;p&gt;但是，虽然形状像井的需求几乎是好创业想法的必要条件，但它不是充分条件。如果马克·扎克伯格构建的东西只能吸引哈佛学生，那不会是一个好创业想法。脸书是一个好想法，因为它从一个有快速出路的小市场开始。大学足够相似，如果你构建一个在哈佛有效的脸书，它将在任何大学都有效。所以你迅速在所有大学中传播。一旦你拥有所有大学生，你只需让其他人加入就能得到其他人。&lt;/p&gt;&#xA;&lt;p&gt;微软也是如此：Altair的Basic；其他机器的Basic；Basic之外的其他语言；操作系统；应用程序；IPO。&lt;/p&gt;&#xA;&lt;h2 id=&#34;自我&#34;&gt;自我&lt;/h2&gt;&#xA;&lt;p&gt;你如何判断一个想法是否有出路？你如何判断某东西是巨型公司的萌芽，还是只是一个利基产品？通常你无法判断。Airbnb的创始人起初没有意识到他们正在挖掘的市场有多大。最初他们有一个更狭窄的想法。他们打算让主人在会议期间出租他们地板上的空间。他们没有预见到这个想法的扩展；它是逐渐强加给他们的。他们起初只知道他们发现了重要东西。这可能和比尔·盖茨或马克·扎克伯格起初知道的一样多。&lt;/p&gt;&#xA;&lt;p&gt;偶尔，从最初利基市场有出路从一开始就很明显。有时我可以看到一个不明显的出路；这是我们在YC的专长之一。但无论你有多少经验，这种做法的效果都是有限的。了解关于最初想法出路的最重要的元事实是这些很难看到。&lt;/p&gt;&#xA;&lt;p&gt;所以如果你无法预测一个想法是否有出路，你如何在想法之间选择？事实令人失望但有趣：如果你是合适类型的人，你有合适的直觉。如果你处于一个快速变化领域的领先边缘，当你有直觉认为某事值得做时，你更可能是对的。&lt;/p&gt;&#xA;&lt;p&gt;在《禅与摩托车维修艺术》中，罗伯特·波西格说：你想知道如何画一幅完美的画吗？很容易。让自己变得完美，然后自然地绘画。我从高中读到这篇文章后就一直在思考它。我不确定他的建议对绘画具体有多大用处，但它很适合这种情况。从经验上看，拥有好创业想法的方法是成为拥有它们的那种人。&lt;/p&gt;&#xA;&lt;p&gt;处于一个领域的领先边缘并不意味着你必须成为推动它前进的人之一。你也可以作为用户处于领先边缘。Facebook对马克·扎克伯格来说似乎是个好主意，并不是因为他是个程序员，而是因为他如此频繁地使用电脑。如果你在2004年问大多数40岁的人是否愿意在互联网上半公开地发布他们的生活，他们对这个想法会感到恐惧。但马克已经生活在线；对他来说这似乎很自然。&lt;/p&gt;&#xA;&lt;p&gt;保罗·布赫海特说，处于快速变化领域领先边缘的人&amp;quot;生活在未来中&amp;rdquo;。将其与波西格结合，你得到：生活在未来中，然后构建缺失的东西。这描述了许多甚至大多数最大创业公司的起步方式。苹果、雅虎、谷歌和脸书最初甚至不应该成为公司。它们从创始人构建的东西中成长出来，因为世界上似乎有差距。&lt;/p&gt;&#xA;&lt;p&gt;如果你看看成功创始人如何获得他们的想法，通常是一些外部刺激击中准备好的心灵的结果。比尔·盖茨和保罗·艾伦听到Altair并想&amp;quot;我敢打赌我们可以为它编写一个Basic解释器。&amp;ldquo;德鲁·休斯顿意识到他忘了USB记忆棒并想&amp;quot;我真的需要让我的文件在线生活。&amp;ldquo;很多人听说过Altair。很多人忘了USB记忆棒。这些刺激导致那些创始人创办公司的原因是他们的经验使他们准备好注意到它们代表的机会。&lt;/p&gt;&#xA;&lt;p&gt;你想用创业想法来使用的动词不是&amp;quot;想出&amp;quot;而是&amp;quot;注意到&amp;rdquo;。在YC，我们称那些从创始人自己经历中自然成长出来的想法为&amp;quot;有机&amp;quot;创业想法。最成功的创业公司几乎都是以这种方式开始的。&lt;/p&gt;&#xA;&lt;p&gt;这可能不是你想听到的。你可能期待获得创业想法的秘诀，而我却告诉你关键是拥有以正确方式准备的心灵。但尽管令人失望，这是事实。而且这是一种秘诀，只是在最坏情况下需要一年而不是一个周末。&lt;/p&gt;&#xA;&lt;p&gt;如果你不处于某个快速变化领域的领先边缘，你可以达到那个位置。例如，任何相当聪明的人都可能在一年的时间里达到编程的边缘（例如构建移动应用程序）。由于成功的创业公司将消耗你至少3-5年的生命，一年的准备将是合理的投资。特别是如果你也在寻找联合创始人。[4]&lt;/p&gt;&#xA;&lt;p&gt;你不必学习编程才能处于快速变化领域的领先边缘。其他领域变化很快。但虽然学习黑客技术不是必要的，它在可预见的未来是充分的。正如马克·安德森所说，软件正在吞噬世界，而且这个趋势还有几十年的运行时间。&lt;/p&gt;&#xA;&lt;p&gt;知道如何黑客技术也意味着当你有想法时，你能够实现它们。这不是绝对必要的（杰夫·贝佐斯不能）但这是一个优势。当你考虑像将大学脸书在线这样的想法时，如果你不仅能想&amp;quot;那是个有趣的想法&amp;rdquo;，而是能想&amp;quot;那是个有趣的想法。我今晚会尝试构建一个初始版本&amp;rdquo;，这是一个很大的优势。当你既是程序员又是目标用户时更好，因为那样生成新版本并在用户上测试它们的循环可以在一个头脑内发生。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注意&#34;&gt;注意&lt;/h2&gt;&#xA;&lt;p&gt;一旦你在某些方面生活在未来中，注意创业想法的方法就是寻找似乎缺失的东西。如果你真正处于快速变化领域的领先边缘，将会有些明显缺失的东西。不会明显的是它们是创业想法。所以如果你想找到创业想法，不要只打开&amp;quot;什么缺失？&amp;ldquo;的过滤器。还要关闭每个其他过滤器，特别是&amp;quot;这能成为大公司吗？&amp;ldquo;以后有足够的时间应用那个测试。但如果你一开始就在想那个，它可能不仅过滤掉许多好想法，还会导致你专注于坏想法。&lt;/p&gt;&#xA;&lt;p&gt;大多数缺失的东西需要一些时间才能看到。你几乎必须欺骗自己看到周围的想法。&lt;/p&gt;&#xA;&lt;p&gt;但你知道想法就在那里。这不是那种可能没有答案的问题。技术进步恰好在这一刻停止的可能性极小。你可以肯定人们将在未来几年构建让你思考&amp;quot;我在x之前做什么？&amp;ldquo;的东西。&lt;/p&gt;&#xA;&lt;p&gt;当这些问题得到解决时，它们在回想起来可能会显得非常明显。你需要做的是关闭通常阻止你看到它们的过滤器。最强大的只是理所当然地接受世界的当前状态。即使是我们中最激进开明的人大多数都这样做。如果你停下来质疑一切，你无法从床上走到前门。&lt;/p&gt;&#xA;&lt;p&gt;但如果你在寻找创业想法，你可以牺牲一些理所当然地接受现状的效率，并开始质疑事物。为什么你的收件箱溢出？因为你收到很多邮件，还是因为很难将邮件移出收件箱？为什么你收到这么多邮件？人们通过给你发邮件试图解决什么问题？有没有更好的方法来解决它们？为什么很难将邮件移出收件箱？为什么你在读过邮件后还保留它们？收件箱是那个的最佳工具吗？&lt;/p&gt;&#xA;&lt;p&gt;特别注意那些让你烦恼的事情。理所当然地接受现状的优势不仅是它使生活（局部上）更有效率，而且它使生活更可容忍。如果你知道我们将在未来50年得到但尚未拥有的所有东西，你会发现现在的生活相当受限，就像现在的人如果被送回50年前的时间机器中一样。当某事让你烦恼时，可能因为你生活在未来中。&lt;/p&gt;&#xA;&lt;p&gt;当你找到合适类型的问题时，你应该能够将其描述为明显的，至少对你来说。当我们开始Viaweb时，所有在线商店都是手工构建的，由网页设计师制作单个HTML页面。我们作为程序员很明显这些网站必须由软件生成。[5]&lt;/p&gt;&#xA;&lt;p&gt;这意味着，奇怪的是，想出创业想法是一个看到明显事物的问题。这表明这个过程多么奇怪：你试图看到明显的东西，然而你却没看到。&lt;/p&gt;&#xA;&lt;p&gt;由于你需要在这里做的是放松你自己的心灵，最好不要对问题进行太多的正面直接攻击——即坐下来试图想出想法。最好的计划可能只是保持一个后台进程运行，寻找似乎缺失的东西。致力于难题，主要由好奇心驱动，但有第二个自我在你肩上看着，注意差距和异常。[6]&lt;/p&gt;&#xA;&lt;p&gt;给自己一些时间。你对你将自己变成准备好的心灵的速度有很多控制，但对刺激击中它时激发想法的控制较少。如果比尔·盖茨和保罗·艾伦限制自己一个月内想出创业想法，如果他们选择Altair出现前的一个月怎么办？他们可能已经在不太有希望的想法上工作了。德鲁·休斯顿在Dropbox之前确实在一个不太有希望的想法上工作：一个SAT备考创业公司。但Dropbox是一个好得多的想法，无论是在绝对意义上，还是作为与他技能的匹配。[7]&lt;/p&gt;&#xA;&lt;p&gt;欺骗自己注意到想法的一个好方法是从事看起来会很酷的项目。如果你这样做，你自然会倾向于构建缺失的东西。构建已经存在的东西似乎不那么有趣。&lt;/p&gt;</description>
    </item>
    <item>
      <title>如何获得新想法</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/getideas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/getideas/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_en/getideas/&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/getideas.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/getideas.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/getideas.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;如何获得新想法&#34;&gt;如何获得新想法&lt;/h1&gt;&#xA;&lt;p&gt;2023年1月&lt;/p&gt;&#xA;&lt;p&gt;（有人将我的文章输入GPT制作了一个可以基于它们回答问题的东西，然后问它好想法从哪里来。答案还可以，但不是我会说的。这是我会说的。）&lt;/p&gt;&#xA;&lt;p&gt;获得新想法的方法是注意异常：什么看起来奇怪，或缺失，或坏了？你可以在日常生活中看到异常（很多单口喜剧都是基于这个），但寻找它们的最佳地方是在知识的前沿。&lt;/p&gt;&#xA;&lt;p&gt;知识分形增长。从远处看，它的边缘看起来很平滑，但当你学到足够接近其中一个时，你会注意到它充满了空白。这些空白看起来很明显；似乎无法解释没有人尝试过x或对y感到好奇。在最好的情况下，探索这样的空白会产生全新的分形芽。&lt;/p&gt;</description>
    </item>
    <item>
      <title>如何让匹兹堡成为创业中心</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/pgh/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/pgh/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_en/pgh/&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/pgh.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/pgh.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/pgh.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;如何让匹兹堡成为创业中心&#34;&gt;如何让匹兹堡成为创业中心&lt;/h1&gt;&#xA;&lt;p&gt;2016年4月&lt;/p&gt;&#xA;&lt;p&gt;（这是我在匹兹堡一个名为Opt412的活动上的演讲。其中大部分内容适用于其他城镇。但并非全部，因为正如我在演讲中所说，匹兹堡比大多数想成为创业中心的地方有一些重要优势。）&lt;/p&gt;&#xA;&lt;p&gt;要让匹兹堡成为像硅谷这样的创业中心需要什么？我对匹兹堡相当了解，因为我在这里长大，在门罗维尔。我也相当了解硅谷，因为那是我现在居住的地方。你能在这里建立起那种创业生态系统吗？&lt;/p&gt;&#xA;&lt;p&gt;当我同意在这里演讲时，我以为我无法给出一个非常乐观的演讲。我以为我会谈论匹兹堡可以做什么来成为创业中心，很大程度上是虚拟语气。相反，我要谈论的是匹兹堡能够做什么。&lt;/p&gt;&#xA;&lt;p&gt;改变我想法的是我在《纽约时报》美食版读到的一篇文章。标题是&amp;quot;匹兹堡青年驱动的食品繁荣&amp;quot;。对大多数人来说，这听起来可能不有趣，更不用说与创业相关了。但读到那个标题让我感到非常振奋。如果我刻意挑选，我想不出一个更有希望的标题。当我读到文章时，我变得更加兴奋。它说&amp;quot;25到29岁的人现在占所有居民的7.6%，比十年前的7%有所上升。&amp;ldquo;哇，我想，匹兹堡可能是下一个波特兰。它可能成为所有二十多岁的人都想去生活的地方。&lt;/p&gt;&#xA;&lt;p&gt;几天前我到这里时，我能感觉到不同。我从1968年到1984年住在这里。当时我没有意识到，但在这整个期间，城市都在自由落体。除了各地都发生的向郊区迁移外，钢铁和核工业都在消亡。天啊，现在情况大不相同了。不仅仅是市中心看起来繁荣得多。这里有一种我小时候没有的活力。&lt;/p&gt;&#xA;&lt;p&gt;我小时候，这是年轻人离开的地方。现在是吸引他们的地方。&lt;/p&gt;&#xA;&lt;p&gt;这与创业有什么关系？创业公司是由人组成的，而典型创业公司中的人的平均年龄正好在25到29岁之间。&lt;/p&gt;&#xA;&lt;p&gt;我已经看到一个城市拥有这些人有多么强大。五年前，他们把硅谷的重心从半岛转移到旧金山。谷歌和Facebook在半岛上，但下一代的大赢家都在旧金山。重心转移的原因是人才战争，尤其是程序员方面。大多数25到29岁的人想住在城市，而不是无聊的郊区。所以无论他们喜欢与否，创始人都知道他们必须在城市。我认识多个创始人，他们本来更喜欢住在硅谷 proper，但他们强迫自己搬到旧金山，因为他们知道否则会输掉人才战争。&lt;/p&gt;&#xA;&lt;p&gt;因此，成为二十多岁人的磁石是一件非常有希望的事情。很难想象一个地方能成为创业中心却不具备这个特质。当我读到关于25到29岁人群比例增加的统计数据时，我感到的兴奋完全和看到创业公司的图表开始从x轴向上攀升时一样。&lt;/p&gt;&#xA;&lt;p&gt;全国25到29岁人群的比例是6.8%。这意味着你领先0.8%。人口是306,000，所以我们谈论的是约2500人的过剩。这是一个小镇的人口，而这还只是过剩。所以你已经有了一个立足点。现在你只需要扩展它。&lt;/p&gt;&#xA;&lt;p&gt;虽然&amp;quot;青年驱动的食品繁荣&amp;quot;可能听起来轻浮，但它绝非如此。餐厅和咖啡馆是城市个性的重要组成部分。想象走在巴黎的街道上。你走过什么？小餐厅和咖啡馆。想象开车穿过一些令人沮丧的随机远郊。你开车经过什么？星巴克、麦当劳和必胜客。正如格特鲁德·斯坦因所说，那里没有那里。你可以在任何地方。&lt;/p&gt;&#xA;&lt;p&gt;这些独立的餐厅和咖啡馆不仅仅是喂养人们。它们让这里有了这里。&lt;/p&gt;&#xA;&lt;p&gt;所以这是我第一个具体建议，将匹兹堡变成下一个硅谷：尽你所能鼓励这种青年驱动的食品繁荣。城市能做什么？把开办这些小餐厅和咖啡馆的人当作你的用户，去问他们想要什么。我至少可以猜到他们可能想要的一件事：快速的许可流程。旧金山在这方面给你留下了大量超越它们的空间。&lt;/p&gt;&#xA;&lt;p&gt;我知道餐厅不是主要推动力。主要推动力，正如《纽约时报》文章所说，是便宜的住房。这是一个很大的优势。但&amp;quot;便宜住房&amp;quot;这个短语有点误导。有很多更便宜的地方。匹兹堡的特殊之处不在于它便宜，而在于它是一个你真正想要生活的便宜地方。&lt;/p&gt;&#xA;&lt;p&gt;部分原因在于建筑本身。我很久以前就意识到，当我还是一个贫穷的二十多岁年轻人时，最好的交易是曾经富有然后变得贫穷的地方。如果一个地方一直富有，它很好但太昂贵。如果一个地方一直贫穷，它便宜但严酷。但如果一个地方曾经富有然后变得贫穷，你可以找到便宜的宫殿。这就是吸引人们来这里的原因。一百年前匹兹堡富有时，住在这里的人建造了大型坚固的建筑。不一定总是最好的品味，但绝对坚固。所以这是成为创业中心的另一个建议：不要摧毁吸引人们来这里的老建筑。当城市正在复苏时，就像现在的匹兹堡，开发商竞相拆除老建筑。不要让这种情况发生。专注于历史保护。大型房地产开发项目不是吸引二十多岁年轻人来这里的原因。它们与新餐厅和咖啡馆相反；它们减少了城市的个性。&lt;/p&gt;&#xA;&lt;p&gt;经验证据表明，你在历史保护方面不能太严格。城市对此越严格，它们似乎做得越好。&lt;/p&gt;&#xA;&lt;p&gt;但匹兹堡的吸引力不仅仅是建筑本身。还在于它们所在的街区。像旧金山和纽约一样，匹兹堡幸运地是一个前汽车时代的城市。它不太分散。因为这些25到29岁的人不喜欢开车。他们更喜欢步行、骑自行车或乘坐公共交通。如果你最近去过旧金山，你会忍不住注意到大量的骑自行车的人。这不仅仅是二十多岁年轻人采用的时尚。在这方面，他们发现了一种更好的生活方式。胡须会消失，但自行车不会。无需驾驶就能出行的城市就是更好的城市。所以我建议你尽一切可能利用这一点。与历史保护一样，似乎不可能做得太过。&lt;/p&gt;&#xA;&lt;p&gt;为什么不把匹兹堡变成全国对自行车和行人最友好的城市？看看你是否能让旧金山相比之下显得落后。如果你这样做，你不太可能后悔。城市对你想吸引的年轻人来说会像天堂。如果他们确实离开去别处找工作，他们会遗憾地离开这样一个地方。 downside是什么？你能想象一个&amp;quot;因变得对自行车太友好而被毁灭的城市&amp;quot;的头条吗？这根本不会发生。&lt;/p&gt;&#xA;&lt;p&gt;所以假设酷炫的老街区和小餐馆让这里成为下一个波特兰。这足够吗？它将使你处于比波特兰本身好得多的位置，因为匹兹堡有波特兰缺乏的东西：一流的研究型大学。CMU加上小咖啡馆意味着你拥有的不仅仅是喝拿铁的时髦人士。这意味着你有一边喝拿铁一边讨论分布式系统的时髦人士。现在你真的非常接近旧金山了。&lt;/p&gt;&#xA;&lt;p&gt;事实上，你在一方面比旧金山更好，因为CMU在市中心，但斯坦福和伯克利都在郊区。&lt;/p&gt;&#xA;&lt;p&gt;CMU能做什么来帮助匹兹堡成为创业中心？成为更好的研究型大学。CMU是世界上最好的大学之一，但想象一下如果它是最好的，每个人都知道这一点，情况会怎样。有很多有抱负的人必须去最好的地方，无论它在哪里。如果CMU是那个地方，他们都会来这里。哈萨克斯坦的孩子会梦想有一天生活在匹兹堡。&lt;/p&gt;&#xA;&lt;p&gt;成为那种人才磁铁是大学为使自己的城市成为创业中心所能做出的最重要贡献。事实上，这几乎是它们能做出的唯一贡献。&lt;/p&gt;&#xA;&lt;p&gt;但是等等，大学不应该建立名称中包含&amp;quot;创新&amp;quot;和&amp;quot;创业&amp;quot;等词语的项目吗？不，它们不应该。这类事情几乎总是令人失望。它们追求的是错误的目标。获得创新的方法不是瞄准创新，而是瞄准更具体的东西，比如更好的电池或更好的3D打印。而学习创业的方法是去做，这在学校里是做不到的。&lt;/p&gt;&#xA;&lt;p&gt;我知道听到大学鼓励创业最好的事情是成为一所伟大的大学，可能会让一些行政人员失望。这就像告诉想减肥的人减肥的方法是少吃。&lt;/p&gt;&#xA;&lt;p&gt;但如果你想了解创业公司的来源，看看经验证据。看看最成功的创业公司的历史，你会发现它们有机地源于几个创始人构建一些开始时是有趣副业项目的东西。大学在聚集创始人方面很出色，但除此之外，它们能做的最好的事情就是不要干涉。例如，不要对学生和教师开发的&amp;quot;知识产权&amp;quot;声称所有权，并且对推迟入学和请假有宽松的规定。&lt;/p&gt;&#xA;&lt;p&gt;事实上，大学为鼓励创业所能做的最有效的事情之一是哈佛发明的一种复杂的不干涉方式。哈佛曾经在圣诞节后为秋季学期进行考试。一月初他们有一个叫做&amp;quot;阅读期&amp;quot;的时间，你应该在为考试学习。而微软和Facebook有一个很少有人意识到的共同点：它们都是在阅读期开始的。这是产生那种变成创业公司的副业项目的完美情况。学生们都在校园里，但他们不必做任何事情，因为他们应该在为考试学习。&lt;/p&gt;&#xA;&lt;p&gt;哈佛可能已经关闭了这个窗口，因为几年前他们将考试移到圣诞节前，并将阅读期从11天缩短到7天。但如果一所大学真的想帮助学生创办创业公司，经验证据，按市值加权，表明它们能做的最好的事情就是什么都不做。&lt;/p&gt;&#xA;&lt;p&gt;匹兹堡的文化是它的另一个优势。一个城市似乎必须在社会上自由才能成为创业中心，原因很明显。一个城市必须容忍奇怪才能成为创业公司的家园，因为创业公司非常奇怪。你不能选择只允许那些会变成大创业公司的奇怪形式，因为它们都混杂在一起。你必须容忍所有的奇怪。&lt;/p&gt;&#xA;&lt;p&gt;这立即排除了美国的大部分地区。我很乐观，它不排除匹兹堡。我在这里长大的记忆之一，虽然当时没有意识到有什么不寻常的，是人们相处得有多好。我仍然不确定为什么。也许一个原因是每个人都感觉像移民。当我在门罗维尔还是个孩子时，人们不称自己为美国人。他们称自己为意大利人、塞尔维亚人或乌克兰人。想象一下一百年前这里是什么样子，当时人们从二十个不同的国家涌入。宽容是唯一的选择。&lt;/p&gt;&#xA;&lt;p&gt;我记忆中匹兹堡的文化是宽容和务实的。这也是我描述硅谷文化的方式。这不是巧合，因为匹兹堡是它那个时代的硅谷。这是一个人们建造新事物的城市。虽然人们建造的东西已经改变，但做这种工作需要的精神是相同的。&lt;/p&gt;&#xA;&lt;p&gt;所以，虽然拿铁喝着的时髦人士的涌入可能有些方面令人讨厌，但我会不遗余力地鼓励他们。更广泛地说是容忍奇怪，即使达到古怪加利福尼亚人的程度。对匹兹堡来说，这是一个保守的选择：这是回到城市的根源。&lt;/p&gt;&#xA;&lt;p&gt;不幸的是，我把最艰难的部分留到了最后。成为创业中心还需要一件事，而匹兹堡没有：投资者。硅谷有庞大的投资者社区，因为它有50年的时间来发展一个。纽约有庞大的投资者社区，因为它充满了非常喜欢钱并且能够快速注意到新赚钱方式的人。但匹兹堡两者都没有。吸引其他人来这里便宜的住房对投资者没有影响。&lt;/p&gt;&#xA;&lt;p&gt;如果投资者社区在这里成长起来，它会以与硅谷相同的方式发生：缓慢而有机地。所以我不会在短期内拥有庞大投资者社区上下赌注。但幸运的是，有三个趋势使这变得不像以前那样必要。一个是创业公司启动成本越来越低，所以你不需要像以前那样多的外部资金。第二个是感谢Kickstarter等事物，创业公司可以更快获得收入。你可以从任何地方在Kickstarter上放东西。第三个是像Y Combinator这样的项目。来自世界任何地方的创业公司都可以去YC三个月，获得资金，然后如果他们想就可以回家。&lt;/p&gt;&#xA;&lt;p&gt;我的建议是让匹兹堡成为创业公司的好地方，逐渐会有更多的创业公司留下来。其中一些会成功；它们的一些创始人会成为投资者；还会有更多的创业公司留下来。&lt;/p&gt;&#xA;&lt;p&gt;这不是成为创业中心的快速路径。但它至少是一条路径，这是其他城市很少有的。而且这并不是说你在此期间必须做出痛苦的牺牲。想想我建议你应该做的事情。鼓励当地餐厅，保存老建筑，利用密度，让CMU成为最好的，促进宽容。这些是使匹兹堡现在成为好居住地方的事情。我只是说你应该更多地做这些事情。&lt;/p&gt;&#xA;&lt;p&gt;这是一个令人鼓舞的想法。如果匹兹堡成为创业中心的道路是更多地做自己，那么它有很好的成功机会。事实上，它可能在其规模的城市中拥有最好的机会。这需要一些努力和很多时间，但如果任何城市能做到，匹兹堡可以。&lt;/p&gt;&#xA;&lt;p&gt;感谢查理·奇弗和杰西卡·利文斯顿阅读草稿，感谢梅格·奇弗组织Opt412并邀请我演讲。&lt;/p&gt;</description>
    </item>
    <item>
      <title>如果Lisp这么好</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/iflisp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/iflisp/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_en/iflisp/&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/iflisp.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/iflisp.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/iflisp.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;如果lisp这么好&#34;&gt;如果Lisp这么好&lt;/h1&gt;&#xA;&lt;p&gt;2003年5月&lt;/p&gt;&#xA;&lt;p&gt;如果Lisp这么好，为什么没有更多人使用它？我最近在一次演讲中被听众中的一个学生问到了这个问题。而且不是第一次了。&lt;/p&gt;&#xA;&lt;p&gt;在语言方面，就像在许多事情中一样，流行度和质量之间没有太大关联。为什么约翰·格里沙姆（《诉讼之王》销售排名第44）比简·奥斯汀（《傲慢与偏见》销售排名第6191）卖得更好？即使是格里沙姆会声称这是因为他是更好的作家吗？&lt;/p&gt;&#xA;&lt;p&gt;这是《傲慢与偏见》的第一句话：&amp;ldquo;凡是有钱的单身汉，总想娶位太太，这已经成了一条举世公认的真理。&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;举世公认的真理？&amp;rdquo; 对于一个爱情故事的第一句话来说，这些词太长了。&lt;/p&gt;&#xA;&lt;p&gt;就像简·奥斯汀的作品一样，Lisp看起来很难。它的语法，或者说缺乏语法，使它看起来完全不同于大多数人习惯的语言。在学习Lisp之前，我也害怕它。我最近发现了一本1983年的笔记本，我在上面写道：&amp;ldquo;我想我应该学习Lisp，但它看起来太陌生了。&amp;ldquo;幸运的是，我当时19岁，对学习新东西没有太多抵触。我非常无知，学习几乎任何东西都意味着学习新事物。&lt;/p&gt;&#xA;&lt;p&gt;被Lisp吓到的人们编造了其他不使用它的理由。当C是默认语言时，标准的借口是Lisp太慢。现在Lisp方言是可用语言中较快的之一，这个借口已经消失了。现在的标准借口是公开循环的：其他语言更流行。&lt;/p&gt;&#xA;&lt;p&gt;（小心这种推理。它会让你得到Windows。）&lt;/p&gt;&#xA;&lt;p&gt;流行度总是自我延续的，但在编程语言中尤其如此。为流行语言编写的库更多，这使它们更流行。程序经常必须与现有程序一起工作，如果它们用相同的语言编写，这会更容易，所以语言像病毒一样从程序传播到程序。管理者更喜欢流行的语言，因为它们给他们更多对开发者的控制力，开发者可以更容易被替换。&lt;/p&gt;&#xA;&lt;p&gt;确实，如果编程语言都或多或少等价，那么使用除最流行语言之外的任何语言都没有什么理由。但它们并不都等价，差远了。这就是为什么不那么流行的语言，像简·奥斯汀的小说，继续存在的原因。当其他人在阅读最新的约翰·格里沙姆小说时，总会有一小部分人在阅读简·奥斯汀。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;&lt;em&gt;日语翻译 | 罗马尼亚语翻译 | 西班牙语翻译&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>新颖与异端</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/nov/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/nov/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_en/nov/&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/nov.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/nov.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/nov.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;新颖与异端&#34;&gt;新颖与异端&lt;/h1&gt;&#xA;&lt;p&gt;2019年11月&lt;/p&gt;&#xA;&lt;p&gt;如果你发现了新事物，很有可能会被指责为某种形式的异端。&lt;/p&gt;&#xA;&lt;p&gt;要发现新事物，你必须研究那些好但不明显的想法；如果一个想法明显很好，其他人可能已经在研究它了。好想法不明显的一个常见方式是它隐藏在人们非常依恋的错误假设的阴影中。但是，你从研究这样的想法中发现的任何东西都会倾向于掩盖它的错误假设。因此，你会从那些执着于错误假设的人那里得到很多压力。伽利略和达尔文是这种现象的著名例子，但这可能总是抵抗新思想的因素。&lt;/p&gt;&#xA;&lt;p&gt;因此，组织或社会拥有扑灭异端的文化是特别危险的。当你压制异端时，你不仅仅是防止人们反驳你试图保护的错误假设。你还压制了任何间接暗示它是错误的想法。每个珍视的错误假设周围都有一个未探索想法的死区。假设越是荒谬，它创造的死区就越大。&lt;/p&gt;&#xA;&lt;p&gt;然而，这种现象也有积极的一面。如果你在寻找新想法，找到它们的一种方法就是寻找异端。当你从这种方式看问题时，错误假设周围令人沮丧的大死区变成了令人兴奋的新想法大矿。&lt;/p&gt;</description>
    </item>
    <item>
      <title>时髦问题</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/fp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/fp/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_en/fp/&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/fp.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/fp.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/fp.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;时髦问题&#34;&gt;时髦问题&lt;/h1&gt;&#xA;&lt;p&gt;2019年12月&lt;/p&gt;&#xA;&lt;p&gt;我在许多不同领域都看到了相同的模式：尽管很多人在这个领域努力工作，但只有一小部分可能性空间被探索过，因为他们都在做相似的事情。&lt;/p&gt;&#xA;&lt;p&gt;即使在决定做什么工作时，最聪明、最有想象力的人也出奇地保守。那些在其他方面做梦也不会想到追求时髦的人，却被吸引去解决时髦问题。&lt;/p&gt;&#xA;&lt;p&gt;如果你想尝试解决不时髦的问题，最好的去处之一是那些人们认为已经被完全探索过的领域：散文、Lisp、风险投资——你可能在这里注意到一个模式。如果你能找到一个进入一个很大但显然已经过时领域的新方法，你发现的任何东西的价值都会因其巨大的表面积而倍增。&lt;/p&gt;&#xA;&lt;p&gt;防止被吸引去做与其他人相同的事情的最佳保护可能是真正热爱你正在做的事情。然后，即使你犯了与其他人相同的错误，认为它太边缘而不重要，你也会继续做这件事。&lt;/p&gt;&#xA;&lt;p&gt;日文翻译&lt;/p&gt;&#xA;&lt;p&gt;阿拉伯文翻译&lt;/p&gt;&#xA;&lt;p&gt;法文翻译&lt;/p&gt;</description>
    </item>
    <item>
      <title>有机的创业想法</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/organic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/organic/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_en/organic/&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/organic.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/organic.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/organic.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;有机的创业想法&#34;&gt;有机的创业想法&lt;/h1&gt;&#xA;&lt;p&gt;2010年4月&lt;/p&gt;&#xA;&lt;p&gt;想创办初创公司？获得 Y Combinator 的资助。&lt;/p&gt;&#xA;&lt;p&gt;想出创业想法的最好方法是问自己这个问题：你希望有人为你做什么？&lt;/p&gt;&#xA;&lt;p&gt;有两种类型的创业想法：那些从你自己的生活中有机生长出来的，以及那些你从远处决定将对除你之外的其他用户群体必要的想法。苹果是第一种类型。苹果的发生是因为Steve Wozniak想要一台电脑。与大多数想要电脑的人不同，他能设计一台，所以他做了。而且由于很多其他人也想要同样的东西，苹果能够卖出足够的电脑来让公司运转起来。顺便说一句，他们今天仍然依赖这个原则。iPhone是Steve Jobs想要的手机。[1]&lt;/p&gt;&#xA;&lt;p&gt;我们自己的初创公司Viaweb是第二种类型。我们制作了建立在线商店的软件。我们自己不需要这个软件。我们不是直销商。当我们开始时，我们甚至不知道我们的用户被称为&amp;quot;直销商&amp;quot;。但我们开始公司时相对较老（我30岁，Robert Morris 29岁），所以我们见过足够多的情况知道用户需要这种类型的软件。[2]&lt;/p&gt;&#xA;&lt;p&gt;这两种类型的想法之间没有明确的界限，但最成功的初创公司似乎更接近苹果类型而不是Viaweb类型。当Bill Gates为Altair编写第一个Basic解释器时，他在写一些他会使用的东西，Larry和Sergey编写Google的第一个版本时也是如此。&lt;/p&gt;&#xA;&lt;p&gt;有机的想法通常比编造的那种更可取，但当创始人年轻时尤其如此。预测其他人想要什么需要经验。我们在Y Combinator看到的最糟糕的想法来自年轻的创始人制作他们认为其他人想要的东西。&lt;/p&gt;&#xA;&lt;p&gt;所以如果你想创办初创公司但还不知道要做什么，我鼓励你最初专注于有机的想法。你日常生活中缺少或有什么问题？有时如果你只是问这个问题，你会立即得到答案。对Bill Gates来说，你只能用机器语言为Altair编程，这显然是有问题的。&lt;/p&gt;&#xA;&lt;p&gt;你可能需要站在自己之外一点来看问题，因为你往往会习惯它并想当然。不过你可以肯定它存在。总是有伟大的想法就在我们眼前。2004年，哈佛本科生仍然使用印刷在纸上的Facebook，这是很荒谬的。当然，这类东西应该在线。&lt;/p&gt;&#xA;&lt;p&gt;现在有同样明显的想法 lying around。你忽略它们的原因与你在2004年忽略建立Facebook的想法的原因相同：有机的创业想法最初通常不像创业想法。我们现在知道Facebook非常成功，但把自己放回2004年。把本科生的档案放在网上不会看起来像什么创业想法。事实上，它最初也不是一个创业想法。今年冬天Mark在YC晚宴上发言时说，他写Facebook的第一个版本时并没有试图创办公司。这只是一个项目。当Woz开始开发Apple I时也是如此。他没有认为自己在创办公司。如果这些人认为他们在创办公司，他们可能会被诱惑做一些更&amp;quot;严肃&amp;quot;的事情，那将是一个错误。&lt;/p&gt;&#xA;&lt;p&gt;所以如果你想出有机的创业想法，我鼓励你更多地关注想法部分，而不是创业部分。只修复看似有问题的事情，无论这个问题是否看起来重要到可以建立一个公司。如果你继续追求这样的线索，很难不最终做出对很多人有价值的东西，当你这样做时，惊喜，你有了一家公司。[3]&lt;/p&gt;&#xA;&lt;p&gt;如果你最初生产的东西被其他人视为玩具而 dismiss，不要灰心。事实上，这是一个好兆头。这可能是为什么其他人一直忽略这个想法的原因。第一台微型计算机被视为玩具。第一架飞机，第一辆汽车也是如此。在这一点上，当有人带着用户喜欢但我们能想象论坛巨魔视为玩具的东西来找我们时，这使我们特别可能投资。&lt;/p&gt;&#xA;&lt;p&gt;虽然年轻创始人在想出编造的想法时处于劣势，但他们是有机想法的最佳来源，因为他们处于技术的前沿。他们使用最新的东西。他们刚刚决定使用什么，为什么不呢？因为他们使用最新的东西，他们处于首先发现有价值的可修复问题的位置。&lt;/p&gt;&#xA;&lt;p&gt;没有什么比刚刚变得可解决的未满足需求更有价值了。如果你发现一些可以为很多人修复的问题，你就发现了一个金矿。就像真正的金矿一样，你仍然必须努力工作才能从中提炼出黄金。但至少你知道矿脉在哪里，那是困难的部分。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 这表明了一种预测苹果将会薄弱领域的方法：Steve Jobs不使用的东西。例如，我怀疑他对游戏很感兴趣。&lt;/p&gt;&#xA;&lt;p&gt;[2] 回顾起来，我们应该成为直销商。如果我再做Viaweb，我会开设我们自己的在线商店。如果我们这样做了，我们会更好地理解用户。我鼓励任何开始初创公司的人成为其用户之一，无论这看起来多么不自然。&lt;/p&gt;&#xA;&lt;p&gt;[3] 可能的例外：很难与开源软件直接竞争。你可以为程序员构建东西，但必须有一些可以收费的部分。&lt;/p&gt;&#xA;&lt;p&gt;感谢Sam Altman、Trevor Blackwell和Jessica Livingston阅读本文草稿。&lt;/p&gt;</description>
    </item>
    <item>
      <title>疯狂的新想法</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/newideas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/newideas/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_en/newideas/&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/newideas.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/newideas.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/newideas.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;疯狂的新想法&#34;&gt;疯狂的新想法&lt;/h1&gt;&#xA;&lt;p&gt;2021年5月&lt;/p&gt;&#xA;&lt;p&gt;有一种观点我非常害怕在公开场合表达。如果我认识的某个既是领域专家又是通情达理的人提出了一个听起来荒谬的想法，我会非常不愿意说&amp;quot;这永远不会成功&amp;quot;。&lt;/p&gt;&#xA;&lt;p&gt;任何研究过思想史，特别是科学史的人都知道，大事就是这样开始的。有人提出了一个听起来疯狂的想法，大多数人 dismiss 它，然后它逐渐占领了世界。&lt;/p&gt;&#xA;&lt;p&gt;大多数听起来荒谬的想法事实上是坏的，可以安全地 dismiss。但当它们是由通情达理的领域专家提出时就不是了。如果提出这个想法的人是通情达理的，那么他们知道这听起来多么荒谬。然而他们还是提出了它。这表明他们知道一些你不知道的事情。如果他们有深厚的领域专业知识，那很可能就是来源。[1]&lt;/p&gt;&#xA;&lt;p&gt;这样的想法不仅仅不能安全地 dismiss，而且特别可能是有趣的。当普通人提出一个听起来荒谬的想法时，它的荒谬性是他们无能的证据。但当一个通情达理的领域专家这样做时，情况就相反了。这里有一种类似有效市场的东西：平均来说，看起来最疯狂的想法，如果正确，将产生最大的影响。所以如果你能消除提出荒谬想法的人是无能的理论，它的荒谬性就从它很无聊的证据变成了它很令人兴奋的证据。[2]&lt;/p&gt;&#xA;&lt;p&gt;这样的想法并不保证成功。但它们不必成功。它们只需要是足够好的赌注——具有足够高的期望值。我认为平均来说它们是。我认为如果你赌上所有由通情达理的领域专家提出的听起来荒谬的想法，你最终会净赚。&lt;/p&gt;&#xA;&lt;p&gt;原因是每个人都太保守了。&amp;ldquo;范式&amp;quot;这个词被过度使用了，但这是一个值得使用的情况。每个人都过于受当前范式的束缚。即使那些有新想法的人最初也低估了它们。这意味着在它们达到公开提出的阶段之前，它们已经经过了过于严格的过滤。[3]&lt;/p&gt;&#xA;&lt;p&gt;对这种想法的明智回应不是发表声明，而是提出问题，因为这里有一个真正的谜团。为什么这个聪明且通情达理的人提出了一个似乎如此错误的想法？是他们错了，还是你错了？你们中必须有一个。如果你是那个错了的人，那最好是知道这一点，因为这意味着你的世界观模型中有一个漏洞。但即使他们错了，了解为什么也应该是有趣的。专家陷入的陷阱是你也必须担心的。&lt;/p&gt;&#xA;&lt;p&gt;这一切似乎很明显。然而，显然有很多人不分享我对 dismiss 新想法的恐惧。他们为什么这样做？为什么现在看起来像个混蛋，以后看起来像个傻瓜，而不是仅仅保留判断？&lt;/p&gt;&#xA;&lt;p&gt;他们这样做的一个原因是嫉妒。如果你提出了一个激进的新想法并且它成功了，你的声誉（可能还有你的财富）将成比例地增加。如果这种情况发生，有些人会嫉妒，这种潜在的嫉妒会传播成一种你必须错误的信念。&lt;/p&gt;&#xA;&lt;p&gt;人们 dismiss 新想法的另一个原因是这是显得老练的简单方法。当一个新想法首次出现时，它通常看起来相当弱小。它只是一个刚孵化的小鸡。相比之下，公认的智慧是一只完全成熟的鹰。所以很容易对新想法发动毁灭性的攻击，任何这样做的人在那些不理解这种不对称性的人看来会很聪明。&lt;/p&gt;&#xA;&lt;p&gt;这种现象因从事新想法的人和攻击他们的人所获得的回报差异而加剧。从事新想法的回报是根据结果的价值来加权的。所以值得从事只有10%成功机会的事情，如果它能使事情变得好10倍以上。而攻击新想法的回报大致是恒定的；无论目标如何，这种攻击看起来大致同样聪明。&lt;/p&gt;&#xA;&lt;p&gt;当他们既得利益在旧想法中时，人们也会攻击新想法。例如，达尔文的一些最严厉的批评者是牧师，这并不奇怪。人们在某些想法上建立了整个职业生涯。当有人声称这些想法是错误或过时的，他们会感到受到威胁。&lt;/p&gt;&#xA;&lt;p&gt;最低级的 dismiss 是纯粹的派系主义：自动 dismiss 与反对派系相关的任何想法。最低级的是因为提出者是谁而 dismiss 一个想法。&lt;/p&gt;&#xA;&lt;p&gt;但导致通情达理的人 dismiss 新想法的主要事情，与阻止人们提出新想法的原因是一样的：当前范式的普遍存在。它不仅影响我们的思维方式；它是我们构建思想的乐高积木。跳出当前范式是只有少数人能做到的。即使他们通常也必须首先抑制他们的直觉，就像一个在云层中飞行的飞行员必须相信他的仪器而不是他的平衡感。[4]&lt;/p&gt;&#xA;&lt;p&gt;范式不仅定义我们现在的思维。它们还吸干了导致它们的面包屑痕迹，使我们对新想法的标准变得不可能高。当前范式对我们这些后代来说看起来如此完美，以至于我们想象它一定在被发现时就被完全接受了——无论教会对日心模型怎么看，天文学家一定在哥白尼提出它时就信服了。事实上，远非如此。哥白尼在1532年出版了日心模型，但直到17世纪中期科学舆论的天平才转向它。[5]&lt;/p&gt;&#xA;&lt;p&gt;很少有人理解新想法在首次出现时看起来多么弱小。所以如果你想自己有新想法，你能做的最有价值的事情之一就是了解它们在出生时的样子。阅读新想法是如何发生的，并试图让自己进入当时人们的头脑。当新想法只完成一半，甚至拥有它的人也只是半信半疑地认为它是正确的时候，事情对他们来说是什么样子的？&lt;/p&gt;&#xA;&lt;p&gt;但你不必停留在历史上。你现在可以观察到周围正在诞生的新想法。只要寻找一个通情达理的领域专家提出一些听起来错误的观点。&lt;/p&gt;&#xA;&lt;p&gt;如果你既善良又聪明，你不仅不会攻击这样的人，还会鼓励他们。拥有新想法是孤独的事情。只有尝试过的人才知道有多孤独。这些人需要你的帮助。如果你帮助他们，你很可能在这个过程中学到一些东西。&lt;/p&gt;&#xA;&lt;p&gt;笔记&lt;/p&gt;&#xA;&lt;p&gt;[1] 这种领域专业知识可能在另一个领域。事实上，这种交叉往往特别有希望。&lt;/p&gt;&#xA;&lt;p&gt;[2] 我并不声称这个原则在数学、工程和硬科学之外延伸很远。例如，在政治中，听起来疯狂的想法通常和听起来一样坏。虽然可以说这不是例外，因为提出它们的人实际上不是领域专家；政治家是政治策略的领域专家，比如如何当选和如何通过立法，而不是政策所作用的世界。也许没有人能是。&lt;/p&gt;&#xA;&lt;p&gt;[3] 这种&amp;quot;范式&amp;quot;的意义由Thomas Kuhn在他的《科学革命的结构》中定义，但我也推荐他的《哥白尼革命》，在那里你可以看到他在工作中发展这个想法。&lt;/p&gt;&#xA;&lt;p&gt;[4] 这是为什么有点阿斯伯格症的人可能在发现新想法方面有优势的一个原因。他们总是在靠仪器飞行。&lt;/p&gt;</description>
    </item>
    <item>
      <title>硬件复兴</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/hw/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/hw/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_en/hw/&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/hw.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/hw.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/hw.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;硬件复兴&#34;&gt;硬件复兴&lt;/h1&gt;&#xA;&lt;p&gt;想要创业？获得Y Combinator的投资。&lt;/p&gt;&#xA;&lt;p&gt;2012年10月&lt;/p&gt;&#xA;&lt;p&gt;Y Combinator早期、广泛关注的优势之一是我们比大多数人更早看到趋势。而最近一批中最引人注目的趋势之一是大量硬件创业公司。在84家公司中，有7家在制造硬件。总的来说，它们比那些不是硬件公司的公司做得更好。&lt;/p&gt;&#xA;&lt;p&gt;它们当然面临投资者的抵制。投资者对硬件有根深蒂固的偏见。但投资者的意见是一个滞后指标。最好的创始人比最好的投资者更善于看到未来，因为最好的创始人正在创造未来。&lt;/p&gt;&#xA;&lt;p&gt;推动这一趋势的不是单一力量。硬件在众筹网站上表现出色。平板电脑的普及使得制造由它们控制甚至 incorporating 它们的新东西成为可能。电动机已经改进。各种类型的无线连接现在被认为是理所当然的。制造东西变得越来越直接。Arduinos、3D打印、激光切割机和更容易接触到的CNC铣床使硬件原型制作更容易。随着客户越来越多地在线购买，零售商的瓶颈作用减小。&lt;/p&gt;&#xA;&lt;p&gt;我能回答的一个问题是为什么硬件突然变得酷。它一直都很酷。物理的东西很棒。它们只是不像软件那样是创办快速增长业务的绝佳方式。但这个规则可能不是永久性的。它甚至没有那么古老；它只追溯到大约1990年。也许软件的优势将被证明是暂时的。黑客喜欢制造硬件，客户喜欢购买它。所以如果硬件发布的便利性即使接近软件发布的便利性，我们会看到更多的硬件创业公司。&lt;/p&gt;&#xA;&lt;p&gt;这不是第一次某个东西在不是坏主意之前一直是坏主意。这也不会是第一次投资者从创始人那里学到这个教训。&lt;/p&gt;&#xA;&lt;p&gt;所以如果你想从事硬件工作，不要因为担心投资者会歧视你而阻止你这样做。特别是，不要因为担心而阻止你向Y Combinator申请硬件创意，因为我们对硬件创业公司特别感兴趣。&lt;/p&gt;&#xA;&lt;p&gt;我们知道下一个史蒂夫·乔布斯有空间。但几乎可以肯定，第一个&amp;lt;你的名字&amp;gt;也有空间。&lt;/p&gt;&#xA;&lt;p&gt;感谢Sam Altman、Trevor Blackwell、David Cann、Sanjay Dastoor、Paul Gerhardt、Cameron Robertson、Harj Taggar和Garry Tan阅读本文草稿。&lt;/p&gt;&#xA;&lt;p&gt;在&amp;quot;软件吞噬世界&amp;quot;的同时的硬件复兴？&lt;/p&gt;</description>
    </item>
    <item>
      <title>美国制造</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/usa/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/usa/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_en/usa/&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/usa.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/usa.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/usa.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;美国制造&#34;&gt;美国制造&lt;/h1&gt;&#xA;&lt;p&gt;2004年11月&lt;/p&gt;&#xA;&lt;p&gt;（这是为《黑客与画家》日文版写的新文章。它试图解释为什么美国人有些事情做得好，有些事情做得差。）&lt;/p&gt;&#xA;&lt;p&gt;几年前，我的一个意大利朋友乘火车从波士顿到普罗维登斯。她在美国只待了几个星期，还没有看到多少这个国家。她到达时看起来很惊讶。&amp;ldquo;太丑了！&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;来自其他富裕国家的人几乎无法想象美国人为造部分的肮脏。在旅行书中，他们主要向你展示自然环境：大峡谷、激流漂流、田野里的马。如果你看到有人造东西的图片，要么是从谨慎距离拍摄的纽约天际线，要么是精心裁剪的缅因州海滨小镇的图像。&lt;/p&gt;&#xA;&lt;p&gt;这怎么可能，游客一定想知道。世界上最富有的国家怎么会看起来像这样？&lt;/p&gt;&#xA;&lt;p&gt;奇怪的是，这可能不是巧合。美国人有些事情做得好，有些事情做得差。我们擅长制作电影和软件，但不擅长制造汽车和城市建设。我想我们可能擅长我们擅长的事情的原因与我们不擅长我们不擅长的事情的原因相同。我们没有耐心。在美国，如果你想做某事，你不会担心它可能做得很差，或者打破微妙的社会平衡，或者人们可能认为你自视过高。如果你想做某事，就像耐克说的，只管去做。&lt;/p&gt;&#xA;&lt;p&gt;这在某些领域效果很好，在其他领域效果很差。我怀疑它在电影和软件中有效，因为它们都是混乱的过程。&amp;ldquo;系统性&amp;quot;是我用来描述优秀程序员编写软件方式的最后一个词。代码不是他们在精心规划后辛苦组装的东西，就像金字塔一样。它是他们投入其中的东西，工作得很快，不断改变想法，就像炭笔画一样。&lt;/p&gt;&#xA;&lt;p&gt;在软件中，听起来很矛盾，好的工艺意味着工作得很快。如果你工作缓慢而细致，你最终只会得到最初错误想法的非常精细的实现。工作缓慢而细致是过早优化。最好快速完成原型，看看它给你带来什么新想法。&lt;/p&gt;&#xA;&lt;p&gt;听起来制作电影很像制作软件。每部电影都是科学怪人，充满缺陷，通常与最初设想的完全不同。但很有趣，而且完成得相当快。我认为我们在电影和软件中能逃脱这一点，因为它们都是可塑性的媒介。大胆是有回报的。如果在最后一刻两个部分不太吻合，你可以想出一些技巧来至少掩盖问题。&lt;/p&gt;&#xA;&lt;p&gt;汽车或城市就不是这样了。它们都是太物理的了。如果汽车行业像软件或电影那样运作，你会通过制造一辆只有五十磅重的汽车，或者在你想停车时折叠成摩托车大小来超越竞争对手。但对于物理产品，有更多的约束。你不会通过戏剧性的创新获胜，而是通过良好的品味和对细节的关注。&lt;/p&gt;&#xA;&lt;p&gt;问题是，&amp;ldquo;品味&amp;quot;这个词在美国人耳中听起来有点可笑。它似乎很做作，或轻浮，甚至女性化。蓝州人认为这是&amp;quot;主观的&amp;rdquo;，红州人认为这是给懦夫的。所以在美国，任何真正关心设计的人都将是逆风而行的。&lt;/p&gt;&#xA;&lt;p&gt;二十年前，我们常常听到美国汽车行业的问题是工人。现在日本公司在美国建汽车，我们不再听到这种说法了。美国汽车的问题在于设计糟糕。你只要看一眼就能看出来。&lt;/p&gt;&#xA;&lt;p&gt;AMC Matador上所有额外的金属板不是工人加上的。这辆车的问题，和今天的美国汽车一样，是它是由营销人员而不是设计师设计的。&lt;/p&gt;&#xA;&lt;p&gt;为什么日本人比我们制造更好的汽车？有人说是因为他们的文化鼓励合作。这可能有关。但在这种情况下，他们的文化重视设计和工艺似乎更切中要害。&lt;/p&gt;&#xA;&lt;p&gt;几个世纪以来，日本人一直制造比我们在西方更精细的东西。当你看他们在1200年制造的剑时，你简直不敢相信标签上的日期是对的。推测他们的汽车比我们的装配更精确的原因和他们的木工一直如此的原因相同。他们痴迷于把事情做好。&lt;/p&gt;&#xA;&lt;p&gt;我们不是。当我们在美国制造东西时，我们的目标只是完成工作。一旦达到那个点，我们采取两条路线之一。我们可以停在那里，得到一些粗糙但可用的东西，就像老虎钳一样。或者我们可以改进它，这通常意味着给它镶嵌上无用的装饰。当我们想让汽车&amp;quot;更好&amp;quot;时，我们在上面加上尾鳍，或者让它更长，或者让窗户更小，取决于当前的时尚。&lt;/p&gt;&#xA;&lt;p&gt;房子也是如此。在美国，你要么有一个用两乘四和石膏板粗制滥造的脆弱盒子，要么是一个麦克豪宅——一个用两乘四和石膏板粗制滥造的脆弱盒子，但更大，看起来更戏剧性，充满了昂贵的配件。富人不会得到更好的设计或工艺；他们只是得到标准房子的更大、更显眼的版本。&lt;/p&gt;&#xA;&lt;p&gt;我们在这里并不特别珍视设计或工艺。我们喜欢的是速度，我们愿意用丑陋的方式做事来快速完成。在某些领域，比如软件或电影，这是一个净收益。但这不仅仅是因为软件和电影是可塑性的媒介。在这些业务中，设计师（尽管他们通常不这样称呼）有更多的权力。软件公司，至少成功的那些，倾向于由程序员经营。在电影行业，尽管制片人可能会质疑导演，但导演控制着屏幕上出现的大部分内容。因此，美国软件和电影，以及日本汽车，都有这个共同点：负责人关心设计——前者是因为设计师负责，后者是因为整个文化都关心设计。&lt;/p&gt;&#xA;&lt;p&gt;我认为大多数日本高管会对制造坏汽车的想法感到恐惧。而美国高管，在内心深处，仍然相信汽车最重要的是它投射的形象。制造好汽车？什么是&amp;quot;好&amp;rdquo;？这太主观了。如果你想知道如何设计汽车，问一个焦点小组。&lt;/p&gt;&#xA;&lt;p&gt;美国汽车公司没有依赖自己的内部设计指南针（像亨利·福特那样），而是试图制造营销人员认为消费者想要的东西。但这并不奏效。美国汽车继续失去市场份额。原因是客户不想要他们认为他们想要的东西。&lt;/p&gt;&#xA;&lt;p&gt;让焦点小组为你设计汽车只在短期内有效。从长远来看，押注于好设计是有回报的。焦点小组可能会说他们想要当天的虚假功能，但他们更想要的是模仿成熟的买家，他们虽然是少数，但确实关心好设计。最终皮条客和毒贩注意到医生和律师已经从凯迪拉克转向雷克萨斯，也这样做。&lt;/p&gt;&#xA;&lt;p&gt;苹果是对美国总体趋势的一个有趣的反例。如果你想买一个不错的CD播放器，你可能会买日本的。但如果你想买MP3播放器，你可能会买iPod。发生了什么？为什么索尼不主导MP3播放器？因为苹果现在进入了消费电子业务，与其他美国公司不同，他们痴迷于好设计。或者更准确地说，他们的CEO是。&lt;/p&gt;&#xA;&lt;p&gt;我刚刚得到了一个iPod，它不只是不错。它令人惊讶地好。为了让我感到惊讶，它必须满足我不知道自己拥有的期望。没有焦点小组会发现这些。只有伟大的设计师才能。&lt;/p&gt;&#xA;&lt;p&gt;汽车不是我们在美国制造的最糟糕的东西。just-do-it模式失败最戏剧性的地方是我们的城市——或者更准确地说，是远郊。如果房地产开发商在足够大的规模上运作，如果他们建造整个城镇，市场力量会迫使他们建造不会太糟糕的城镇。但他们一次只建造几栋办公楼或郊区街道，结果如此令人沮丧，以至于居民认为飞到欧洲花几周过那里人们的日常生活是一种极大的享受。[1]&lt;/p&gt;&#xA;&lt;p&gt;但just-do-it模式确实有优势。它似乎是创造财富和技术创新（几乎是同一件事）的明确赢家。我认为原因是速度。通过制造商品很难创造财富。真正的价值在于新事物，如果你想成为第一个制造某事物的人，快速工作有帮助。无论好坏，just-do-it模式都是快速的，无论你是丹·布里克林在一个周末内编写VisiCalc原型，还是房地产开发商在一个月内建造一整栋劣质公寓。&lt;/p&gt;&#xA;&lt;p&gt;如果我必须在just-do-it模式和谨慎模式之间选择，我可能会选择just-do-it。但我们必须选择吗？我们能两全其美吗？美国人能不能在拥有不错的生活场所的同时，不削弱让我们擅长软件的不耐烦、个人主义精神？其他国家能否在它们的技术公司和实验室中引入更多个人主义，而不会让它变成购物商场？我是乐观的。对其他国家来说更难说，但在美国，至少我认为我们可以两全其美。&lt;/p&gt;&#xA;&lt;p&gt;苹果是一个鼓舞人心的例子。他们设法保留了编写软件所需的不耐烦、黑客精神。然而，当你拿起一个新的苹果笔记本电脑时，嗯，它看起来不像美国制造的。它太完美了。看起来好像它一定是由瑞典或日本公司制造的。&lt;/p&gt;&#xA;&lt;p&gt;在许多技术中，第二代具有更高的分辨率。为什么在设计上一般不是这样？我认为我们将逐渐看到民族特征被职业特征所取代：日本的黑客将被允许表现出一种现在看起来不像日本的固执，而美国的产品将以一种现在看起来不像美国的对品味的坚持来设计。也许未来最成功的国家将是那些最愿意忽视现在被认为是民族特征的国家，并用最有效的方式做每种工作。比赛吧。&lt;/p&gt;</description>
    </item>
    <item>
      <title>赛格威的麻烦</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/segway/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/segway/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_en/segway/&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/segway.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/segway.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/segway.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;赛格威的麻烦&#34;&gt;赛格威的麻烦&lt;/h1&gt;&#xA;&lt;p&gt;2009年7月&lt;/p&gt;&#xA;&lt;p&gt;赛格威没有实现其最初的承诺，说得客气一点。有几个原因，但一个是人们不想被看到骑着它们。骑赛格威的人看起来像个呆子。&lt;/p&gt;&#xA;&lt;p&gt;我的朋友特雷弗·布莱克韦尔建造了自己的赛格威，我们称之为Segwell。他还建造了一个单轮版本，Eunicycle，在你意识到骑手没有踩踏板之前，它看起来就像普通的独轮车。他曾骑着它们去山景城市中心买咖啡。当他骑Eunicycle时，人们对他微笑。但当他骑Segwell时，他们会从车里喊出侮辱的话：&amp;ldquo;太懒了不走路，你他妈的同性恋？&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;为什么赛格威会引发这种反应？骑赛格威看起来像呆子的原因是你看起来很自鸣得意。你似乎没有足够努力地工作。&lt;/p&gt;&#xA;&lt;p&gt;骑摩托车的人也没有更努力工作。但因为他跨坐在上面，他似乎在努力。当你骑赛格威时，你只是站在那里。而一个被带着走而似乎没有做任何工作的人——比如坐在轿子里的人——不可避免地看起来自鸣得意。&lt;/p&gt;&#xA;&lt;p&gt;试试这个思维实验，就会变得清楚：想象一个像赛格威一样工作的东西，但你像滑板一样一只脚在前一只脚在后地骑。那看起来就不会那么不酷了。&lt;/p&gt;&#xA;&lt;p&gt;所以可能有一种方法可以吸引更多赛格威希望达到的市场：制造一个看起来对骑手来说不那么容易的版本。如果造型遵循滑板或自行车的传统而不是医疗设备的传统，也会有所帮助。&lt;/p&gt;&#xA;&lt;p&gt;奇怪的是，让赛格威陷入这个问题的是公司本身就是一种赛格威。对他们来说太容易了；他们太成功地筹集资金了。如果他们必须通过向真实用户销售的几个版本来逐步发展公司，他们会很快意识到人们骑着它们看起来很愚蠢。相反，他们有足够的资金在秘密中工作。我敢肯定，他们有很多焦点小组，但他们没有从车里喊出侮辱的人。所以他们从未意识到他们正自信地冲进一条死胡同。&lt;/p&gt;</description>
    </item>
    <item>
      <title>超越聪明</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/smart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/smart/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_en/smart/&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/smart.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/smart.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/smart.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;超越聪明&#34;&gt;超越聪明&lt;/h1&gt;&#xA;&lt;p&gt;2021年10月&lt;/p&gt;&#xA;&lt;p&gt;如果你问人们爱因斯坦有什么特别之处，大多数人会说他很聪明。即使是那些试图给你更复杂答案的人可能也会首先想到这一点。直到几年前，我自己也会给出同样的答案。但这并不是爱因斯坦特别之处。他的特别之处在于他有重要的新想法。非常聪明是拥有这些想法的必要前提，但两者并不相同。&lt;/p&gt;&#xA;&lt;p&gt;指出智慧与其后果并不相同可能看起来是吹毛求疵的区别，但事实并非如此。它们之间有很大的差距。任何在大学和研究实验室待过的人都知道这个差距有多大。有很多真正聪明的人并没有取得什么成就。&lt;/p&gt;&#xA;&lt;p&gt;我从小到大一直认为聪明是最值得拥有的东西。也许你也是。但我敢打赌，这不是你真正想要的。想象一下，你有两个选择：非常聪明但一无所获，或者不那么聪明但发现很多新想法。你肯定会选择后者。我会的。这个选择让我感到不舒服，但当你看到这两个选择明确摆出来时，哪个更好是显而易见的。&lt;/p&gt;&#xA;&lt;p&gt;这个选择让我不舒服的原因是，聪明仍然感觉上像是重要的事情，尽管我在理智上知道它不是。我花了这么多年认为它是。童年的环境是培养这种幻觉的完美风暴。智慧比新想法的价值容易测量得多，而且你不断地被它评判。而即使是那些最终会有新发现的孩子通常还没有在发现它们。对于有这种倾向的孩子来说，聪明是城里唯一的游戏。&lt;/p&gt;&#xA;&lt;p&gt;还有更微妙的原因，这些原因会持续到成年很久。智慧在对话中获胜，因此成为支配等级的基础。[1] 此外，拥有新想法在历史上是如此新鲜的事情，即使现在也只有很少人这样做，以至于社会还没有接受这样的事实：这才是真正的目的地，而智慧只是达到目的的手段。[2]&lt;/p&gt;&#xA;&lt;p&gt;为什么这么多聪明人没能发现任何新东西？从这个方向看，这个问题似乎相当令人沮丧。但还有一种看待它的方式，不仅更乐观，而且更有趣。显然，智慧并不是拥有新想法的唯一成分。其他成分是什么？它们是我们可以培养的东西吗？&lt;/p&gt;&#xA;&lt;p&gt;因为据说智慧的麻烦在于它主要是天生的。这方面的证据似乎相当有说服力，特别是考虑到我们大多数人都不希望这是真的，因此证据必须面对强烈的阻力。但我在这里不会深入探讨这个问题，因为我关心的是新想法中的其他成分，而且很明显其中许多是可以培养的。&lt;/p&gt;&#xA;&lt;p&gt;这意味着真相与我小时候听到的故事令人兴奋地不同。如果智慧是重要的，而且主要是天生的，那么自然的结果就是一种《美丽新世界》式的宿命论。你能做的最好的事情就是找出你对哪种工作有&amp;quot;天赋&amp;quot;，这样你天生的智慧至少能被充分利用，然后尽可能努力地工作。而如果智慧不重要，只是重要事情中的几个成分之一，而且其中许多不是天生的，事情就变得更有趣了。你有更多的控制权，但如何安排你生活的问题变得更加复杂。&lt;/p&gt;&#xA;&lt;p&gt;那么，拥有新想法的其他成分是什么？我甚至能提出这个问题就证明了我前面提出的观点——社会还没有接受不是智慧而是这个才是重要的事实。否则我们都会知道这样一个基本问题的答案。[3]&lt;/p&gt;&#xA;&lt;p&gt;我不打算在这里提供其他成分的完整目录。这是我第一次这样向自己提出这个问题，我认为可能需要一段时间来回答。但我最近写到了其中最重要的一个：对特定主题的痴迷兴趣。这绝对是可以培养的。&lt;/p&gt;&#xA;&lt;p&gt;发现新想法需要的另一个品质是独立思考。我不想声称这与智慧截然不同——我不愿意称一个不独立思考的人为聪明——但尽管主要是天生的，这种品质似乎可以在一定程度上培养。&lt;/p&gt;&#xA;&lt;p&gt;有拥有新想法的一般技巧——例如，如何处理自己的项目，如何克服早期工作面临的障碍——这些都可以学习。其中一些可以由社会学习。还有生成特定类型新想法的技巧集合，比如创业想法和论文主题。&lt;/p&gt;&#xA;&lt;p&gt;当然，发现新想法还有很多相当平凡的成分，比如努力工作、获得足够的睡眠、避免某些压力、拥有合适的同事，以及找到即使不在做应该做的工作时也能做自己想做的事情的技巧。任何阻止人们做伟大工作的事情都有一个相反的方面可以帮助他们。而且这类成分并不像最初看起来那么无聊。例如，拥有新想法通常与年轻人相关。但也许不是青春本身产生新想法，而是伴随青春而来的特定事情，比如健康良好和缺乏责任。研究这一点可能会产生帮助任何年龄的人有更好想法的策略。&lt;/p&gt;&#xA;&lt;p&gt;拥有新想法最令人惊讶的成分之一是写作能力。有一类新想法最好通过写论文和书籍来发现。这个&amp;quot;通过&amp;quot;是故意的：你不是先想到想法，然后只是写下来。有一种通过写作进行的思考，如果你写作笨拙，或者不喜欢这样做，当你尝试进行这种思考时，它会妨碍你。[4]&lt;/p&gt;&#xA;&lt;p&gt;我预测智慧和有新想法之间的差距将是一个有趣的地方。如果我们仅仅把这个差距视为未实现潜力的衡量标准，它就变成了一种荒原，我们试图匆忙走过而不敢直视。但如果我们翻转问题，开始探究新想法中它暗示必须存在的其他成分，我们可以从这个差距中挖掘出关于发现的发现。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 对话中什么获胜取决于与谁交谈。从底层的纯粹攻击性，到中层的机智，到顶层的接近真实智慧，尽管可能总是带有一些机智的成分。&lt;/p&gt;&#xA;&lt;p&gt;[2] 正如智慧不是拥有新想法的唯一成分，拥有新想法也不是智慧唯一有用的地方。例如，它在诊断问题和找出如何解决它们方面也很有用。两者都与拥有新想法有重叠，但两者都有不涉及新想法的终点。&lt;/p&gt;&#xA;&lt;p&gt;那些使用智慧的方式比拥有新想法常见得多。在这种情况下，智慧与其后果更难区分。&lt;/p&gt;&#xA;&lt;p&gt;[3] 有些人会将智慧和拥有新想法之间的差异归因于&amp;quot;创造力&amp;quot;，但这似乎不是一个很有用的术语。除了相当模糊外，它偏离了我们关心的内容半步：它既不能与智慧分开，也不能对智慧和拥有新想法之间的所有差异负责。&lt;/p&gt;&#xA;&lt;p&gt;[4] 奇怪的是，这篇文章就是一个例子。它最初是关于写作能力的文章。但当我谈到智慧和拥有新想法之间的区别时，这似乎重要得多，所以我把原来的文章里外翻转，使其成为主题，而我原来的主题成为其中的一个要点。就像在许多其他领域一样，一旦你有了很多实践，这种程度的重写就更容易考虑。&lt;/p&gt;&#xA;&lt;p&gt;感谢特雷弗·布莱克韦尔、帕特里克·克里森、杰西卡·利文斯顿、罗伯特·莫里斯、迈克尔·尼尔森和丽莎·兰德尔阅读本文的草稿。&lt;/p&gt;</description>
    </item>
    <item>
      <title>软件专利是邪恶的吗？</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/softwarepatents/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/softwarepatents/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_en/softwarepatents/&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/softwarepatents.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/softwarepatents.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/softwarepatents.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;软件专利是邪恶的吗&#34;&gt;软件专利是邪恶的吗？&lt;/h1&gt;&#xA;&lt;p&gt;2006年3月&lt;/p&gt;&#xA;&lt;p&gt;（本文改编自在谷歌的一次演讲。）几周前，我惊讶地发现自己获得了四项专利。这更加令人惊讶，因为我只申请了三项。当然，这些专利不属于我。它们被转让给了Viaweb，在雅虎收购我们后成为雅虎的财产。但这个消息让我开始思考软件专利的普遍问题。&lt;/p&gt;&#xA;&lt;p&gt;专利是一个难题。我不得不为我们资助的大多数初创公司提供关于专利的建议，尽管有多年的经验，但我仍然不确定自己给出的建议是否正确。&lt;/p&gt;&#xA;&lt;p&gt;我相当确定的一件事是，如果你反对软件专利，你就是反对专利本身。我们的机器越来越多地由软件组成。过去用杠杆、凸轮和齿轮完成的事情现在用循环、树结构和闭包来完成。控制系统的物理实现没有什么特别之处应该使其可专利，而软件的等价物却不应该。&lt;/p&gt;&#xA;&lt;p&gt;不幸的是，专利法在这方面不一致。大多数国家的专利法规定算法不可专利。这条规则是遗留下来的，当时&amp;quot;算法&amp;quot;指的是像埃拉托斯特尼筛法那样的东西。在1800年，人们无法像我们今天这样清楚地看到，许多机械物体的专利实际上是对它们所体现的算法的专利。&lt;/p&gt;&#xA;&lt;p&gt;专利律师在申请算法专利时仍然必须假装他们在做其他事情。你不得在专利申请的标题中使用&amp;quot;算法&amp;quot;这个词，就像你不得在书名中使用&amp;quot;散文&amp;quot;这个词一样。如果你想为算法申请专利，你必须将其描述为执行该算法的计算机系统。然后它就是机械的了；呼。算法的默认委婉说法是&amp;quot;系统和方法&amp;quot;。试试用这个短语进行专利搜索，看看你能得到多少结果。&lt;/p&gt;&#xA;&lt;p&gt;既然软件专利与硬件专利没有什么不同，那么说&amp;quot;软件专利是邪恶的&amp;quot;的人就是在简单地说&amp;quot;专利是邪恶的&amp;quot;。那么为什么有这么多的人专门抱怨软件专利呢？&lt;/p&gt;&#xA;&lt;p&gt;我认为问题更多在于专利局，而不是软件专利的概念。每当软件遇到政府时，坏事就会发生，因为软件变化很快，而政府变化很慢。专利局已经被软件专利申请的数量和新颖性所淹没，结果他们犯了很多错误。&lt;/p&gt;&#xA;&lt;p&gt;最常见的是授予不应该授予的专利。要获得专利，发明必须不仅仅是新的。它还必须是非显而易见的。而这，正是美国专利商标局一直在失球的地方。Slashdot有一个图标生动地表达了这个问题：一把刀和叉，上面叠加着&amp;quot;专利申请中&amp;quot;的字样。&lt;/p&gt;&#xA;&lt;p&gt;可怕的是，这是他们唯一拥有的专利故事图标。Slashdot读者现在理所当然地认为，关于专利的故事将是关于虚假专利的。问题已经变得多么严重。&lt;/p&gt;&#xA;&lt;p&gt;例如，亚马逊臭名昭著的一键专利的问题不在于它是一个软件专利，而在于它是显而易见的。任何保留人们送货地址的在线商店都会实现这一点。亚马逊首先这样做的原因不是他们特别聪明，而是因为他们是最早有足够影响力的网站之一，能够强迫客户在购买前登录。[1]&lt;/p&gt;&#xA;&lt;p&gt;我们作为黑客，知道美国专利商标局正在让人们为我们世界中的刀叉申请专利。问题是，专利局不是黑客。他们可能擅长判断铸造钢铁或研磨镜头的新发明，但他们还不理解软件。&lt;/p&gt;&#xA;&lt;p&gt;在这一点上，乐观主义者会想要补充说&amp;quot;但他们最终会理解的&amp;quot;。不幸的是，这可能不是真的。软件专利问题是一个更普遍问题的实例：专利局需要一段时间才能理解新技术。如果是这样，这个问题只会变得更糟，因为技术变革的步伐似乎正在加快。三十年后，专利局可能会理解我们现在作为软件申请专利的那种东西，但会有其他类型的新发明他们理解得更少。&lt;/p&gt;&#xA;&lt;p&gt;申请专利是一种谈判。你通常申请比你认为会被授予的更广泛的专利，审查员通过驳回你的一些要求并授予其他要求来回应。所以我并不真正责怪亚马逊申请一键专利。大错误是专利局的，因为他们没有坚持要求更狭窄、具有真实技术内容的东西。通过授予这样一个过于宽泛的专利，美国专利商标局在第一次约会时就与亚马逊上床了。亚马逊应该说&amp;quot;不&amp;quot;吗？&lt;/p&gt;&#xA;&lt;p&gt;亚马逊走向黑暗面不是在申请专利时，而是在执行专利时。许多公司（例如微软）获得了大量荒谬的过于宽泛的专利，但它们主要用于防御目的。像核武器一样，大公司专利组合的主要作用是威胁任何攻击他们的人进行反诉。亚马逊对巴诺书店的诉讼因此相当于核先发制人打击。&lt;/p&gt;&#xA;&lt;p&gt;那场诉讼可能对亚马逊的伤害大于帮助。巴诺书店是一个蹩脚的网站；无论如何亚马逊都会击败他们。为了攻击一个他们可以忽视的竞争对手，亚马逊在自己的声誉上留下了永久的污点。即使现在，我认为如果你要求黑客自由联想关于亚马逊的事情，一键专利也会出现在前十个话题中。&lt;/p&gt;&#xA;&lt;p&gt;谷歌显然不觉得仅仅持有专利就是邪恶的。他们申请了很多专利。他们是伪君子吗？专利是邪恶的吗？&lt;/p&gt;&#xA;&lt;p&gt;这个问题实际上有两个变体，回答它的人往往不清楚自己在回答哪个。有一个狭隘的变体：在当前的法律体系下，申请专利是坏的吗？还有一个更广泛的变体：当前的法律体系允许专利是坏的吗？&lt;/p&gt;&#xA;&lt;p&gt;这是两个独立的问题。例如，在前工业化社会如中世纪欧洲，当有人攻击你时，你不会叫警察。没有警察。当被攻击时，你应该反击，并且有关于如何这样做的惯例。这是错误的吗？这是两个问题：自己主持正义是错误的吗？而不得不这样做是错误的吗？我们倾向于对第二个问题说是，但对第一个问题说不。如果没有其他人会保护你，你必须保护自己。[2]&lt;/p&gt;&#xA;&lt;p&gt;专利的情况类似。商业是一种仪式化的战争。实际上，它从真正的战争演变而来：大多数早期商人根据你看起来有多强而即时从商人转变为海盗。在商业中，有某些规则描述公司如何可以和不可以相互竞争，而决定要按自己的规则玩的人错过了重点。说&amp;quot;我不会仅仅因为其他人都在申请专利而申请专利&amp;quot;不像说&amp;quot;我不会仅仅因为其他人都在撒谎而撒谎&amp;quot;。这更像是说&amp;quot;我不会仅仅因为其他人都在使用TCP/IP而使用TCP/IP&amp;quot;。哦，是的，你会的。&lt;/p&gt;&#xA;&lt;p&gt;一个更接近的比较可能是第一次看到冰球比赛的人，震惊地意识到球员们故意相互碰撞，并决定自己在打冰球时绝不会如此无礼。&lt;/p&gt;&#xA;&lt;p&gt;冰球允许身体接触。这是比赛的一部分。如果你的团队拒绝这样做，你就会输掉。商业也是如此。在现行规则下，专利是游戏的一部分。&lt;/p&gt;&#xA;&lt;p&gt;这在实践中意味着什么？我们告诉我们资助的初创公司不要担心侵犯专利，因为初创公司很少因专利侵权而被起诉。有人起诉你只有两个原因：为了钱，或者为了防止你与他们竞争。初创公司太穷了，不值得为钱而被起诉。在实践中，他们似乎也不太被竞争对手起诉。他们不被其他初创公司起诉，因为（a）专利诉讼是一种昂贵的分心，（b）由于其他初创公司和它们一样年轻，它们的专利可能还没有发布。[3] 初创公司，至少在软件业务中，似乎也不太被成熟的竞争对手起诉。尽管微软持有这么多专利，我不知道他们有一个案例是因专利侵权而起诉初创公司的。像微软和甲骨文这样的公司不是通过赢得诉讼来获胜的。那太不确定了。他们通过将竞争对手排除在销售渠道之外来获胜。如果你确实威胁到他们，他们更可能收购你而不是起诉你。&lt;/p&gt;&#xA;&lt;p&gt;当你读到有关大公司对小公司提起专利诉讼时，通常是一家走下坡路的大公司在抓救命稻草。例如，Unisys试图执行其对LZW压缩的专利。当你看到一家大公司威胁专利诉讼时，卖掉它。当一家公司开始为知识产权而战时，这是一个迹象，表明他们已经输掉了真正的战斗，为了用户。&lt;/p&gt;&#xA;&lt;p&gt;一家因专利侵权而起诉竞争对手的公司就像一个被彻底击败的防守者，转而向裁判恳求。如果你还能触及球，你就不会这样做，即使你真的相信自己被犯规了。所以一家威胁专利诉讼的公司是陷入困境的公司。&lt;/p&gt;&#xA;&lt;p&gt;当我们在Viaweb工作时，电子商务业务中一家更大的公司获得了在线订购专利或类似的东西。我接到那里一位副总裁的电话，询问我们是否愿意授权。我回答说我认为该专利完全虚假，永远不会在法庭上成立。&amp;ldquo;好的，&amp;ldquo;他回答说。&amp;ldquo;那么，你们在招聘吗？&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;然而，如果你的初创公司发展得足够大，无论你做什么，你都会开始被起诉。例如，如果你上市，你会被多个专利流氓起诉，他们希望你付钱给他们让他们离开。更多关于他们的事情。&lt;/p&gt;&#xA;&lt;p&gt;换句话说，在你有钱之前，没有人会因专利侵权而起诉你，而一旦你有钱了，人们无论是否有理由都会起诉你。所以我建议宿命论。不要浪费担心专利侵权的时间。你每次系鞋带可能都在侵犯一项专利。至少在开始时，只担心做出伟大的东西并获得大量用户。如果你成长到任何人认为值得攻击你的程度，你做得很好。&lt;/p&gt;&#xA;&lt;p&gt;我们确实建议我们资助的公司申请专利，但不是为了让它们可以起诉竞争对手。成功的初创公司要么被收购，要么发展成大公司。如果初创公司想发展成大公司，它们应该申请专利来建立它们将需要的专利组合，以与其他大公司维持武装休战。如果它们想被收购，它们应该申请专利，因为专利是与收购者求偶的一部分。&lt;/p&gt;&#xA;&lt;p&gt;大多数成功的初创公司都是通过被收购成功的，而大多数收购者关心专利。初创公司的收购对收购者来说通常是一个自制与购买的决策。我们是应该购买这家小型初创公司还是自己建立？有两件事，特别是，使它们决定不自己建立：如果你已经有一个庞大且快速增长的用户群，并且你在软件的关键部分有相当坚实的专利申请。&lt;/p&gt;&#xA;&lt;p&gt;大公司应该更喜欢购买而不是自己建立的第三个原因是：如果他们自己建立，他们会搞砸。但很少有公司足够聪明，能够向自己承认这一点。通常被问到的公司工程师是公司自己建立有多难，他们高估了自己的能力。[4] 专利似乎改变了平衡。它给了收购者一个借口，承认他们无法复制你在做的事情。它也可能帮助他们理解你的技术的特别之处。&lt;/p&gt;&#xA;&lt;p&gt;坦率地说，专利在软件业务中扮演如此小的角色让我感到惊讶。考虑到专家们对软件专利扼杀创新的所有可怕说法，这有点讽刺，但是当仔细观察软件业务时，最引人注目的是专利似乎多么不重要。&lt;/p&gt;&#xA;&lt;p&gt;在其他领域，公司定期因专利侵权起诉竞争对手。例如，机场行李扫描业务多年来一直是InVision和L-3两家公司共享的舒适双头垄断。2002年，一家名为Reveal的初创公司出现了，他们拥有新技术，可以制造三分之一的扫描仪。他们甚至在发布产品之前就因专利侵权而被起诉。&lt;/p&gt;&#xA;&lt;p&gt;在我们的世界里很少听到这种故事。我发现的一个例子是，令人尴尬的是，雅虎，它在2005年对一家名为Xfire的游戏初创公司提起了专利诉讼。Xfire似乎不是什么大公司，很难说为什么雅虎感到威胁。Xfire的工程副总裁曾在雅虎从事类似的工作——事实上，他被列为雅虎起诉的专利的发明人——所以也许其中有一些个人因素。我的猜测是雅虎的某人搞错了。无论如何，他们都没有非常积极地推进诉讼。&lt;/p&gt;&#xA;&lt;p&gt;为什么专利在软件中扮演如此小的角色？我能想到三个可能的原因。&lt;/p&gt;&#xA;&lt;p&gt;一个是软件是如此复杂，以至于专利本身价值不大。我在这里可能诋毁了其他领域，但似乎在大多数类型的工程中，你可以将一些新技术的细节交给一组中高质量的人并获得期望的结果。例如，如果有人开发了一种新的冶炼矿石工艺，可以获得更好的产量，你召集一组合格的专家并告诉他们，他们将能够获得相同的产量。这在软件中似乎不起作用。软件是如此微妙和不可预测，以至于&amp;quot;合格的专家&amp;quot;并不能让你走得很远。&lt;/p&gt;&#xA;&lt;p&gt;这就是为什么我们在软件业务中很少听到&amp;quot;合格的专家&amp;quot;这样的短语。这种能力水平能让你做的，比如说，使你的软件与其他软件兼容——八个月后，以巨大的成本。要做更难的事情，你需要个人的才华。如果你召集一组合格的专家告诉他们制作一个新的基于网络的电子邮件程序，他们会被一个有灵感的十九岁年轻人组成的团队打败。&lt;/p&gt;&#xA;&lt;p&gt;专家可以实现，但他们不能设计。或者更确切地说，实现专业知识是大多数人，包括专家自己，可以衡量的唯一类型。[5]&lt;/p&gt;&#xA;&lt;p&gt;但设计是一种明确的技能。它不仅仅是空灵的无形之物。当你不理解它们时，事物似乎总是无形的。在1800年，电对大多数人来说似乎是空灵的无形之物。谁知道其中有多少知识可以了解？设计也是如此。有些人擅长它，有些人不擅长，他们擅长或不擅长的东西是非常有形的。&lt;/p&gt;&#xA;&lt;p&gt;设计在软件中如此重要的原因可能是物理上的约束更少。建造物理物品是昂贵和危险的。可能选择的空间更小；你倾向于不得不作为更大的团体的一部分工作；你受到很多法规的约束。如果你和几个朋友决定创建一个新的基于网络的应用程序，你没有任何这些。&lt;/p&gt;&#xA;&lt;p&gt;因为软件中设计的空间如此之大，一个成功的应用程序往往远远超过其专利的总和。保护小公司不被大竞争对手复制的不仅仅是它们的专利，还有大公司在尝试时会搞砸的一千个小事情。&lt;/p&gt;&#xA;&lt;p&gt;专利在我们的世界中不重要的第二个原因是初创公司很少像Reveal那样正面攻击大公司。在软件业务中，初创公司通过超越老牌公司来击败它们。初创公司不构建桌面文字处理程序与微软Word竞争。[6] 他们构建Writely。如果这个范式拥挤，只需等待下一个；他们在这条路线上运行得相当频繁。&lt;/p&gt;</description>
    </item>
    <item>
      <title>边缘的力量</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/marginal/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/marginal/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_en/marginal/&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/marginal.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/marginal.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/marginal.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;边缘的力量&#34;&gt;边缘的力量&lt;/h1&gt;&#xA;&lt;p&gt;2006年6月&lt;/p&gt;&#xA;&lt;p&gt;（本文源于在 Usenix 2006 和 Railsconf 2006 的演讲。）&lt;/p&gt;&#xA;&lt;p&gt;几年前，我的朋友 Trevor 和我一起去看了苹果的车库。当我们站在那里时，他说在萨斯喀彻温省长大的他曾经对乔布斯和沃兹尼亚克必须在车库里工作的奉献精神感到惊叹。&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;那些人一定冻坏了！&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;这就是加州隐藏的优势之一：温和的气候意味着有很多边缘空间。在寒冷的地方，那些边缘被修剪掉了。内外之间有更清晰的界限，只有那些得到正式批准的项目——由组织、父母、妻子，或者至少由自己批准——才能获得适当的室内空间。这提高了新想法的激活能量。你不能只是修补。你必须证明其合理性。&lt;/p&gt;&#xA;&lt;p&gt;硅谷一些最著名的公司始于车库：惠普在1938年，苹果在1976年，谷歌在1998年。在苹果的情况下，车库故事有点像都市传说。沃兹说他们在那里所做的一切就是组装一些计算机，而他在自己的公寓或惠普的隔间里完成了Apple I和Apple II的实际设计。[1] 这显然太边缘了，即使是苹果的公关人员也无法接受。&lt;/p&gt;&#xA;&lt;p&gt;按照传统标准，乔布斯和沃兹尼亚克也是边缘人物。显然他们很聪明，但他们在纸上看起来不可能很好。当时他们是一对大学辍学生，之间只有大约三年的学业，而且还是嬉皮士。他们之前的商业经验包括制造&amp;quot;蓝盒子&amp;quot;来入侵电话系统，这是一个具有罕见区别的业务：既非法又不盈利。&lt;/p&gt;&#xA;&lt;h2 id=&#34;局外人&#34;&gt;局外人&lt;/h2&gt;&#xA;&lt;p&gt;现在，在硅谷的车库里运营的创业公司会感到自己是一个崇高传统的一部分，就像在阁楼里的诗人，或者负担不起加热工作室而不得不在室内戴贝雷帽的画家。但在1976年，这似乎并不那么酷。世界还没有意识到创办计算机公司与成为作家或画家属于同一类别。这种情况持续的时间不长。只有在过去几年中，硬件成本的急剧下降才允许局外人竞争。&lt;/p&gt;&#xA;&lt;p&gt;在1976年，每个人都看不起在车库里运营的公司，包括创始人。当他们得到一些钱时，乔布斯做的第一件事就是租用办公空间。他希望苹果看起来像一家真正的公司。&lt;/p&gt;&#xA;&lt;p&gt;他们已经拥有很少有真实公司拥有的东西：设计精良的产品。你会认为他们会有更多的信心。但我和很多创业公司创始人谈过，情况总是这样。他们建立了一些将要改变世界的东西，但他们担心的是没有像样的名片这样的小问题。&lt;/p&gt;&#xA;&lt;p&gt;这就是我想探讨的悖论：伟大的新事物往往来自边缘，然而发现它们的人被包括自己在内的所有人看不起。&lt;/p&gt;&#xA;&lt;p&gt;新事物来自边缘是一个老想法。我想检验它的内在结构。为什么伟大的想法来自边缘？什么样的想法？我们能做些什么来鼓励这个过程？&lt;/p&gt;&#xA;&lt;h2 id=&#34;内部人士&#34;&gt;内部人士&lt;/h2&gt;&#xA;&lt;p&gt;这么多好想法来自边缘的一个原因很简单：边缘太大了。如果内部人士意味着什么，那么局外人必须比内部人士多。如果局外人的数量巨大，即使人均很少，看起来也会有很多想法来自他们。但我认为还有更多的事情。成为内部人士有真正的缺点，在某些类型的工作中，这些缺点可能超过优点。&lt;/p&gt;&#xA;&lt;p&gt;想象一下，例如，如果政府决定委托某人写一部官方的《伟大的美国小说》。首先会有一场巨大的意识形态争论，争论选择谁。大多数最好的作家会因为冒犯了某一方而被排除。在剩下的人中，聪明的人会拒绝这样的工作，只剩下一些有错误野心的人。委员会会选择一个处于事业巅峰的人——也就是说，某人最好的工作已经过去——并移交项目，同时提供大量免费建议，说明这本书应该如何以积极的方式展示美国人民的力量和多样性等等。&lt;/p&gt;&#xA;&lt;p&gt;不幸的作家然后会坐下来工作，肩上承载着巨大的期望压力。不想搞砸这样一个公共委托，他会谨慎行事。这本书最好能赢得尊重，而确保这一点的方法是让它成为悲剧。观众必须被诱惑才能笑，但如果你杀人，他们会觉得必须认真对待你。众所周知，美国加上悲剧等于内战，所以那必须是关于什么的。十二年后最终完成时，这本书将是现有流行小说的900页拼贴——大致是《飘》加上《根》。但其体量和名人效应会使它成为几个月的畅销书，直到被脱口秀主持人的自传击败。这本书会被拍成电影然后被遗忘，除了那些更尖刻的评论家，在他们中间，它会成为虚假的代名词，就像米利·瓦尼利或《地球战场》。&lt;/p&gt;&#xA;&lt;p&gt;也许我有点被这个例子冲昏了头脑。然而，这难道不是这样的项目在每个点上都会展开的方式吗？政府比进入小说业务更了解情况，但在他们拥有自然垄断的其他领域，如核废料倾倒场、航空母舰和政权更迭，你会发现很多与这个项目同构的项目——实际上，还有很多不太成功的项目。&lt;/p&gt;&#xA;&lt;p&gt;这个小思想实验表明了内部人士项目的一些缺点：选择了错误类型的人，范围过大，无法承担风险，需要显得严肃，期望的重量，既得利益的力量，不具辨别力的观众，也许最危险的是，这种工作变成责任而不是娱乐的倾向。&lt;/p&gt;&#xA;&lt;h2 id=&#34;测试&#34;&gt;测试&lt;/h2&gt;&#xA;&lt;p&gt;一个有局外人和内部人士的世界意味着某种测试来区分他们。大多数选择精英的测试的问题在于，有两种方式通过它们：在他们试图测量的方面做得好，或者在测试本身方面做得好。&lt;/p&gt;&#xA;&lt;p&gt;因此，关于一个领域的第一个问题是其测试有多诚实，因为这告诉你成为局外人意味着什么。这告诉你当你与权威人士意见不一致时，应该多大程度上相信你的直觉，是否值得通过通常的渠道成为他们自己，也许你是否想在这个领域工作。&lt;/p&gt;&#xA;&lt;p&gt;当有一致的质量标准，并且运行测试的人真正关心其完整性时，测试最难被破解。例如，硬科学博士课程的录取相当诚实。教授将得到他们录取的人作为自己的研究生，所以他们努力选择好的人，并且他们有相当多的数据可以参考。而本科录取似乎更容易被破解。&lt;/p&gt;&#xA;&lt;p&gt;判断一个领域是否有一致标准的一种方法是领先从业者与在大学教授该学科的人之间的重叠。在规模的一端，你有数学和物理等领域，几乎所有的老师都是最好的从业者。中间是医学、法律、历史、建筑和计算机科学，其中很多是。底部是商业、文学和视觉艺术，教师和领先从业者之间几乎没有重叠。正是这一端产生了&amp;quot;不能做的人教&amp;quot;这样的短语。&lt;/p&gt;&#xA;&lt;p&gt;顺便说一句，这个规模在决定大学学习什么时可能很有帮助。当我在大学时，规则似乎是你应该学习你最感兴趣的东西。但回想起来，你最好与一个擅长的人一起学习中等有趣的东西，而不是与一个不擅长的人一起学习非常有趣的东西。你经常听到人们说你不应该在大学主修商业，但这实际上是一个更一般规则的实例：不要从不擅长它们的老师那里学习东西。&lt;/p&gt;&#xA;&lt;p&gt;你应该多担心成为局外人取决于内部人士的质量。如果你是一个业余数学家，认为自己解决了一个著名的开放问题，最好回去检查一下。当我在研究生院时，数学系的一个朋友的工作是回复那些寄来费马最后定理等证明的人，看起来他并不认为这是有价值的信息来源——更像是值守心理健康热线。而如果你写的东西似乎与英语教授感兴趣的不同，那不一定是问题。&lt;/p&gt;&#xA;&lt;h2 id=&#34;反测试&#34;&gt;反测试&lt;/h2&gt;&#xA;&lt;p&gt;当选择精英的方法完全腐败时，大多数好人都会成为局外人。例如，在艺术中，贫穷、被误解的天才的形象不仅仅是一个可能的伟大艺术家形象：它是标准形象。顺便说一句，我并不是说这是正确的，但这个形象如此深入人心是很有启发性的。你不能让这样的说辞贴在数学或医学上。[2]&lt;/p&gt;&#xA;&lt;p&gt;如果足够腐败，测试就成为反测试，通过让人们做只有错误的人才会做的事情来过滤掉应该选择的人。高中受欢迎度似乎就是这样一个测试。在成人世界有很多类似的测试。例如，在普通大公司的等级制度中晋升需要关注政治，很少有深思熟虑的人能分心于此。[3] 像比尔·盖茨这样的人可以在他手下发展一家公司，但很难想象他有耐心在通用电气——或者实际上是微软——攀登公司阶梯。&lt;/p&gt;&#xA;&lt;p&gt;当你想到这一点时，这有点奇怪，因为苍蝇之王式的学校和官僚公司都是默认的。可能有很多人从一个到另一个，从未意识到整个世界并不是这样运作的。&lt;/p&gt;&#xA;&lt;p&gt;我认为这就是大公司经常被创业公司蒙蔽的一个原因。大公司的人没有意识到他们生活在一个环境中的程度，这个环境是一个大的、持续的测试，测试错误的品质。&lt;/p&gt;&#xA;&lt;p&gt;如果你是一个局外人，你击败内部人士的最佳机会显然是在腐败测试选择蹩脚精英的领域。但有一个陷阱：如果测试是腐败的，你的胜利将不会被认可，至少在你有生之年不会。你可能觉得你不需要那个，但历史表明，在腐败测试的领域工作是危险的。你可能击败了内部人士，但与在一个更诚实的领域相比，你所做的工作在绝对尺度上不会那么好。&lt;/p&gt;&#xA;&lt;p&gt;例如，艺术标准在十八世纪上半叶几乎与今天一样腐败。这是那些蓬松的理想化伯爵夫人与膝上狗肖像的时代。夏尔丹决定跳过所有这些，按照他看到的方式画普通事物。他现在被认为是那个时期最好的——但仍然不配与达芬奇、贝利尼或梅姆林相提并论，他们都拥有诚实标准的额外鼓励。&lt;/p&gt;</description>
    </item>
    <item>
      <title>这是哪个微软的Altair Basic？</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/altair/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/altair/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_en/altair/&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/altair.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/altair.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/altair.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;这是哪个微软的altair-basic&#34;&gt;这是哪个微软的Altair Basic？&lt;/h1&gt;&#xA;&lt;p&gt;2015年2月&lt;/p&gt;&#xA;&lt;p&gt;如果你想了解初创公司，你可以尝试的最有价值的练习之一是看看最成功的公司，并解释为什么它们在刚推出时并不像看起来那么糟糕。因为实际上它们在刚开始时看起来都很糟糕。不仅仅是小，而是糟糕。不仅仅是登上大山的第一步。更像是踏入沼泽的第一步。&lt;/p&gt;&#xA;&lt;p&gt;Altair的Basic解释器？这怎么可能成长为一家大公司？人们在陌生人的公寓里睡气垫床？一个让大学生互相窥探的网站？一个使用电视作为显示器的爱好者用的弱小单板计算机？一个新的搜索引擎，当时已经有大约10个，而且它们都在试图淡化搜索？这些想法不仅看起来小。它们看起来是错的。它们是那种你不仅不能忽视，而且会嘲笑的想法。&lt;/p&gt;&#xA;&lt;p&gt;通常创始人自己也不知道为什么他们的想法有前途。他们被本能吸引到这些想法，因为他们生活在未来，并且感觉到缺少了什么。但他们无法用语言准确表达他们的丑小鸭将如何成长为美丽的大天鹅。&lt;/p&gt;&#xA;&lt;p&gt;大多数人在听到一个听起来糟糕的新初创公司想法时的第一反应是取笑它。即使是很多应该更了解情况的人也是如此。&lt;/p&gt;&#xA;&lt;p&gt;当我遇到一个想法听起来糟糕的初创公司时，我会问&amp;quot;这是哪个微软的Altair Basic？&amp;ldquo;现在这是一个谜题，解决它的责任在我身上。有时我想不出答案，特别是当想法是虚构的时候。但 remarkable 的是，经常确实有答案。通常这是创始人自己还没有看到的答案。&lt;/p&gt;&#xA;&lt;p&gt;有趣的是，有时有多个答案。几天前我和一家初创公司交谈，它可能成长为3个不同的微软。它们的大小可能会有数量级的差异。但你永远无法预测一个微软会有多大，所以在那种情况下，我鼓励创始人遵循哪条对他们来说最立即令人兴奋的道路。他们的本能让他们走到了这一步。为什么现在停止？&lt;/p&gt;</description>
    </item>
    <item>
      <title>风险资本挤压</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/vcsqueeze/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/vcsqueeze/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_en/vcsqueeze/&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/vcsqueeze.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/vcsqueeze.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/vcsqueeze.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;风险资本挤压&#34;&gt;风险资本挤压&lt;/h1&gt;&#xA;&lt;p&gt;2005年11月&lt;/p&gt;&#xA;&lt;p&gt;未来几年，风险投资基金将发现自己从四个方向受到挤压。他们已经陷入卖方市场，因为他们在泡沫结束时筹集的巨额资金仍未投资。这本身并不是世界末日。事实上，这只是风险投资业务常态的更极端版本：太多资金追逐太少交易。&lt;/p&gt;&#xA;&lt;p&gt;不幸的是，这些少数交易现在想要的钱越来越少，因为创办初创公司变得如此便宜。四个原因：开源，使软件免费；摩尔定律，使硬件在几何上更接近免费；网络，如果你做得好，推广是免费的；更好的语言，使开发成本低得多。&lt;/p&gt;&#xA;&lt;p&gt;1995年我们创办初创公司时，前三个是我们最大的开支。我们不得不支付5000美元购买Netscape Commerce Server，这是当时唯一支持安全http连接的软件。我们支付3000美元购买一台配备90 MHz处理器和32兆内存的服务器。我们支付了一家公关公司约30000美元来推广我们的发布。&lt;/p&gt;&#xA;&lt;p&gt;现在你可以免费获得所有这三样。你可以免费获得软件；人们扔掉比我们第一台服务器更强大的计算机；如果你做出了好东西，你可以通过在线口碑产生比我们第一家公关公司通过印刷媒体获得的流量多十倍。&lt;/p&gt;&#xA;&lt;p&gt;当然，普通初创公司的另一个重大变化是编程语言已经改进了——或者说，中位数语言已经改进了。十年前的大多数初创公司，软件开发意味着十个程序员用C++编写代码。现在同样的工作可能由一两个使用Python或Ruby的人完成。&lt;/p&gt;&#xA;&lt;p&gt;在泡沫期间，许多人预测初创公司会将开发外包到印度。我认为未来的一个更好模式是David Heinemeier Hansson，他将开发外包给了一种更强大的语言。许多知名的应用程序现在，比如BaseCamp，只由一个程序员编写。而且一个人比十个人便宜10倍以上，因为（a）他不会在会议上浪费任何时间，（b）由于他可能是创始人，他可以不付给自己工资。&lt;/p&gt;&#xA;&lt;p&gt;因为创办初创公司如此便宜，风险投资家现在常常想给初创公司比初创公司想要接受的钱更多的钱。风险投资家喜欢一次投资数百万。但正如一位风险投资家在他资助的一家初创公司只愿意接受大约五十万美元后告诉我的，&amp;ldquo;我不知道我们要做什么。也许我们不得不把一些钱还回去。&amp;ldquo;意思是把一些资金还给提供资金的机构投资者，因为不可能全部投资。&lt;/p&gt;&#xA;&lt;p&gt;在这个已经很糟糕的情况下，出现了第三个问题：萨班斯-奥克斯利法案。萨班斯-奥克斯利法案是泡沫后通过的一项法律，大幅增加了上市公司的监管负担。除了合规成本，每年至少两百万美元外，该法律还给公司高管带来了可怕的法律风险。我认识的一位经验丰富的首席财务官直截了当地说：&amp;ldquo;我现在不想成为上市公司的首席财务官。&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;你可能会认为负责任的公司治理是一个不能太过分的领域。但在任何法律中你都可能太过分，这句话让我相信萨班斯-奥克斯利法案肯定太过分了。这位首席财务官是我认识的最聪明、最正直的财务人员。如果萨班斯-奥克斯利法案阻止像他这样的人成为上市公司的首席财务官，这足以证明它已经坏了。&lt;/p&gt;&#xA;&lt;p&gt;很大程度上由于萨班斯-奥克斯利法案，现在很少有初创公司上市。实际上，成功现在等于被收购。这意味着风险投资家现在的业务是寻找有前途的小型2-3人初创公司，并将它们打造成需要1亿美元收购的公司。他们并不是故意从事这个业务的；这只是他们的业务演变成的样子。&lt;/p&gt;&#xA;&lt;p&gt;因此出现了第四个问题：收购者已经开始意识到他们可以批发购买。他们为什么要等风险投资家使他们想要的初创公司变得更昂贵？风险投资家增加的大部分东西，收购者无论如何都不想要。收购者已经有品牌知名度和人力资源部门。他们真正想要的是软件和开发人员，而这正是初创公司在早期阶段的本质：集中的软件和开发人员。&lt;/p&gt;&#xA;&lt;p&gt;谷歌，典型地，似乎是第一个意识到这一点的。&amp;ldquo;早点把你们的初创公司带给我们，&amp;ldquo;谷歌在初创学校的演讲者说。他们对此非常明确：他们喜欢在初创公司进行A轮融资的时候收购它们。（A轮融资是第一轮真正的风险投资资金；通常发生在第一年。）这是一个绝妙的策略，无疑其他大型技术公司会试图效仿。除非他们想要谷歌吃掉更多的午餐。&lt;/p&gt;&#xA;&lt;p&gt;当然，谷歌在收购初创公司方面有优势：那里的很多人都富有，或者期望在他们的期权归属时变得富有。普通员工很难推荐收购；看到一群二十岁的年轻人变得富有，而你还拿着工资工作，这太烦人了。即使这对你的公司来说是正确的做法。&lt;/p&gt;&#xA;&lt;p&gt;解决方案&lt;/p&gt;&#xA;&lt;p&gt;尽管现在情况看起来很糟糕，但风险投资家有一种自救的方法。他们需要做两件事，一件不会让他们惊讶，另一件会让他们觉得是禁忌。&lt;/p&gt;&#xA;&lt;p&gt;让我们从明显的一个开始：游说放松萨班斯-奥克斯利法案。这项法律的创建是为了防止未来的安然事件，而不是摧毁IPO市场。由于该法案通过时IPO市场几乎已经死亡，很少有人看到它会产生什么坏影响。但现在技术已经从上一次萧条中恢复，我们可以清楚地看到萨班斯-奥克斯利法案已经成为一个瓶颈。&lt;/p&gt;&#xA;&lt;p&gt;初创公司是脆弱的植物——实际上是幼苗。这些幼苗值得保护，因为它们长成经济的大树。经济增长的大部分是它们的增长。我认为大多数政治家都意识到这一点。但他们没有意识到初创公司有多么脆弱，以及它们多么容易成为旨在修复其他问题的法律的附带损害。&lt;/p&gt;&#xA;&lt;p&gt;更危险的是，当你摧毁初创公司时，它们几乎不会发出任何声音。如果你踩到煤炭行业的脚趾，你会听到它。但如果你无意中扼杀了初创公司行业，发生的只是下一批谷歌的创始人留在研究生院而不是创办公司。&lt;/p&gt;&#xA;&lt;p&gt;我的第二个建议会让风险投资家感到震惊：让创始人在A轮融资中部分套现。目前，当风险投资家投资初创公司时，他们获得的所有股票都是新发行的，所有资金都流向公司。他们也可以直接从创始人那里购买一些股票。&lt;/p&gt;&#xA;&lt;p&gt;大多数风险投资家几乎有宗教规则反对这样做。他们不希望创始人在公司出售或上市前得到一分钱。风险投资家痴迷于控制，他们担心如果创始人有钱，他们对创始人的影响力会减弱。&lt;/p&gt;&#xA;&lt;p&gt;这是一个愚蠢的计划。事实上，让创始人早期出售一点股票通常对公司更有好处，因为它会使创始人对风险的态度与风险投资家的一致。目前情况是，他们对风险的态度往往是截然相反的：创始人一无所有，宁愿100%的机会获得100万美元，而不是20%的机会获得1000万美元，而风险投资家能够&amp;quot;理性&amp;quot;并倾向于后者。&lt;/p&gt;&#xA;&lt;p&gt;无论他们说什么，创始人早期出售公司而不是进行A轮融资的原因是他们预先得到了报酬。第一个一百万比后续的一百万值钱得多。如果创始人能早期出售一点股票，他们会很乐意接受风险投资的钱，并把赌注押在更大的结果上。&lt;/p&gt;&#xA;&lt;p&gt;那么为什么不让创始人得到那一百万，或者至少五十万呢？风险投资家会得到相同数量的股票。那么如果一些钱流向创始人而不是公司又怎样呢？&lt;/p&gt;&#xA;&lt;p&gt;一些风险投资家会说这是不可想象的——他们希望所有的钱都用于发展公司。但事实是，当前风险投资投资的巨大规模是由风险投资基金的结构决定的，而不是初创公司的需求。这些大型投资往往经常被用来摧毁公司而不是发展公司。&lt;/p&gt;&#xA;&lt;p&gt;资助我们初创公司的天使投资人让创始人直接向他们出售了一些股票，这对每个人来说都是一笔好交易。天使投资人在那笔投资上获得了巨大回报，所以他们很高兴。对我们创始人来说，它减弱了初创公司令人恐惧的全有或全无性，其原始形式更多的是一种干扰而不是激励。&lt;/p&gt;&#xA;&lt;p&gt;如果风险投资家对让创始人部分套现的想法感到恐惧，让我告诉他们一些更可怕的事情：你们现在正在直接与谷歌竞争。感谢Trevor Blackwell、Sarah Harlin、Jessica Livingston和Robert Morris阅读本文的草稿。&lt;/p&gt;&#xA;&lt;p&gt;罗马尼亚翻译 希伯来翻译 日语翻译 如果你喜欢这个，你可能也喜欢《黑客与画家》。&lt;/p&gt;</description>
    </item>
    <item>
      <title>高分辨率社会</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/highres/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/highres/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_en/highres/&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/highres.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/highres.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/highres.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;高分辨率社会&#34;&gt;高分辨率社会&lt;/h1&gt;&#xA;&lt;p&gt;2008年12月&lt;/p&gt;&#xA;&lt;p&gt;在几乎整个历史中，一个社会的成功与其组建大型和有纪律的组织能力成正比。那些押注规模经济的人通常获胜，这意味着最大的组织是最成功的。&lt;/p&gt;&#xA;&lt;p&gt;事物已经发生了如此大的变化，以至于我们难以相信，但直到几十年前，最大的组织往往是最进步的。1960年，一个雄心勃勃的大学毕业生想在福特、通用电气或NASA巨大而光鲜的办公室工作。小意味着小打小闹。1960年的小并不意味着一个酷酷的小型创业公司。它意味着希德叔叔的鞋店。&lt;/p&gt;&#xA;&lt;p&gt;当我在1970年代长大时，&amp;ldquo;公司阶梯&amp;quot;的概念仍然非常活跃。标准计划是努力进入一所好大学，然后被征召到某个组织，然后逐渐上升到责任越来越大的职位。更有雄心的人只是希望更快地爬上同一个阶梯。[1]&lt;/p&gt;&#xA;&lt;p&gt;但在二十世纪晚期，某些事情发生了变化。事实证明，规模经济并不是唯一起作用的力量。特别是在技术领域，从小团体获得的更高速度开始超越规模的优势。&lt;/p&gt;&#xA;&lt;p&gt;未来被证明与我们1970年预期的不同。我们预期的圆顶城市和飞行汽车未能实现。但幸运的是，带有标明我们专业和等级徽章的连体服也未能实现。经济现在看起来不是由少数几个巨大的树形组织主导，而是一个由较小独立单位组成的流动网络。&lt;/p&gt;&#xA;&lt;p&gt;并不是说大组织停止了工作。没有证据表明像罗马军队或英国东印度公司这样著名成功的组织比今天同规模的组织少受繁文缛节和政治的困扰。但他们的对手是那些不能通过发现新技术来即时改变规则的人。现在事实证明，&amp;ldquo;大型和有纪律的组织获胜&amp;quot;这个规则需要附加一个限定条件：&amp;ldquo;在变化缓慢的游戏中&amp;rdquo;。在变化达到足够速度之前，没有人知道这一点。&lt;/p&gt;&#xA;&lt;p&gt;不过，大组织现在将开始做得更差，因为历史上第一次他们不再获得最优秀的人才。现在雄心勃勃的大学毕业生不想为大公司工作。他们想为正在迅速成长为大公司的热门创业公司工作。如果他们真的有雄心，他们想自己创业。[2]&lt;/p&gt;&#xA;&lt;p&gt;这并不意味着大公司会消失。说创业公司会成功意味着大公司将存在，因为成功的创业公司要么成为大公司，要么被它们收购。[3] 但大型组织可能永远不会再次扮演它们在二十世纪末以前所扮演的主导角色。&lt;/p&gt;&#xA;&lt;p&gt;一个持续如此之久的趋势竟然会耗尽，这有点令人惊讶。一个规则工作了数千年然后改变极性，这种情况多久发生一次？&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;越大越好&amp;quot;的千年运行给我们留下了许多现在已经过时但极其根深蒂固的传统。这意味着雄心勃勃的人现在可以对其进行套利。准确理解要保留哪些想法，哪些现在可以丢弃，将非常有价值。&lt;/p&gt;&#xA;&lt;p&gt;观察的地方是小规模传播开始的地方：创业公司的世界。&lt;/p&gt;&#xA;&lt;p&gt;一直有偶尔的案例，特别是在美国，雄心勃勃的人在自己下面成长阶梯而不是爬上去。但直到最近，这是一条异常的路线，往往只有局外人才会走。十九世纪伟大的实业家如此缺乏正规教育并非巧合。无论他们的公司最终变得多大，他们最初基本上都是机械师和店主。没有大学教育的人如果能避免的话，是不会走这一步的。直到技术创业公司，特别是互联网创业公司的兴起，受过教育的人自己创业是非常不寻常的。&lt;/p&gt;&#xA;&lt;p&gt;离开肖克利半导体创立仙童半导体的八个人，最初的硅谷创业公司，最初甚至没有试图创业。他们只是在寻找一家愿意雇佣他们作为团队的公司。然后他们中一个人的父母介绍他们给一家小型投资银行，后者提出为他们创业融资，所以他们就这样做了。但创业对他们来说是一个陌生的想法；他们是不小心走到这一步的。[4]&lt;/p&gt;&#xA;&lt;p&gt;现在我想，几乎所有会编程的斯坦福或伯克利本科生都至少考虑过创业的想法。东海岸的大学并不落后，英国大学只比他们落后一点点。这种模式表明，斯坦福和伯克利的态度不是异常，而是领先指标。这就是世界发展的方向。&lt;/p&gt;&#xA;&lt;p&gt;当然，互联网创业公司仍然只是世界经济的一小部分。基于它们的趋势能有那么强大吗？&lt;/p&gt;&#xA;&lt;p&gt;我认为是的。没有理由假设这个领域可以完成的工作量有任何限制。像科学一样，财富似乎以分形方式扩展。当瓦特开始研究蒸汽动力时，它只是英国经济的很小一部分。但他的工作导致了更多的工作，直到这一部分扩展到比最初所属的整个经济更大的东西。&lt;/p&gt;&#xA;&lt;p&gt;互联网也可能发生同样的事情。如果互联网创业公司为雄心勃勃的人提供了最好的机会，那么很多雄心勃勃的人会创办它们，这部分经济会以通常的分形方式膨胀。&lt;/p&gt;&#xA;&lt;p&gt;即使与互联网相关的应用程序只成为世界经济的十分之一，这个组成部分也会为其他部分定下基调。经济中最活跃的部分总是如此，从薪资到着装标准。不仅仅是因为它的声望，还因为经济中最活跃部分所依据的原则往往是行之有效的原则。&lt;/p&gt;&#xA;&lt;p&gt;对于未来，押注的趋势似乎是个体绩效衡量的、小型自治团体组成的网络。获胜的社会将是那些阻碍最小的社会。&lt;/p&gt;&#xA;&lt;p&gt;就像最初的工业革命一样，一些社会将比其他社会更擅长这个。在英国诞生的一代内，工业革命传播到欧洲大陆和北美。但它并没有传播到任何地方。这种新的做事方式只能在为此做好准备的地方扎根。它只能传播到已经有活力中产阶级的地方。&lt;/p&gt;&#xA;&lt;p&gt;1960年代在硅谷开始的变革有类似的社会组成部分。那里开发了两种新技术：建造集成电路的技术，以及建造一种通过创造新技术来快速成长的新型公司的技术。建造集成电路的技术迅速传播到其他国家。但建造创业公司的技术没有。五十年后，创业公司在硅谷无处不在，在美国其他少数几个城市也很常见，但在世界大部分地区仍然是异常现象。&lt;/p&gt;&#xA;&lt;p&gt;创业公司没有像工业革命那样广泛传播的部分原因——可能主要是社会破坏性。尽管工业革命带来了许多社会变化，但它并没有与&amp;quot;越大越好&amp;quot;的原则作斗争。恰恰相反：两者完美地契合。新的工业公司适应了像军队和公务员这样现有大组织的习俗，产生的混合体运作良好。&amp;ldquo;工业领袖&amp;quot;向&amp;quot;工人军队&amp;quot;发布命令，每个人都知道他们应该做什么。&lt;/p&gt;&#xA;&lt;p&gt;创业公司在社会上似乎更逆流而上。它们很难在重视等级制度和稳定性的社会中繁荣，就像工业化很难在被随意从商人阶级偷窃的人统治的社会中繁荣一样。但在工业革命发生时，已经有少数几个国家度过了那个阶段。这次似乎没有那么多准备好的国家。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 这个模式的一个奇怪后果是，通常赚更多钱的方法是成为经理。这是创业公司解决的问题之一。&lt;/p&gt;&#xA;&lt;p&gt;[2] 美国汽车公司一直比日本汽车公司做得差得多有很多原因，但至少其中一个是乐观的原因：美国毕业生有更多选择。&lt;/p&gt;&#xA;&lt;p&gt;[3] 公司有一天可能在收入上做大而在人员规模上不做大是有可能的，但我们在这个趋势上还没有走得很远。&lt;/p&gt;&#xA;&lt;p&gt;[4] Lecuyer, Christophe, 《制造硅谷》，MIT出版社，2006年。&lt;/p&gt;&#xA;&lt;p&gt;感谢特雷弗·布莱克韦尔、保罗·布赫海特、杰西卡·利文斯顿和罗伯特·莫里斯阅读本文的草稿。&lt;/p&gt;</description>
    </item>
    <item>
      <title>黑客这个词</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/gba/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/gba/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_en/gba/&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/gba.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/gba.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/gba.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;黑客这个词&#34;&gt;黑客这个词&lt;/h1&gt;&#xA;&lt;p&gt;2004年4月&lt;/p&gt;&#xA;&lt;p&gt;对大众媒体来说，&amp;ldquo;黑客&amp;quot;意味着闯入计算机的人。在程序员中，它意味着一个好的程序员。但这两种含义是相连的。对程序员来说，&amp;ldquo;黑客&amp;quot;在最字面的意义上意味着精通：能够让计算机做他想要的事情的人——不管计算机是否愿意。&lt;/p&gt;&#xA;&lt;p&gt;更令人困惑的是，名词&amp;quot;hack&amp;quot;也有两种含义。它可以是赞美，也可以是侮辱。当你用丑陋的方式做某事时，这被称为hack。但当你做某事如此聪明以至于你以某种方式击败了系统时，那也被称为hack。这个词在前一种含义中比后一种更常用，可能是因为丑陋的解决方案比 brilliant 的更常见。&lt;/p&gt;&#xA;&lt;p&gt;信不信由你，&amp;ldquo;hack&amp;quot;的两种含义也是相连的。丑陋和富有想象力的解决方案有共同之处：它们都打破了规则。在仅仅丑陋的违规（用胶带把东西 attach 到你的自行车上）和 brilliantly 富有想象力的违规（丢弃欧几里得空间）之间存在一个逐渐的连续谱。&lt;/p&gt;&#xA;&lt;p&gt;黑客文化比计算机更早。当理查德·费曼在曼哈顿计划工作时，他常常通过闯入包含秘密文件的保险箱来娱乐自己。这个传统今天仍在继续。当我们读研究生时，我的一位在MIT周围花了太多时间的黑客朋友有自己的开锁工具包。（他现在经营对冲基金，这不是一个无关的企业。）&lt;/p&gt;&#xA;&lt;p&gt;有时候很难向当局解释为什么有人会想做这种事情。我的另一个朋友曾经因为闯入计算机而与政府惹上麻烦。这最近才被宣布为犯罪，FBI发现他们通常的调查技术不起作用。警察调查显然是从动机开始的。通常的动机很少：毒品、金钱、性、复仇。智力好奇心不在FBI的动机清单上。确实，整个概念对他们来说似乎很陌生。&lt;/p&gt;&#xA;&lt;p&gt;当权者往往对黑客普遍的不服从态度感到恼火。但这种不服从是使他们成为优秀程序员的品质的副产品。当CEO用通用的企业新闻发言时，他们可能会嘲笑他，但他们也会嘲笑告诉他们某个问题无法解决的人。压制一个，你就压制了另一个。&lt;/p&gt;&#xA;&lt;p&gt;这种态度有时是装出来的。有时年轻的程序员注意到著名黑客的怪癖，并决定采用一些自己的怪癖，以便看起来更聪明。虚假版本不仅令人讨厌；这些伪装者的 prickly 态度实际上会减慢创新过程。&lt;/p&gt;&#xA;&lt;p&gt;但即使考虑到他们令人讨厌的怪癖，黑客的不服从态度也是一个净胜利。我希望它的优势能被更好地理解。&lt;/p&gt;&#xA;&lt;p&gt;例如，我怀疑好莱坞的人们对黑客对版权的态度感到困惑。它们是Slashdot上激烈讨论的 perennial 话题。但是，为什么编程的人们应该如此关心版权，在所有事情中？&lt;/p&gt;&#xA;&lt;p&gt;部分原因是有些公司使用机制来防止复制。向任何黑客展示一把锁，他的第一个念头是如何打开它。但黑客对版权和专利等措施感到警惕有更深层次的原因。他们将 increasingly 激进的措施保护&amp;quot;知识产权&amp;quot;视为对他们工作所需的 intellectual freedom 的威胁。他们是对的。&lt;/p&gt;&#xA;&lt;p&gt;正是通过在当前技术内部探查，黑客才获得了下一代的想法。不，谢谢，知识产权所有者可能会说，我们不需要任何外部帮助。但他们错了。下一代计算机技术经常——或许比不是更经常——是由外人开发的。&lt;/p&gt;&#xA;&lt;p&gt;1977年，毫无疑问IBM内部有一些团体正在开发他们期望成为下一代商业计算机的东西。他们错了。下一代商业计算机正在由两个名叫史蒂夫的长发男人在洛斯阿尔托斯的车库里以完全不同的线路开发。大约在同一时间，当权者正在合作开发官方的下一代操作系统Multics。但两个认为Multics过于复杂的家伙离开去写自己的系统。他们给它起了一个对Multics开玩笑的名字：Unix。&lt;/p&gt;&#xA;&lt;p&gt;最新的知识产权法律对导致新想法的那种探查施加了前所未有的限制。在过去，竞争对手可能使用专利来阻止你销售他们制造的东西的副本，但他们不能阻止你拆开一个来看它是如何工作的。最新的法律使这成为犯罪。如果我们不能研究当前技术来弄清楚如何改进它，我们如何开发新技术？&lt;/p&gt;&#xA;&lt;p&gt;具有讽刺意味的是，黑客自己招致了这一点。计算机是造成问题的原因。机器内的控制系统过去是物理的：齿轮、杠杆和凸轮。 increasingly，产品的大脑（从而价值）在软件中。我指的是一般意义上的软件：即数据。LP上的歌曲是物理压印在塑料中的。iPod磁盘上的歌曲只是存储在上面。&lt;/p&gt;&#xA;&lt;p&gt;数据根据定义很容易复制。互联网使副本容易分发。所以公司害怕不足为奇。但是，像经常发生的那样，恐惧模糊了他们的判断。政府用严酷的法律来保护知识产权。他们可能是好意的。但他们可能没有意识到这样的法律弊大于利。&lt;/p&gt;&#xA;&lt;p&gt;为什么程序员如此强烈地反对这些法律？如果我是一个立法者，我会对这个谜团感兴趣——出于同样的原因，如果我是一个农民，突然一天晚上听到很多咯咯声来自我的鸡舍，我会想要出去调查。黑客不笨，而这个世界上 unanimity 很罕见。所以如果他们都在咯咯叫，也许有什么不对劲。&lt;/p&gt;&#xA;&lt;p&gt;难道这样的法律，虽然意图保护美国，但实际上会伤害它吗？想想看。费曼在曼哈顿计划期间闯入保险箱有一些非常美国化的东西。很难想象当时的德国当局对这类事情有幽默感。也许这不是巧合。&lt;/p&gt;&#xA;&lt;p&gt;黑客是不守规矩的。这就是黑客的本质。这也是美国精神的本质。硅谷在美国，而不是法国、德国、英国或日本，这绝非偶然。在那些国家，人们在 lines 内着色。&lt;/p&gt;&#xA;&lt;p&gt;我在佛罗伦萨住了一段时间。但在那里呆了几个月后，我意识到我无意识希望在那里找到的东西 back 在我刚刚离开的地方。佛罗伦萨著名的原因是，在1450年，它是纽约。在1450年，它充满了你现在在美国发现的那种动荡和雄心勃勃的人。（所以我回到了美国。）&lt;/p&gt;&#xA;&lt;p&gt;美国的一个巨大优势是它为正确的那种不守规矩提供了宜人的氛围——它不仅是聪明人的家园，也是 smart-alecks 的家园。黑客 invariably 是 smart-alecks。如果我们有一个国定假日，那将是4月1日。我们对 brilliant 或可怕 cheesy 的解决方案使用同一个词，这充分说明了我们的工作。当我们炮制出一个时，我们不总是100%确定它是哪种。但只要它有正确的错误类型，那就是一个有希望的迹象。人们认为编程是精确和有条理的，这很奇怪。计算机是精确和有条理的。黑客是你在开怀大笑时做的事情。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
