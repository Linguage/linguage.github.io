<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>展示 on Linguista</title>
    <link>https://linguage.github.io/tags/%E5%B1%95%E7%A4%BA/</link>
    <description>Recent content in 展示 on Linguista</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="https://linguage.github.io/tags/%E5%B1%95%E7%A4%BA/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>如何向投资者展示</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/investors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/investors/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_en/investors/&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/investors.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/investors.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/investors.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;如何向投资者展示&#34;&gt;如何向投资者展示&lt;/h1&gt;&#xA;&lt;p&gt;2006年8月&lt;/p&gt;&#xA;&lt;p&gt;想要创业？获得Y Combinator资助。&lt;/p&gt;&#xA;&lt;p&gt;几天后就是演示日，今年夏天我们资助的创业公司将向投资者展示。Y Combinator每年一月和六月资助创业公司。十周后，我们邀请所有我们认识的投资者来听他们展示到目前为止所构建的东西。&lt;/p&gt;&#xA;&lt;p&gt;十周时间不多。普通创业公司在十周后可能没有什么可展示的。但普通创业公司会失败。当你观察那些后来做得很好的公司时，你会发现很多都是从某人用一两周不间断的工作敲出一个原型开始的。创业公司是&amp;quot;欲速则不达&amp;quot;规则的反例。&lt;/p&gt;&#xA;&lt;p&gt;（太多的钱对创业公司来说似乎和太多的时间一样糟糕，所以我们也不给他们太多钱。）&lt;/p&gt;&#xA;&lt;p&gt;演示日前一周，我们有一个叫做排练日的彩排。在其他Y Combinator活动中，我们允许外部客人参加，但排练日不行。除了其他创始人，没有人可以看到排练。&lt;/p&gt;&#xA;&lt;p&gt;排练日的展示通常相当粗糙。但这是可以预料的。我们努力选择擅长构建东西的创始人，而不是擅长展示的人。有些创始人刚刚大学毕业，甚至还在学校，从未在他们不认识的人群面前讲过话。&lt;/p&gt;&#xA;&lt;p&gt;所以我们专注于基础知识。在演示日，每个创业公司只有十分钟时间，所以我们鼓励他们专注于两个目标：(a) 解释你在做什么，(b) 解释为什么用户会想要它。&lt;/p&gt;&#xA;&lt;p&gt;这听起来可能很容易，但当演讲者没有展示经验，而且他们正在向主要是非技术背景的观众解释技术问题时，这并不容易。&lt;/p&gt;&#xA;&lt;p&gt;当创业公司向投资者展示时，这种情况不断重复：不擅长解释的人，对不擅长理解的人讲话。实际上每个成功的创业公司，包括像谷歌这样的明星公司，都在某个时候向不理解的投资者展示并被拒绝。这是因为创始人不擅长展示，还是因为投资者迟钝？可能两者都有。&lt;/p&gt;&#xA;&lt;p&gt;在最近的排练日，我们四个Y Combinator合伙人发现自己说了很多和前两次一样的话。所以在晚宴后，我们收集了所有关于向投资者展示的建议。大多数创业公司面临类似的挑战，所以我们希望这会对更广泛的受众有用。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-解释你在做什么&#34;&gt;1. 解释你在做什么。&lt;/h2&gt;&#xA;&lt;p&gt;投资者在判断早期创业公司时的主要问题是你是否做出了引人注目的产品。在他们能够判断你是否构建了一个好的x之前，他们必须理解你构建了什么类型的x。如果你不告诉他们你做什么，而是让他们听某种开场白，他们会感到非常沮丧。&lt;/p&gt;&#xA;&lt;p&gt;尽快说出你在做什么，最好在第一句。&amp;ldquo;我们是杰夫和鲍勃，我们构建了一个易于使用的基于网络的数据库。现在我们将向你们展示并解释为什么人们需要这个。&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;如果你是一个伟大的公共演讲者，你可能能够违反这个规则。去年，一位创始人在演讲的前半部分花了大量时间对传统桌面比喻的局限性进行了迷人分析。他成功了，但除非你是一个迷人的演讲者，而大多数黑客不是，最好还是安全行事。&lt;/p&gt;&#xA;&lt;h2 id=&#34;2-迅速进入演示&#34;&gt;2. 迅速进入演示。&lt;/h2&gt;&#xA;&lt;p&gt;对于在演示日展示的YC创始人来说，这部分现在已经过时了，因为演示日展示现在如此之短，以至于它们很少包含太多或任何演示。然而，它们在没有演示的情况下似乎工作得一样好，这让我觉得我之前如此强调演示是错误的。&lt;/p&gt;&#xA;&lt;p&gt;演示比你任何口头描述都能更有效地解释你制作了什么。唯一值得先谈论的是你试图解决的问题以及为什么它很重要。但不要花费超过十分之一的时间在那上面。然后演示。&lt;/p&gt;&#xA;&lt;p&gt;当你演示时，不要按功能目录运行。而是从你要解决的问题开始，然后展示你的产品如何解决它。按照某种目的驱动的顺序展示功能，而不是它们在屏幕上出现的顺序。&lt;/p&gt;&#xA;&lt;p&gt;如果你在演示基于网络的东西，假设网络连接会在你演示30秒后神秘死亡，并且准备好在你的笔记本电脑上运行服务器软件的副本。&lt;/p&gt;&#xA;&lt;h2 id=&#34;3-宁要狭窄的描述不要模糊的描述&#34;&gt;3. 宁要狭窄的描述，不要模糊的描述。&lt;/h2&gt;&#xA;&lt;p&gt;创始人抵抗简洁描述项目的一个原因是，在这个早期阶段，有各种可能性。最简洁的描述似乎误导性地狭窄。例如，一个构建了易于使用的基于网络的数据库的团队可能抵制称他们的应用程序为那个，因为它可能远不止于此。事实上，它可能是任何东西&amp;hellip;&lt;/p&gt;&#xA;&lt;p&gt;问题是，当你（在微积分意义上）接近对可能是任何东西的描述时，你描述的内容接近于零。如果你将你的基于网络的数据库描述为&amp;quot;一个允许人们协作利用信息价值的系统&amp;quot;，它会从一个投资者的耳朵进，另一个耳朵出。他们只会把那句话当作无意义的套话丢弃，并越来越不耐烦地希望在下一句话中你真正解释你制作了什么。&lt;/p&gt;&#xA;&lt;p&gt;你的主要目标不是描述你的系统有一天可能成为的一切，而只是说服投资者你值得进一步交谈。所以像通过连续逼近获得正确答案的算法一样处理这个问题。从一个引人入胜但可能过于狭窄的描述开始，然后尽可能充实它。这与增量开发的原则相同：从简单的原型开始，然后添加功能，但在每一点都有可工作的代码。在这种情况下，&amp;ldquo;可工作的代码&amp;quot;意味着投资者头脑中的可工作描述。&lt;/p&gt;&#xA;&lt;h2 id=&#34;4-不要边说边操作&#34;&gt;4. 不要边说边操作。&lt;/h2&gt;&#xA;&lt;p&gt;让一个人说话，另一个人使用电脑。如果同一个人做两件事，他们不可避免地会朝着电脑屏幕喃喃自语，而不是清楚地对着观众说话。&lt;/p&gt;&#xA;&lt;p&gt;只要你站在观众附近并看着他们，礼貌（和习惯）迫使他们注意你。一旦你停止看他们去摆弄电脑上的东西，他们的思绪就会飘到他们稍后要做的差事上。&lt;/p&gt;&#xA;&lt;h2 id=&#34;5-不要长篇大论地谈论次要问题&#34;&gt;5. 不要长篇大论地谈论次要问题。&lt;/h2&gt;&#xA;&lt;p&gt;如果你只有几分钟时间，用它们来解释你的产品做什么以及为什么它很棒。竞争对手或简历等次要问题应该是你在最后快速浏览的单张幻灯片。如果你有令人印象深刻的简历，只需在屏幕上闪现15秒并说几句话。对于竞争对手，列出前3名，并用一句话分别解释他们缺少什么而你拥有。把这类东西放在最后，在你已经清楚说明你构建了什么之后。&lt;/p&gt;&#xA;&lt;h2 id=&#34;6-不要过于深入商业模式&#34;&gt;6. 不要过于深入商业模式。&lt;/h2&gt;&#xA;&lt;p&gt;谈论你计划如何赚钱是好的，但主要是因为这表明你关心那个并且已经考虑过。不要详细谈论你的商业模式，因为(a) 聪明的投资者在简短演示中并不关心那个，(b) 你此时拥有的任何商业模式可能是错误的。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
