<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>知识产权 on Linguista</title>
    <link>https://linguage.github.io/tags/%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/</link>
    <description>Recent content in 知识产权 on Linguista</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="https://linguage.github.io/tags/%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Property</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/property/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/property/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_en/property/&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/property.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/property.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/property.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;property&#34;&gt;Property&lt;/h1&gt;&#xA;&lt;p&gt;2012年3月&lt;/p&gt;&#xA;&lt;p&gt;小时候我读过一本关于十八世纪日本著名法官大冈忠相的故事书。他审理的一个案件是由一家食品店老板提起的。一个只能负担得起米饭的穷学生一边吃着米饭，一边享受着从食品店飘来的美味烹饪气味。店主想要学生为他享受的气味付费。&lt;/p&gt;&#xA;&lt;p&gt;这个学生在偷他的气味！&lt;/p&gt;&#xA;&lt;p&gt;每当我听到美国唱片工业协会和美国电影协会指控人们偷窃音乐和电影时，这个故事常常浮现在我的脑海中。&lt;/p&gt;&#xA;&lt;p&gt;对我们来说，将气味视为财产听起来很荒谬。但我可以想象一些可以收费的气味场景。想象我们生活在一个月球基地上，我们必须按升购买空气。我可以想象空气供应商额外收费添加香味。&lt;/p&gt;&#xA;&lt;p&gt;对我们来说，将气味视为财产之所以荒谬，是因为这样做行不通。但在月球基地上，这倒是可行的。&lt;/p&gt;&#xA;&lt;p&gt;什么被视为财产取决于什么可以有效地被视为财产。这不仅可以改变，而且已经改变了。人类可能总是（对于人类和总是的某种定义）将个人携带的小物品视为财产。但是狩猎采集者并没有像我们那样将土地视为财产。&lt;/p&gt;&#xA;&lt;p&gt;[1] 许多人认为财产具有单一不变定义的原因是，它的定义变化非常缓慢。&lt;/p&gt;&#xA;&lt;p&gt;[2] 但我们现在正处于这样的变化之中。唱片公司和电影工作室过去用来分发他们的作品就像月球基地上通过管道输送的空气一样。但随着网络的出现，我们仿佛搬到了一个有可呼吸大气层的行星上。现在数据像气味一样流动。通过一厢情愿和短期贪婪的结合，唱片公司和电影工作室使自己处于食品店老板的位置，指控我们都偷了他们的气味。&lt;/p&gt;&#xA;&lt;p&gt;（我说短期贪婪的原因是，唱片公司和电影工作室的根本问题是，经营它们的人是由奖金而不是股权驱动的。如果他们是由股权驱动的，他们会寻找利用技术变化的方法，而不是与之抗争。但是构建新事物需要太长时间。他们的奖金取决于今年的收入，而增加收入的最好方法是从他们已经做的事情中榨取更多钱。）&lt;/p&gt;&#xA;&lt;p&gt;那么这意味着什么？人们不应该能够为内容收费吗？这个问题没有一个单一的肯定或否定答案。人们应该能够在为内容收费有效时为内容收费。&lt;/p&gt;&#xA;&lt;p&gt;但我说&amp;quot;有效&amp;quot;时，指的是比&amp;quot;当他们能够逃脱时&amp;quot;更微妙的东西。我的意思是，人们能够为内容收费而不扭曲社会来实现这一点。毕竟，在月球基地销售香气的公司可以继续在地球上销售它们，如果他们成功游说要求我们所有人都继续通过管道呼吸的法律，即使我们不再需要这样做。&lt;/p&gt;&#xA;&lt;p&gt;唱片公司和电影工作室一直在采取的疯狂法律措施有很多这种味道。报纸和杂志同样处境艰难，但至少它们在优雅地衰落。如果可以的话，美国唱片工业协会和美国电影协会会让我们通过管道呼吸。&lt;/p&gt;&#xA;&lt;p&gt;最终这归结为常识。当你试图通过对随机选择的人使用大规模诉讼作为一种惩戒性惩罚来滥用法律系统，或者游说通过后会使互联网崩溃的法律时，这本身就证明你正在使用一个不起作用的财产定义。&lt;/p&gt;&#xA;&lt;p&gt;这就是拥有有效的民主制度和多个主权国家的有益之处。如果世界有一个单一的专制政府，唱片公司和电影工作室可以购买法律，使财产的定义成为他们想要的任何东西。但幸运的是，仍然有一些国家不是美国的版权殖民地，即使在美国，政治家们似乎仍然害怕足够数量的实际选民。&lt;/p&gt;&#xA;&lt;p&gt;[3] 管理美国的人可能不喜欢选民或其他国家拒绝屈从于他们的意愿，但最终，这对我们所有人都有利，因为试图扭曲法律以服务自己目的的人没有单一的攻击点。私有财产是一个极其有用的概念——可以说是我们最伟大的发明之一。迄今为止，它的每一个新定义都给我们带来了日益增长的物质财富。&lt;/p&gt;&#xA;&lt;p&gt;[4] 有理由假设最新的定义也会如此。如果我们都不得不因为一些有权势的人太懒于升级而继续运行过时的版本，那将是一场灾难。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 如果你想更多地了解狩猎采集者，我强烈推荐伊丽莎白·马歇尔·托马斯的《无害的人们》和《旧的方式》。&lt;/p&gt;&#xA;&lt;p&gt;[2] 然而，财产定义的变化主要是由技术进步驱动的，由于技术进步正在加速，财产定义的变化率可能也会加速。这意味着社会能够优雅地应对这些变化变得更加重要，因为它们将以越来越快的速度到来。&lt;/p&gt;&#xA;&lt;p&gt;[3] 据我所知，&amp;ldquo;版权殖民地&amp;quot;一词最早由迈尔斯·彼得森使用。&lt;/p&gt;&#xA;&lt;p&gt;[4] 技术状态不仅仅是财产定义的函数。它们相互制约。但既然如此，你不能干扰财产的定义而不影响（可能损害）技术状态。苏联的历史生动地说明了这一点。&lt;/p&gt;&#xA;&lt;p&gt;感谢萨姆·奥特曼和杰夫·拉尔斯通阅读本文草稿。&lt;/p&gt;&#xA;&lt;p&gt;日文翻译&lt;/p&gt;</description>
    </item>
    <item>
      <title>软件专利是邪恶的吗？</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/softwarepatents/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/softwarepatents/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_en/softwarepatents/&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/softwarepatents.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/softwarepatents.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/softwarepatents.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;软件专利是邪恶的吗&#34;&gt;软件专利是邪恶的吗？&lt;/h1&gt;&#xA;&lt;p&gt;2006年3月&lt;/p&gt;&#xA;&lt;p&gt;（本文改编自在谷歌的一次演讲。）几周前，我惊讶地发现自己获得了四项专利。这更加令人惊讶，因为我只申请了三项。当然，这些专利不属于我。它们被转让给了Viaweb，在雅虎收购我们后成为雅虎的财产。但这个消息让我开始思考软件专利的普遍问题。&lt;/p&gt;&#xA;&lt;p&gt;专利是一个难题。我不得不为我们资助的大多数初创公司提供关于专利的建议，尽管有多年的经验，但我仍然不确定自己给出的建议是否正确。&lt;/p&gt;&#xA;&lt;p&gt;我相当确定的一件事是，如果你反对软件专利，你就是反对专利本身。我们的机器越来越多地由软件组成。过去用杠杆、凸轮和齿轮完成的事情现在用循环、树结构和闭包来完成。控制系统的物理实现没有什么特别之处应该使其可专利，而软件的等价物却不应该。&lt;/p&gt;&#xA;&lt;p&gt;不幸的是，专利法在这方面不一致。大多数国家的专利法规定算法不可专利。这条规则是遗留下来的，当时&amp;quot;算法&amp;quot;指的是像埃拉托斯特尼筛法那样的东西。在1800年，人们无法像我们今天这样清楚地看到，许多机械物体的专利实际上是对它们所体现的算法的专利。&lt;/p&gt;&#xA;&lt;p&gt;专利律师在申请算法专利时仍然必须假装他们在做其他事情。你不得在专利申请的标题中使用&amp;quot;算法&amp;quot;这个词，就像你不得在书名中使用&amp;quot;散文&amp;quot;这个词一样。如果你想为算法申请专利，你必须将其描述为执行该算法的计算机系统。然后它就是机械的了；呼。算法的默认委婉说法是&amp;quot;系统和方法&amp;quot;。试试用这个短语进行专利搜索，看看你能得到多少结果。&lt;/p&gt;&#xA;&lt;p&gt;既然软件专利与硬件专利没有什么不同，那么说&amp;quot;软件专利是邪恶的&amp;quot;的人就是在简单地说&amp;quot;专利是邪恶的&amp;quot;。那么为什么有这么多的人专门抱怨软件专利呢？&lt;/p&gt;&#xA;&lt;p&gt;我认为问题更多在于专利局，而不是软件专利的概念。每当软件遇到政府时，坏事就会发生，因为软件变化很快，而政府变化很慢。专利局已经被软件专利申请的数量和新颖性所淹没，结果他们犯了很多错误。&lt;/p&gt;&#xA;&lt;p&gt;最常见的是授予不应该授予的专利。要获得专利，发明必须不仅仅是新的。它还必须是非显而易见的。而这，正是美国专利商标局一直在失球的地方。Slashdot有一个图标生动地表达了这个问题：一把刀和叉，上面叠加着&amp;quot;专利申请中&amp;quot;的字样。&lt;/p&gt;&#xA;&lt;p&gt;可怕的是，这是他们唯一拥有的专利故事图标。Slashdot读者现在理所当然地认为，关于专利的故事将是关于虚假专利的。问题已经变得多么严重。&lt;/p&gt;&#xA;&lt;p&gt;例如，亚马逊臭名昭著的一键专利的问题不在于它是一个软件专利，而在于它是显而易见的。任何保留人们送货地址的在线商店都会实现这一点。亚马逊首先这样做的原因不是他们特别聪明，而是因为他们是最早有足够影响力的网站之一，能够强迫客户在购买前登录。[1]&lt;/p&gt;&#xA;&lt;p&gt;我们作为黑客，知道美国专利商标局正在让人们为我们世界中的刀叉申请专利。问题是，专利局不是黑客。他们可能擅长判断铸造钢铁或研磨镜头的新发明，但他们还不理解软件。&lt;/p&gt;&#xA;&lt;p&gt;在这一点上，乐观主义者会想要补充说&amp;quot;但他们最终会理解的&amp;quot;。不幸的是，这可能不是真的。软件专利问题是一个更普遍问题的实例：专利局需要一段时间才能理解新技术。如果是这样，这个问题只会变得更糟，因为技术变革的步伐似乎正在加快。三十年后，专利局可能会理解我们现在作为软件申请专利的那种东西，但会有其他类型的新发明他们理解得更少。&lt;/p&gt;&#xA;&lt;p&gt;申请专利是一种谈判。你通常申请比你认为会被授予的更广泛的专利，审查员通过驳回你的一些要求并授予其他要求来回应。所以我并不真正责怪亚马逊申请一键专利。大错误是专利局的，因为他们没有坚持要求更狭窄、具有真实技术内容的东西。通过授予这样一个过于宽泛的专利，美国专利商标局在第一次约会时就与亚马逊上床了。亚马逊应该说&amp;quot;不&amp;quot;吗？&lt;/p&gt;&#xA;&lt;p&gt;亚马逊走向黑暗面不是在申请专利时，而是在执行专利时。许多公司（例如微软）获得了大量荒谬的过于宽泛的专利，但它们主要用于防御目的。像核武器一样，大公司专利组合的主要作用是威胁任何攻击他们的人进行反诉。亚马逊对巴诺书店的诉讼因此相当于核先发制人打击。&lt;/p&gt;&#xA;&lt;p&gt;那场诉讼可能对亚马逊的伤害大于帮助。巴诺书店是一个蹩脚的网站；无论如何亚马逊都会击败他们。为了攻击一个他们可以忽视的竞争对手，亚马逊在自己的声誉上留下了永久的污点。即使现在，我认为如果你要求黑客自由联想关于亚马逊的事情，一键专利也会出现在前十个话题中。&lt;/p&gt;&#xA;&lt;p&gt;谷歌显然不觉得仅仅持有专利就是邪恶的。他们申请了很多专利。他们是伪君子吗？专利是邪恶的吗？&lt;/p&gt;&#xA;&lt;p&gt;这个问题实际上有两个变体，回答它的人往往不清楚自己在回答哪个。有一个狭隘的变体：在当前的法律体系下，申请专利是坏的吗？还有一个更广泛的变体：当前的法律体系允许专利是坏的吗？&lt;/p&gt;&#xA;&lt;p&gt;这是两个独立的问题。例如，在前工业化社会如中世纪欧洲，当有人攻击你时，你不会叫警察。没有警察。当被攻击时，你应该反击，并且有关于如何这样做的惯例。这是错误的吗？这是两个问题：自己主持正义是错误的吗？而不得不这样做是错误的吗？我们倾向于对第二个问题说是，但对第一个问题说不。如果没有其他人会保护你，你必须保护自己。[2]&lt;/p&gt;&#xA;&lt;p&gt;专利的情况类似。商业是一种仪式化的战争。实际上，它从真正的战争演变而来：大多数早期商人根据你看起来有多强而即时从商人转变为海盗。在商业中，有某些规则描述公司如何可以和不可以相互竞争，而决定要按自己的规则玩的人错过了重点。说&amp;quot;我不会仅仅因为其他人都在申请专利而申请专利&amp;quot;不像说&amp;quot;我不会仅仅因为其他人都在撒谎而撒谎&amp;quot;。这更像是说&amp;quot;我不会仅仅因为其他人都在使用TCP/IP而使用TCP/IP&amp;quot;。哦，是的，你会的。&lt;/p&gt;&#xA;&lt;p&gt;一个更接近的比较可能是第一次看到冰球比赛的人，震惊地意识到球员们故意相互碰撞，并决定自己在打冰球时绝不会如此无礼。&lt;/p&gt;&#xA;&lt;p&gt;冰球允许身体接触。这是比赛的一部分。如果你的团队拒绝这样做，你就会输掉。商业也是如此。在现行规则下，专利是游戏的一部分。&lt;/p&gt;&#xA;&lt;p&gt;这在实践中意味着什么？我们告诉我们资助的初创公司不要担心侵犯专利，因为初创公司很少因专利侵权而被起诉。有人起诉你只有两个原因：为了钱，或者为了防止你与他们竞争。初创公司太穷了，不值得为钱而被起诉。在实践中，他们似乎也不太被竞争对手起诉。他们不被其他初创公司起诉，因为（a）专利诉讼是一种昂贵的分心，（b）由于其他初创公司和它们一样年轻，它们的专利可能还没有发布。[3] 初创公司，至少在软件业务中，似乎也不太被成熟的竞争对手起诉。尽管微软持有这么多专利，我不知道他们有一个案例是因专利侵权而起诉初创公司的。像微软和甲骨文这样的公司不是通过赢得诉讼来获胜的。那太不确定了。他们通过将竞争对手排除在销售渠道之外来获胜。如果你确实威胁到他们，他们更可能收购你而不是起诉你。&lt;/p&gt;&#xA;&lt;p&gt;当你读到有关大公司对小公司提起专利诉讼时，通常是一家走下坡路的大公司在抓救命稻草。例如，Unisys试图执行其对LZW压缩的专利。当你看到一家大公司威胁专利诉讼时，卖掉它。当一家公司开始为知识产权而战时，这是一个迹象，表明他们已经输掉了真正的战斗，为了用户。&lt;/p&gt;&#xA;&lt;p&gt;一家因专利侵权而起诉竞争对手的公司就像一个被彻底击败的防守者，转而向裁判恳求。如果你还能触及球，你就不会这样做，即使你真的相信自己被犯规了。所以一家威胁专利诉讼的公司是陷入困境的公司。&lt;/p&gt;&#xA;&lt;p&gt;当我们在Viaweb工作时，电子商务业务中一家更大的公司获得了在线订购专利或类似的东西。我接到那里一位副总裁的电话，询问我们是否愿意授权。我回答说我认为该专利完全虚假，永远不会在法庭上成立。&amp;ldquo;好的，&amp;ldquo;他回答说。&amp;ldquo;那么，你们在招聘吗？&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;然而，如果你的初创公司发展得足够大，无论你做什么，你都会开始被起诉。例如，如果你上市，你会被多个专利流氓起诉，他们希望你付钱给他们让他们离开。更多关于他们的事情。&lt;/p&gt;&#xA;&lt;p&gt;换句话说，在你有钱之前，没有人会因专利侵权而起诉你，而一旦你有钱了，人们无论是否有理由都会起诉你。所以我建议宿命论。不要浪费担心专利侵权的时间。你每次系鞋带可能都在侵犯一项专利。至少在开始时，只担心做出伟大的东西并获得大量用户。如果你成长到任何人认为值得攻击你的程度，你做得很好。&lt;/p&gt;&#xA;&lt;p&gt;我们确实建议我们资助的公司申请专利，但不是为了让它们可以起诉竞争对手。成功的初创公司要么被收购，要么发展成大公司。如果初创公司想发展成大公司，它们应该申请专利来建立它们将需要的专利组合，以与其他大公司维持武装休战。如果它们想被收购，它们应该申请专利，因为专利是与收购者求偶的一部分。&lt;/p&gt;&#xA;&lt;p&gt;大多数成功的初创公司都是通过被收购成功的，而大多数收购者关心专利。初创公司的收购对收购者来说通常是一个自制与购买的决策。我们是应该购买这家小型初创公司还是自己建立？有两件事，特别是，使它们决定不自己建立：如果你已经有一个庞大且快速增长的用户群，并且你在软件的关键部分有相当坚实的专利申请。&lt;/p&gt;&#xA;&lt;p&gt;大公司应该更喜欢购买而不是自己建立的第三个原因是：如果他们自己建立，他们会搞砸。但很少有公司足够聪明，能够向自己承认这一点。通常被问到的公司工程师是公司自己建立有多难，他们高估了自己的能力。[4] 专利似乎改变了平衡。它给了收购者一个借口，承认他们无法复制你在做的事情。它也可能帮助他们理解你的技术的特别之处。&lt;/p&gt;&#xA;&lt;p&gt;坦率地说，专利在软件业务中扮演如此小的角色让我感到惊讶。考虑到专家们对软件专利扼杀创新的所有可怕说法，这有点讽刺，但是当仔细观察软件业务时，最引人注目的是专利似乎多么不重要。&lt;/p&gt;&#xA;&lt;p&gt;在其他领域，公司定期因专利侵权起诉竞争对手。例如，机场行李扫描业务多年来一直是InVision和L-3两家公司共享的舒适双头垄断。2002年，一家名为Reveal的初创公司出现了，他们拥有新技术，可以制造三分之一的扫描仪。他们甚至在发布产品之前就因专利侵权而被起诉。&lt;/p&gt;&#xA;&lt;p&gt;在我们的世界里很少听到这种故事。我发现的一个例子是，令人尴尬的是，雅虎，它在2005年对一家名为Xfire的游戏初创公司提起了专利诉讼。Xfire似乎不是什么大公司，很难说为什么雅虎感到威胁。Xfire的工程副总裁曾在雅虎从事类似的工作——事实上，他被列为雅虎起诉的专利的发明人——所以也许其中有一些个人因素。我的猜测是雅虎的某人搞错了。无论如何，他们都没有非常积极地推进诉讼。&lt;/p&gt;&#xA;&lt;p&gt;为什么专利在软件中扮演如此小的角色？我能想到三个可能的原因。&lt;/p&gt;&#xA;&lt;p&gt;一个是软件是如此复杂，以至于专利本身价值不大。我在这里可能诋毁了其他领域，但似乎在大多数类型的工程中，你可以将一些新技术的细节交给一组中高质量的人并获得期望的结果。例如，如果有人开发了一种新的冶炼矿石工艺，可以获得更好的产量，你召集一组合格的专家并告诉他们，他们将能够获得相同的产量。这在软件中似乎不起作用。软件是如此微妙和不可预测，以至于&amp;quot;合格的专家&amp;quot;并不能让你走得很远。&lt;/p&gt;&#xA;&lt;p&gt;这就是为什么我们在软件业务中很少听到&amp;quot;合格的专家&amp;quot;这样的短语。这种能力水平能让你做的，比如说，使你的软件与其他软件兼容——八个月后，以巨大的成本。要做更难的事情，你需要个人的才华。如果你召集一组合格的专家告诉他们制作一个新的基于网络的电子邮件程序，他们会被一个有灵感的十九岁年轻人组成的团队打败。&lt;/p&gt;&#xA;&lt;p&gt;专家可以实现，但他们不能设计。或者更确切地说，实现专业知识是大多数人，包括专家自己，可以衡量的唯一类型。[5]&lt;/p&gt;&#xA;&lt;p&gt;但设计是一种明确的技能。它不仅仅是空灵的无形之物。当你不理解它们时，事物似乎总是无形的。在1800年，电对大多数人来说似乎是空灵的无形之物。谁知道其中有多少知识可以了解？设计也是如此。有些人擅长它，有些人不擅长，他们擅长或不擅长的东西是非常有形的。&lt;/p&gt;&#xA;&lt;p&gt;设计在软件中如此重要的原因可能是物理上的约束更少。建造物理物品是昂贵和危险的。可能选择的空间更小；你倾向于不得不作为更大的团体的一部分工作；你受到很多法规的约束。如果你和几个朋友决定创建一个新的基于网络的应用程序，你没有任何这些。&lt;/p&gt;&#xA;&lt;p&gt;因为软件中设计的空间如此之大，一个成功的应用程序往往远远超过其专利的总和。保护小公司不被大竞争对手复制的不仅仅是它们的专利，还有大公司在尝试时会搞砸的一千个小事情。&lt;/p&gt;&#xA;&lt;p&gt;专利在我们的世界中不重要的第二个原因是初创公司很少像Reveal那样正面攻击大公司。在软件业务中，初创公司通过超越老牌公司来击败它们。初创公司不构建桌面文字处理程序与微软Word竞争。[6] 他们构建Writely。如果这个范式拥挤，只需等待下一个；他们在这条路线上运行得相当频繁。&lt;/p&gt;</description>
    </item>
    <item>
      <title>黑客这个词</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/gba/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/gba/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_en/gba/&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/gba.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/gba.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/gba.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;黑客这个词&#34;&gt;黑客这个词&lt;/h1&gt;&#xA;&lt;p&gt;2004年4月&lt;/p&gt;&#xA;&lt;p&gt;对大众媒体来说，&amp;ldquo;黑客&amp;quot;意味着闯入计算机的人。在程序员中，它意味着一个好的程序员。但这两种含义是相连的。对程序员来说，&amp;ldquo;黑客&amp;quot;在最字面的意义上意味着精通：能够让计算机做他想要的事情的人——不管计算机是否愿意。&lt;/p&gt;&#xA;&lt;p&gt;更令人困惑的是，名词&amp;quot;hack&amp;quot;也有两种含义。它可以是赞美，也可以是侮辱。当你用丑陋的方式做某事时，这被称为hack。但当你做某事如此聪明以至于你以某种方式击败了系统时，那也被称为hack。这个词在前一种含义中比后一种更常用，可能是因为丑陋的解决方案比 brilliant 的更常见。&lt;/p&gt;&#xA;&lt;p&gt;信不信由你，&amp;ldquo;hack&amp;quot;的两种含义也是相连的。丑陋和富有想象力的解决方案有共同之处：它们都打破了规则。在仅仅丑陋的违规（用胶带把东西 attach 到你的自行车上）和 brilliantly 富有想象力的违规（丢弃欧几里得空间）之间存在一个逐渐的连续谱。&lt;/p&gt;&#xA;&lt;p&gt;黑客文化比计算机更早。当理查德·费曼在曼哈顿计划工作时，他常常通过闯入包含秘密文件的保险箱来娱乐自己。这个传统今天仍在继续。当我们读研究生时，我的一位在MIT周围花了太多时间的黑客朋友有自己的开锁工具包。（他现在经营对冲基金，这不是一个无关的企业。）&lt;/p&gt;&#xA;&lt;p&gt;有时候很难向当局解释为什么有人会想做这种事情。我的另一个朋友曾经因为闯入计算机而与政府惹上麻烦。这最近才被宣布为犯罪，FBI发现他们通常的调查技术不起作用。警察调查显然是从动机开始的。通常的动机很少：毒品、金钱、性、复仇。智力好奇心不在FBI的动机清单上。确实，整个概念对他们来说似乎很陌生。&lt;/p&gt;&#xA;&lt;p&gt;当权者往往对黑客普遍的不服从态度感到恼火。但这种不服从是使他们成为优秀程序员的品质的副产品。当CEO用通用的企业新闻发言时，他们可能会嘲笑他，但他们也会嘲笑告诉他们某个问题无法解决的人。压制一个，你就压制了另一个。&lt;/p&gt;&#xA;&lt;p&gt;这种态度有时是装出来的。有时年轻的程序员注意到著名黑客的怪癖，并决定采用一些自己的怪癖，以便看起来更聪明。虚假版本不仅令人讨厌；这些伪装者的 prickly 态度实际上会减慢创新过程。&lt;/p&gt;&#xA;&lt;p&gt;但即使考虑到他们令人讨厌的怪癖，黑客的不服从态度也是一个净胜利。我希望它的优势能被更好地理解。&lt;/p&gt;&#xA;&lt;p&gt;例如，我怀疑好莱坞的人们对黑客对版权的态度感到困惑。它们是Slashdot上激烈讨论的 perennial 话题。但是，为什么编程的人们应该如此关心版权，在所有事情中？&lt;/p&gt;&#xA;&lt;p&gt;部分原因是有些公司使用机制来防止复制。向任何黑客展示一把锁，他的第一个念头是如何打开它。但黑客对版权和专利等措施感到警惕有更深层次的原因。他们将 increasingly 激进的措施保护&amp;quot;知识产权&amp;quot;视为对他们工作所需的 intellectual freedom 的威胁。他们是对的。&lt;/p&gt;&#xA;&lt;p&gt;正是通过在当前技术内部探查，黑客才获得了下一代的想法。不，谢谢，知识产权所有者可能会说，我们不需要任何外部帮助。但他们错了。下一代计算机技术经常——或许比不是更经常——是由外人开发的。&lt;/p&gt;&#xA;&lt;p&gt;1977年，毫无疑问IBM内部有一些团体正在开发他们期望成为下一代商业计算机的东西。他们错了。下一代商业计算机正在由两个名叫史蒂夫的长发男人在洛斯阿尔托斯的车库里以完全不同的线路开发。大约在同一时间，当权者正在合作开发官方的下一代操作系统Multics。但两个认为Multics过于复杂的家伙离开去写自己的系统。他们给它起了一个对Multics开玩笑的名字：Unix。&lt;/p&gt;&#xA;&lt;p&gt;最新的知识产权法律对导致新想法的那种探查施加了前所未有的限制。在过去，竞争对手可能使用专利来阻止你销售他们制造的东西的副本，但他们不能阻止你拆开一个来看它是如何工作的。最新的法律使这成为犯罪。如果我们不能研究当前技术来弄清楚如何改进它，我们如何开发新技术？&lt;/p&gt;&#xA;&lt;p&gt;具有讽刺意味的是，黑客自己招致了这一点。计算机是造成问题的原因。机器内的控制系统过去是物理的：齿轮、杠杆和凸轮。 increasingly，产品的大脑（从而价值）在软件中。我指的是一般意义上的软件：即数据。LP上的歌曲是物理压印在塑料中的。iPod磁盘上的歌曲只是存储在上面。&lt;/p&gt;&#xA;&lt;p&gt;数据根据定义很容易复制。互联网使副本容易分发。所以公司害怕不足为奇。但是，像经常发生的那样，恐惧模糊了他们的判断。政府用严酷的法律来保护知识产权。他们可能是好意的。但他们可能没有意识到这样的法律弊大于利。&lt;/p&gt;&#xA;&lt;p&gt;为什么程序员如此强烈地反对这些法律？如果我是一个立法者，我会对这个谜团感兴趣——出于同样的原因，如果我是一个农民，突然一天晚上听到很多咯咯声来自我的鸡舍，我会想要出去调查。黑客不笨，而这个世界上 unanimity 很罕见。所以如果他们都在咯咯叫，也许有什么不对劲。&lt;/p&gt;&#xA;&lt;p&gt;难道这样的法律，虽然意图保护美国，但实际上会伤害它吗？想想看。费曼在曼哈顿计划期间闯入保险箱有一些非常美国化的东西。很难想象当时的德国当局对这类事情有幽默感。也许这不是巧合。&lt;/p&gt;&#xA;&lt;p&gt;黑客是不守规矩的。这就是黑客的本质。这也是美国精神的本质。硅谷在美国，而不是法国、德国、英国或日本，这绝非偶然。在那些国家，人们在 lines 内着色。&lt;/p&gt;&#xA;&lt;p&gt;我在佛罗伦萨住了一段时间。但在那里呆了几个月后，我意识到我无意识希望在那里找到的东西 back 在我刚刚离开的地方。佛罗伦萨著名的原因是，在1450年，它是纽约。在1450年，它充满了你现在在美国发现的那种动荡和雄心勃勃的人。（所以我回到了美国。）&lt;/p&gt;&#xA;&lt;p&gt;美国的一个巨大优势是它为正确的那种不守规矩提供了宜人的氛围——它不仅是聪明人的家园，也是 smart-alecks 的家园。黑客 invariably 是 smart-alecks。如果我们有一个国定假日，那将是4月1日。我们对 brilliant 或可怕 cheesy 的解决方案使用同一个词，这充分说明了我们的工作。当我们炮制出一个时，我们不总是100%确定它是哪种。但只要它有正确的错误类型，那就是一个有希望的迹象。人们认为编程是精确和有条理的，这很奇怪。计算机是精确和有条理的。黑客是你在开怀大笑时做的事情。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
