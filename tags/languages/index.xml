<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Languages on Linguage</title>
    <link>https://linguage.github.io/tags/languages/</link>
    <description>Recent content in Languages on Linguage</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="https://linguage.github.io/tags/languages/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>What Languages Fix</title>
      <link>https://linguage.github.io/paul_graham/essays_en/fix/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_en/fix/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_zh/fix/&#34;&gt;中文版本&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;what-languages-fix&#34;&gt;What Languages Fix&lt;/h1&gt;&#xA;&lt;p&gt;Kevin Kelleher suggested an interesting way to compare programming languages: to describe each in terms of the problem it fixes. The surprising thing is how many, and how well, languages can be described this way.&lt;/p&gt;&#xA;&lt;p&gt;Algol: Assembly language is too low-level.&lt;/p&gt;&#xA;&lt;p&gt;Pascal: Algol doesn&amp;rsquo;t have enough data types.&lt;/p&gt;&#xA;&lt;p&gt;Modula: Pascal is too wimpy for systems programming.&lt;/p&gt;&#xA;&lt;p&gt;Simula: Algol isn&amp;rsquo;t good enough at simulations.&lt;/p&gt;&#xA;&lt;p&gt;Smalltalk: Not everything in Simula is an object.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
