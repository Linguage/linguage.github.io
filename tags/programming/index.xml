<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on Linguista</title>
    <link>https://linguage.github.io/tags/programming/</link>
    <description>Recent content in Programming on Linguista</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="https://linguage.github.io/tags/programming/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>A Plan for Spam</title>
      <link>https://linguage.github.io/paul_graham/essays_en/spam/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_en/spam/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_zh/spam/&#34;&gt;中文版本&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/spam.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/spam.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/spam.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;a-plan-for-spam&#34;&gt;A Plan for Spam&lt;/h1&gt;&#xA;&lt;p&gt;August 2002&lt;/p&gt;&#xA;&lt;p&gt;(This article describes the spam-filtering techniques used in the spamproof web-based mail reader we built to exercise Arc. An improved algorithm is described in Better Bayesian Filtering.)&lt;/p&gt;&#xA;&lt;p&gt;I think it&amp;rsquo;s possible to stop spam, and that content-based filters are the way to do it. The Achilles heel of the spammers is their message. They can circumvent any other barrier you set up. They have so far, at least. But they have to deliver their message, whatever it is. If we can write software that recognizes their messages, there is no way they can get around that.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Beating the Averages</title>
      <link>https://linguage.github.io/paul_graham/essays_en/avg/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_en/avg/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_zh/avg/&#34;&gt;中文版本&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/avg.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/avg.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/avg.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;beating-the-averages&#34;&gt;Beating the Averages&lt;/h1&gt;&#xA;&lt;p&gt;Want to start a startup? Get funded by Y Combinator. April 2001, rev. April 2003&lt;/p&gt;&#xA;&lt;p&gt;(This article is derived from a talk given at the 2001 Franz Developer Symposium.)&lt;/p&gt;&#xA;&lt;p&gt;In the summer of 1995, my friend Robert Morris and I started a startup called Viaweb. Our plan was to write software that would let end users build online stores. What was novel about this software, at the time, was that it ran on our server, using ordinary Web pages as the interface.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Great Hackers</title>
      <link>https://linguage.github.io/paul_graham/essays_en/gh/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_en/gh/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_zh/gh/&#34;&gt;中文版本&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/gh.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/gh.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/gh.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;great-hackers&#34;&gt;Great Hackers&lt;/h1&gt;&#xA;&lt;p&gt;July 2004&lt;/p&gt;&#xA;&lt;p&gt;(This essay is derived from a talk at Oscon 2004.)&lt;/p&gt;&#xA;&lt;p&gt;A few months ago I finished a new book, and in reviews I keep noticing words like &amp;ldquo;provocative&amp;rsquo;&amp;rsquo; and &amp;ldquo;controversial.&amp;rsquo;&amp;rsquo; To say nothing of &amp;ldquo;idiotic.&#39;&#39;&lt;/p&gt;&#xA;&lt;p&gt;I didn&amp;rsquo;t mean to make the book controversial. I was trying to make it efficient. I didn&amp;rsquo;t want to waste people&amp;rsquo;s time telling them things they already knew. It&amp;rsquo;s more efficient just to give them the diffs. But I suppose that&amp;rsquo;s bound to yield an alarming book.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hackers and Painters</title>
      <link>https://linguage.github.io/paul_graham/essays_en/hp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_en/hp/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_zh/hp/&#34;&gt;中文版本&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/hp.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/hp.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/hp.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;hackers-and-painters&#34;&gt;Hackers and Painters&lt;/h1&gt;&#xA;&lt;p&gt;May 2003&lt;/p&gt;&#xA;&lt;p&gt;(This essay is derived from a guest lecture at Harvard, which incorporated an earlier talk at Northeastern.)&lt;/p&gt;&#xA;&lt;p&gt;When I finished grad school in computer science I went to art school to study painting. A lot of people seemed surprised that someone interested in computers would also be interested in painting. They seemed to think that hacking and painting were very different kinds of work&amp;ndash; that hacking was cold, precise, and methodical, and that painting was the frenzied expression of some primal urge.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Holding a Program in One&#39;s Head</title>
      <link>https://linguage.github.io/paul_graham/essays_en/head/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_en/head/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_zh/head/&#34;&gt;中文版本&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/head.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/head.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/head.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;holding-a-program-in-ones-head&#34;&gt;Holding a Program in One&amp;rsquo;s Head&lt;/h1&gt;&#xA;&lt;p&gt;August 2007&lt;/p&gt;&#xA;&lt;p&gt;A good programmer working intensively on his own code can hold it in his mind the way a mathematician holds a problem he&amp;rsquo;s working on. Mathematicians don&amp;rsquo;t answer questions by working them out on paper the way schoolchildren are taught to. They do more in their heads: they try to understand a problem space well enough that they can walk around it the way you can walk around the memory of the house you grew up in. At its best programming is the same. You hold the whole program in your head, and you can manipulate it at will.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Introduction to ANSI Common Lisp</title>
      <link>https://linguage.github.io/paul_graham/essays_en/acl1txtt1748944359/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_en/acl1txtt1748944359/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_zh/acl1txtt1748944359/&#34;&gt;中文版本&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;introduction-to-ansi-common-lisp&#34;&gt;Introduction to ANSI Common Lisp&lt;/h1&gt;&#xA;&lt;p&gt;Introduction to ANSI Common Lisp&lt;/p&gt;&#xA;&lt;p&gt;(This is the first chapter of ANSI Common Lisp, by Paul Graham. Copyright 1995, Prentice-Hall.)&lt;/p&gt;&#xA;&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;John McCarthy and his students began work on the first Lisp implementation in 1958. After Fortran, Lisp is the oldest language still in use. [1] What&amp;rsquo;s more remarkable is that it is still in the forefront of programming language technology. Programmers who know Lisp will tell you, there is something about this language that sets it apart.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Java&#39;s Cover</title>
      <link>https://linguage.github.io/paul_graham/essays_en/javacover/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_en/javacover/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_zh/javacover/&#34;&gt;中文版本&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/javacover.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/javacover.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/javacover.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;javas-cover&#34;&gt;Java&amp;rsquo;s Cover&lt;/h1&gt;&#xA;&lt;p&gt;April 2001&lt;/p&gt;&#xA;&lt;p&gt;This essay developed out of conversations I&amp;rsquo;ve had with several other programmers about why Java smelled suspicious. It&amp;rsquo;s not a critique of Java! It is a case study of hacker&amp;rsquo;s radar.&lt;/p&gt;&#xA;&lt;p&gt;Over time, hackers develop a nose for good (and bad) technology. I thought it might be interesting to try and write down what made Java seem suspect to me.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Let the Other 95% of Great Programmers In</title>
      <link>https://linguage.github.io/paul_graham/essays_en/95/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_en/95/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_zh/95/&#34;&gt;中文版本&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/95.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/95.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/95.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;let-the-other-95-of-great-programmers-in&#34;&gt;Let the Other 95% of Great Programmers In&lt;/h1&gt;&#xA;&lt;p&gt;Let the Other 95% of Great Programmers In December 2014&lt;/p&gt;&#xA;&lt;p&gt;American technology companies want the government to make immigration easier because they say they can&amp;rsquo;t find enough programmers in the US. Anti-immigration people say that instead of letting foreigners take these jobs, we should train more Americans to be programmers. Who&amp;rsquo;s right?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Lisp for Web-Based Applications</title>
      <link>https://linguage.github.io/paul_graham/essays_en/lwba/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_en/lwba/</guid>
      <description>&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/lwba.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/lwba.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/lwba.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;lisp-for-web-based-applications&#34;&gt;Lisp for Web-Based Applications&lt;/h1&gt;&#xA;&lt;p&gt;After a link to Beating the Averages was posted on slashdot, some readers wanted to hear in more detail about the specific technical advantages we got from using Lisp in Viaweb. For those who are interested, here are some excerpts from a talk I gave in April 2001 at BBN Labs in Cambridge, MA.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Maker&#39;s Schedule, Manager&#39;s Schedule</title>
      <link>https://linguage.github.io/paul_graham/essays_en/makersschedule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_en/makersschedule/</guid>
      <description>&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/makersschedule.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/makersschedule.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/makersschedule.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;makers-schedule-managers-schedule&#34;&gt;Maker&amp;rsquo;s Schedule, Manager&amp;rsquo;s Schedule&lt;/h1&gt;&#xA;&lt;p&gt;July 2009&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;&amp;hellip;the mere consciousness of an engagement will sometimes worry a whole day.&amp;rdquo;&#xA;– Charles Dickens&lt;/p&gt;&#xA;&lt;p&gt;One reason programmers dislike meetings so much is that they&amp;rsquo;re on a different type of schedule from other people. Meetings cost them more.&lt;/p&gt;&#xA;&lt;p&gt;There are two types of schedule, which I&amp;rsquo;ll call the manager&amp;rsquo;s schedule and the maker&amp;rsquo;s schedule. The manager&amp;rsquo;s schedule is for bosses. It&amp;rsquo;s embodied in the traditional appointment book, with each day cut into one hour intervals. You can block off several hours for a single task if you need to, but by default you change what you&amp;rsquo;re doing every hour.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Progbot</title>
      <link>https://linguage.github.io/paul_graham/essays_en/progbot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_en/progbot/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_zh/progbot/&#34;&gt;中文版本&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/progbot.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/progbot.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/progbot.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;progbot&#34;&gt;Progbot&lt;/h1&gt;&#xA;&lt;p&gt;January 1993 (This essay is from the introduction to On Lisp.)&lt;/p&gt;&#xA;&lt;p&gt;It&amp;rsquo;s a long-standing principle of programming style that the functional elements of a program should not be too large. If some component of a program grows beyond the stage where it&amp;rsquo;s readily comprehensible, it becomes a mass of complexity which conceals errors as easily as a big city conceals fugitives. Such software will be hard to read, hard to test, and hard to debug.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Return of the Mac</title>
      <link>https://linguage.github.io/paul_graham/essays_en/mac/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_en/mac/</guid>
      <description>&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/mac.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/mac.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/mac.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;return-of-the-mac&#34;&gt;Return of the Mac&lt;/h1&gt;&#xA;&lt;p&gt;March 2005&lt;/p&gt;&#xA;&lt;p&gt;All the best hackers I know are gradually switching to Macs. My friend Robert said his whole research group at MIT recently bought themselves Powerbooks. These guys are not the graphic designers and grandmas who were buying Macs at Apple&amp;rsquo;s low point in the mid 1990s. They&amp;rsquo;re about as hardcore OS hackers as you can get.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Schlep Blindness</title>
      <link>https://linguage.github.io/paul_graham/essays_en/schlep/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_en/schlep/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_zh/schlep/&#34;&gt;中文版本&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/schlep.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/schlep.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/schlep.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;schlep-blindness&#34;&gt;Schlep Blindness&lt;/h1&gt;&#xA;&lt;p&gt;January 2012&lt;/p&gt;&#xA;&lt;p&gt;There are great startup ideas lying around unexploited right under our noses. One reason we don&amp;rsquo;t see them is a phenomenon I call schlep blindness. Schlep was originally a Yiddish word but has passed into general use in the US. It means a tedious, unpleasant task.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Succinctness is Power</title>
      <link>https://linguage.github.io/paul_graham/essays_en/power/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_en/power/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_zh/power/&#34;&gt;中文版本&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/power.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/power.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/power.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;succinctness-is-power&#34;&gt;Succinctness is Power&lt;/h1&gt;&#xA;&lt;p&gt;May 2002&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;The quantity of meaning compressed into a small space by algebraic signs, is another circumstance that facilitates the reasonings we are accustomed to carry on by their aid.&amp;rdquo; - Charles Babbage, quoted in Iverson&amp;rsquo;s Turing Award Lecture&lt;/p&gt;&#xA;&lt;p&gt;In the discussion about issues raised by Revenge of the Nerds on the LL1 mailing list, Paul Prescod wrote something that stuck in my mind. Python&amp;rsquo;s goal is regularity and readability, not succinctness. On the face of it, this seems a rather damning thing to claim about a programming language. As far as I can tell, succinctness = power. If so, then substituting, we get Python&amp;rsquo;s goal is regularity and readability, not power. and this doesn&amp;rsquo;t seem a tradeoff (if it is a tradeoff) that you&amp;rsquo;d want to make. It&amp;rsquo;s not far from saying that Python&amp;rsquo;s goal is not to be effective as a programming language.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Other Half of &#39;Artists Ship&#39;</title>
      <link>https://linguage.github.io/paul_graham/essays_en/artistsship/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_en/artistsship/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_zh/artistsship/&#34;&gt;中文版本&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/artistsship.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/artistsship.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/artistsship.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;the-other-half-of-artists-ship&#34;&gt;The Other Half of &amp;ldquo;Artists Ship&amp;rdquo;&lt;/h1&gt;&#xA;&lt;p&gt;November 2008&lt;/p&gt;&#xA;&lt;p&gt;One of the differences between big companies and startups is that big companies tend to have developed procedures to protect themselves against mistakes. A startup walks like a toddler, bashing into things and falling over all the time. A big company is more deliberate.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Other Road Ahead</title>
      <link>https://linguage.github.io/paul_graham/essays_en/road/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_en/road/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_zh/road/&#34;&gt;中文版本&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/road.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/road.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/road.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;the-other-road-ahead&#34;&gt;The Other Road Ahead&lt;/h1&gt;&#xA;&lt;p&gt;September 2001&lt;/p&gt;&#xA;&lt;p&gt;(This article explains why much of the next generation of software may be server-based, what that will mean for programmers, and why this new kind of software is a great opportunity for startups. It&amp;rsquo;s derived from a talk at BBN Labs.)&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Python Paradox</title>
      <link>https://linguage.github.io/paul_graham/essays_en/pypar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_en/pypar/</guid>
      <description>&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/pypar.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/pypar.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/pypar.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;the-python-paradox&#34;&gt;The Python Paradox&lt;/h1&gt;&#xA;&lt;p&gt;August 2004&lt;/p&gt;&#xA;&lt;p&gt;In a recent talk I said something that upset a lot of people: that you could get smarter programmers to work on a Python project than you could to work on a Java project.&lt;/p&gt;&#xA;&lt;p&gt;I didn&amp;rsquo;t mean by this that Java programmers are dumb. I meant that Python programmers are smart. It&amp;rsquo;s a lot of work to learn a new programming language. And people don&amp;rsquo;t learn Python because it will get them a job; they learn it because they genuinely like to program and aren&amp;rsquo;t satisfied with the languages they already know.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Word &#39;Hacker&#39;</title>
      <link>https://linguage.github.io/paul_graham/essays_en/gba/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_en/gba/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_zh/gba/&#34;&gt;中文版本&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/gba.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/gba.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/gba.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;the-word-hacker&#34;&gt;The Word &amp;ldquo;Hacker&amp;rdquo;&lt;/h1&gt;&#xA;&lt;p&gt;April 2004&lt;/p&gt;&#xA;&lt;p&gt;To the popular press, &amp;ldquo;hacker&amp;rdquo; means someone who breaks into computers. Among programmers it means a good programmer. But the two meanings are connected. To programmers, &amp;ldquo;hacker&amp;rdquo; connotes mastery in the most literal sense: someone who can make a computer do what he wants—whether the computer wants to or not.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Undergraduation</title>
      <link>https://linguage.github.io/paul_graham/essays_en/college/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_en/college/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_zh/college/&#34;&gt;中文版本&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/college.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/college.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/college.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;undergraduation&#34;&gt;Undergraduation&lt;/h1&gt;&#xA;&lt;p&gt;Want to start a startup? Get funded by Y Combinator.&lt;/p&gt;&#xA;&lt;p&gt;March 2005&lt;/p&gt;&#xA;&lt;p&gt;(Parts of this essay began as replies to students who wrote to me with questions.)&lt;/p&gt;&#xA;&lt;p&gt;Recently I&amp;rsquo;ve had several emails from computer science undergrads asking what to do in college. I might not be the best source of advice, because I was a philosophy major in college. But I took so many CS classes that most CS majors thought I was one. I was certainly a hacker, at least.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Welcome to Lisp</title>
      <link>https://linguage.github.io/paul_graham/essays_en/acl2txtt1748944359/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_en/acl2txtt1748944359/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_zh/acl2txtt1748944359/&#34;&gt;中文版本&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;welcome-to-lisp&#34;&gt;Welcome to Lisp&lt;/h1&gt;&#xA;&lt;p&gt;This chapter aims to get you programming as soon as possible. By the end of it you will know enough Common Lisp to begin writing programs.&lt;/p&gt;&#xA;&lt;h2 id=&#34;21-form&#34;&gt;2.1 Form&lt;/h2&gt;&#xA;&lt;p&gt;It is particularly true of Lisp that you learn it by using it, because Lisp is an interactive language. Any Lisp system will include an interactive front-end called the toplevel. You type Lisp expressions into the toplevel, and the system displays their values. Lisp usually displays a prompt to tell you that it&amp;rsquo;s waiting for you to type something. Many implementations of Common Lisp use &amp;gt; as the toplevel prompt. That&amp;rsquo;s what we&amp;rsquo;ll use here.&lt;/p&gt;</description>
    </item>
    <item>
      <title>What I Worked On</title>
      <link>https://linguage.github.io/paul_graham/essays_en/worked/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_en/worked/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_zh/worked/&#34;&gt;中文版&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/worked.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/worked.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/worked.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;what-i-worked-on&#34;&gt;What I Worked On&lt;/h1&gt;&#xA;&lt;p&gt;February 2021&lt;/p&gt;&#xA;&lt;p&gt;Before college the two main things I worked on, outside of school, were writing and programming. I didn&amp;rsquo;t write essays. I wrote what beginning writers were supposed to write then, and probably still are: short stories. My stories were awful. They had hardly any plot, just characters with strong feelings, which I imagined made them deep.&lt;/p&gt;</description>
    </item>
    <item>
      <title>What Languages Fix</title>
      <link>https://linguage.github.io/paul_graham/essays_en/fix/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_en/fix/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_zh/fix/&#34;&gt;中文版本&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/fix.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/fix.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/fix.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;what-languages-fix&#34;&gt;What Languages Fix&lt;/h1&gt;&#xA;&lt;p&gt;Kevin Kelleher suggested an interesting way to compare programming languages: to describe each in terms of the problem it fixes. The surprising thing is how many, and how well, languages can be described this way.&lt;/p&gt;&#xA;&lt;p&gt;Algol: Assembly language is too low-level.&lt;/p&gt;&#xA;&lt;p&gt;Pascal: Algol doesn&amp;rsquo;t have enough data types.&lt;/p&gt;</description>
    </item>
    <item>
      <title>You Weren&#39;t Meant to Have a Boss</title>
      <link>https://linguage.github.io/paul_graham/essays_en/boss/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_en/boss/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;https://linguage.github.io/paul_graham/essays_zh/boss/&#34;&gt;中文版本&lt;/a&gt;&lt;/p&gt;&#xA;&lt;div&#xA;  class=&#34;link-card group relative my-3 w-full overflow-hidden rounded-xl border border-[var(--lc-border,rgba(15,23,42,0.12))] bg-[var(--lc-bg,var(--card-bg,var(--surface,#ffffff))))] transition-shadow duration-150 hover:shadow-[var(--lc-shadow-hover,0_14px_30px_-18px_rgba(15,23,42,0.35))]&#34;&#xA;  data-url=&#34;https://www.paulgraham.com/boss.html&#34;&#xA;&gt;&#xA;  &lt;a&#xA;    class=&#34;link-card__fallback block px-4 py-3 text-sm font-medium text-[var(--lc-url,var(--link-color,#0e6a85))] underline-offset-4 hover:underline&#34;&#xA;    href=&#34;https://www.paulgraham.com/boss.html&#34;&#xA;    target=&#34;_blank&#34;&#xA;    rel=&#34;noopener&#34;&#xA;  &gt;&#xA;    https://www.paulgraham.com/boss.html&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;you-werent-meant-to-have-a-boss&#34;&gt;You Weren&amp;rsquo;t Meant to Have a Boss&lt;/h1&gt;&#xA;&lt;p&gt;Want to start a startup? Get funded by Y Combinator.&lt;/p&gt;&#xA;&lt;p&gt;March 2008, rev. June 2008&lt;/p&gt;&#xA;&lt;p&gt;Technology tends to separate normal from natural. Our bodies weren&amp;rsquo;t designed to eat the foods that people in rich countries eat, or to get so little exercise. There may be a similar problem with the way we work: a normal job may be as bad for us intellectually as white flour or sugar is for us physically.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
