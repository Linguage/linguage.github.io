<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Course on Linguista</title>
    <link>https://linguage.github.io/tags/course/</link>
    <description>Recent content in Course on Linguista</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Fri, 17 Oct 2025 13:01:13 +0800</lastBuildDate>
    <atom:link href="https://linguage.github.io/tags/course/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>「Scripts」Module 1: Introduction to Agentic Workflows</title>
      <link>https://linguage.github.io/courses/andrew-ng-agentic-ai/lecture/lec-01/</link>
      <pubDate>Fri, 17 Oct 2025 13:01:13 +0800</pubDate>
      <guid>https://linguage.github.io/courses/andrew-ng-agentic-ai/lecture/lec-01/</guid>
      <description>&lt;div class=&#34;link-card&#34; data-url=&#34;https://learn.deeplearning.ai/courses/agentic-ai/&#34;&gt;&#xA;  &lt;a class=&#34;link-card__fallback&#34; href=&#34;https://learn.deeplearning.ai/courses/agentic-ai/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&#xA;    https://learn.deeplearning.ai/courses/agentic-ai/&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;andrew-ng-agentic-ai&#34;&gt;Andrew Ng: Agentic AI&lt;/h1&gt;&#xA;&lt;h1 id=&#34;module-1-introduction-to-agentic-workflows&#34;&gt;Module 1: Introduction to Agentic Workflows&lt;/h1&gt;&#xA;&lt;h2 id=&#34;10-introduction&#34;&gt;1.0 Introduction&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;0:02&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Welcome to this course on Agentic AI. When I coined the term agentic to describe what I saw&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;0:05&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;as an important and rapidly growing trend in how people were building on-base applications,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;0:10&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;what I did not realize was that a bunch of marketers would get hold of this term&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;0:14&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;and use it as a sticker and put this on almost everything in sight. And that has caused hype&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;0:20&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;on Agentic AI to skyrocket. The good news though is that ignoring the hype, the number of truly&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;0:27&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;valuable and useful applications built using Agentic AI has also grown very rapidly, even if&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;0:33&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;not quite as rapidly as the hype. And in this course, what I&amp;#39;d like to do is show you best&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;0:38&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;practices for building Agentic AI applications. And this will open up a lot of new opportunities&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;0:44&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;to you in terms of what you can now build. Today, agentic workflows are being used to build&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;0:49&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;applications like customer support agents, or to do deep research to help write deeply insightful&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;0:55&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;research reports, or to process tricky legal documents, or to look at patient input and render&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1:02&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;or to suggest possible medical diagnoses. On many of my teams, a lot of the projects we built just&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1:08&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;would be impossible without agentic workflows. And so knowing how to build applications with them&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1:14&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;is one of the most important and valuable skills in AI today. It turns out that one of the biggest&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1:20&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;differences I&amp;#39;ve seen between people that really know how to build agentic workflows compared to&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1:24&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;people that are less effective at it is the ability to drive a disciplined development process,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1:30&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;specifically one focused on evals and error analysis. And in this course, I&amp;#39;ll tell you what&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1:35&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;that means and show you what allows you to be really good at building these agentic workflows.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1:41&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Being able to do this is one of the most important skills in AI today and will open up a lot more&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1:46&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;opportunities, be it job opportunities or opportunities to just build amazing software&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1:51&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yourself. With that, let&amp;#39;s go on to the next video to dive more into what are agentic workflows.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;11-what-is-an-agentic-ai&#34;&gt;1.1 What is an agentic AI&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;03&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;So what is Agentic AI &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; why are Agentic AI workflows so powerful&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;?&lt;/span&gt; Let&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s take a look.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;05&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;The way that many of us use large language models &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; LLMs today is by prompting it to say,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;write an essay &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; us on a certain topic X&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And I think of that as akin to going to a human,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;17&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; this &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt;, going to an AI &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; asking it to please type out an essay &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; me by writing&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;from the first word to the last word all &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; one go &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; without ever using backspace&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;It turns out that we as people, we don&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t do our best writing like that by being forced to write&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; this completely linear order &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; nor &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; AI models&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; But despite the difficulty of being&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;38&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;constrained to write &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; this way, our LLMs &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; surprisingly well&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; In contrast, with an agentic&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;43&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;workflow, this is what the process might look like&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; You may ask it to first write an essay&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;48&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;outline on a certain topic, then ask &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; it needs to &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; any web research&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And after doing some web&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;53&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;research &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; maybe downloading some web pages, then to write the first draft &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; then to read&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;57&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;the first draft &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; see what parts need revision &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; more research &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; then revise the draft &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; so&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;02&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;on&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And this type of workflow is more akin to doing some thinking &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; some research &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; then&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;06&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;doing some revision &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; then doing some more thinking &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; so on&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And with this iterative&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;process, it turns out that an agentic workflow can take longer, but it delivers a much better&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;work product&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So an agentic AI workflow is a process where an LLM based app executes multiple&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;steps to complete a task&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; In this example, you might use an LLM to write the first essay outline&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;31&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; then you might use an LLM to decide what search terms to type into a web search engine &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;37&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;really what search terms to call a web search API with &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; order to get back relevant web pages&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Based on that, you can feed the downloaded web pages into an LLM to have it write the first draft&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;51&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; then maybe use another LLM to reflect &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; decide what needs more revision&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And then depending&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;57&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;on how you design this workflow, perhaps you may even add a human &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; the loop step where the LLM&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;03&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;has the option to request human review, maybe of some key facts&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And based on that, it may then&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;revise the draft &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; this process results &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; a much better work output&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; One of the key skills&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;you learn &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; this course is how to take a complex task like writing an essay &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; breaking it down&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;into smaller steps &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; agentic workflows to execute one step at a time to then get the work output&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;31&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;that you want&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And knowing how to decompose the task into steps &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; how to build the components&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;36&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;to execute the individual steps well turns out to be a tricky but important skill that will&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;42&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;determine your ability to build agentic workflows &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; a huge range of exciting applications&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; In this&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;48&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;course, a running example that we&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ll use and something that you build alongside me is a research&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;54&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;agent&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So here&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s an example of what it will look like. You can enter a research topic like how do I&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;build a new rocket company to compete with SpaceX&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; I don&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t personally want to compete with SpaceX,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;08&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;but &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; you want to, you can try asking a research agent to help your background research&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;So this agent starts with planning out what research to use, including calling a web search&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;engine to download some web pages, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; then to synthesize &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; rank findings, draft an outline,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;26&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;have an editor&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;to&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;agent review &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; coherence, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; then finally generate a comprehensive&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;markdown report, which it has done here, building a new rocket company to compete with SpaceX&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;35&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;with an intro, background, findings, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; so on&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; I think it points out appropriately that&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;41&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;this is going to be a tough startup to build, so I&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;m not personally planning to do this, but if&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;47&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;you want to tackle something like this, maybe a research agent like this could help you with some&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;53&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;initial research&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And by finding &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; downloading multiple sources &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; deeply thinking about it,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;this actually ends up with a much more thoughtful report than just prompting an LLM to write an essay&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;07&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; you would&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; One of the reasons I&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;m excited about this is because in my work, I&amp;#39;&lt;/span&gt;ve ended up&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;building quite a few specialized research agents, be it &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; legal documents &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; conflict legal&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;compliance, &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; some healthcare sectors, &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; some business product research areas&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And so I hope&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;that working through this example, you &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; only learn how to build agentic workflows &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; many&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;29&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;other applications, but that some of the ideas &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; building research agents will be directly useful&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;34&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;to you &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; you ever need to build a custom research agent yourself&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Now, one of the often discussed&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;42&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;areas of AI agents is how autonomous are they&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;?&lt;/span&gt; What you just saw here was a relatively complex,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;highly autonomous Agentic AI workflow, but there are also other simpler workflows that are&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;55&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;incredibly valuable&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Let&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s go on to the next video to talk about the degree to which agentic&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;workflows can be autonomous, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; does it give you a framework to think about how&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;05&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;you might go about building different applications &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; how easy &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; difficult they might be&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;See you &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; the next video&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;12-degrees-of-autonomy&#34;&gt;1.2 Degrees of autonomy&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;02&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Agents can be autonomous to different degrees&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; A few years ago, I noticed within the AI community&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;06&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;that there was a growing controversial debate about what is an agent, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; some people are&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;writing a paper saying I built an agent, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; others will say, no, that&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s not really a true&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;agent&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And I felt this debate was unnecessary, which is why I started using the term agentic,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;because I thought &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; we use it as an adjective rather than a binary, it&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s either an agent or not,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;26&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;then we&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;re going to have to acknowledge that systems can be agentic to different degrees.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;31&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;And let&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s just call it all agentic and move on with the real work of building these systems&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;36&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rather than debating, you know, is this sufficiently autonomous to be an agent &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;?&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;I remember when I prepared a talk on agentic reasoning, one of my team members actually&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;46&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;came to me &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; said, hey, Andrew, we don&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t need yet another word. You know, we have agent,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;why are you making up another word, agentic&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;?&lt;/span&gt; But I decided to use it anyway&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And then later on,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;55&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wrote an article &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; a given newsletter, The Batch, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; then also posted on social media,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;saying that instead of arguing over which word to include &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; exclude as being a true agent,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;06&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;let&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s acknowledge that different degrees to which systems can be agentic. And I think this helped&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;move past the debate on what is a true agent &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; let us just focus on actually building them&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Some agents can be less autonomous&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So take the example of writing an essay about black holes&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;You can have a relatively simple agent to come up with a few web search terms &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; web search queries&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;31&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Then you can hard code &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; that you call a web search engine, fetch some web pages,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;37&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; then use that to write an essay&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And this is an example of a less autonomous agent&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;41&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;with a fully deterministic sequence of steps&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And this will work okay&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;46&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;In terms of notational convention, throughout this course, I&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ll use the red color,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;as you see here on the left, to denote the user input, such as a user query &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; this &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;56&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; later examples, maybe the input document into an agentic workflow&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;The gray boxes denote calls to an LLM, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; the green boxes, like the web search &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; the web&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;07&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fetch boxes that you see here, indicate steps where other software is being used to carry out&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;an action, such as a web search API call &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; executing code to fetch the contents of a website&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Then an agent can be more autonomous, where, given a request to write an essay about black holes,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;perhaps you let the LLM decide, does it want to &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; a web search, &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; does it want to search&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;29&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;recent news sources, &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; does it want to search &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; recent research papers on the website archive&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;?&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;34&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Based on that, maybe &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; this example, the LLM, &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; the human engineer, but the LLM chooses,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;39&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; this &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt;, to call a web search engine, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; then after that, you may let the LLM decide&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;how many web pages does it want to fetch, &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; it fetches the PDF, does it need to&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;call a function, &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; also call a &lt;span style=&#34;color:#66d9ef&#34;&gt;tool&lt;/span&gt;, to convert the PDF to text&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;?&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;53&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;And &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; this &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt;, maybe it fetches its top few web pages, then it can write an essay,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;59&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;decide whether to reflect &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; improve, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; maybe even go back to fetch more web pages,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;03&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; then to finally produce an output&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;06&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;And so even &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; this example of a research agent, we can see that some agents can be&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;less autonomous, with a linear sequence of steps to be executed, determined by a programmer,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; some can be more autonomous, where you trust the LLM to make more decisions,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; the exact sequence of steps that happens may be even determined by the LLM, rather than&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;26&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; advance by the programmer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;28&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;So &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; less autonomous systems, you will usually have all the steps predetermined &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; advance,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;34&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; any functions it calls, like web search, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; we&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ll call that tool use, as you learn&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;38&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; the third module &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; this course, might be hard&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;coded by the human engineer, by you&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;43&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; me, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; most of the autonomy is &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; what text the LLM generates&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;47&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;At the end of the spectrum would be highly autonomous agents, where the agent makes many&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;51&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;decisions autonomously, including, &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; example, deciding what is the sequence of steps it&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;56&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;will carry out &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; order to write the essay&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;59&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;And there&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s some highly autonomous agents that can even write new functions, or sometimes&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;04&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;create new tools that it can then execute&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;06&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;And somewhere &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; between are semi&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;autonomous agents, where it can make some decisions,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;choose tools, but the tools are usually more predefined&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;As you look at different examples &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; this course, you learn how to build applications&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;anywhere on this spectrum of less to more highly autonomous, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; you find that there&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;are tons of applications &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; the less autonomous end of the spectrum that are very valuable&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;26&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;being built &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; tons of businesses today, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; at the same time, there are also applications&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;31&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;being worked on at the more highly autonomous end of the spectrum, but those are usually&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;36&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;less easily controllable, a little bit more unpredictable, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; also a lot of active research&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;42&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;as well to figure out how to build these more highly autonomous agents&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;46&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;And with that, let&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s go on to the next video to dive deeper into this and to hear about&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;53&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;some of the benefits of using agents &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; why they allow us to &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; things that just were&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;57&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; possible with earlier generations of base applications&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;13-benefits-of-agentic-workflows&#34;&gt;1.3 Benefits of agentic workflows&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;03&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;I think the one biggest benefit of agentic workflows is that it allows you to &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; many&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;04&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tasks effectively that just previously were &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; possible&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; But there are other benefits as well,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;including parallelism that lets you &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; certain things quite fast, as well as modularity that&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lets you combine the best of three components from many different places to build an effective&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;19&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;workflow&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Let&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s take a look. My team collected some data on a coding benchmark that tests the&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;26&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ability of different LLMs to write code to carry out certain tasks&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; The benchmark used &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; this &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;is called Human Eval, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; it turns out that GPT &lt;span style=&#34;color:#ae81ff&#34;&gt;3.5&lt;/span&gt;, this is a model that the first publicly&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;38&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;available version of Chat GPT was based on, &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; asked to write the code directly, to just type&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;42&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;out the computer program, gets &lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; right on this benchmark&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; This is a positive k&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;metric&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; GPT &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; is&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a much better model&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Its performance leaps to &lt;span style=&#34;color:#ae81ff&#34;&gt;67&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; with this also non&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;agentic workflow&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; But it turns&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;56&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;out that as large as the improvement was from GPT &lt;span style=&#34;color:#ae81ff&#34;&gt;3.5&lt;/span&gt; to GPT &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, that improvement is dwarfed by what&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;03&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;you can achieve by wrapping GPT &lt;span style=&#34;color:#ae81ff&#34;&gt;3.5&lt;/span&gt; within an agentic workflow&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Using different agentic techniques,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;which you&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ll learn about later in this course, you can prompt GPT 3.5 to write code and then maybe&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;reflect on the code &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; figure out &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; you can improve it&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And using techniques like that, you can&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;actually get GPT &lt;span style=&#34;color:#ae81ff&#34;&gt;3.5&lt;/span&gt; to get much higher levels of performance&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And similarly, GPT &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; used &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; the&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;26&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;context of an agentic workflow also does much better&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So even with today&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s best LLMs, an agentic&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;33&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;workflow lets you get much better performance&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; fact, what we saw &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; this example was the&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;39&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;improvement from one generation of model to another, which is huge, is still &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; as big a difference&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;45&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;as implementing an agentic workflow on the previous generation of model&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Another benefit of&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;51&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;using agentic workflows is that they can parallelize some tasks &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; thus &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; certain things much faster&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;57&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;than a human&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; For example, &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; you ask an agentic workflow to write an essay about black holes, you&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;04&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;might be able to have three LLMs run &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; parallel to generate ideas &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; web search terms to type&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;into the search engine&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Based on the first web search, it may identify, say, three top results to&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fetch&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And based on the second web search, it may identify a second set of web pages to fetch &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; so&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;on&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And it turns out that whereas a human doing this research would have to read these nine web&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;28&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pages sequentially &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; one at a time, when you&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;re using an agentic workflow, you can actually&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;33&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;parallelize all nine web page downloads &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; then finally feed all these things into an LLM to write&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;39&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;an essay&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So even though agentic workflows &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; take longer than truly non&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;agentic workflows &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; by&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;45&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;direct generation by just prompting a single time, &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; you were to compare this type of agentic&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;51&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;workflow to how a human would have to go about the task, the ability to parallelize downloading lots&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;56&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;of web pages can actually let it &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; certain tasks much faster than the non&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;parallel sequential way&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;02&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;that a single human might process this data&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; To build on this example, it turns out one of the&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;08&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;things I often &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; when building agentic workflows is look at the individual components like the LLM&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; add &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; swap out components&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; example, maybe I look at the web search engine I use up&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;here &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; I might decide that I want to soften a new web search engine&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; When building agentic&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;workflows, there are actually multiple web search engines including Google, which you can access&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;29&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;by a server, as well as others like Bing, DuckDuckGo, Tavily, u&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;com&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; There are actually quite a lot of&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;35&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;options &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; web search engines designed &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; LLMs to use&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Or maybe instead of just doing three web&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;searches, maybe on this step we can swap &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; a new news search engine so we can find out what&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s the&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;47&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;latest news on recent breakthroughs on black hole science&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And lastly, instead of using the same LLM&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;55&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; all of the different steps, I will often try out different large language models &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; maybe try&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;out different LLM providers to see which one gives the best result &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; different steps of this system&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;07&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;So to summarize, the main reason I use agentic workflows is it just gives much better performance&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;on many different applications&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; But &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; addition, it can also paralyze some tasks that humans would&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;otherwise have to &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; sequentially&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And the modular design of many agentic workflows also lets us&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;add &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; update tools &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; sometimes swap out models&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; We&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ve talked a lot about the key components of&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;33&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;building agentic workflows&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Let&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s now take a look at a range of Agentic AI applications to give you&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;39&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a sense of the sorts of things people are already building &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; the sorts of things&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;43&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;you&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ll build yourself. Let&amp;#39;&lt;/span&gt;s go on to the next video&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;14-agentic-ai-applications&#34;&gt;1.4 Agentic AI applications&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Let&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s take a look at some examples of Agentic AI applications.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;04&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;One task that many businesses carry out is invoice processing&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;09&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;So given an invoice like this, you might want to write software to extract the most important&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fields, which &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; this application, let&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s say is the biller, that would be tech flow solutions,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;19&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;the biller address, the amount due, which is &lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;000&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; the due date, which looks like it is&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;August &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;th, &lt;span style=&#34;color:#ae81ff&#34;&gt;2025.&lt;/span&gt; So &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; many finance departments, maybe a human would look at invoices &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; identify&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;33&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;the most important fields, who &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; we need to pay by when, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; record these &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; a database to make&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;39&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sure that payment is issued &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; time&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; If you were to implement this with an agentic workflow,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;you might &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; so like this&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; You write input an invoice, then call a PDF to text conversion API&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;51&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;to turn the PDF into maybe formatted text, such as markdown text &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; the LLM to ingest&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Then the LLM&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;57&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;will look at the PDF &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; figure out, is this actually an invoice &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; is this some other type&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;02&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;of document that they should just ignore&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;?&lt;/span&gt; And &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; it is an invoice, then it will pull up the required&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;07&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fields as well as use an API &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; use a &lt;span style=&#34;color:#66d9ef&#34;&gt;tool&lt;/span&gt; to update the database &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; order to save the most&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;important fields &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; the database records&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So one aspect of this agentic workflow is that&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;there is a clear process to follow, is identify the required fields &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; record &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; the database&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;26&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Tasks like these with a clear process you want followed tend to be maybe easier &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; agentic&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;31&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;workflows to carry out because it leads to a relatively step&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;by&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;step way to reliably carry&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;36&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;out this task&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Here&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s another example, maybe just a little bit harder. So if you want to build an&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;41&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;agent to respond to basic customer order inquiries, then the steps might be to extract the key&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;48&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;information, so figure out what exactly did the customer order, what&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s the customer&amp;#39;&lt;/span&gt;s name, then&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;53&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;look up the relevant customer records, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; then finally draft a response &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; human to review before&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;the email response is sent to the customer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So again, there&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s a clear process here and we&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;04&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;will implement this step&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;by&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;step, where we take the email, feed it to an LLM to verify &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; to extract&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;the order details, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; assuming the customer email is about an order, the LLM might then choose to&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;call an order&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s database to then pull up that information. That information then goes to the LLM&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;to then draft an email response, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; the LLM might choose to use a request review &lt;span style=&#34;color:#66d9ef&#34;&gt;tool&lt;/span&gt; that, say, puts&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;29&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;this draft email from the LLM into queue &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; humans to review, so they can then be sent out after a&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;34&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;human has reviewed &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; approved it&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So customer order inquiry agents like these are being built&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; deployed &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; many businesses today&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; To look at a more challenging example, &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; you want to build a&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;45&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;customer service agent to respond &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; just to questions about an order they place, but to respond&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;51&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;to a more general set of questions, anything a customer may ask, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; maybe the customer will ask,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;57&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; you have any black jeans &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; blue jeans&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;?&lt;/span&gt; And to answer this question, you need to maybe make&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;03&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;multiple API calls to your database to first check the inventory &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; black jeans, then check inventory&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;08&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; blue jeans, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; then respond to the customer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So this is an example of a more challenging query,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;where given a user input, you actually have to plan out what is the sequence of database queries&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;19&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;to check &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; inventory&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Or &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; a user asks, I&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;d like to return the beach towel I bought, then to answer&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;this, maybe we need to verify that the customer actually bought a beach towel, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; then double&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;31&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;check the &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; policy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Maybe our set returns only &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt; days within the date of purchase, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; only the&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;36&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;towel was unused&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; is allowed, then have the agent issue a &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; packing slip, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;42&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;also set the database record to &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; pending&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; this example, &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; the required steps to process&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;48&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;the customer requests are &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; known ahead of time, then it results &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; a more challenging process,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;54&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;where the LLM base application has to decide &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; itself that these are the three steps needed &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;order to respond appropriately to this task&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; But you learn about some of the latest work on how to&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;06&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;approach this type of problem too&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And to give one last example of maybe an especially difficult&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;type of agent to build, there&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s a lot of work on computer use by agents, in which agents will&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;17&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;attempt to use a web browser &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; read a web page to figure out how to carry out a complex task&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;In this example, I&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ve asked an agent to check whether seats are available on two specific United&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Airlines flights from San Francisco to Washington DC, &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; the DCA airport&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; The agent has access to&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;36&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a web browser they can use to carry out this task&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; the video here, you can see it navigating&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;41&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;the United website independently, clicking on page elements &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; filling &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; the text fields on the page&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;46&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;to carry out the search that I requested&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; As it works, the agent reasons over the content of the&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;52&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;page to figure out the actions it needs to take to complete the task, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; what it should &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; next&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;57&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;In this &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt;, there&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s some trouble checking flights on the United site, and instead decides to&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;02&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;navigate to the Google Flights website to search &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; available flights&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; On the Google Flight, you&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;08&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;see here it finds several flight options that match the user&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s query, and the agent then picks one and&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;is taken back to the United website, where it looks like it&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s now on the correct web page, and so is&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;able to determine that yes, there are seats available on the flights that I asked about&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So computer use&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;26&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;is an exciting cutting&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;edge area of research right now, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; many companies are trying to get computer&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;use agents to work&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; While the agent you saw here did eventually figure out the answer, I often see&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;36&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;agents having trouble using web browsers well&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; For example, &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; a web page is slow to load, an agent&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;42&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;may fail to understand what&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s going on, and many web pages are still beyond agents&amp;#39;&lt;/span&gt; abilities to&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;47&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pause &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; to read accurately&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; But I think computer use agents, even though &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; yet reliable enough&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;53&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;to use mission&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;critical applications today, are an exciting &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; important area of future development&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;58&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;So when I&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;m considering building Agentic AI workflows, the tasks that are easier will tend to be ones&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;05&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;where there is a clear step&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;by&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;step process, &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; a business already has a standard procedure, a&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;standard offering procedure to follow, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; then it can be quite a lot of work to take that procedure&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; codify it up &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; an AI agent, but that tends to lead to easier implementations&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; One thing that&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;makes it easier is &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; you are using text&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;only assets, because LLM&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;language models have&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grown up really processing text, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; you need to process other input modalities, it may well be&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;33&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;doable, but it maybe gets a little bit harder&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And on the harder end of the spectrum, &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; the steps are&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;38&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; known ahead of time of what&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s needed to carry out a task, like you saw for the more advanced&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;42&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;customer service agent, then the agent may need to plan &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; solve as you go, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; this tends to be&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;47&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;harder &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; more unpredictable &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; less reliable&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And then as mentioned, &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; it needs to accept rich&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;52&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;multi&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;modal inputs such as sound, vision, audio, that also tends to be less reliable than the&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;58&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;only header process text&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So I hope that gives you a sense of the types of applications you might build&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;05&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;with agentic workflows&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; When implementing one of these things yourself, one of the most important&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;skills is to look at a complex workflow &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; figure out what are the individual steps so you can&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;implement an agentic workflow to execute those steps one at a time&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; In the next video, we&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ll talk&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;about task decomposition, that is, given a complex thing you want to &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;, like write a research report&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;28&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; have a customer agent get back to customers, how &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; you &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt; that down into discrete steps&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;34&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;to try to implement an agentic workflow&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;?&lt;/span&gt; Let&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s go see that in the next video.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;15-task-decomposition-identifying-the-steps-in-a-workflow&#34;&gt;1.5 Task decomposition: Identifying the steps in a workflow&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;People &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; businesses &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; a lot of stuff&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; How &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; you take this useful stuff that we &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;06&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt; it down into discrete steps &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; the agentic workflow to follow&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;?&lt;/span&gt; Let&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s take a look.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Take the example of building a research agent&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; If you want an AI system to write an essay on&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a topic X, one thing you could &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; is prompt an LLM to have it generate an output directly&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;But &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; you were to &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; this &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; topics that you want deeply researched,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;28&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;you may find that the LLM output covers only the surface level points, &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; maybe covers only the&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;33&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;obvious facts, but doesn&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t go as deep into the subject as you want it to. In this case, you&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;39&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;might then reflect on how you as a human would write an essay on a certain topic&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Would you just&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;45&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sit down &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; start writing, &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; would you take multiple steps, such as first write an essay&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;outline, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; then search the rep, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; then based on the input from the web search, write the essay&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;55&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;As I take a task &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; decompose it into steps, one question I&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;m always asking myself is,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; I look at these steps one, two, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; three, can each of them be done either by an LLM, &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;07&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;by a short piece of code, &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; by a function call, &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; by a &lt;span style=&#34;color:#66d9ef&#34;&gt;tool&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; In this &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt;, I think an LLM can&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;maybe write a decent outline on many topics that I would want it to help me think through&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;say probably okay on the first step, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; then I know how to use an LLM to generate search terms&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;26&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;to search the web&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So, I would say the second step is also doable, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; then based on web search,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;31&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;I think an LLM could input the web search results &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; write an essay&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And so, this would be a&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;35&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;reasonable first attempt at an agentic workflow &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; writing an essay that goes deeper than just&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;41&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;direct generation&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; But &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; I were to then implement this agentic workflow &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; look at the results,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;47&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;maybe you find that the results still aren&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t good enough. It&amp;#39;&lt;/span&gt;s still &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; yet as deeply thoughtful&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;51&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Maybe the essays feel a little bit disjointed&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; This has actually happened to me&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; I once built&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;56&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a research agent using this workflow, but when I read the output, it felt a bit disjointed&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;You know, the start of the article didn&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t feel completely consistent with the middle,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;04&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;didn&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t feel completely consistent with the end. In this case, what you might do is then reflect&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;09&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;on how you would change the workflow &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; you as a human found that the essay is a little bit&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;disjointed&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; One thing you could &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; is take the third step &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; further decompose, write the essay&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;into additional steps&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So, instead of writing the essay on one go, you might instead have it&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;write the first draft, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; then consider what parts need revision, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; then revise the draft&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;And this would be how I as a human might go about it, to &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; just write the final essay at my first&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;39&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;attempt, but write the first draft &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; then read over it, which is another step that the LLM is&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pretty decent at&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And then based on my own critique of my own essay, I&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ll revise the draft.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;So to recap, I started off with direct generation, just one step, decided it wasn&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t good enough,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;55&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; so broke that down into three steps, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; then maybe decided that still isn&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t good enough,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; took one of the steps &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; further broken it down &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; decomposed it into three more steps,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;05&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;resulting &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; this more complex, richer process &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; generating an essay&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And depending on how&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;satisfied you are with the results of this process, you may choose to even modify this essay&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;generation process further&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Let&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s look at the second example of how to decompose complex tasks&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;into smaller steps&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Take the example of responding to basic customer order inquiries&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; The first step&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;that a human customer specialization might carry out might be to first extract the key information,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;36&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;such as who is this email from, what did they order, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; what is the order number&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And these&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;41&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;are things that an LLM could &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So I could just say, let&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s have an LLM do that. The second step&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;46&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;would be to then find the relevant customer records&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So to write &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; generate the relevant&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;51&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;database queries to pull up the order of what the customer had ordered &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; when I shipped &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; so on&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;56&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;I think an LLM with the ability to call a function to query the orders database should be able to &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;04&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;that&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And lastly, having pulled up the customer record &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; the customer order record, I might then&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;09&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;write &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; send a response back to the customer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And I think with the information we pulled up,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;this third step is also doable with an LLM &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; I give the option to call an API to send an email&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;19&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;So this would be another example of taking a task of responding to customer email &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; breaking it&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;down into three individual steps where I can look at each of these steps &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; say, yep, I think an LLM&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; one LLM with the ability to call a function to query a database &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; send an email should be able&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;35&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;to &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; that&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Just one last example &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; the invoice processing&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; After a PDF invoice has been converted&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;42&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;to text, the first step is to pull out the required information, the name of the biller, the address,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;47&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;the due date, the amount due, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; so on&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And now I should be able to &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; that&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And then &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; I want to&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;53&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;check that the information was extracted &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; save it &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; a new database entry, then I think an LLM&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;58&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;should be able to help me call a function to update the database record&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And so to implement this,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;04&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;we implement an agentic workflow to carry out basically these two steps&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; When building agentic&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;09&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;workflows, I think of myself as having a number of building blocks&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; One important building block&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;would be large language models &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; maybe large multimodal models &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; I want to try to process&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;images &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; audio as well&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And LLMs are good at generating text, deciding what to call,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;maybe extracting information&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; For some highly specialized tasks, I might also use some other&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;31&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;AI models, such as an AI model &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; converting a PDF to text &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; text&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;to&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;speech &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; image&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;38&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;analysis&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; In addition to AI models, I also have access to a number of software tools, including&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;45&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;different APIs that I can call to &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; voice search, to get maybe real&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;time weather data,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;51&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;to send emails, check calendar, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; so on&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And I might also have tools to retrieve information,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;57&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;to pull up data from a database, &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; to invent RAG &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; retrieval augmented generation,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;03&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;where I can look up a large text database &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; find the most relevant text&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Or I might also&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;07&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;have tools to execute code&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And this is a &lt;span style=&#34;color:#66d9ef&#34;&gt;tool&lt;/span&gt; that lets an LLM write code &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; then run the code&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;on your computer to &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; a huge range of things&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; In &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; some of these tools seem a bit foreign to&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;you, don&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t worry about it. We&amp;#39;&lt;/span&gt;ll go through the most important tools &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; much greater detail &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a later module&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; But I think of a lot of my work when I&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;m building an agent workflow as looking at&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;29&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;the work that the person &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; business is doing &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; then trying to figure out with these building&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;33&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;blocks, how can I sequence these building blocks together &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; order to carry out the tasks that I&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;39&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;want my system to carry out&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And this is why having a good understanding of what building&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;blocks are available, which I hope you have a better sense of by the end of this course as well,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;will allow you to better envision what agentic workflows you can build by combining these&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;54&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;building blocks together&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So to summarize, one of the key skills &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; building agentic workflows is&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;59&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;to look at a bunch of stuff that maybe someone does &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; to identify the discrete steps that&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;06&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;it could be implemented with&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And when I&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;m looking at the individual discrete steps,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;one question I&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;m always asking myself is, can this step be implemented with either an&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;LLM &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; with one of the tools such as an API &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; a function call that I have access to&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;?&lt;/span&gt; And &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;the answer is no, I&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ll then often ask myself, how would I as a human do this step? And is it&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;28&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;possible to decompose this further &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt; this down into even smaller steps that then maybe is&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;34&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;more amenable to implementation with an LLM &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; with one of the software tools that I have&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;?&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;So I hope this gives you a rough sense of how to think about task decomposition&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; In &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; you feel&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;45&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;like you don&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t fully have it yet, don&amp;#39;&lt;/span&gt;t worry about it&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; We&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ll go through many more examples&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; this course &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; you have a much better understanding of this by the end of this&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;54&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;course&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; But it turns out that as you build agentic workflows, you find that often you&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;59&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;build an initial task decomposition, initial agentic workflow, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; then you want to keep&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;05&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;on iterating &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; improving on it quite a few times until it delivers the level of performance&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;that you want&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And to drive this improvement process, which I found important &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; many&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;projects, one of the key skills is to know how to evaluate your agentic workflow&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; the next&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;video, we&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ll talk about evaluations or evals and discrete key components, how you can build,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;28&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; then also keep on improving your workflows to get the performance&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;31&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;that you want&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Let&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s talk about evals in the next video.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;16-evaluations-agentic-evals&#34;&gt;1.6 Evaluations agentic (evals)&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;0:04&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;I&amp;#39;ve worked with many different teams on building agentic workflows, and I&amp;#39;ve found that one&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;0:05&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;of the biggest predictors for whether someone is able to do it really well versus be less&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;0:10&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;efficient at it is whether or not they&amp;#39;re able to drive a really disciplined evaluation&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;0:16&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;process.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;0:17&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;So, your ability to drive evals for your agentic workflow makes a huge difference in your ability&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;0:23&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;to build them effectively.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;0:26&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;In this video, we&amp;#39;ll take a quick overview of how to build evals, and this is a subject&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;0:30&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;that we&amp;#39;ll actually go into much deeper in a later module in this course.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;0:35&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;So, let&amp;#39;s take a look.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;0:37&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;After building an agentic workflow like this one for responding to customer order inquiries,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;0:43&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;it turns out that it&amp;#39;s very difficult to know in advance what are the things that could&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;0:47&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;go wrong.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;0:48&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;And so, rather than trying to build evaluations in advance, what I recommend is you just look&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;0:53&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;for the outputs and manually look for things that you wish it was doing better.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1:00&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;For example, maybe you read a lot of outputs and find that it is unexpectedly mentioning&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1:05&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;your competitors more than it should.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1:08&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Many businesses don&amp;#39;t want their agents to mention competitors because it just creates&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1:12&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;an awkward situation.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1:14&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;And if you read some of these outputs, maybe you find that it sometimes says, I&amp;#39;m glad&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1:17&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;you shopped with us.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1:18&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;We&amp;#39;re much better than our competitor, ComproCo.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1:21&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Or maybe sometimes they say, sure, it should be fun.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1:23&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Unlike RivalCo, we make returns easy.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1:25&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;And you may look at this and go, gee, I really don&amp;#39;t want this to mention competitors.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1:30&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;This is an example of a problem that is really hard to anticipate in advance of building&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1:36&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;this agentic workflow.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1:37&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;So, the best practice is really to build it first and then examine it to figure out where&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1:42&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;it is not yet satisfactory, and then to find ways to evaluate as well as improve the system&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1:47&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;to eliminate the ways that it is still not yet satisfactory.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1:51&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Assuming your business considers it an error or a mistake to mention competitors&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1:57&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;in this way, then as you work on eliminating these competitor mentions, one way to track&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2:02&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;progress is to add an evaluation or an eval to track how often this error occurs.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2:08&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;So, if you have a named list of competitors like ComproCo, RivalCo, the other co, then&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2:14&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;you can actually write code to just search in your own output for how often it mentions&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2:20&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;these competitors by name and count up as a number, as a fraction of the overall responses,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2:26&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;how frequently it mistakenly mentions competitors.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2:29&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;One nice thing about the problem of competitor mentions is it&amp;#39;s an objective metric, meaning&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2:35&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;either the competitor was mentioned or not.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2:38&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;And for objective criteria, you can write code to check for how often this specific&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2:44&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;error occurs.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2:46&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;But because LLMs output free text, there are also going to be criteria by which you want&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2:51&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;to evaluate this output that may be more subjective and where it&amp;#39;s harder to just write code&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2:57&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;to output a black and white score.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2:59&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;In this case, using a LLM as a judge is a common technique to evaluate the output.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3:05&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;So, for example, if you&amp;#39;re building a research agent to do research on different topics,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3:10&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;then you can use another LLM and prompt it to maybe, say, assign the following essay&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3:16&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a quality score between 1 and 5, where 1 is the worst and 5 is the best essay.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3:21&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Here, I&amp;#39;m using a Python expression to mean copy-paste the generated essay into this.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3:27&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;So, you can prompt the LLM to read the essay and assign it a quality score.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3:32&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Then I&amp;#39;m going to ask the research agent to write a number of different research reports,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3:37&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;for example, on recent developments in black hole science or using robots to harvest fruit.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3:43&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;And then in this example, maybe the judge LLM assigns the essay on black holes a score&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3:48&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;of 3, the essay on robot harvesting a score of 4, and as you work on improving your research&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3:54&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;agent, hopefully you see these scores go up over time.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3:58&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;It turns out, by the way, that LLMs are actually not that good at these 1 to 5 scale ratings.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4:03&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;You can give it a shot, but I personally tend not to use this technique that much myself.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4:08&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;But in a later module, you&amp;#39;ll learn some better techniques to have an LLM output more accurate&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4:13&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;scores than asking it to output scores on a 1 to 5 scale, although some people will&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4:17&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;do this, maybe an initial cut as an LLM as judge type of eval.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4:22&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Just to give a preview of some of the Agentic AI evals you&amp;#39;ll learn about later in this course,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4:28&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;you&amp;#39;ve already heard me talk about how you can write codes to evaluate objective criteria,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4:33&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;such as did it mention a competitor or not, or use an LLM as a judge for more subjective&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4:37&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;criteria such as what&amp;#39;s the quality of this essay.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4:39&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;But later, you learn about two major types of evals.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4:42&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;One is end-to-end, where you measure the output quality of the entire agent, as well as component&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4:48&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;level evals, where you might measure the quality of the output of a single step in the agentic&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4:53&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;workflow.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4:54&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;It turns out that these are useful for driving different parts of your development process.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4:58&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;One thing I do a lot as well is just examine the intermediate outputs, or sometimes we&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;5:03&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;call these the traces of the LLM, in order to understand where it is falling short of&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;5:09&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;my expectations.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;5:10&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;And we call this error analysis, where we just read through the intermediate outputs&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;5:14&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;of every single step to try to spot opportunities for improvement.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;5:17&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;And it turns out being able to do evals and error analysis is a really key skill.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;5:22&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;So we have much more to say about this in the fourth module in this course.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;5:27&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;We&amp;#39;re nearly to the end of this first module.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;5:29&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Before moving on, I just want to share with you what I think are the most important design&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;5:33&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;patterns for building agentic workflows.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;5:35&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Let&amp;#39;s go take a look at that in the next video.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;17-agentic-design-patterns&#34;&gt;1.7 Agentic design patterns&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;04&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;We build agentic workflows by taking building blocks &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; putting them together to sequence&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;04&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;out these complex workflows&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; In this video, I&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;d like to share with you a few of the key design&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;patterns, which are patterns &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; how you can think about combining these building blocks into more&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;complex workflows&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Let&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s take a look. I think four key design patterns for building agentic&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;workflows are reflection, two&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;use, planning, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; multi&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;agent collaboration&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Let me briefly go over&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;what they mean, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; then we&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ll actually go through most of these in-depth latent discourse as well.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;33&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;The first of the major design patterns is reflection&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So I might go to an LLM agent &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;39&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ask it to write code, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; it turns out that an LLM might then generate code like this&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; It defines&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;45&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;here a Python function to &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; a certain task&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; I could then construct a prompt that looks like this&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;I can say, here&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s code intended for a certain task, and then copy-paste whatever the LLM had&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;55&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;just output back into this prompt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And then I ask it to check the code carefully &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; correctness,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;59&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;style, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; efficiency, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; give constructive criticism&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And it turns out that the same LLM model&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;03&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;prompted this way may be able to point out some problems with the code&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; I then take this&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;09&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;critique &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; feed it back to the model to say, looks like this is a bug, could you change the&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;code to fix it&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;?&lt;/span&gt; Then it may actually come with a better version of the code&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; To give a preview of&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;tool&lt;/span&gt; use, &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; you&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;re able to run the code and see where the code fails, then feeding that back to&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;28&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;the LLM can also cause it to be able to iterate &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; generate a much better, say, v3 version &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; of the&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;35&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;code&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So reflection is a common design pattern where you can ask the LLM to examine its own outputs&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;41&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; maybe bring &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; some external sources of information, such as run the code &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; see &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; it&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;46&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;generates any error messages, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; use that as feedback to iterate again &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; come up with a better&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;52&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;version of its output&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And this design pattern isn&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t magic. It does not result in everything&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;58&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;working &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; of the time&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; But sometimes it can be a nice bump &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; the performance of your system&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;03&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Now, I&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ve drawn this as if it was a single LLM that I&amp;#39;&lt;/span&gt;m prompting, but to foreshadow multi&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;agent&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;09&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;workflows, you can also imagine instead of having the same model critique itself, you can imagine&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;having a critique agent&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And all that is, is an LLM that&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s been prompted with instructions like,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;your role is to critique code, here&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s code intended for a task, check the code carefully, and so on.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;And the second critique agent, maybe point out errors &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; run unit tests&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And by having two&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;31&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;simulated agents where each agent is just an LLM prompted to take on a certain persona,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;36&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;you can have them go back &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; forth to iterate to get a better output&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; In addition to reflection&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;42&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pattern, the second important design pattern is &lt;span style=&#34;color:#66d9ef&#34;&gt;tool&lt;/span&gt; use&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Where today, LLMs can be given tools,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;meaning functions that they can call &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; order to get work done&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; For example, &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; you ask an LLM,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;54&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;what&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s the best coffee maker according to reviewers, and you give it a web search tool,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;58&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;then it can actually search the internet to find much better answers&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Or a code execution &lt;span style=&#34;color:#66d9ef&#34;&gt;tool&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;03&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;If you ask a math question like, &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; I invest &lt;span style=&#34;color:#f92672&#34;&gt;$&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; compound interest, what &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; I have at the end&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;?&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;08&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;It can then write code &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; execute code to compute an answer&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Today, different developers&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;have given LLMs many different tools &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; everything from math &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; data analysis to gather information&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;19&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;by fetching things from the web &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; various databases, to interface with productivity apps&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;like email, calendar, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; so on, as well as to process images &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; much more&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And the ability&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;of an LLM to decide what tools to use, meaning what functions to call, that lets the model get a lot&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;37&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;more done&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; The third of the four design patterns is planning&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; This is an example from a paper&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;43&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;called Hugging GPT, &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; which &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; you ask a system to please generate an image where a girl is reading&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;51&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a book &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; a pose is the same as a boy &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; the image, then please describe the new image &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;54&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;your voice&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Then a model can automatically decide that to carry out this task, it first needs to&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;find a pose determination model to figure out the pose of the boy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Then to pose the image,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;05&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;to generate a picture of a girl &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; image the text, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; then finally text the speech&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And so&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; planning, an LLM decides what is the sequence of actions it needs to take&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; In this &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt;, it is&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;17&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a sequence of API calls so that it can then carry out the right sequence of steps &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; the right order&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; order to carry out the task&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So rather than the developer hard coding the sequence of steps&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;29&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; advance, this actually lets the LLM decide what are the steps to take&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Agents that plan today are&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;36&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;harder to control &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; somewhat more experimental, but sometimes they can give really delightful&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;results&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And then finally, multi&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;agent workflows&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Just as a human manager might hire a number of&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;47&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;others to work together on a complex project, &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; some cases it might make sense &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; you to hire&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;52&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a set of multiple agents, maybe each of which specializes &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; a different role, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; have them&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;58&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;work together to accomplish a complex task&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; The picture you see here on the left is taken from a&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;03&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;project called ChatDev, which is a software framework created by Chen Qian &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; collaborators&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;09&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;In ChatDev, multiple agents with different roles, like chief executive officer, programmer, tester,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;designer, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; so on, collaborate together as &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; they were a virtual software company &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; can&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;collaboratively complete a range of software development tasks&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Let&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s consider another example.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;28&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;If you want to write a marketing brochure, maybe you think of hiring a team of three people, such&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;33&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;as a researcher to &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; online research, a marketer to write the marketing text, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; then finally an&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;39&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;editor to edit &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; polish the text&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And so &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; a similar way, you might consider building a multi&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;agent&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;47&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;workflow &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; which you have a simulated research agent, a simulated marketer agent, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; a simulated&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;53&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;editor agent that then come together to carry out this task &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; you&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Multi&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;agent workflows are&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;more difficult to control since you don&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t always know ahead of time what the agents will do, but&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;05&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;research has shown that they can result &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; better outcomes &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; many complex tasks, including things&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;like writing biographies &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; deciding on chess moves to make &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; the game&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; You learn more about&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;multi&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;agent workflows later &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; this course as well&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And so with that, I hope you have a sense of what&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;agentic workflows can &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;, as well as of what are the key challenges of finding building blocks &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;putting them together, maybe via these design patterns, &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; order to implement an agentic workflow&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;33&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;And of course, also developing eval so you can see how well your system is doing &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; keep on improving&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;39&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;on it&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; In the next module, I&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;d like to share with you a deep dive into the first of these design&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;46&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;patterns, that is reflection, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; you find that it&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s a maybe surprisingly simple to implement&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;53&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;technique that can give the performance of your system sometimes a very nice bump&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So let&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s go on&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;59&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;to the next module to learn about the reflection design pattern&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>「Scripts」Module 4: Practical Tips for Building Agentic AI</title>
      <link>https://linguage.github.io/courses/andrew-ng-agentic-ai/lecture/lec-04/</link>
      <pubDate>Fri, 17 Oct 2025 13:01:13 +0800</pubDate>
      <guid>https://linguage.github.io/courses/andrew-ng-agentic-ai/lecture/lec-04/</guid>
      <description>&lt;div class=&#34;link-card&#34; data-url=&#34;https://learn.deeplearning.ai/courses/agentic-ai/&#34;&gt;&#xA;  &lt;a class=&#34;link-card__fallback&#34; href=&#34;https://learn.deeplearning.ai/courses/agentic-ai/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&#xA;    https://learn.deeplearning.ai/courses/agentic-ai/&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;module-4-practical-tips-for-building-agentic-ai&#34;&gt;Module 4: Practical Tips for Building Agentic AI&lt;/h1&gt;&#xA;&lt;h2 id=&#34;41-evaluationsevals&#34;&gt;4.1 Evaluations(evals)&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;05&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;In this module, I&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;d like to share with you practical tips for building agentic AI workflows.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;04&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;I hope that these tips will enable you to be much more effective than the typical developer&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;at building these types of systems&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; I find that when developing an agentic AI system,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;it&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s difficult to know in advance where it will work and where it won&amp;#39;&lt;/span&gt;t work so well,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; thus where you should focus your effort&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So very common advice is to try to build even a&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;quick &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; dirty system to start, so you can then try it out &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; look at it to see where it may &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;34&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yet be working as well as you wish, to then have much more focused efforts to develop it even&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;further&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; In contrast, I find that it&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s sometimes less useful to sit around for too many weeks&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;46&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;theorizing &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; hypothesizing how to build it&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; It&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s often better to just build a quick system in a&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;53&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;safe, reasonable way that doesn&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t leak data, kind of do it in a responsible way, but just build&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;58&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;something quickly so you can look at it &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; then use that initial prototype to prioritize &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; try&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;03&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;further development&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Let&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s start with an example of what might happen after you&amp;#39;&lt;/span&gt;ve built a prototype&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;I want to use as our first example the invoice processing workflow that you&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ve seen previously,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;with the task to extract four required fields &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; then to save it to a database record&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; After having&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;built such a system, one thing you might &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; is find a handful of invoices, maybe &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt; invoices,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;28&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; go through them &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; just take a look at their output &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; see what went well &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; there were&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;33&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;any mistakes&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So let&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s say you look through 20 invoices, you find that invoice 1 is fine, the&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;38&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;output looks correct&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; For invoice &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, maybe it confused the date of the invoice, that is when&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;43&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;was the invoice issued, with the due date of the invoice, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; this task we want to extract the&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;48&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;due date so we can issue payments on time&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So then I might note down &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; a document &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; a&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;53&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;spreadsheet that &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; invoice &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, the dates were mixed up&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Maybe invoice &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; was fine, invoice &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; was&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;58&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fine, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; so on&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; But as I go through this example, I find that there are quite a lot of examples where I had&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;03&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mixed up the dates&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So it is based on going through a number of examples like this, that &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; this &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;you might conclude that one common error mode is that it is struggling with the dates&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; In that &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;17&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;one thing you might consider would be to of course figure out how to improve your system to make it&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;extract due dates better, but also maybe write an eval to measure the accuracy with which it is&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;29&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;extracting due dates&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; In comparison, &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; you had found that it was extracting the biller address&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;35&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;incorrectly, who knows, maybe you have billers with unusual sounding names &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; so maybe it&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;struggles with billers, &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; especially &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; you have international billers whose names may &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; even all&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;45&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;be English letters, then you might instead focus on building an eval &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; the biller address&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So one&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;51&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;of the reasons why building a quick &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; dirty system &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; looking at the output is so helpful&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;56&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;is it even helps you decide what &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; you want to put the most effort into evaluating&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Now &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; you&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ve&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;03&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;decided that you want to modify your system to improve the accuracy with which it is extracting&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;09&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;the due date of the invoice, then to track progress it might be a good idea to create an&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;evaluation &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; an eval to measure the accuracy of date extraction&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; There are probably multiple ways&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;one might go about this, but let me share with you how I might go about this&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; To create a test set &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;an evaluation set, I might find &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt; to &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt; invoices &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; manually write down what is the due date&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;33&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;maybe one invoice has a due date of August &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;th, &lt;span style=&#34;color:#ae81ff&#34;&gt;2025&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; I write it down as a standard year, month,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;39&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;date format&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And then to make it easy to evaluate &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; code later, I would probably write the prompt&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;46&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;to the LLM to tell it to always format the due date &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; this year, month, date format&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And with that,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;51&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;I can then write code to extract out the one date that the LLM has output, which is the due date,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;56&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;because that&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s the one day we care about. So this is a regular expression, pattern matching, you know,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;four numbers of the year, two &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; the month, two &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; the date, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; extract that out&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And then I can&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;06&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;just write code to test &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; the extract date is equal to the actual date, that is the ground&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;truth annotation I had written down&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So with an eval set of, say, &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; so invoices, I build &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;make changes to see &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; the percentage of time that it gets the extracted date correct is hopefully&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;going up as I tweak my prompts &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; tweak other parts of my system&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So just to summarize what&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;29&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;we&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ve seen so far, we build a system, then look at outputs to discover where it may be behaving in&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;35&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;an unsatisfactory way, such as due dates are wrong&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Then to drive improvements to this important&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;output, put &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; place a small eval with, say, just &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt; examples to help us track progress&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;46&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;And this lets me go back to two prompts, try different algorithms, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; so on to see &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; I can&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;move up this metric of due date accuracy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So this is what improving an Agentic AI workflow will often&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;57&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;feel like&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Look at the output, see what&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s wrong, then if you know how to fix it, just fix it. But&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; you need a longer process of improving it, then put &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; place an eval &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; use that to drive&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;05&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;further development&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; One other thing to consider is &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; after working &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; a &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; you think&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;those &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt; examples you had initially aren&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t good enough, maybe they don&amp;#39;&lt;/span&gt;t cover all the cases you&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;want, &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; maybe &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt; examples is just too few, then you can always add to the eval set over time to&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;19&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;make sure it better reflects your personal judgments on whether &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; the system&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s performance is&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sufficiently satisfactory&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; This is just one example&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; For the second example, let&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s look at&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;building a marketing copy assistant &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; writing captions &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; Instagram, where to keep things&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;35&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;succinct, let&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s say our marketing team tells us that they want captions that are at most 10 words&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;long&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So we would have an image of a product, say a pair of sunglasses that we want to market,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;45&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; then have a user query, like please write a caption to sell these sunglasses, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; then have a&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;52&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;LLM, &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; large multimodal model, analyze the image &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; the query &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; generate a description of the&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;58&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sunglasses&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And there are lots of different ways that a marketing copy assistance may go wrong,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;03&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;but let&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s say that you look at the output and you find that the copy or the text generated mostly&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;08&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sounds okay, but maybe it&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s just sometimes too long. So for the sunglasses input, generate 17&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;words, &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; you have a coffee machine, it&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s okay, stylish is okay, blue shirt, 14 words, blender,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt; words&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So it looks like &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; this example, the LLM is having a hard time adhering to the length&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;guideline&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So again, there are lots of things that could have gone wrong with a marketing copy&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;28&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;assistant&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; But &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; you find that it&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s struggling with the length of the output, they might build&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;33&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;an eval to track this so that you can make improvements &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; make sure it&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s getting better&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;39&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;at adhering to the length guideline&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So to create an eval, to measure the text length, what you&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;might &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; is create a set of test stars, so mark a pair of sunglasses, a coffee machine, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; so on,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; maybe create &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt; to &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt; examples&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Then you would run each of them through your system &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; write&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;56&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;code to measure the word count of the output&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So this is Python code to measure the word count of a&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;02&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;piece of text&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Then lastly, you would compare the length of the generated text to the &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt; word target&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;limit&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; word count is equal to &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;, now I&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;m correct, plus equals one. One difference between&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;this &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; the previous invoice processing example is that there is no per example ground truth&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;The target is just &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;, same &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; every single example&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Whereas &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; contrast, &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; the invoice&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;26&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;processing example, we had to generate a custom target label that is the correct due date of the&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;invoice, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; we&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;re testing the outputs against that per example ground truth. I know I used a&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;38&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;very simple workflow &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; generating these captions, but these types of evals can be applied to much&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;43&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;more complex generation workflows as well&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Let me touch on one final example &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; which we&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ll revisit&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;the research agents we&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ve been looking at. If you look at the output of the research agents on&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;55&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;different input prompts, let&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s say that when you ask it to write an article on recent breakthroughs&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; black hole science, you find that it missed some high profile result &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; a loss of news coverage&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;07&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;So this is an unsatisfactory result&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Or &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; you asked it to research renting versus buying a&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;home &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; Seattle, well, it seems to &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; a good job&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Or robotics &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; harvesting fruits&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Well,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;it didn&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t mention a leading equipment company. So based on this evaluation, it looks like&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sometimes it misses a really important point that a human expert writer would have captured&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So then&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;29&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;I would create an eval to measure how often it captures the most important points&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; For example,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;34&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;you might come up with a number of example prompts on black holes, robotic harvesting,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; so on&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; each one, come up with, let&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s say, three to five gold standard discussion points&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;45&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; each of these topics&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Notice that here we &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; have a per example annotation because the&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;51&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gold standard talking points, that is the most important talking points, they are different &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;56&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;each of these examples&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; With these ground truth annotations, you might then use an LLMs judge to&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;count how many of the gold standard talking points were mentioned&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And so an example prompt might be&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;07&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;to say, determine how many of the five gold standard talking points are present &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; the&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;provided essay&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; You have the optional prompts, the essay text, gold standard points, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; so on,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; have it &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; a JSON object with two Gs that scores how many of the points, zero to five,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;to the score, as well as an explanation&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And this allows you to get a score &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; each prompt &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; your&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;28&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;evaluation set&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; In this example, I&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;m using LLM-as-a-judge to count how many of the talking points&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;35&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;were mentioned because there&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s so many different ways to talk about these talking points, and so a&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;regular expression &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; a code &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; simple pattern matching might &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; work that well, which is why&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;46&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;you might use an LLM&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;as&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;judge &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; treat this as a slightly more subjective evaluation &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; whether&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;52&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt;, say, event horizons were adequately mentioned&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So this is your third example of how&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;57&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;you might build evals&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; In order to think about how to build evals &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; your application, the evals&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;04&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;you build will often have to reflect whatever you see &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; you&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;re worried about going wrong in your&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;application&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And it turns out that broadly, there are two axes of evaluation&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; On the top axis is the&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;way you evaluate the output&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; In some cases, you evaluate it by writing code with objective evals,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;26&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; sometimes you use an LLM&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;as&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;judge &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; more subjective evals&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; On the other axis is whether&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;34&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;you have a per&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;example ground truth &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; checking invoice date extraction, we were writing&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;43&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;code to evaluate &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; we got the actual date, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; that had a per&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;example ground truth because each&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;invoice has a different actual date&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; But &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; the example where we checked marketing copy length,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;55&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;every example had a length limit of &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; so there was no per&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;example ground truth &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; that&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;02&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;problem&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; In contrast, &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; counting gold standard talking points, there was a per&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;example ground&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;07&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;truth because each article had different important talking points&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; But we used an LLM&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;as&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;judge to&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;read the essay to see &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; those topics were adequately mentioned because there&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s so many&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;17&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;different ways to mention the talking points&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And the last of the four quadrants would be LLM&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;as&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;judge&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;with no per&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;example ground truth&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And one place where we saw that was &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; you are grading&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;charts with a rubric&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; This is when we&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;re looking at visualizing the coffee machine sales, and if&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;35&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;you ask it to create a chart according to a rubric, such as whether it&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s clear access labels and so on,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;there is the same rubric &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; every chart, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; that would be using an LLM&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;as&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;judge but without a&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;46&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;per&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;example ground truth&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So I find this two&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;by&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;two grid as maybe a useful way to think about the&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;51&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;different types of evals you might construct &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; your application&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And by the way, these are&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;56&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sometimes also called end&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;to&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;end evals because one end is the input end, which is the user query&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;prompt, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; the other end is the final output&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And so all of these are evals &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; the entire end&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;to&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;end&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;08&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;system&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s performance. So just to wrap up this video, I&amp;#39;&lt;/span&gt;d like to share a few final tips &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;designing end&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;to&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;end evals&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; First, quick &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; dirty evals is fine to get started&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; I feel like I see&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;quite a lot of teams that are almost paralyzed because they think building evals is this&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;massive multi&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;week effort, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; so they take longer than would be ideal to get started&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; But I think&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;just as you iterate on an agentic workflow &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; make it better over time, you should plan to&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;37&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;iterate on your evals as well&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; you put &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; place &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt; examples as your first cut at&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;evals &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; write some code &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; try prompting an LLM&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;as&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;judge, just &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; something to start to get some&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;metrics that can complement the human eye at looking at the output, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; then there&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s a blend&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;54&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;of the two that can drive your decision making&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And as the evals become more sophisticated over&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;58&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;time, you can then shift more &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; more of your trust to the metric&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;based evals rather than&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;03&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;needing to read over hundreds of outputs every time you tweak a prompt somewhere&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And as you&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;08&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;go through this process, you&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ll likely find ways to keep on improving your evals as well. So if you&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;had &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt; examples to start, you may then run into places where your evals fail to capture your&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;judgment about what system is better&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So maybe you update the system &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; you look at it &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; you feel&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;28&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;like this has got to work much better, but your eval fails to show the new system achieving a&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;34&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;higher score&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; If that&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s the case, that&amp;#39;&lt;/span&gt;s often an opportunity to go maybe collect a larger eval set&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; change the way you evaluate the output to make it correspond better to your judgment as to what&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;45&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;system is actually working better&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And so your evals will get better over time&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And lastly,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; terms of using evals to gain inspiration as to what to work on next, a lot of agentic workflows&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;56&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;are being used to automate tasks that, say, humans can &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And so I find &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; such applications,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;02&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;I&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ll look for places where the performance is worse than that of an expert human, and that&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;06&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;often gives me inspiration &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; where to focus my efforts &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; what are the types of examples that I&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;maybe get my agentic workflow to work better than it is currently&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So I hope that after you&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ve built&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;that quick &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; dirty system, you think about when it would make sense to start putting &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; some evals&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;to track the potentially problematic aspects of the system, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; that that will then help you&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;28&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;drive improvements &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; the system&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; In addition to helping you drive improvements, it turns out that&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;34&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;there&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s a method of evals that helps you hone in of your entire agentic system. What are the&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;components most worth focusing your attention on&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;?&lt;/span&gt; Because agentic systems often have many pieces&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;47&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;So which piece is going to be most productive &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; you to spend time working to improve&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;?&lt;/span&gt; It turns&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;53&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;out being able to &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; this well is a really important skill &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; driving efficient development&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;58&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;of agentic workflows&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; In the next video, I&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;d like to deep dive into this topic. So let&amp;#39;&lt;/span&gt;s go on to&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;03&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;the next video&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;42-error-analysis-and-prioritizing-next-steps&#34;&gt;4.2 Error analysis and prioritizing next steps&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;07&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Let&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s say you&amp;#39;&lt;/span&gt;ve built an agentic workflow &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; it&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s not yet working as well as you wish,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;04&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; this happens to me all the time by the way, I&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ll often build a quick and dirty system and&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;09&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;it doesn&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t do as well as I wish it would, the question is where do you focus your efforts&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;to make it better&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;?&lt;/span&gt; Turns out agentic workflows have many different components &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; working on&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;19&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;some of the components could be much more fruitful than working on some other components&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So your&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;skill at choosing where to focus your efforts makes a huge difference &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; the speed with which&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;you can make improvements to your system&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And I found that one of the biggest predictors &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; how&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;35&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;efficient &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; how good a team is, is whether &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; they&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;re able to drive a disciplined error&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;41&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;analysis process to tell you where to focus your efforts&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So this is an important skill&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Let&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s take&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;47&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a look at how to carry out error analysis&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; In the research agent example, we had carried out an error&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;54&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;analysis &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; the previous video &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; we saw that it was often missing key points &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; a human expert&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;would have made &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; writing essays on certain topics&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So now you&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ve spotted this problem that&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;06&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;is sometimes missing key points, how &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; you know what to work on&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;?&lt;/span&gt; It turns out that of the many&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;different steps &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; this workflow, almost any of them could have contributed to this problem of&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;17&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;missing key points&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; For example, maybe the first LLM was generating search terms that weren&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t great, so&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;it was just searching &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; the wrong things &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; did &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; discover the right articles&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Or maybe use a&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;28&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;web search engine that just wasn&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t very good. There are multiple web search engines out there, in fact&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;33&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;actually quite a few that I tend to use &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; my own base applications &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; some are better than others&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;39&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Or maybe web search was just fine but when we gave the list of web search results &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; LLM, maybe it&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;didn&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t do a good job choosing the best handful to download. Maybe web fetch has fewer problems in&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;51&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;this &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt;, assuming you can fetch web pages accurately&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; But after dumping the web pages &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; LLM,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;56&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;maybe the LLM is ignoring some of the points &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; the documents we had fetched&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So it turns out that&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;02&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;there are teams that sometimes look at this &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; go by gut to pick one of these components to work on&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;09&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; sometimes that works &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; sometimes that leads to many months of work with very little progress&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; the overall performance of the system&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So rather than going by gut to decide which of these&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;many components to work on, I think it&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s much better to carry out an error analysis to better&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;26&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;understand each step &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; the workflow&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; particular, I&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ll often examine the traces and that&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;means the intermediate output after each step &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; order to understand which component&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s performance&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;38&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;is subpar, meaning say much worse than what a human expert would &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;, because that points to where&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;45&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;there may be room &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; security improvement&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Let&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s look at an example. If we ask the research agent&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;to write an essay about recent news &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; black hole science, maybe the output search terms like these,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;56&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;search &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; black hole theories Einstein, Event Horizon Telescope Radio, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; so on&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And I would&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;then have a human expert look at these &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; see are these reasonable web search terms &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; writing&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;07&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;about recent discoveries &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; black hole science&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And maybe &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; this &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; an expert says these web&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;searches look okay, they&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;re pretty similar to what I would do as a human. Then I look at the outputs of&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;the web search &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; look at the URLs returned&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So web search would &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; many different web pages&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; maybe one web page returns is that an elementary school student claims to track a&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;year&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;old black hole mystery from Astro Kid News&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And this doesn&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t look like the most rigorous&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;38&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;peer&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;reviewed article&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And maybe examining all of the articles that web search returns causes you to&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;conclude that it&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s returning too many blog or popular press types of articles and not enough&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;scientific articles to write a research report of the quality that you are looking &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; It&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;d be good&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;56&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;to just look through the outputs of the other steps as well&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Maybe the LLM finds the best five&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sources you can, you end up with Astro Kid News, SpaceBot &lt;span style=&#34;color:#ae81ff&#34;&gt;2000&lt;/span&gt;, Space Fun News &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; so on&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And it is&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;06&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;by looking at these intermediate outputs that you can then try to get a sense of the quality of the&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;output of each of these steps&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; To introduce some terminology, the overall set of outputs of all of&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;the intermediate steps is often called the trace of a run of this agent&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And then some terminology&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;you see &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; other sources as well is the output of a single step is sometimes called a span&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;This is terminology from the computer observability literature where people try to&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;35&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;figure out what computers are doing&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; this course, I use the word trace quite a bit&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; I&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ll use&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;41&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;the word span a little bit less, but you may see both of these terms on the internet&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So by reading&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;46&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;the traces, you start to get an informal sense of where might be the most problematic components&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;52&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;In order to &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; this &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; a more systematic way, it turns out to be useful to focus your attention&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;57&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;on the cases that the system is doing poorly on&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Maybe you write some essays just fine &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; the&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;02&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;output is completely satisfactory&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So I would put those aside &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; try to come up with a set of&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;06&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;examples where &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; whatever reason, the final output of your research agent is &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; quite&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;satisfactory &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; just focus on those examples&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So this is one of the reasons we call error analysis&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;17&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;because we want to focus on the cases where the system made an error &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; we want to go through&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;to figure out which components were most responsible &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; the error &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; the research agent&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;28&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;output&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; In order to make this more rigorous, rather than reading &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; getting an informal sense,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;33&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;you might actually build up a spreadsheet to more explicitly count up where the errors are&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And by&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;error, I mean when a step outputs something that performs significantly worse than maybe what a&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;47&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;human expert would have given a similar input as that component&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So I&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ll often do this myself in a&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;52&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;spreadsheet&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So I might build a spreadsheet like this&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And so &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; the first query, I&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ll look at&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;57&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;recent developments &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; black hole science&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And I see that the search results has too many blog&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;posts, popular press articles, &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; enough scientific papers&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And then based on this,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;07&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;it is true that the five best sources aren&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t great. But here I won&amp;#39;&lt;/span&gt;t say that the five best sources&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;did a bad job because &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; the inputs to LLM &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; selecting the five best sources were all&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;non&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;rigorous articles, then I can&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t blame this picking the five best sources for not picking&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;better articles because it did the best it could have &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; as what did nearly as well as any human&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;28&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;might have given the same selection to choose from&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And then you might go through this &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;different prompts&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Renting versus buying &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; Seattle&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Maybe it missed a well&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;known blog&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;37&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Robotics &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; harvesting fruit&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Maybe &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; this &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt;, we look at it &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; say,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;41&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;oh, the search terms are too generic &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; the search results also weren&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t good and so on.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;45&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;And then based on this, I would count up &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; my spreadsheet how often I observe errors &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; the&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;52&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;different components&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; this example, I&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;m dissatisfied with the search terms 5&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;% o&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;f the time,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;57&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;but I&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;m dissatisfied with the search results 45&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;% o&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;f the time. And if I actually see this,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;I might just take a careful look at the search terms to make sure that the search terms really&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;05&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;were okay &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; that poor choice of search terms were &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; what led to poor search results&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; But&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; I really think the search terms are fine, but the search results are &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt;, then I would take a&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;careful look at the web search engine I&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;m using and if there are any parameters I can tune to make&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;it bring back more relevant &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; higher quality results&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; There&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s this type of analysis that&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tells me &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; this example that maybe I really should focus my attention on fixing the search&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;28&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;results &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; on the other components of this agentic workflow&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So to wrap up this video,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;34&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;I find that it&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s useful to develop a habit of looking at traces. After you build an agentic&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;workflow, go ahead &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; look at the intermediate outputs to get a feel &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; what it is actually&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;doing at every step so that you can better understand &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; different steps are performing&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;48&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;better &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; worse&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And a more systematic error analysis, maybe done with a spreadsheet,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;54&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;can let you gather statistics &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; count up which component performs poorly most frequently&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;59&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;so by looking at what components are doing poorly, as well as where I have ideas &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;05&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;efficiently improving different components, then that will let you prioritize what component to&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;work on&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So maybe a component is problematic, but I don&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t have any ideas for improving it,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;so that would suggest maybe &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; prioritizing that as high&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; But &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; there is a component that is&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;generating a lot of errors, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; I have ideas how to improve that, then that would be a good&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;reason to prioritize working on that component&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And I just want to emphasize that error analysis&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;31&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;is a very helpful output &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; you to decide where to focus your efforts, because &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; any complex&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;37&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;system, there are just so many things you could work on&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; It&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s too easy to pick something to work&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;42&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;on &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; work on it &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; weeks &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; even months, only to discover later that that did &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; result &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;47&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;improved performance &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; your overall system&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And so using error analysis to decide where to focus&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;52&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;your effort turns out to be incredibly useful &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; improving your efficiency&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; In this video,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;58&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;we went over error analysis with the research agent example, but I think error analysis is&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;04&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;such an important topic, I want to go over some additional examples with you&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;08&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;So let&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s go on to the next video, where we&amp;#39;&lt;/span&gt;ll look at more examples of error analysis&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;43-more-error-analysis-examples&#34;&gt;4.3 More error analysis examples&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;0:05&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;I found that for many developers, it&amp;#39;s only by seeing multiple examples that you can then&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;0:05&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;get practice and hone your intuitions about how to carry out error analysis.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;0:09&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;So let&amp;#39;s take a look at two more examples, and we&amp;#39;ll look at invoice processing&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;0:14&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;and responding to customer emails.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;0:16&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Here&amp;#39;s the workflow that we had for invoice processing, where we had a clear process to&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;0:21&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;follow an agentic workflow of identifying the four required fields and then recording&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;0:27&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;them in a database.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;0:28&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;In the example from the first video of this module, we said that the system was often&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;0:32&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;making a mistake in the due date of the invoice.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;0:36&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;So we can carry out error analysis to try to figure out which of the components it may&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;0:40&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;have been due to.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;0:41&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;So for example, did the PDF to text make a mistake, or did the LLM extract the wrong date&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;0:47&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;out of whatever was output from the PDF to text component?&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;0:51&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;To carry out an error analysis, I would try to find a number of examples where the data&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;0:56&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;extracted is incorrect.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;0:58&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;So same as the last video, it&amp;#39;s useful to focus on the examples where the performance&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1:02&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;is subpar to try to figure out what went wrong with those examples.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1:05&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;So ignore the examples that got the date right, but try to find somewhere between 10 and 100&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1:10&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;invoices where it got the date wrong.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1:12&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;And then I would look through to try to figure out was the cause of the problem that PDF&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1:18&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;to text got the date wrong, or was it that the LLM, given the PDF to text output, pulled&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1:24&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;out the wrong date.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1:25&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;And so you might build up a little spreadsheet like this and go through 20 invoices and just&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1:30&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;count up how often did PDF to text extract the dates or the text incorrectly so that&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1:35&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;even a human couldn&amp;#39;t tell what is the due date versus the PDF to text look good enough,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1:40&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;but the LLM, when asked to pull the dates, somehow pulled out the wrong date, like maybe&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1:44&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;identifying the invoice date rather than the due date of the invoice.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1:48&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;So in this example, it looks like the LLM data extraction was responsible for a lot&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1:52&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;more errors.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1:53&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;So this tells me that maybe I should focus my efforts on the LLM data extraction component&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1:57&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rather than on PDF to text.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1:59&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;And this is important because if not for this error analysis, I can imagine some teams spending&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2:05&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;weeks or months trying to tune the PDF to text only to discover after that time that&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2:10&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;it did not make much of an impact to the final system&amp;#39;s performance.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2:14&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Oh, and by the way, these percentages here at the bottom can add up not to 100% because&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2:20&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;these errors are not mutually exclusive.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2:22&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;To look at one last example, let&amp;#39;s go back to the agentic workflow for responding to&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2:27&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;customer emails, where the LLM, given a customer email like this, asking for an order, would&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2:34&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pull up the order details, fetch the information from the database, then draft a response for&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2:39&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a human to review.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2:40&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;So again, I would find a number of examples where, for whatever reason, the final output&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2:46&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;is unsatisfactory and then try to figure out what had gone wrong.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2:50&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;And so some things that could go wrong.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2:52&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Maybe the LLM had written an incorrect database query.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2:56&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;So when the query was sent to the database, it just did not successfully pull up the customer&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3:01&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;info.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3:02&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Or maybe the database has corrupted data.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3:05&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;So even though the LLM wrote a completely appropriate database query, maybe in SQL or some other&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3:10&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;query language, the database did not have the correct information.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3:13&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Or maybe given the correct information about the customer order, the LLM wrote an email&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3:17&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;that was somehow not quite right.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3:20&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;So again, I would look through a handful of emails where the final output was unsatisfactory&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3:25&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;and try to figure out what had gone wrong.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3:26&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;So maybe in email one, we find that the LLM had asked for the wrong table in the query,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3:31&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;just asked for the wrong data in the way it created the database.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3:34&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;In email two, maybe I find that the database actually has an error.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3:38&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;And maybe given that input, the LLM somehow wrote a subalternate email as well, and so&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3:44&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;on.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3:44&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;And in this example, after going through many emails, maybe I find that the most common&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3:50&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;error is in the way the LLM is writing a database query, say a SQL query, in order to fetch&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3:57&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;the relevant information.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3:58&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Whereas the database is mostly correct, although there&amp;#39;s a little bit of data errors there.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4:02&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;And the way the LLM writes the email also has some errors.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4:05&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Maybe it doesn&amp;#39;t quite where they write 30% of the time.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4:08&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;And this tells me that it&amp;#39;d be most worthwhile maybe for me to improve the way the LLM is&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4:13&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;writing queries.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4:14&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Second most important would be maybe improve the prompting for how I write the final email.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4:20&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;That an analysis like this can tell you that 75% of the errors, maybe the system gets lots&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4:25&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;of things right, but of all the things it gets not quite right, 75% of the problems&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4:29&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;is from the database query.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4:31&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;This is incredibly helpful information to tell you where to focus your efforts.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4:36&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;When I&amp;#39;m developing Agentic AI workflows, I&amp;#39;ll often use this type of error analysis&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4:40&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;to tell me where to focus my attention in terms of what to work on next.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4:45&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;When you&amp;#39;ve made that determination, it turns out that to complement the end-to-end&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4:49&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;evals that we spoke about earlier in this module, it&amp;#39;s often useful to evaluate not&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4:54&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;just the entire end-to-end system, but also individual components, because that can make&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4:59&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;you more efficient in how you improve the one component that, say, error analysis has&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;5:05&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;caused you to decide to focus your attention on.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;5:08&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;So let&amp;#39;s go on to the next video to learn about component-level evals.&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;44-component-level-evaluations&#34;&gt;4.4 Component-level evaluations&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;04&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Let&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s take a look at how to build and use component-level evals.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;04&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;In our example of a research agent, we said that the research agent was sometimes missing&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;09&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;key points&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; But &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; the problem was web search, &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; every time we change the web search engine,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;we need to rerun the entire workflow, that can give us a good metric &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; performance,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;but that type of eval is expensive&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Moreover, this is a pretty complicated workflow,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;26&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;so even &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; web search made things a little bit better, maybe noise introduced by the randomness&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;31&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;of other components would make it harder to see little improvements to the web search quality&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;38&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;So as an alternative to only using end&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;to&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;end evals, what I would &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; is consider building an&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;43&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;eval just to measure the quality of the web search component&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; For example, to measure the&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;48&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;quality of the web search results, you might create a list of gold standard web resources&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;53&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;So &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; a handful of queries, have an expert say, these are the most authoritative sources that &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;58&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;someone was searching the internet, they really should find these web pages &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; any of these web&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;03&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pages would be good&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And then you can write code to capture how many of the web search outputs&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;09&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;correspond to the gold standard web resources&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; The standard metrics from information retrieval,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;the F1 score, don&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t worry about the details if you don&amp;#39;&lt;/span&gt;t know what that means, but there are&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;standard metrics that allow you to measure of a list of web pages returned by web search,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;how much does that overlap with what an expert determined are the gold standard web resources&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;29&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;With this, you&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;re now armed with a way to evaluate just the quality of the web search component.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;34&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;And so as you vary the parameters &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; hyperparameters of how you care about web search,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;such as &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; you swap &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; out different web search engines, so maybe try Google &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; Bing&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;45&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; Dr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Go &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; Tivoli &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; U&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;com &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; others, &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; as you vary the number of results &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; as you vary&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;the date range that you ask the web search engines to search over, this can very quickly let you&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;54&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;judge &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; the quality of the web search component is going up &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; does make more incremental&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;improvements&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And then of course, before you call the job done, it would be good to run an&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;05&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;end&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;to&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;end eval to make sure that after tuning your web search system &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; a &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; that you are&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;improving the overall system performance&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; But during that process of tuning these hyperparameters&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;one at a time, you could &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; so much more efficiently by evaluating just one component&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rather than needing to rerun end&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;to&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;end evals every single time&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So component level evals can&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;provide a clearer &lt;span style=&#34;color:#66d9ef&#34;&gt;signal&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; specific errors&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; It actually lets you know &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; you&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;re improving&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;the web search component &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; whatever component you&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;re working on and avoid the noise in the&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;37&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;complexity of the overall end&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;to&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;end system&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; you&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;re working on a project where you have&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;43&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;different teams focused on different components, it can also be more efficient &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; one team to just&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;48&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;have his own very clear metric to optimize without needing to worry about all of the other components&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;53&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;And so this lets the team work on a smaller, more targeted problem faster&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So when you&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ve decided to&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;work on improving a component, consider &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; it&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s worth putting in place a component-wise eval and&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;05&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; that will let you go faster on improving the performance of that component&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Now the one thing&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;you may be wondering is, &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; you decided to improve a component, how &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; you actually go about making&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;that one component work better&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;?&lt;/span&gt; Let&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s take a look at some examples of that in the next video.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;45-how-to-address-problems-you-identify&#34;&gt;4.5 How to address problems you identify&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;06&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;An agentic workflow may comprise many different types of components, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; so your tools &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;05&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;improving different components will be pretty different&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; But I&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;d like to share with you some&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;09&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;general patterns I&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ve seen. Some components in your agentic workflow will be non-LLM-based,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;so it may be something like a web search engine &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; a text retrieval component,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; that&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s part of your RAG or Retrieval Augmented Generating System, something for code execution,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; maybe with a separately trained machine learning model, maybe &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; speech recognition&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;28&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; detecting people &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; pictures, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; so on&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So sometimes these non&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;LLM&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;based components will&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;34&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;have parameters &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; hyperparameters that you can tune&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; web search, you can tune things like&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;39&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;the number of results &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; maybe the date range that you ask the web search engine to consider&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;For a RAG text retrieval component, you might change the similarity threshold that determines&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;what pieces of text it considers similar, &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; the chunk size&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Often RAG systems will take text &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;55&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;chop it up into smaller chunks &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; matching, so the main hyperparameters you could use&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Or &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;people detection, you might change the detection threshold, so how sensitive it is &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; how likely&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;05&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;it is to declare this found a person, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; this will trade off the false positives &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; false&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;08&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;negatives&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; If they follow all the details of the hyperparameters I just discussed, don&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t worry&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;about it&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; The details aren&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t that important, but often the components were parameters that&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;you can tune&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And then of course, you can also try to replace the component&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; I &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; this a lot&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; my agentic workflows, where I&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ll swap in different RAG search engines or swap in different&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;26&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;RAG providers &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; so on, just to see &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; some other provider might work better&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Because of the&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;diversity of non&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;LLM&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;based components, I think the techniques &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; how to improve it will be&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;37&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;more diverse &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; dependent on exactly what that component is doing&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; For an LLM&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;based component,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;43&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;here are some options you might consider&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; One would be to try to improve your prompts&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So maybe&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;try to add more explicit instructions&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Or &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; you know what few&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;shot prompting is, that refers to&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;55&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;adding one &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; more concrete examples of an example of an input &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; a desired output&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And so few&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;shot&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;prompting, which you can learn about from some deep learning short courses as well, is a technique&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;06&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;that can give your LLM some examples to hopefully help it get better performing outputs written&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Or&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;you can also try a different LLM&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So with AI Suite &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; other tools, it could be pretty easy to try&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;19&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;multiple LLMs &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; then you can use evals to pick the best model &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; your application&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Sometimes,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; a single step is too complex &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; one LLM to &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;, you can consider &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; you want to decompose&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;the task into smaller steps&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Or maybe decompose it into a generation step &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; then a reflection&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;35&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;step&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; But more generally, &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; you have instructions that are very complex all within one step, maybe a&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;single LLM has a hard time following all those instructions&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And you can &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt; the task down&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;45&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;to smaller steps that may be easier &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;, say, two &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; three calls &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; a row to carry out accurately&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;51&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;And lastly, something to try when the other methods aren&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t working well enough is to consider&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;56&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fine&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;tuning a model&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; This tends to be quite a bit more complex than the other options, so it can be&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;02&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;quite a bit more expensive as well &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; terms of developer time to implement&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; But &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; you have some&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;06&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;data that you can use to fine&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;tune an LLM on, that could give you much better performance than&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;prompting alone&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So I tend &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; to fine&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;tune a model until I&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ve really exhausted the other&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;19&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;options, because fine&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;tuning tends to be quite complex&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; But &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; applications where after trying&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;everything &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; I&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;m still at, say, 90% performance or 95% performance, and I really&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;need to eke out those last few percentage points of improvement, then sometimes fine&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;tuning my own&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;35&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;custom model is a great technique to use&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; I tend to &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; this only on the more mature applications&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;41&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;because of how costly it is&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; It turns out that when you&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;re trying to choose an LLM to use,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;47&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;one thing that&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s very hopeful for you as a developer is if you have good intuitions about&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;52&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;how intelligent &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; how capable different large language models are&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; One thing you can &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; is just&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;56&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;try a lot of models &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; see what works best&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; But I find that as I work with different models,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;I start to hone intuitions about which models work best &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; what types of tasks&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And when you hone&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;06&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;those intuitions, you can be more efficient as well &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; writing good prompts &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; the model as&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;well as choosing good models &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; your tasks&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So I&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;d like to share with you some thoughts on how to&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hone your intuition on what models will work well &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; your application&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Let&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s illustrate this with&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;an example of using an LLM to follow instructions to remove &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; to redact PII &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; personally&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;29&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;identifiable information&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So you&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;re now to remove private sensitive information. For example,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;34&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; you are using an LLM to summarize customer calls, then maybe one summary is on July &lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;th,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;41&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2023&lt;/span&gt;, Jessica Alvarez with a social security number, a certain address, a business support&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;46&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ticket, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; so on&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So this piece of text has a lot of sensitive, personally identifiable&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;52&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;information&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Now, let&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s say we want to remove all PII from such summaries because we want to use the&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;58&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;data &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; downstream statistical analysis of what customers are calling about&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And to protect customer&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;03&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;information, we want to strip out that PII before we &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; that downstream statistical analysis&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So you&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;08&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;might prompt an LLM with instructions to identify all cases of PII &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; the text below &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; then &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;the redacted text with redacted colon &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; so on&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; It turns out that the larger frontier models tend&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;to be much better at following instructions, whereas the smaller models tend to be pretty&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;29&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;good at answering simple factual questions, but are just &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; as good at following instructions&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;34&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;If you run this prompt on the smaller model, the OpenWay Llama &lt;span style=&#34;color:#ae81ff&#34;&gt;3.1&lt;/span&gt; model with &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt; billion parameters,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;then it may generate an output like this&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; It says the identified PII is social security number &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;45&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;address, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; then it redacts it as follows &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; so on&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And it actually makes a few errors&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; It didn&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;follow the instructions properly&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; It showed the list, then redacted the text, then returned another&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;56&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;list, which it wasn&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t supposed to. And in this list of PII, it missed the name. And then I think&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;02&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;it also didn&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t redact partly the address. So details aren&amp;#39;&lt;/span&gt;t important, but it didn&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t follow these instructions&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;07&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;perfectly, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; maybe it missed a little bit of PII&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; In contrast, &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; you use a more intelligent model,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;one that&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s better at following instructions, you may get a better result like this, where it&amp;#39;&lt;/span&gt;s&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;17&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;actually correctly listed all the PII &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; correctly redacted all of the PII&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And so I find that as&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;different LLM providers specialize on different tasks, different models really are better &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;different tasks&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Some are better at coding, some are better at following instructions, some are better&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;34&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;at certain niche types of facts&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; you can hold your intuition &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; what models are more &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;less intelligent, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; what type of instructions they&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;re more or less able to follow, then you&amp;#39;&lt;/span&gt;ll&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;be able to make better decisions as to what models to use&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So to share a couple tips on how to &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; this,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;I encourage you to play with different models often&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So whenever I &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; a new model release,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;55&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;I&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ll often go try it out and try out different queries on it, both closed-weight proprietary&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;models as well as open&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;weight models&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And I find that sometimes having a personal set of evals might&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;06&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;also be helpful, where there&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s a set of things you ask a lot of different models that might help you&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;calibrate how well they &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; on different types of tasks&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; One other thing that I &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; a lot that I hope&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;will be useful to you is I spend a lot of time reading other people&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s prompts. So sometimes&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;people will publish their prompts on the internet, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; I&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ll often go and read them to understand&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;what best practices &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; prompting look like&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Or I&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ll often chat to my friends at various companies,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;including some of the frontier model companies, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; share my prompts with them, take a look at&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;36&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;how they prompt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And sometimes I&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ll also go to open-source packages written by people I really&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;42&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;respect &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; download the open&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;source package &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; dig through that open&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;source package to find the&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;48&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;prompts the authors have written &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; order to read it, &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; order to hold my intuition about how to&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;53&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;write good prompts&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; This is one technique that I encourage you to consider, is by reading lots of&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;58&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;other people&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s prompts that will help you get better at writing prompts yourself. And I certainly&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;04&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; this a lot, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; I encourage you to &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; so too&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And this will hone your intuition about what types&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;09&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;of instructions models are good at following, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; when to say certain things to different models&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;In addition to playing with models &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; reading other people&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s prompts, if you try out lots of&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;19&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;different models &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; your agentic workflows, that also lets you hone your intuition&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So you see&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;which models work best &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; which types of tasks, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; either looking at traces to get an informal&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sense, &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; looking at either component&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;wise &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; end&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;to&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;end evals can help you assess how well&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;36&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;different models are working &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; different parts of your workflow&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And then you start to hone&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;intuitions about &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; just performance, but maybe also price &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; speed trade&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;offs &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; the use of&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;46&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;different models&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And one of the reasons I tend to develop my agentic workflows with AI Suite is&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;51&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;because it then makes it easy to quickly swap out &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; try out different models&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And this makes me&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;56&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;more efficient &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; terms of trying out &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; assessing which models work best &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; my workflow&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So we&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ve&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;02&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;talked a lot about how to improve the performance of different components to hopefully improve the&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;08&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;overall performance of your end&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;to&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;end system&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; In addition to improving the quality of the output,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;one other thing you might want to &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; your workflows is to optimize the latency as well as&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cost&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; I find that &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; a lot of teams, when you start developing, usually the number one thing&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;to worry about is just are the outputs sufficiently high quality&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; But then when the system is working&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;31&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;well &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; you put &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; the production, then there&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s often value to make it run faster as well as run&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;37&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;at lower cost as well&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; the next video, let&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s take a look at some ideas for improving&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;42&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cost &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; latency &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; agentic workflows&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;46-latency-cost-optimization&#34;&gt;4.6 Latency, cost optimization&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;06&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;When building agentic workflows, I&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ll often advise teams to focus on getting high-quality outputs&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;05&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; to optimize cost &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; latency only later&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; It&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s not that cost and latency don&amp;#39;&lt;/span&gt;t matter,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;but I think getting the performance &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; the output quality to be high is usually the hardest part,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; then only when it&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s really working, then maybe focus on the other things.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;One thing that&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s happened to me a few times was my team built an agentic workflow,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;26&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; we shipped it to users, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; then we were fortunate enough to have so many users use it&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;31&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;that the cost actually became a problem, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; then we had to, you know, stramble to bring the cost&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;36&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;back down&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; But that&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s a good problem to have, so I tend to worry about cost, usually less.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;42&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Not that I ignore it completely, but it&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s just lower down my list of things to worry about,&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;47&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; so we have so many users that we really need to bring the cost down per user&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;51&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;And then latency, I tend to worry a bit about it, but again, &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; as much as just making sure&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;57&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;the output quality is high&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; But when you &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; get there, it will be useful to have tools to optimize&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;03&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;latency &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; cost&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Let&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s take a look at some ideas on how to do that.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;06&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;If you want to optimize the latency of an agentic workflow, one thing I will often &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; is then&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;benchmark &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; time the workflow&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; this research agent, it takes a number of steps,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; I were to time each of the steps, maybe LLM takes &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; seconds to generate the search terms&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;26&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Web search takes &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; seconds, this takes &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; seconds, this takes &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt; seconds,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; then writing the final essay takes &lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt; seconds on average&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And it is then by looking at this&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;35&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;overall timeline that I can get a sense of which components have the most room &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; making faster&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;43&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;In this example, there may be multiple things you could try&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; If you haven&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t already taken&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;47&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;advantage of parallelism &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; some steps, like maybe web fetch, maybe it&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s worth considering&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;53&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;doing some of these operations &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; parallel&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Or &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; you find that some of the LLMs sets are&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;59&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;taking too long, so &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; this first step takes &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; seconds, this last LLMs set takes &lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt; seconds,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;04&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;I might also consider trying a smaller, maybe slightly less intelligent model to see &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; it&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;09&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;still works well enough &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; that, &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; I can find a faster LLM provider&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; There are lots of APIs online&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; different LLMs interfaces, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; some companies have specialized hardware to allow them to serve&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;certain LLMs much faster, so sometimes it&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s worth trying different LLMs providers to see which ones&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;26&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;can &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; tokens the fastest&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; But at least doing this type of timing analysis can give you a sense&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;of which components to focus on &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; terms of reducing latency&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; In terms of optimizing costs,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;39&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a similar calculation where you calculate the cost of each step would also let you benchmark&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;43&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; decide which steps to focus on&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Many LLMs providers charge per token based on the input&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; output length&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Many API providers charge per API call, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; the computational steps may have&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;55&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;different costs based on how you pay &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; server capacity &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; how much the service costs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And so&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; a process like this, you might decide &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; this example that the tokens &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; this LLMs step on&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;06&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;average cost &lt;span style=&#34;color:#ae81ff&#34;&gt;0.04&lt;/span&gt; cents, each web search API maybe costs &lt;span style=&#34;color:#ae81ff&#34;&gt;1.6&lt;/span&gt; cents, tokens cost this much,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;API call costs this much, PDF to text costs this much, tokens &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; the final SA generation cost this&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;19&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;much, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; this would maybe again give you a sense of are there cheaper components you could use &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cheaper LLMs you could use to see where the biggest opportunity is &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; optimizing costs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And I found&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;29&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;that these benchmarking exercises can be very clarifying, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; sometimes they&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ll clearly tell&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;34&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;me that certain components are just &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; worth worrying about because they&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;re not that material&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;38&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; contributor to either cost &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; to latency&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So I find that when either cost &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; latency becomes&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;45&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;an issue, by simply measuring the cost &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; latency of each step, that often gives you a&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;51&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;basis with which to decide which components to focus on optimizing&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So we&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;re nearly at the end&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;58&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;of this module&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; I know we&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ve covered a lot, but thank you for sticking with me. Let&amp;#39;&lt;/span&gt;s go on to&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;02&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;the final video of this module to wrap up&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;47-development-process-summary&#34;&gt;4.7 Development process summary&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-gdscript3&#34; data-lang=&#34;gdscript3&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;06&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;We&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ve gone through a lot of tips for driving a disciplined, efficient process for building&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;05&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Agentic AI systems&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; I&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;d like to wrap up by sharing with you what it feels like to be going through&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;this process&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; When I&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;m building these workflows, I feel like there are two major activities I&amp;#39;&lt;/span&gt;m&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;often spending time on&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; One is building, so writing software, trying to write code to improve&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;my system&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And the second, which sometimes doesn&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;t feel like progress, but I think is equally&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;important, is analysis to help me decide where to focus my build efforts next&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And I often go&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;back &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; forth between building &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; analyzing, including things like error analysis&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;38&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;example, when building a new agentic workflow, I&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ll often start by quickly building an end-to-end&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;43&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;system, maybe even a quick &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; dirty implementation&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And this lets me then start to examine the final&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;outputs of the end&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;to&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;end system, &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; also read through traces to get a sense of where it&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s doing&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;54&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;well, where it&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s doing poorly. Based on even just looking at traces, sometimes this will give me a&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;59&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gut sense of which individual components I might want to improve&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And so I might go tune some&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;05&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;individual components &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; keep tuning the overall end&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;to&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;end system&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; As my system starts to mature&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a little bit more, then beyond just manually examining a few outputs &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; reading through&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;traces, I might start to build evals &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; have a small data set, maybe just &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt; examples,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;to compute metrics, at least on end&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;to&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;end performance&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And this then further helps me&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;have a more refined perspective on how to improve the end&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;to&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;end system &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; how to improve individual&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;components&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; As it matures even further, my analysis then becomes maybe even more disciplined, where I&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;38&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;start to &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; error analysis &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; look through the components &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; try to count up how frequently&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;42&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;individual components led to subpar outputs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And this more rigorous analysis then lets me be even&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;more focused &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; deciding what components to work on next &lt;span style=&#34;color:#f92672&#34;&gt;or&lt;/span&gt; inspire ideas &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; improving the overall&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;54&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;end&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;to&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;end system&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And then eventually, when it&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s even more mature to drive more efficient improvements&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;at the component level, that&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s when I might also build component-level evals. And so the workflow&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;06&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;of building an agentic system often goes back &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; forth&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; It&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s not a linear process. We sometimes&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tune the end&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;to&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;end system, then &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; some error analysis, then improve a component &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; a bit,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;then tune the component&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;level evals&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And I tend to bounce back &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; forth between these two types&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;of techniques&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And what I see less experienced teams often &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; is spend a lot of time building&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; probably much less time analyzing with error analysis, building evals, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; so on&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; That would be&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ideal because this is analysis that helps you really focus where to spend your time building&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;38&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;And just one more tip&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; There are actually quite a few tools out there to help with monitoring traces,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;logging runtime, computing costs, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; so on&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And those tools can be helpful&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; I sometimes use a few&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;of them, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; quite a few of DeepLearning&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ai short course partners offer those tools, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; they &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;54&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;work well&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; I find that &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; agentic workflows I end up working on, most agentic workflows are pretty&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;00&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;custom&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; And so I end up building pretty custom evals myself because I want to capture the things&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;07&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;that work incorrectly with my system&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So even though I &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; use some of those tools, I also end&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;up building a lot of custom evals that are well fit to my specific application &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; the issues I&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;see with it&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; So thanks &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; sticking with me this far to the end of the fourth of five modules&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;If you&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;re able to implement even a fraction of the ideas from this module, I think you&amp;#39;&lt;/span&gt;ll be&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;well ahead of the vast majority of developers &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; terms of your sophistication at implementing&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;38&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;agentic workflows&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; Hope you found these materials useful, &lt;span style=&#34;color:#f92672&#34;&gt;and&lt;/span&gt; I look forward to seeing you &lt;span style=&#34;color:#f92672&#34;&gt;in&lt;/span&gt; the&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;43&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;final module&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; We&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ll talk about some more advanced design patterns for building&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;48&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;highly autonomous agents&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; I&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ll see you in the last module of this course.```&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>「吴恩达 Agentic AI 课程实录」模块1：Agentic AI简介</title>
      <link>https://linguage.github.io/courses/andrew-ng-agentic-ai/lecnotes-zh/lec-01/</link>
      <pubDate>Fri, 17 Oct 2025 13:01:13 +0800</pubDate>
      <guid>https://linguage.github.io/courses/andrew-ng-agentic-ai/lecnotes-zh/lec-01/</guid>
      <description>&lt;div class=&#34;link-card&#34; data-url=&#34;https://learn.deeplearning.ai/courses/agentic-ai/&#34;&gt;&#xA;  &lt;a class=&#34;link-card__fallback&#34; href=&#34;https://learn.deeplearning.ai/courses/agentic-ai/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&#xA;    https://learn.deeplearning.ai/courses/agentic-ai/&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;div class=&#34;link-card&#34; data-url=&#34;https://notebooklm.google.com/notebook/7c889fbd-c356-4e24-8871-9704a4188f5c&#34;&gt;&#xA;  &lt;a class=&#34;link-card__fallback&#34; href=&#34;https://notebooklm.google.com/notebook/7c889fbd-c356-4e24-8871-9704a4188f5c&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&#xA;    https://notebooklm.google.com/notebook/7c889fbd-c356-4e24-8871-9704a4188f5c&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;模块1agentic-ai简介andrew-ngagentic-ai&#34;&gt;模块1：Agentic AI简介「Andrew Ng：Agentic AI」&lt;/h1&gt;&#xA;&lt;h2 id=&#34;10-简介&#34;&gt;1.0 简介&lt;/h2&gt;&#xA;&lt;p&gt;欢迎来到这门关于 Agentic AI 的课程。当我创造 “agentic” 这个词来描述我所看到的一种重要且快速增长的、人们构建基础应用的方式时，我没有意识到的是，一群营销人员会抓住这个词，把它当成一个标签，贴在几乎所有能看到的东西上。这导致了对 Agentic AI 的炒作急剧升温。不过，好消息是，抛开炒作不谈，使用 Agentic AI 构建的真正有价值和有用的应用数量也增长得非常迅速，即使没有炒作那么快。在本课程中，我想向您展示构建 Agentic AI 应用的最佳实践。这将在您现在可以构建什么方面，为您开启许多新的机会。&lt;/p&gt;&#xA;&lt;p&gt;如今，agentic 工作流正被用于构建客户支持代理等应用，或进行深度研究以帮助撰写富有洞察力的研究报告，或处理棘手的法律文件，或查看患者输入信息并提出可能的医学诊断。在我带的许多团队中，我们构建的很多项目如果没有 agentic 工作流是根本不可能完成的。因此，知道如何用它们来构建应用是当今 AI 领域最重要和最有价值的技能之一。&lt;/p&gt;&#xA;&lt;p&gt;我发现，真正懂得如何构建 agentic 工作流的人与那些效率较低的人之间，最大的区别之一是能否推动一个规范的开发流程，特别是专注于评估和错误分析的流程。在本课程中，我将告诉您这意味着什么，并向您展示如何才能真正擅长构建这些 agentic 工作流。能够做到这一点是当今 AI 领域最重要的技能之一，它将为您开启更多的机会，无论是工作机会，还是亲手打造出色软件的机会。&lt;/p&gt;&#xA;&lt;p&gt;那么，让我们进入下一个视频，更深入地探讨什么是 agentic 工作流。&lt;/p&gt;&#xA;&lt;h2 id=&#34;11-什么是-agentic-ai&#34;&gt;1.1 什么是 Agentic AI&lt;/h2&gt;&#xA;&lt;p&gt;那么，什么是 Agentic AI？为什么 Agentic AI 工作流如此强大？让我们来看一看。&lt;/p&gt;&#xA;&lt;p&gt;如今，我们许多人使用大型语言模型（LLM）的方式是提示它，比如说，为我们写一篇关于某个主题 X 的文章。我认为这类似于去找一个人，或者在这种情况下，去找一个 AI，请它为我打出一篇文章，要求它从第一个词写到最后一个词，一气呵成，并且永远不能使用退格键。事实证明，我们人类并不能通过这种被迫以完全线性顺序写作的方式来完成我们最好的作品，AI 模型也是如此。但尽管受到这种写作方式的限制，我们的大语言模型表现得出奇地好。&lt;/p&gt;&#xA;&lt;p&gt;相比之下，使用 agentic 工作流，过程可能是这样的：你可能会让它首先写一个关于某个主题的文章大纲，然后问它是否需要进行任何网络研究。在进行了一些网络研究并可能下载了一些网页之后，再让它撰写初稿，然后阅读初稿，看看哪些部分需要修改或做更多研究，接着修改草稿，如此循环。这种工作流更类似于先进行一些思考和研究，然后进行一些修改，再进行更多的思考，等等。通过这种迭代过程，事实证明，agentic 工作流可能需要更长的时间，但它能交付出质量好得多的工作成果。&lt;/p&gt;&#xA;&lt;p&gt;所以，一个 Agentic AI 工作流是一个基于 LLM 的应用执行多个步骤来完成一项任务的过程。在这个例子中，你可能会使用一个 LLM 来撰写文章大纲，然后你可能会使用一个 LLM 来决定在网络搜索引擎中输入什么搜索词，或者说，用什么搜索词来调用网络搜索 API，以获取相关的网页。基于此，你可以将下载的网页输入到一个 LLM 中，让它撰写初稿，然后可能使用另一个 LLM 进行反思，并决定哪些地方需要更多修改。根据你设计这个工作流的方式，也许你甚至可以加入一个“人类在环”的步骤，让 LLM 可以选择请求人类审查某些关键事实。在此基础上，它可能会修改草稿，这个过程会产生一个好得多的工作输出。&lt;/p&gt;</description>
    </item>
    <item>
      <title>「吴恩达Agentic AI 模块1」智能体AI工作流学习指南</title>
      <link>https://linguage.github.io/courses/andrew-ng-agentic-ai/guides/lec-01/</link>
      <pubDate>Fri, 17 Oct 2025 13:01:13 +0800</pubDate>
      <guid>https://linguage.github.io/courses/andrew-ng-agentic-ai/guides/lec-01/</guid>
      <description>&lt;div class=&#34;link-card&#34; data-url=&#34;https://learn.deeplearning.ai/courses/agentic-ai/&#34;&gt;&#xA;  &lt;a class=&#34;link-card__fallback&#34; href=&#34;https://learn.deeplearning.ai/courses/agentic-ai/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&#xA;    https://learn.deeplearning.ai/courses/agentic-ai/&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;div class=&#34;link-card&#34; data-url=&#34;https://notebooklm.google.com/notebook/7c889fbd-c356-4e24-8871-9704a4188f5c&#34;&gt;&#xA;  &lt;a class=&#34;link-card__fallback&#34; href=&#34;https://notebooklm.google.com/notebook/7c889fbd-c356-4e24-8871-9704a4188f5c&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&#xA;    https://notebooklm.google.com/notebook/7c889fbd-c356-4e24-8871-9704a4188f5c&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;吴恩达agentic-ai-模块1智能体ai工作流学习指南&#34;&gt;「吴恩达Agentic AI 模块1」：智能体AI工作流学习指南&lt;/h1&gt;&#xA;&lt;p&gt;本指南旨在评估和深化对吴恩达（Andrew Ng）关于智能体AI工作流课程核心概念的理解。它包括一个测验、一份答案解析、一组论文问题和一个关键术语词汇表，所有内容均基于提供的课程材料。&lt;/p&gt;&#xA;&lt;h2 id=&#34;测验&#34;&gt;测验：&lt;/h2&gt;&#xA;&lt;h3 id=&#34;简答题&#34;&gt;简答题&lt;/h3&gt;&#xA;&lt;p&gt;请用2-3句话回答以下每个问题，以检验您对核心概念的理解。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;什么是智能体AI工作流（Agentic AI Workflow）？它与传统的单次提示方法有何不同？&lt;/li&gt;&#xA;&lt;li&gt;吴恩达为什么创造并推广“agentic”（智能体的）这个词，而不是简单地使用“agent”（智能体）？&lt;/li&gt;&#xA;&lt;li&gt;智能体系统中的“自主性”（autonomy）谱系是如何划分的？请描述其两端。&lt;/li&gt;&#xA;&lt;li&gt;根据课程内容，使用智能体工作流相比非智能体方法，在性能提升方面有何显著优势？请引用编码基准测试的例子。&lt;/li&gt;&#xA;&lt;li&gt;除了提升性能，智能体工作流还提供了哪两个主要好处？&lt;/li&gt;&#xA;&lt;li&gt;什么是“任务分解”（Task Decomposition）？为什么它在构建智能体工作流中至关重要？&lt;/li&gt;&#xA;&lt;li&gt;在构建智能体工作流时，开发人员可以使用哪些核心“构建模块”（building blocks）？&lt;/li&gt;&#xA;&lt;li&gt;请简要解释“反思”（Reflection）这一智能体设计模式及其工作原理。&lt;/li&gt;&#xA;&lt;li&gt;什么是“工具使用”（Tool Use）设计模式？请举例说明。&lt;/li&gt;&#xA;&lt;li&gt;评估（evals）在开发智能体工作流中扮演什么角色？请描述两种主要的评估方法。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;答案解析&#34;&gt;答案解析&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;什么是智能体AI工作流（Agentic AI Workflow）？它与传统的单次提示方法有何不同？&lt;/strong&gt; 智能体AI工作流是一个基于LLM（大语言模型）的应用程序执行多个步骤来完成任务的过程。与传统的单次提示（直接生成最终结果）不同，智能体工作流是一个迭代过程，可能包括规划、研究、草拟和修订，从而产生更高质量的成果。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;吴恩达为什么创造并推广“agentic”（智能体的）这个词，而不是简单地使用“agent”（智能体）？&lt;/strong&gt; 吴恩达创造“agentic”这个形容词是为了避免关于什么是“真正的智能体”的二元论争议。他认为系统可以在不同程度上表现出智能体特性，使用“agentic”可以承认这种程度上的差异，让社区专注于构建系统，而不是争论定义。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;智能体系统中的“自主性”（autonomy）谱系是如何划分的？请描述其两端。&lt;/strong&gt; 智能体系统的自主性谱系从“低自主性”到“高自主性”不等。低自主性系统通常遵循由程序员预先确定的、确定性的步骤序列；而高自主性系统则能自主做出许多决策，包括决定执行任务的步骤顺序，甚至可能创建新工具。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;根据课程内容，使用智能体工作流相比非智能体方法，在性能提升方面有何显著优势？请引用编码基准测试的例子。&lt;/strong&gt; 智能体工作流能够显著提升性能，其提升幅度甚至可能超过模型本身的代际升级。在Human Eval编码基准测试中，将GPT-3.5与智能体工作流结合使用，其性能提升幅度超过了从GPT-3.5升级到GPT-4所带来的性能提升。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;除了提升性能，智能体工作流还提供了哪两个主要好处？&lt;/strong&gt; 除了性能提升，智能体工作流还提供了另外两个好处：并行化（parallelism）和模块化（modularity）。并行化允许系统同时执行多个任务（如并行下载多个网页），从而比人类更快地完成某些工作；模块化则允许开发者轻松地添加、更新或替换工作流中的组件（如更换搜索引擎或LLM模型）。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;什么是“任务分解”（Task Decomposition）？为什么它在构建智能体工作流中至关重要？&lt;/strong&gt; 任务分解是将一个复杂的任务或流程分解成一系列离散、更小的步骤的过程。这在构建智能体工作流中至关重要，因为它能将一个宏大目标转化为可由LLM或软件工具执行的具体、可管理的操作序列，从而实现整个工作流。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;在构建智能体工作流时，开发人员可以使用哪些核心“构建模块”（building blocks）？&lt;/strong&gt; 开发人员可以使用的核心构建模块包括AI模型（如大语言模型或多模态模型）和软件工具。软件工具涵盖了多种功能，例如用于信息检索的API（如网络搜索、数据库查询）、用于执行任务的代码执行工具，以及与其他生产力应用（如邮件、日历）交互的接口。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;请简要解释“反思”（Reflection）这一智能体设计模式及其工作原理。&lt;/strong&gt; “反思”是一种设计模式，即让LLM检查其自身的输出，并根据反馈进行迭代改进。例如，一个LLM生成代码后，可以提示它（或另一个“批评家”LLM）检查代码的正确性并提出批评，然后根据这些批评生成一个修正后的、更好的版本。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;什么是“工具使用”（Tool Use）设计模式？请举例说明。&lt;/strong&gt; “工具使用”是一种设计模式，即赋予LLM调用外部函数或API（即“工具”）的能力来完成任务。例如，当被问及一个需要实时信息的问题时，LLM可以调用一个网络搜索工具来查找最新数据；当需要精确计算时，它可以调用一个代码执行工具来编写并运行代码得出答案。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;评估（evals）在开发智能体工作流中扮演什么角色？请描述两种主要的评估方法。&lt;/strong&gt; 评估在开发智能体工作流中扮演着至关重要的角色，它用于衡量系统性能、发现问题并推动迭代改进。两种主要的评估方法是：针对客观标准的评估，可以通过编写代码来检查（如检查输出中是否提及竞争对手）；以及针对主观标准的评估，通常使用“LLM作为裁判”（LLM as a judge）的方法，让另一个LLM为输出质量打分。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;论文问题&#34;&gt;论文问题&lt;/h2&gt;&#xA;&lt;p&gt;请针对以下问题进行深入思考和阐述，无需提供答案。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;详细论述智能体AI工作流的自主性谱系。结合课程中提到的应用案例（如发票处理和通用客户服务），分析在不同自主性程度上，系统的可靠性、可控性与任务复杂性之间的权衡关系。&lt;/li&gt;&#xA;&lt;li&gt;解释“任务分解”在设计高效智能体工作流中的核心作用。请以设计一个“自动化法律文件合规审查代理”为例，构思并描述您会如何将其分解为一系列可执行的步骤，并说明每个步骤选择的构建模块（LLM或工具）。&lt;/li&gt;&#xA;&lt;li&gt;分析吴恩达所提出的四种关键设计模式：反思、工具使用、规划和多智能体协作。请选择其中两种模式，深入比较它们的应用场景、实现复杂性以及它们如何共同作用以解决比单一模式更复杂的任务。&lt;/li&gt;&#xA;&lt;li&gt;“一个 disciplined evaluation process（严谨的评估流程）是成功构建智能体工作流的最重要预测指标之一。” 请阐述您对这句话的理解。讨论端到端评估（end-to-end evals）与组件级评估（component level evals）各自的优缺点，并说明错误分析（error analysis）如何驱动工作流的迭代优化。&lt;/li&gt;&#xA;&lt;li&gt;展望未来，课程中提到的“计算机使用代理”（computer use agents）代表了智能体AI的一个前沿研究领域。请讨论实现可靠的计算机使用代理所面临的主要挑战（如网页加载慢、界面解析困难），并探讨解决这些挑战可能的技术路径。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;词汇表&#34;&gt;词汇表&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;术语&lt;/th&gt;&#xA;          &lt;th&gt;定义&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;智能体AI (Agentic AI)&lt;/td&gt;&#xA;          &lt;td&gt;一种重要的、快速增长的人工智能应用构建趋势，其核心是使用智能体工作流来完成复杂任务。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;智能体AI工作流 (Agentic AI Workflow)&lt;/td&gt;&#xA;          &lt;td&gt;一种基于大语言模型的应用执行多个步骤来完成任务的过程。它通常是迭代的，包括思考、研究、修订等环节，以产生更高质量的输出。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;自主性 (Autonomy)&lt;/td&gt;&#xA;          &lt;td&gt;智能体系统在没有人类预先硬编码的情况下自主做出决策和决定行动顺序的程度。这个概念存在一个从低到高的谱系。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;任务分解 (Task Decomposition)&lt;/td&gt;&#xA;          &lt;td&gt;将一个复杂的、宏观的任务分解成一系列更小、离散且可由LLM或软件工具执行的步骤的过程。这是构建智能体工作流的关键技能。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;评估 (Evaluations / evals)&lt;/td&gt;&#xA;          &lt;td&gt;用于衡量智能体工作流性能、发现错误和不足之处的流程。它是推动系统迭代改进的关键，包括客观指标和主观判断。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;LLM作为裁判 (LLM as a Judge)&lt;/td&gt;&#xA;          &lt;td&gt;一种主观评估技术，即使用一个LLM来评估另一个LLM生成的输出的质量，通常是通过提示其对输出内容进行评分。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;反思 (Reflection)&lt;/td&gt;&#xA;          &lt;td&gt;一种智能体设计模式。它让LLM检查并批判自己的输出，然后利用这些反馈或外部信息（如代码错误信息）来迭代生成一个更好的版本。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;工具使用 (Tool Use)&lt;/td&gt;&#xA;          &lt;td&gt;一种智能体设计模式。它赋予LLM调用外部函数或API（即“工具”）的能力，如网络搜索、代码执行或数据库查询，以完成超越纯文本生成的任务。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;规划 (Planning)&lt;/td&gt;&#xA;          &lt;td&gt;一种智能体设计模式。它让LLM自主决定为完成一项复杂任务所需采取的行动序列，而不是由开发者预先硬编码步骤。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;多智能体协作 (Multi-Agent Collaboration)&lt;/td&gt;&#xA;          &lt;td&gt;一种智能体设计模式。它通过模拟多个拥有不同角色（如CEO、程序员、测试员）的智能体，让它们协同工作以完成复杂的项目。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;构建模块 (Building Blocks)&lt;/td&gt;&#xA;          &lt;td&gt;构建智能体工作流的基本组件，主要包括AI模型（如LLM）和各种软件工具（如API调用、代码执行器、信息检索器）。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;</description>
    </item>
    <item>
      <title>「吴恩达Agentic AI 模块1简报」Agentic AI工作流</title>
      <link>https://linguage.github.io/courses/andrew-ng-agentic-ai/insights/lec-01/</link>
      <pubDate>Fri, 17 Oct 2025 13:01:13 +0800</pubDate>
      <guid>https://linguage.github.io/courses/andrew-ng-agentic-ai/insights/lec-01/</guid>
      <description>&lt;div class=&#34;link-card&#34; data-url=&#34;https://learn.deeplearning.ai/courses/agentic-ai/&#34;&gt;&#xA;  &lt;a class=&#34;link-card__fallback&#34; href=&#34;https://learn.deeplearning.ai/courses/agentic-ai/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&#xA;    https://learn.deeplearning.ai/courses/agentic-ai/&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;div class=&#34;link-card&#34; data-url=&#34;https://notebooklm.google.com/notebook/7c889fbd-c356-4e24-8871-9704a4188f5c&#34;&gt;&#xA;  &lt;a class=&#34;link-card__fallback&#34; href=&#34;https://notebooklm.google.com/notebook/7c889fbd-c356-4e24-8871-9704a4188f5c&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&#xA;    https://notebooklm.google.com/notebook/7c889fbd-c356-4e24-8871-9704a4188f5c&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;吴恩达agentic-ai-模块1简报agentic-ai工作流&#34;&gt;「吴恩达Agentic AI 模块1简报」Agentic AI工作流&lt;/h1&gt;&#xA;&lt;h2 id=&#34;概要&#34;&gt;概要&lt;/h2&gt;&#xA;&lt;p&gt;本文档综合分析了吴恩达关于“代理式AI工作流”（Agentic AI Workflows）的核心理念与实践方法。代理式AI是一种强大的应用程序构建范式，它将复杂的任务分解为多个步骤，通过迭代、反思和工具使用来执行，从而获得远超传统单次提示方法的性能和成果。&lt;/p&gt;&#xA;&lt;h3 id=&#34;核心要点&#34;&gt;核心要点&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;代理式工作流的定义： 与一次性生成结果的模式不同，代理式工作流是一个多步骤过程，AI系统通过规划、执行动作、反思和修正来完成任务。这类似于人类处理复杂问题的方式，例如先写大纲、再做研究、然后起草、最后修改。&lt;/li&gt;&#xA;&lt;li&gt;性能的巨大飞跃： 采用代理式工作流带来的性能提升，可能超过模型本身的代际升级。数据显示，为GPT-3.5模型应用代理式工作流后，其在编程基准测试中的表现甚至可以超越未使用该工作流的更强大的GPT-4模型。&lt;/li&gt;&#xA;&lt;li&gt;自主性光谱： 代理式系统存在一个从“低自主性”到“高自主性”的光谱。低自主性系统（步骤由工程师预先设定）更易于控制、更可靠，已在商业中广泛应用。高自主性系统（由LLM自行决定步骤）则更具实验性，也更难预测。&lt;/li&gt;&#xA;&lt;li&gt;成功的关键技能： 构建高效代理式工作流的两大核心技能是任务分解（将复杂任务拆解为LLM或工具可执行的小步骤）和严格的评估（“Evals”），通过系统化的错误分析和性能追踪来驱动迭代改进。&lt;/li&gt;&#xA;&lt;li&gt;四大设计模式： 构建代理式工作流主要依赖四种关键的设计模式：&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;反思 (Reflection): 让LLM检查并批判自身的输出，从而进行迭代改进。&lt;/li&gt;&#xA;&lt;li&gt;工具使用 (Tool Use): 赋予LLM调用外部函数（如网络搜索、代码执行、数据库查询）的能力。&lt;/li&gt;&#xA;&lt;li&gt;规划 (Planning): LLM自主决定完成任务所需的步骤顺序。&lt;/li&gt;&#xA;&lt;li&gt;多代理协作 (Multi-Agent Collaboration): 模拟一个团队，让多个具有不同角色的AI代理协同工作。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;ol start=&#34;6&#34;&gt;&#xA;&lt;li&gt;广泛的应用价值： 代理式工作流已成功应用于多种场景，包括深度研究报告撰写、客户支持、发票处理和复杂的法律文件分析。对于许多项目而言，没有代理式工作流，其实现将“不可能”。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;1-代理式ai工作流定义与理念&#34;&gt;1. 代理式AI工作流：定义与理念&lt;/h2&gt;&#xA;&lt;h3 id=&#34;11-核心概念超越单次生成&#34;&gt;1.1 核心概念：超越单次生成&lt;/h3&gt;&#xA;&lt;p&gt;传统的与大型语言模型（LLM）交互的方式是“直接生成”，即用户提供一个提示，LLM一次性地从头到尾生成完整的文本，这如同要求一个人“不使用退格键一次性写完一篇文章”。&lt;/p&gt;&#xA;&lt;p&gt;代理式AI工作流则截然不同。它将一个复杂的任务分解为一系列的子任务，并以迭代的方式完成。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;典型流程（以撰写研究报告为例）：&#xA;&lt;ol&gt;&#xA;&lt;li&gt;生成大纲： 首先，让LLM为主题撰写一个初步大纲。&lt;/li&gt;&#xA;&lt;li&gt;研究与信息收集： 接着，让LLM决定需要进行哪些网络搜索，并调用搜索API来获取相关网页内容。&lt;/li&gt;&#xA;&lt;li&gt;起草初稿： 基于收集到的信息，LLM撰写第一版草稿。&lt;/li&gt;&#xA;&lt;li&gt;反思与修订： LLM（或另一个AI代理）阅读初稿，识别需要修改或补充研究的部分。&lt;/li&gt;&#xA;&lt;li&gt;人类介入（可选）： 在关键环节（如事实核查），可以设计让AI请求人类审核的步骤。&lt;/li&gt;&#xA;&lt;li&gt;最终修订： 综合所有反馈，完成最终报告。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;吴恩达指出，这种迭代过程虽然耗时更长，但最终产出的工作成果质量“要好得多”。&lt;/p&gt;&#xA;&lt;h3 id=&#34;12-代理式-agentic术语的由来&#34;&gt;1.2 “代理式 (Agentic)”术语的由来&lt;/h3&gt;&#xA;&lt;p&gt;吴恩达创造并推广“代理式 (agentic)”这个形容词，是为了避免AI社区中关于“什么是真正的代理 (agent)”的无谓争论。他认为，与其将系统划分为“是代理”或“不是代理”的二元对立，不如承认系统可以在不同程度上表现出“代理行为”。这一术语的引入，旨在将焦点从定义辩论转移到构建有价值的系统上。&lt;/p&gt;&#xA;&lt;h2 id=&#34;2-自主性光谱从预定步骤到动态决策&#34;&gt;2. 自主性光谱：从预定步骤到动态决策&lt;/h2&gt;&#xA;&lt;p&gt;代理式AI系统并非只有一种形态，而是存在于一个从低到高的自主性光谱上。&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;自主性程度&lt;/th&gt;&#xA;          &lt;th&gt;特征&lt;/th&gt;&#xA;          &lt;th&gt;优点&lt;/th&gt;&#xA;          &lt;th&gt;缺点&lt;/th&gt;&#xA;          &lt;th&gt;应用场景&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;低自主性&lt;/td&gt;&#xA;          &lt;td&gt;1. 步骤顺序由工程师预先硬编码。&lt;br&gt;2. 工具调用是确定性的。&lt;br&gt;3. LLM的主要作用是生成文本内容。&lt;/td&gt;&#xA;          &lt;td&gt;可控性强、结果可预测、可靠性高&lt;/td&gt;&#xA;          &lt;td&gt;灵活性差、无法处理未知流程&lt;/td&gt;&#xA;          &lt;td&gt;大多数当前商业应用，如发票处理、标准客户问询。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;半自主性&lt;/td&gt;&#xA;          &lt;td&gt;1. LLM可以在一定范围内做出决策。&lt;br&gt;2. 可以从预定义的工具集中选择并调用工具。&lt;/td&gt;&#xA;          &lt;td&gt;兼具一定的灵活性和可控性。&lt;/td&gt;&#xA;          &lt;td&gt;复杂性增加、灵活性差、无法处理未知流程&lt;/td&gt;&#xA;          &lt;td&gt;灵活性差、无法处理未知流程&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;高自主性&lt;/td&gt;&#xA;          &lt;td&gt;1. LLM自主决定完成任务的完整步骤顺序。&lt;br&gt;2. 甚至可以自主编写新的函数或创建新工具。&lt;br&gt;3. 流程是动态且不确定的。&lt;/td&gt;&#xA;          &lt;td&gt;极高的灵活性、能处理未知和复杂的任务&lt;/td&gt;&#xA;          &lt;td&gt;可控性差、结果难以预测、可靠性较低，更具实验性&lt;/td&gt;&#xA;          &lt;td&gt;自动网页浏览、复杂问题解决等前沿研究领域&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;吴恩达强调，位于“低自主性”一端的应用同样非常有价值，并且是当今许多企业正在构建和部署的系统。&lt;/p&gt;</description>
    </item>
    <item>
      <title>「吴恩达Agentic AI 模块3」代理式人工智能工具使用与MCP学习指南</title>
      <link>https://linguage.github.io/courses/andrew-ng-agentic-ai/guides/lec-03/</link>
      <pubDate>Fri, 17 Oct 2025 13:01:13 +0800</pubDate>
      <guid>https://linguage.github.io/courses/andrew-ng-agentic-ai/guides/lec-03/</guid>
      <description>&lt;div class=&#34;link-card&#34; data-url=&#34;https://learn.deeplearning.ai/courses/agentic-ai/&#34;&gt;&#xA;  &lt;a class=&#34;link-card__fallback&#34; href=&#34;https://learn.deeplearning.ai/courses/agentic-ai/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&#xA;    https://learn.deeplearning.ai/courses/agentic-ai/&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;div class=&#34;link-card&#34; data-url=&#34;https://notebooklm.google.com/notebook/5f94ecc3-499e-4be2-8c8f-eadc42dda1ad&#34;&gt;&#xA;  &lt;a class=&#34;link-card__fallback&#34; href=&#34;https://notebooklm.google.com/notebook/5f94ecc3-499e-4be2-8c8f-eadc42dda1ad&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&#xA;    https://notebooklm.google.com/notebook/5f94ecc3-499e-4be2-8c8f-eadc42dda1ad&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;吴恩达agentic-ai-模块3代理式人工智能工具使用与mcp学习指南&#34;&gt;「吴恩达Agentic AI 模块3」代理式人工智能工具使用与MCP学习指南&lt;/h1&gt;&#xA;&lt;h2 id=&#34;测验&#34;&gt;测验&lt;/h2&gt;&#xA;&lt;h3 id=&#34;简答题&#34;&gt;简答题&lt;/h3&gt;&#xA;&lt;p&gt;请用2-3句话回答以下每个问题，以检验您对核心概念的理解。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;在大型语言模型（LLM）的背景下，“工具使用”指的是什么？为什么它很重要？&lt;/li&gt;&#xA;&lt;li&gt;当一个工具可用时，LLM是否总会选择使用它？请解释其决策过程。&lt;/li&gt;&#xA;&lt;li&gt;根据“早期时代”的方法，描述LLM使用工具的完整流程。&lt;/li&gt;&#xA;&lt;li&gt;在手动的工具创建方法中，LLM是直接调用函数吗？请解释其背后的机制。&lt;/li&gt;&#xA;&lt;li&gt;像AISuite这样的现代库与旧的手动提示方法相比，是如何简化为LLM提供工具的过程的？&lt;/li&gt;&#xA;&lt;li&gt;在现代工具使用语法中，JSON模式（JSON schema）扮演什么角色？它通常包含哪些信息？&lt;/li&gt;&#xA;&lt;li&gt;为什么说代码执行是LLM一个特别强大的工具？&lt;/li&gt;&#xA;&lt;li&gt;与LLM代码执行相关的主要风险是什么？缓解这种风险的最佳实践是什么？&lt;/li&gt;&#xA;&lt;li&gt;模型上下文协议（MCP）旨在解决开发者社区面临的什么核心问题？&lt;/li&gt;&#xA;&lt;li&gt;什么是MCP客户端和MCP服务器？请举例说明它们如何交互。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;测验答案&#34;&gt;测验答案&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;在大型语言模型（LLM）的背景下，“工具使用”指的是什么？为什么它很重要？&lt;/strong&gt; “工具使用”是指让LLM自行决定何时请求调用一个函数来执行特定动作、收集信息或完成其他任务。这非常重要，因为就像人类使用工具能完成更多事情一样，为LLM提供工具（即函数）能极大地扩展其能力，使其能够完成仅凭自身训练数据无法完成的任务，例如获取当前时间或查询数据库。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;当一个工具可用时，LLM是否总会选择使用它？请解释其决策过程。&lt;/strong&gt; 不，LLM并不会总是使用可用的工具。开发者可以将决策权留给LLM，让它根据具体的用户提示来判断是否需要调用工具。例如，如果向一个拥有“获取当前时间”工具的LLM询问绿茶中的咖啡因含量，它会直接生成答案，而不会调用该工具，因为它判断该工具与问题无关。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;根据“早期时代”的方法，描述LLM使用工具的完整流程。&lt;/strong&gt; 该流程包括几个步骤：首先，开发者通过提示告知LLM可用工具及其调用格式。当LLM决定使用工具时，它会生成一个特定格式的文本（如FUNCTION: getCurrentTime）作为请求。然后，开发者编写的代码会捕获并解析这个输出，实际执行相应的函数，并将函数返回的结果反馈给LLM，最后LLM利用这个新信息生成最终的答复。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;在手动的工具创建方法中，LLM是直接调用函数吗？请解释其背后的机制。&lt;/strong&gt; 不，LLM不直接调用函数。其机制是，LLM通过生成一种特定格式的文本输出来“请求”调用函数。开发者需要编写代码来监视LLM的输出，当检测到这个预定义的格式时，由开发者的代码来负责解析请求、执行相应的函数，并将结果返回给LLM。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;像AISuite这样的现代库与旧的手动提示方法相比，是如何简化为LLM提供工具的过程的？&lt;/strong&gt; 现代库（如AISuite）能自动处理将函数描述给LLM的复杂过程。开发者无需手动编写冗长的提示来解释每个工具的用法，库会自动检查函数的文档字符串（docstring），并生成一个结构化的JSON模式。这个模式清晰地告诉LLM函数的名称、功能和参数，从而实现了工具的无缝集成。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;在现代工具使用语法中，JSON模式（JSON schema）扮演什么角色？它通常包含哪些信息？&lt;/strong&gt; JSON模式扮演着向LLM详细描述可用工具的角色。它是一个结构化的数据格式，通常包含函数的名称（name）、功能的详细描述（description，通常从代码的文档字符串中提取）以及函数的参数列表（parameters），包括每个参数的类型和用途。这使得LLM能够准确理解何时以及如何调用该工具。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;为什么说代码执行是LLM一个特别强大的工具？&lt;/strong&gt; 代码执行之所以强大，是因为它赋予了LLM极大的灵活性和解决复杂问题的能力。相比于为每个数学运算（加、减、平方根等）创建单独的工具，允许LLM编写并执行代码能让它处理几乎无限种类的计算和逻辑任务。这种通用性使得LLM能够用创新的代码解决方案来应对各种复杂的用户请求。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;与LLM代码执行相关的主要风险是什么？缓解这种风险的最佳实践是什么？&lt;/strong&gt; 主要风险在于安全性，LLM可能生成任意甚至有害的代码，例如错误地删除文件（如remove star.py）。缓解此风险的最佳实践是在一个安全的沙盒环境（如Docker或E2B）中运行代码。沙盒环境可以隔离代码的执行，从而降低数据丢失、敏感数据泄露或对系统造成损害的风险。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;模型上下文协议（MCP）旨在解决开发者社区面临的什么核心问题？&lt;/strong&gt; MCP旨在解决开发者在将各种工具和数据源（如Slack、GitHub、数据库）集成到其LLM应用中时普遍存在的重复劳动问题。在MCP出现之前，每个应用开发者都需要为同一个数据源编写自定义的封装代码，导致社区总工作量呈 M（应用数）乘以 N（工具数）的规模。MCP通过提供一个标准化的集成协议，将工作量减少到 M 加 N 的规模。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;什么是MCP客户端和MCP服务器？请举例说明它们如何交互。&lt;/strong&gt; MCP客户端是需要访问工具或数据的应用程序，而MCP服务器是提供这些工具或数据访问的服务封装层。例如，一个云桌面应用（MCP客户端）在需要获取GitHub仓库信息时，会向GitHub MCP服务器发送请求。服务器接收请求（如“列出最新的拉取请求”），执行相应的操作，并将结果返回给客户端，客户端再将这些信息提供给LLM以生成最终的摘要。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;论文题目建议&#34;&gt;论文题目建议&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;比较并对比“早期时代”手动启用工具使用的方法与使用AISuite等现代库的自动化方法。深入探讨开发者工作流程的演变、底层机制的差异以及对应用开发效率的影响。&lt;/li&gt;&#xA;&lt;li&gt;结合工具使用的概念，讨论大型语言模型中的“代理式”（Agentic）行为。模型能够决定何时使用哪个工具（包括决定不使用任何工具）的能力，是如何促成其代理特质的？&lt;/li&gt;&#xA;&lt;li&gt;深入分析将“代码执行”作为LLM工具的独特优势和重大风险。开发者应如何平衡这一工具的强大功能与保障系统安全性和可靠性的需求？请从技术和实践角度进行论述。&lt;/li&gt;&#xA;&lt;li&gt;阐述模型上下文协议（MCP）的原理及其在构建复杂、多工具LLM应用生态系统中的重要性。该协议如何改变应用开发者（客户端）和服务提供商（服务器）之间的互动模式和开发范式？&lt;/li&gt;&#xA;&lt;li&gt;设想你正在构建一个课程资料中描述的“日历助手代理”。请详细规划你的开发步骤，从定义必要的工具（如检查日历、创建约会），到实现与LLM的交互循环。在你的规划中，请引用全部五个相关模块（工具定义、创建、语法、代码执行、MCP）中的概念。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;关键术语词汇表&#34;&gt;关键术语词汇表&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;术语&lt;/th&gt;&#xA;          &lt;th&gt;定义&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;工具使用 (Tool Use)&lt;/td&gt;&#xA;          &lt;td&gt;允许大型语言模型（LLM）自行决定何时请求调用一个函数，以执行特定动作、收集信息或完成其他任务的过程。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;工具 (Tool)&lt;/td&gt;&#xA;          &lt;td&gt;提供给LLM的函数或代码，LLM可以请求调用这些函数来扩展其能力。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;代理工作流 (Agentic Workflow)&lt;/td&gt;&#xA;          &lt;td&gt;LLM作为一个代理，自主地规划步骤、决策并使用工具来完成复杂任务的一系列流程。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;代码执行 (Code Execution)&lt;/td&gt;&#xA;          &lt;td&gt;一种特殊的工具，允许LLM编写代码并请求执行，用于解决数学计算、数据处理等复杂问题，具有高度的灵活性。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;沙盒环境 (Sandbox Environment)&lt;/td&gt;&#xA;          &lt;td&gt;一个安全的、隔离的执行环境（如Docker），用于运行由LLM生成的代码，以防止潜在的有害操作对系统造成损害。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;JSON模式 (JSON Schema)&lt;/td&gt;&#xA;          &lt;td&gt;一种基于JSON的结构化数据格式，用于向LLM详细描述一个工具（函数），包括其名称、功能描述和参数。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;AISuite&lt;/td&gt;&#xA;          &lt;td&gt;一个开源库，它简化了向LLM提供工具的过程，能够自动从函数的文档字符串生成JSON模式，与OpenAI的语法非常相似。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;模型上下文协议 (MCP)&lt;/td&gt;&#xA;          &lt;td&gt;由Anthropic提出并被广泛采用的一个标准协议，旨在简化应用程序（客户端）对外部工具和数据源（服务器）的访问，减少开发者的重复集成工作。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;MCP客户端 (MCP Client)&lt;/td&gt;&#xA;          &lt;td&gt;遵循MCP标准的应用程序，它消费（使用）由MCP服务器提供的工具或数据资源。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;MCP服务器 (MCP Server)&lt;/td&gt;&#xA;          &lt;td&gt;遵循MCP标准的服务，它将对数据源（如GitHub, Slack）的访问封装起来，向MCP客户端提供工具或数据资源。&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;</description>
    </item>
    <item>
      <title>「吴恩达Agentic AI 模块4」Agentic AI 工作流开发与优化学习指南</title>
      <link>https://linguage.github.io/courses/andrew-ng-agentic-ai/guides/lec-04/</link>
      <pubDate>Fri, 17 Oct 2025 13:01:13 +0800</pubDate>
      <guid>https://linguage.github.io/courses/andrew-ng-agentic-ai/guides/lec-04/</guid>
      <description>&lt;div class=&#34;link-card&#34; data-url=&#34;https://learn.deeplearning.ai/courses/agentic-ai/&#34;&gt;&#xA;  &lt;a class=&#34;link-card__fallback&#34; href=&#34;https://learn.deeplearning.ai/courses/agentic-ai/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&#xA;    https://learn.deeplearning.ai/courses/agentic-ai/&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;div class=&#34;link-card&#34; data-url=&#34;https://notebooklm.google.com/notebook/479456b0-c4a5-4d08-83c0-2b80e3911dd4&#34;&gt;&#xA;  &lt;a class=&#34;link-card__fallback&#34; href=&#34;https://notebooklm.google.com/notebook/479456b0-c4a5-4d08-83c0-2b80e3911dd4&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&#xA;    https://notebooklm.google.com/notebook/479456b0-c4a5-4d08-83c0-2b80e3911dd4&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;吴恩达agentic-ai-模块4agentic-ai-工作流开发与优化学习指南&#34;&gt;「吴恩达Agentic AI 模块4」Agentic AI 工作流开发与优化学习指南&lt;/h1&gt;&#xA;&lt;p&gt;本指南旨在帮助您复习和巩固“Agentic AI 工作流的开发与优化”课程第四模块的核心概念。内容包括简答题测验、答案解析、开放式论述题以及关键术语词汇表，全部基于提供的源材料编写。&lt;/p&gt;&#xA;&lt;h2 id=&#34;测验&#34;&gt;测验&lt;/h2&gt;&#xA;&lt;h3 id=&#34;简答题&#34;&gt;简答题&lt;/h3&gt;&#xA;&lt;p&gt;请用2-3句话回答以下每个问题，以检验您对核心概念的理解。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;为什么在开发 Agentic AI 系统时，建议首先构建一个“快速而粗糙”的原型？&lt;/li&gt;&#xA;&lt;li&gt;课程中提到的评估（eval）流程是怎样的？请以发票处理工作流为例进行说明。&lt;/li&gt;&#xA;&lt;li&gt;什么是“LLM作为评判者”（LLM-as-a-judge）？在什么情况下使用它比编写代码进行评估更合适？&lt;/li&gt;&#xA;&lt;li&gt;请解释评估的两个维度轴，并为每个象限提供一个源材料中提到的例子。&lt;/li&gt;&#xA;&lt;li&gt;什么是错误分析（Error Analysis）？它在优化 Agentic AI 工作流中扮演什么关键角色？&lt;/li&gt;&#xA;&lt;li&gt;在进行错误分析时，“追踪”（Trace）和“跨度”（Span）分别指什么？&lt;/li&gt;&#xA;&lt;li&gt;与端到端评估相比，组件级评估（Component-level Evals）有哪些优势？&lt;/li&gt;&#xA;&lt;li&gt;当一个基于LLM的组件性能不佳时，可以采取哪些方法来解决问题？&lt;/li&gt;&#xA;&lt;li&gt;开发者应如何培养对不同大型语言模型（LLM）能力和适用场景的直觉？&lt;/li&gt;&#xA;&lt;li&gt;在优化 Agentic 工作流的成本和延迟时，首要步骤是什么？这如何帮助确定优化的重点？&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;答案解析&#34;&gt;答案解析&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;为什么在开发 Agentic AI 系统时，建议首先构建一个“快速而粗糙”的原型？&lt;/strong&gt; 构建一个快速原型有助于开发者快速了解系统在实际应用中的表现，识别出其有效和无效的方面。通过观察初始原型的输出，可以更有针对性地集中精力解决实际存在的问题，而不是花费数周时间进行理论化和假设，从而大大提高开发效率。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;课程中提到的评估（eval）流程是怎样的？请以发票处理工作流为例进行说明。&lt;/strong&gt; 评估流程首先是构建系统并观察输出，以发现问题，例如发票的“到期日”被错误提取。接着，创建一个小规模的评估集（如10-20张发票），并为每个样本手动标注正确答案（即“基准真相”）。最后，编写代码或提示来衡量系统输出与基准真相的一致性，从而量化改进效果。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;什么是“LLM作为评判者”（LLM-as-a-judge）？在什么情况下使用它比编写代码进行评估更合适？&lt;/strong&gt; “LLM作为评判者”是利用一个LLM来评估另一个AI系统输出质量的方法，通常用于更主观的评估。当评估标准难以通过简单的代码（如正则表达式）来客观衡量时，它尤其有用。例如，在评估研究报告是否充分涵盖了“金标准讨论要点”时，由于表达方式多样，使用LLM来判断会比模式匹配更有效。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;请解释评估的两个维度轴，并为每个象限提供一个源材料中提到的例子。&lt;/strong&gt; 评估的两个维度轴分别是评估方法（客观代码评估 vs. 主观LLM评判）和是否有“逐例基准真相”。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;代码评估 &amp;amp; 有逐例基准真相: 检查发票到期日提取是否正确，因为每张发票有不同的正确日期。&lt;/li&gt;&#xA;&lt;li&gt;代码评估 &amp;amp; 无逐例基准真相: 检查营销文案长度是否符合10个词的限制，因为所有例子的目标都相同。&lt;/li&gt;&#xA;&lt;li&gt;LLM评判 &amp;amp; 有逐例基准真相: 统计研究论文中提及“金标准讨论要点”的数量，因为每个主题的要点都不同。&lt;/li&gt;&#xA;&lt;li&gt;LLM评判 &amp;amp; 无逐例基准真相: 根据通用评分标准（如坐标轴标签是否清晰）来给图表打分。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;ol start=&#34;5&#34;&gt;&#xA;&lt;li&gt;&lt;strong&gt;什么是错误分析（Error Analysis）？它在优化 Agentic AI 工作流中扮演什么关键角色？&lt;/strong&gt; 错误分析是一个系统性的过程，通过检查系统出错的案例，找出导致最终输出不满意的根本原因在于工作流中的哪个组件。它的关键作用是帮助开发团队将精力集中在最能有效提升系统整体性能的薄弱环节上，避免在收效甚微的组件上浪费时间和资源。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;在进行错误分析时，“追踪”（Trace）和“跨度”（Span）分别指什么？&lt;/strong&gt; “追踪”（Trace）指的是一次 Agent 运行过程中所有中间步骤输出的集合，它完整记录了从输入到最终输出的全过程。而“跨度”（Span）特指单个步骤的输出。通过检查追踪记录，开发者可以了解每个组件的具体表现。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;与端到端评估相比，组件级评估（Component-level Evals）有哪些优势？&lt;/strong&gt; 组件级评估能为特定组件的性能提供更清晰、更直接的信号，避免了整个端到端系统中其他组件随机性带来的噪声干扰。这使得开发者可以更高效地对某个特定组件（如网络搜索功能）进行调优和迭代，同时也便于分工协作，让不同团队专注于优化各自负责的模块。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;当一个基于LLM的组件性能不佳时，可以采取哪些方法来解决问题？&lt;/strong&gt; 可以采取多种方法改进。首先是改进提示（Prompts），如增加更明确的指令或使用少样本提示（few-shot prompting）。其次是尝试不同的LLM模型，选择更适合当前任务的模型。此外，还可以将复杂的任务分解为多个更简单的步骤，或者在穷尽其他方法后，考虑对模型进行微调（fine-tuning）以获得更高性能。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;开发者应如何培养对不同大型语言模型（LLM）能力和适用场景的直觉？&lt;/strong&gt; 开发者可以通过多种方式培养直觉。首先是经常试用不同的模型，包括闭源和开源模型，了解它们的特性。其次是大量阅读他人编写的优秀提示，甚至深入开源软件包研究其提示设计。最后，在自己的工作流中尝试替换和评估不同的模型，结合追踪记录和评估指标，积累关于模型性能、成本和速度权衡的实践经验。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;在优化 Agentic 工作流的成本和延迟时，首要步骤是什么？这如何帮助确定优化的重点？&lt;/strong&gt; 首要步骤是对工作流的每个步骤进行基准测试（benchmarking），即测量每个组件的执行时间（延迟）和花费（成本）。通过这种量化分析，可以清晰地识别出哪些步骤是主要的耗时或成本来源。这使得优化工作可以集中在影响最大的组件上，避免在对整体性能影响不大的地方浪费精力。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;开放式论述题&#34;&gt;开放式论述题&lt;/h3&gt;&#xA;&lt;p&gt;请思考并详细阐述以下问题，这些问题没有标准答案，旨在激发更深入的思考。&lt;/p&gt;</description>
    </item>
    <item>
      <title>「吴恩达Agentic AI 模块5」4个自主AI智能体构建模式:从指令执行者到战略家</title>
      <link>https://linguage.github.io/courses/andrew-ng-agentic-ai/blog/lec-05/</link>
      <pubDate>Fri, 17 Oct 2025 13:01:13 +0800</pubDate>
      <guid>https://linguage.github.io/courses/andrew-ng-agentic-ai/blog/lec-05/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;本文将从吴恩达（Andrew Ng）的课程中提炼出四个最具影响力的设计模式，帮助你理解如何构建这些高度自主的智能体。这些模式将彻底改变我们对AI能力的认知，并为开发者开辟了全新的可能性。&lt;/p&gt;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>吴恩达 Agentic AI 课程实录（完整版）</title>
      <link>https://linguage.github.io/courses/andrew-ng-agentic-ai/agenticai/</link>
      <pubDate>Fri, 17 Oct 2025 13:01:13 +0800</pubDate>
      <guid>https://linguage.github.io/courses/andrew-ng-agentic-ai/agenticai/</guid>
      <description>&lt;div class=&#34;link-card&#34; data-url=&#34;https://learn.deeplearning.ai/courses/agentic-ai/&#34;&gt;&#xA;  &lt;a class=&#34;link-card__fallback&#34; href=&#34;https://learn.deeplearning.ai/courses/agentic-ai/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&#xA;    https://learn.deeplearning.ai/courses/agentic-ai/&#xA;  &lt;/a&gt;&#xA;&lt;/div&gt;&#xA;&#xA;&lt;h1 id=&#34;吴恩达课程agentic-ai&#34;&gt;吴恩达课程：Agentic AI&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;作者：吴恩达（Andrew Ng）&lt;/li&gt;&#xA;&lt;li&gt;课程链接：&lt;a href=&#34;https://learn.deeplearning.ai/courses/agentic-ai/&#34;&gt;DeepLearning.ai - Agentic AI&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;模块一agentic-ai简介&#34;&gt;模块一：Agentic AI简介&lt;/h1&gt;&#xA;&lt;h2 id=&#34;10-简介&#34;&gt;1.0 简介&lt;/h2&gt;&#xA;&lt;p&gt;欢迎来到这门关于 Agentic AI 的课程。当我创造 “agentic” 这个词来描述我所看到的一种重要且快速增长的、人们构建基础应用的方式时，我没有意识到的是，一群营销人员会抓住这个词，把它当成一个标签，贴在几乎所有能看到的东西上。这导致了对 Agentic AI 的炒作急剧升温。不过，好消息是，抛开炒作不谈，使用 Agentic AI 构建的真正有价值和有用的应用数量也增长得非常迅速，即使没有炒作那么快。在本课程中，我想向您展示构建 Agentic AI 应用的最佳实践。这将在您现在可以构建什么方面，为您开启许多新的机会。&lt;/p&gt;&#xA;&lt;p&gt;如今，agentic 工作流正被用于构建客户支持代理等应用，或进行深度研究以帮助撰写富有洞察力的研究报告，或处理棘手的法律文件，或查看患者输入信息并提出可能的医学诊断。在我带的许多团队中，我们构建的很多项目如果没有 agentic 工作流是根本不可能完成的。因此，知道如何用它们来构建应用是当今 AI 领域最重要和最有价值的技能之一。&lt;/p&gt;&#xA;&lt;p&gt;我发现，真正懂得如何构建 agentic 工作流的人与那些效率较低的人之间，最大的区别之一是能否推动一个规范的开发流程，特别是专注于评估和错误分析的流程。在本课程中，我将告诉您这意味着什么，并向您展示如何才能真正擅长构建这些 agentic 工作流。能够做到这一点是当今 AI 领域最重要的技能之一，它将为您开启更多的机会，无论是工作机会，还是亲手打造出色软件的机会。&lt;/p&gt;&#xA;&lt;p&gt;那么，让我们进入下一个视频，更深入地探讨什么是 agentic 工作流。&lt;/p&gt;&#xA;&lt;h2 id=&#34;11-什么是-agentic-ai&#34;&gt;1.1 什么是 Agentic AI&lt;/h2&gt;&#xA;&lt;p&gt;那么，什么是 Agentic AI？为什么 Agentic AI 工作流如此强大？让我们来看一看。&lt;/p&gt;&#xA;&lt;p&gt;如今，我们许多人使用大型语言模型（LLM）的方式是提示它，比如说，为我们写一篇关于某个主题 X 的文章。我认为这类似于去找一个人，或者在这种情况下，去找一个 AI，请它为我打出一篇文章，要求它从第一个词写到最后一个词，一气呵成，并且永远不能使用退格键。事实证明，我们人类并不能通过这种被迫以完全线性顺序写作的方式来完成我们最好的作品，AI 模型也是如此。但尽管受到这种写作方式的限制，我们的大语言模型表现得出奇地好。&lt;/p&gt;&#xA;&lt;p&gt;相比之下，使用 agentic 工作流，过程可能是这样的：你可能会让它首先写一个关于某个主题的文章大纲，然后问它是否需要进行任何网络研究。在进行了一些网络研究并可能下载了一些网页之后，再让它撰写初稿，然后阅读初稿，看看哪些部分需要修改或做更多研究，接着修改草稿，如此循环。这种工作流更类似于先进行一些思考和研究，然后进行一些修改，再进行更多的思考，等等。通过这种迭代过程，事实证明，agentic 工作流可能需要更长的时间，但它能交付出质量好得多的工作成果。&lt;/p&gt;&#xA;&lt;p&gt;所以，一个 Agentic AI 工作流是一个基于 LLM 的应用执行多个步骤来完成一项任务的过程。在这个例子中，你可能会使用一个 LLM 来撰写文章大纲，然后你可能会使用一个 LLM 来决定在网络搜索引擎中输入什么搜索词，或者说，用什么搜索词来调用网络搜索 API，以获取相关的网页。基于此，你可以将下载的网页输入到一个 LLM 中，让它撰写初稿，然后可能使用另一个 LLM 进行反思，并决定哪些地方需要更多修改。根据你设计这个工作流的方式，也许你甚至可以加入一个“人类在环”的步骤，让 LLM 可以选择请求人类审查某些关键事实。在此基础上，它可能会修改草稿，这个过程会产生一个好得多的工作输出。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
