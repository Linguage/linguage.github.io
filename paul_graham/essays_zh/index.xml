<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>中文版 on Linguage</title>
    <link>https://linguage.github.io/paul_graham/essays_zh/</link>
    <description>Recent content in 中文版 on Linguage</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <atom:link href="https://linguage.github.io/paul_graham/essays_zh/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title> pooled-risk 公司管理公司</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/prcmc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/prcmc/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/prcmc.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;pooled-risk-公司管理公司&#34;&gt;pooled-risk 公司管理公司&lt;/h1&gt;&#xA;&lt;p&gt;2008年7月&lt;/p&gt;&#xA;&lt;p&gt;在今年创业学校的演讲中，David Heinemeier Hansson 建议创业创始人应该用老式的方式做事。不要期望通过建立有价值的公司然后在&amp;quot;流动性事件&amp;quot;中出售股票来致富，创始人应该创办能赚钱的公司并依靠收入生活。&lt;/p&gt;&#xA;&lt;p&gt;听起来是个好计划。让我们思考一下做到这一点的最佳方式。&lt;/p&gt;&#xA;&lt;p&gt;依靠公司收入生活的一个缺点是你必须持续经营它。任何经营自己业务的人都会告诉你，这需要你全神贯注。你不能只是在业务开始顺利后就撒手不管，否则它们会很快停止顺利发展。&lt;/p&gt;&#xA;&lt;p&gt;创业创始人的主要经济动机似乎是自由和安全。他们想要足够的钱，以便（a）不必担心钱用完，（b）可以按自己的意愿度过时间。经营自己的业务两者都不提供。你当然没有自由：没有老板如此苛刻。你也没有安全，因为如果你停止关注公司，收入就会消失，你的收入也会随之消失。&lt;/p&gt;&#xA;&lt;p&gt;对大多数人来说，最好的情况是，当公司发展到一定规模时，你能雇人替你管理。假设你能找到一个真正好的经理。那么你就能同时拥有自由和安全。你可以想对业务投入多少关注就投入多少，知道你的经理会让事情顺利运行。既然如此，收入会继续流入，所以你也会有安全感。&lt;/p&gt;&#xA;&lt;p&gt;当然会有一些创始人不喜欢这个想法：那些非常喜欢经营自己公司以至于没有其他更喜欢做的事情的人。但这个群体肯定很小。在大多数业务中成功的方法是狂热地关注客户需求。你自己的愿望与这个强大的外部力量的要求完全吻合的几率有多大？&lt;/p&gt;&#xA;&lt;p&gt;当然，经营自己的公司可能相当有趣。Viaweb比我以前做过的任何工作都更有趣。而且因为我从中赚了更多的钱，它提供了我做过的任何事情中收入与无聊感的最高比率，数量级差异很大。但这是我能想象的最有趣的工作吗？不是。&lt;/p&gt;&#xA;&lt;p&gt;处于相同位置的创始人数量是渐近的还是仅仅很大，肯定有很多这样的人。对他们来说，正确的方法是最终将公司交给职业经理人，如果他们能找到足够好的人的话。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;到目前为止一切顺利。但如果你的经理被公交车撞了怎么办？你真正想要的是一家管理公司来为你经营公司。这样你就不依赖任何一个人。&lt;/p&gt;&#xA;&lt;p&gt;如果你拥有租赁房产，你可以雇公司为你管理。有些公司会做所有事情，从寻找租户到修理漏水。当然，经营公司比管理租赁房产复杂得多，但让我们假设有管理公司可以为你做这件事。他们会收取很多费用，但这不是值得的吗？为了额外的安心，我愿意牺牲很大一部分收入。&lt;/p&gt;&#xA;&lt;p&gt;我意识到我描述的已经听起来好得令人难以置信，但我能想到一种方法让它更有吸引力。如果公司管理公司存在，它们可以为客户提供额外的服务：它们可以通过汇集风险来让客户确保回报。毕竟，即使完美的经理也无法在公司整个市场消亡时拯救公司，就像物业经理无法在大楼烧毁时拯救你一样。但管理足够多公司的公司可以向所有客户说：我们将合并你所有公司的收入，并支付你相应的份额。&lt;/p&gt;&#xA;&lt;p&gt;如果这样的管理公司存在，它们会提供最大程度的自由和安全。有人会为你经营公司，即使公司不幸倒闭，你也会受到保护。&lt;/p&gt;&#xA;&lt;p&gt;让我们思考这样的管理公司如何组织。最简单的方法是创造一种代表他们管理的公司总池的新股票。当你签约时，你会用你公司的股票换取这个池子的股份，比例基于双方同意的公司价值估计。然后你会自动获得整个池子回报的份额。&lt;/p&gt;&#xA;&lt;p&gt;问题在于这种交易很难撤销，你不能切换管理公司。但他们有一种解决方法：假设所有公司管理公司聚在一起并同意让他们的客户交换所有池子的股份。那么实际上，你可以同时选择所有管理公司以你想要的任何比例为你经营公司，并随心所欲地改变主意。&lt;/p&gt;&#xA;&lt;p&gt;如果这样的pooled-risk公司管理公司存在，对大多数遵循David建议路线的人来说，签约一个似乎是理想的计划。&lt;/p&gt;&#xA;&lt;p&gt;好消息：它们确实存在。我刚刚描述的是被上市公司收购。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;不幸的是，尽管收购者在结构上与pooled-risk公司管理公司相同，但他们并不这样看待自己。对于物业管理公司，你可以随时走进去说&amp;quot;为我管理我的租赁房产&amp;quot;，他们就会做。而收购者，在撰写本文时，极度善变。有时他们处于购买情绪，会大幅超额支付；有时他们不感兴趣。他们就像由疯子经营的物业管理公司。或者更准确地说，由本杰明·格雷厄姆的&amp;quot;市场先生&amp;quot;经营。&lt;/p&gt;&#xA;&lt;p&gt;所以虽然平均而言上市公司收购者表现得像pooled-risk公司经理，但你需要几年的时间窗口来获得平均情况表现。如果你等待足够长的时间（比如五年），你可能会遇到某个收购者热衷于购买你的上升周期。但你不能选择它何时发生。&lt;/p&gt;&#xA;&lt;p&gt;你不能假设投资者会支持你等待所需的时间。你的公司必须赚钱。关于多早开始关注这一点意见不一。Joe Kraus说你应该立即尝试向客户收费。然而，一些最成功的创业公司，包括谷歌，最初忽略收入，专门专注于开发。答案可能取决于你创办的公司类型。我可以想象在某些公司中，试图销售会是产品设计的好启发，而在其他公司中，这只会分散注意力。测试可能是它是否帮助你理解用户。&lt;/p&gt;&#xA;&lt;p&gt;你可以选择你认为最适合你创办的公司类型的收入策略，只要你是盈利的。盈利确保你至少获得收购市场的平均水平——在这种情况下，上市公司确实表现得像pooled-risk公司管理公司。&lt;/p&gt;&#xA;&lt;p&gt;David说应该创办公司依靠其收入生活并没有错。错误在于认为这在某种程度上与创办公司并出售它是对立的。事实上，对大多数人来说，后者只是前者的最佳情况。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;&lt;em&gt;感谢 Trevor Blackwell、Jessica Livingston、Michael Mandel、Robert Morris 和 Fred Wilson 阅读本文草稿。&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;俄文翻译&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>&#34;艺术家要发布&#34;的另一面</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/artistsship/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/artistsship/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/artistsship.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;艺术家要发布的另一面&#34;&gt;&amp;ldquo;艺术家要发布&amp;quot;的另一面&lt;/h1&gt;&#xA;&lt;p&gt;2008年11月&lt;/p&gt;&#xA;&lt;p&gt;大公司与创业公司之间的区别之一是，大公司往往已经制定了防止犯错的程序。创业公司走路就像幼儿，不断撞到东西，跌倒。大公司则更加谨慎。&lt;/p&gt;&#xA;&lt;p&gt;组织中审核的逐渐积累是一种学习，基于发生在自己或类似组织身上的灾难。例如，在与一个破产并无法交付的供应商签订合同后，公司可能会要求所有供应商在投标前证明自己有偿付能力。&lt;/p&gt;&#xA;&lt;p&gt;随着公司的发展，他们不可避免地会有更多这样的审核，要么是为了应对他们遭受的灾难，要么（可能更常见的是）通过从更大的公司雇佣带来新灾难防范习惯的人。&lt;/p&gt;&#xA;&lt;p&gt;组织从错误中学习是自然的。问题是，提出新审核的人几乎从不考虑审核本身有成本。&lt;/p&gt;&#xA;&lt;h2 id=&#34;每个审核都有成本&#34;&gt;每个审核都有成本。&lt;/h2&gt;&#xA;&lt;p&gt;例如，考虑让供应商验证其偿付能力的情况。这难道不是仅仅谨慎吗？但实际上它可能有巨大成本。显然，双方提供和检查供应商偿付能力证明的人有直接的时间成本。但真正的成本是你从未听说过的：本会是最佳供应商的公司，但因为无法腾出精力进行验证而没有投标。或者本会是最佳供应商的公司，但偿付能力却刚好低于门槛——当然这个门槛会被定得偏高，因为没有明显的提高成本。&lt;/p&gt;&#xA;&lt;p&gt;每当组织中有人提议添加新审核时，他们应该不仅解释收益，还要解释成本。无论他们分析得多么糟糕，这个元审核至少会提醒每个人必须存在成本，并让他们去寻找它。&lt;/p&gt;&#xA;&lt;p&gt;如果公司开始这样做，他们会发现一些意外。Joel Spolsky最近在Y Combinator谈到向企业客户销售软件。他说，在大多数公司中，成本高达约1000美元的软件可以由个人经理无需任何额外批准购买。超过这个门槛，软件购买通常必须由委员会批准。但是为软件供应商处理这个过程如此昂贵，以至于收费少于50000美元没有意义。这意味着如果你制造了一个本来可能收费5000美元的东西，你必须以50000美元的价格出售。&lt;/p&gt;&#xA;&lt;p&gt;委员会的目的是确保公司不浪费钱。然而结果是公司支付了10倍的价格。&lt;/p&gt;&#xA;&lt;p&gt;购买审核总是昂贵的，因为向你销售东西越困难，它就必须成本越高。而且不是线性的。如果你足够难以销售，最擅长制造东西的人根本不想费心。唯一会向你销售的是专门向你销售的公司。那么你已经陷入了全新的低效率水平。市场机制不再保护你，因为好的供应商已经不在市场上了。&lt;/p&gt;&#xA;&lt;p&gt;这样的事情不断发生在所有最大的组织中，政府。但政府实施的审核可能导致的问题不仅仅是多付钱。政府实施的审核可能破坏整个国家的经济。直到大约1400年，中国比欧洲更富有，技术更先进。欧洲超越的一个原因是中国政府限制了长途贸易航行。因此欧洲人开始探索并最终主导世界其他地区，包括中国。&lt;/p&gt;&#xA;&lt;p&gt;在更近的时代，《萨班斯-奥克斯利法案》实际上摧毁了美国IPO市场。这不是立法者的意图。他们只是想为上市公司添加更多审核。但他们忘记了考虑成本。他们忘记了即将上市的公司通常相当紧张，而对通用电气来说可能容易承受的几个额外审核的重量，足以阻止年轻公司上市。&lt;/p&gt;&#xA;&lt;p&gt;一旦你开始思考审核的成本，你就可以开始问其他有趣的问题。成本是在增加还是减少？在某些地区是否比其他地区高？哪里会不连续地增加？如果大型组织开始问这样的问题，他们会学到一些令人恐惧的事情。&lt;/p&gt;&#xA;&lt;h2 id=&#34;我认为审核的成本实际上可能在增加&#34;&gt;我认为审核的成本实际上可能在增加。&lt;/h2&gt;&#xA;&lt;p&gt;原因是软件在公司中扮演着越来越重要的角色，而编写软件的人特别受到审核的伤害。&lt;/p&gt;&#xA;&lt;p&gt;程序员与许多类型的工人不同，最好的程序员实际上更愿意努力工作。在大多数类型的工作中似乎并非如此。当我在快餐店工作时，我们并不喜欢繁忙时段。当我过去修剪草坪时，我绝对不喜欢一周下雨后草长得很长的时候。&lt;/p&gt;&#xA;&lt;p&gt;然而，程序员在写更多代码时更喜欢。或者更准确地说，在发布更多代码时更喜欢。程序员喜欢做出改变。好的程序员，无论如何。&lt;/p&gt;&#xA;&lt;p&gt;对于好的程序员来说，为创业公司工作的最大好处之一是发布的审核很少。在真正的创业公司中，根本没有外部审核。如果你早上有一个新功能的想法，你可以在午餐前编写它并将其推送到生产服务器。当你能做到这一点时，你会有更多想法。&lt;/p&gt;&#xA;&lt;p&gt;在大公司，软件必须经过各种批准才能发布。这样做的成本可能是巨大的——实际上是不连续的。最近我和三个程序员交谈，他们的创业公司几年前被一家大公司收购。当他们独立时，他们可以立即发布更改。现在，他们说，他们能在生产服务器上发布代码的最快速度是两周。&lt;/p&gt;&#xA;&lt;p&gt;这不仅让他们生产力降低。这让他们讨厌为收购者工作。&lt;/p&gt;&#xA;&lt;p&gt;这里是程序员多么喜欢能够努力工作的一个迹象：这些人会付钱来立即发布代码，像过去那样。我问他们是否愿意用收购价的10%来换取立即发布代码的能力，三个人立即说愿意。然后我问他们愿意用收购价的最大百分比来换取它。他们说他们不想思考，因为他们不想知道自己会多高，但我得到的印象可能高达一半。&lt;/p&gt;&#xA;&lt;p&gt;他们会牺牲数十万，也许是数百万美元，只是为了能够向用户交付更多软件。你知道吗？让他们这样做是完全安全的。事实上，收购者会更好；这些人不仅不会破坏任何东西，他们会完成更多工作。所以收购者实际上以更高的成本获得了更差的绩效。就像批准软件购买的委员会一样。&lt;/p&gt;&#xA;&lt;p&gt;正如难以销售的最大危险不是你多付钱，而是最好的供应商甚至不会向你销售，对程序员应用太多审核的最大危险不是你会让他们不高效，而是好的程序员甚至不想为你工作。&lt;/p&gt;&#xA;&lt;p&gt;史蒂夫·乔布斯著名的格言&amp;quot;艺术家要发布&amp;quot;有两个方面。艺术家不仅能够发布。他们坚持要发布。所以如果你不让人发布，你就不会有任何艺术家。&lt;/p&gt;</description>
    </item>
    <item>
      <title>6,631,372</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/6631327/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/6631327/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/6631327.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;6631372&#34;&gt;6,631,372&lt;/h1&gt;&#xA;&lt;p&gt;6,631,372 2006年3月，修订于2009年8月&lt;/p&gt;&#xA;&lt;p&gt;几天前，我惊讶地发现我被授予了一项专利。它在2003年颁发，但没有人告诉我。如果不是几个月前访问雅虎时，我碰巧遇到了一个我在90年代末在那里工作时认识的大人物，我现在还不知道这件事。他提到了一个叫做收入循环（Revenue Loop）的东西，这是Viaweb在被他们收购时正在研发的东西。&lt;/p&gt;&#xA;&lt;p&gt;这个想法基本上是，你不按文本&amp;quot;相关性&amp;quot;（如搜索引擎当时那样）排序搜索结果，也不按广告商出价（如Overture那样）排序，而是按出价乘以交易数量来排序。通常你会对购物搜索这样做，但事实上，我们方案的一个特点是它会自动检测哪些搜索是购物搜索。&lt;/p&gt;&#xA;&lt;p&gt;如果你只按出价排序结果，你可能会使搜索结果变得无用，因为前面的结果可能被那些出价最高的蹩脚网站占据。但如果你按出价乘以交易数量排序，远不是出卖，你得到了一个更好的相关性衡量标准。还有什么比访问网站并购买某物更能表明某人对搜索结果满意呢？&lt;/p&gt;&#xA;&lt;p&gt;当然，这个算法自动最大化搜索引擎的收入。&lt;/p&gt;&#xA;&lt;p&gt;现在每个人都专注于这种方法，但在1998年很少有人这样做。1998年都是关于销售横幅广告。我们不知道这一点，所以当我们发现看起来是进行购物搜索的最佳方式时，我们非常兴奋。&lt;/p&gt;&#xA;&lt;p&gt;当雅虎考虑收购我们时，我们在纽约与杨致远见了面。我现在意识到，对他来说，这应该是那些会议之一，你去考察一个你已经基本决定收购的公司，只是确保他们是不错的人。我们被期望的不过是聊天，显得聪明和合理。当我跳到白板上开始展示我们令人兴奋的新技术时，他一定感到沮丧。&lt;/p&gt;&#xA;&lt;p&gt;当他看起来完全不在意时，我也同样沮丧。当时我想，&amp;ldquo;天哪，这家伙真是扑克脸。我们向他展示的必须是排序产品搜索结果的最佳方式，而他甚至不好奇。&amp;ldquo;直到很久以后我才明白他为什么不在意。1998年，广告商为网站广告支付的费用过高。1998年，如果广告商支付流量对他们的最大价值，雅虎的收入就会减少。&lt;/p&gt;&#xA;&lt;p&gt;当然，现在情况不同了。现在这种事情很流行。所以当几个月前在雅虎食堂遇到我从前的雅虎高管时，他记得的第一件事不是（幸运的是）我与他所有的争吵，而是收入循环。&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;嗯，&amp;ldquo;我说，&amp;ldquo;我想我们确实为此申请了专利。我不确定我离开后申请发生了什么。&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;真的吗？那将是一个重要的专利。&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;所以有人调查了一下，果然，那项专利申请在之后的几年里继续进行，最终在2003年获得批准。&lt;/p&gt;&#xA;&lt;p&gt;实际上，阅读时让我感到震惊的主要是，律师在某个时候搞乱了我清晰明了的写作。某个聪明的拼写检查用户将其中一部分变成了禅宗般的不可理解：&lt;/p&gt;&#xA;&lt;p&gt;此外，常见的拼写错误将趋于修复。例如，如果搜索&amp;quot;compact disc player&amp;quot;的用户最终在提供compact disc players的网站上花费了大量金钱，那么这些页面对于该搜索短语将具有更高的相关性，即使短语&amp;quot;compact disc player&amp;quot;不存在于那些页面上。（那个&amp;quot;compat disc player&amp;quot;不是拼写错误，伙计们。）&lt;/p&gt;&#xA;&lt;p&gt;想要看到原始的优美散文，请参见1998年2月的临时申请，那时我们还是Viaweb，负担不起付钱给律师把每一个&amp;quot;a lot of&amp;quot;变成&amp;quot;considerable&amp;rdquo;。&lt;/p&gt;&#xA;&lt;hr&gt;</description>
    </item>
    <item>
      <title>Airbnb</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/airbnb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/airbnb/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/airbnb.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;airbnb&#34;&gt;Airbnb&lt;/h1&gt;&#xA;&lt;p&gt;主题：Airbnb 2011年3月&lt;/p&gt;&#xA;&lt;p&gt;昨天Fred Wilson发表了一篇关于错过Airbnb的引人注目的文章。风险投资家错过好的初创公司是很常见的事，但一个人在事后很长时间之前公开谈论这件事是极其罕见的。所以那篇文章进一步证明了Fred是多么难得的人物。他可能是我认识的最友好的风险投资家。&lt;/p&gt;&#xA;&lt;p&gt;阅读Fred的文章让我回顾了当时我与他的邮件交流，试图说服他投资Airbnb。阅读起来相当有趣。你可以看到Fred的思路在他围绕这笔交易盘旋时的工作方式。&lt;/p&gt;&#xA;&lt;p&gt;Fred和Airbnb创始人们慷慨地同意让我发布这封邮件交流（关于对Airbnb具有战略重要性且不是对话重要部分的一句话被编辑删除）。这是一个很少除了参与者能看到的企业生态系统中一个元素的有趣说明：投资者试图说服彼此投资他们的投资组合公司。现在正在发生数百甚至数千次这种类型的对话，但如果曾经有被发布过，我还没有看到。Airbnb团队当时甚至没有看到这些邮件。&lt;/p&gt;&#xA;&lt;p&gt;我们在YC做了很多幕后工作，因为我们投资了如此大量的公司，而且我们投资得如此之早，以至于投资者有时需要大量的说服才能看到它们的价值。我并不总是像这样努力尝试。Fred肯定觉得我很烦人。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;发件人：&lt;/strong&gt; Paul Graham&#xA;&lt;strong&gt;收件人：&lt;/strong&gt; Fred Wilson, AirBedAndBreakfast Founders&#xA;&lt;strong&gt;日期：&lt;/strong&gt; 2009年1月23日星期五上午11:42&#xA;&lt;strong&gt;主题：&lt;/strong&gt; 认识airbed团队&lt;/p&gt;&#xA;&lt;p&gt;刚刚开始的一批初创公司中的一家，AirbedAndBreakfast，现在在纽约与他们的用户会面。（纽约是他们最大的市场。）如果你的日程安排允许，我建议见见他们。&lt;/p&gt;&#xA;&lt;p&gt;我一直在想，虽然这些人会做得很好，但我应该把他们介绍给天使投资人，因为风险投资家绝不会对它感兴趣。但后来我想也许我应该给你更多的信任。你肯定会喜欢见他们的。一定要问问他们是如何用早餐麦片为自己融资的。&lt;/p&gt;&#xA;&lt;p&gt;没有理由说这不能像Ebay那样大。而这个团队是做这件事的合适人选。&lt;/p&gt;&#xA;&lt;p&gt;&amp;ndash;pg&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;发件人：&lt;/strong&gt; Brian Chesky&#xA;&lt;strong&gt;收件人：&lt;/strong&gt; Paul Graham&#xA;&lt;strong&gt;抄送：&lt;/strong&gt; Nathan Blecharczyk, Joe Gebbia&#xA;&lt;strong&gt;日期：&lt;/strong&gt; 2009年1月23日星期五上午11:40&#xA;&lt;strong&gt;主题：&lt;/strong&gt; Re：认识airbed团队&lt;/p&gt;&#xA;&lt;p&gt;PG，&lt;/p&gt;&#xA;&lt;p&gt;谢谢介绍！&lt;/p&gt;&#xA;&lt;p&gt;Brian&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;发件人：&lt;/strong&gt; Paul Graham&#xA;&lt;strong&gt;收件人：&lt;/strong&gt; Brian Chesky&#xA;&lt;strong&gt;抄送：&lt;/strong&gt; Nathan Blecharczyk, Joe Gebbia&#xA;&lt;strong&gt;日期：&lt;/strong&gt; 2009年1月23日星期五下午12:38&#xA;&lt;strong&gt;主题：&lt;/strong&gt; Re：认识airbed团队&lt;/p&gt;&#xA;&lt;p&gt;在这个阶段，这是一个长线投资，但如果有一个风险投资家会理解你们，那就是Fred。他是我认识的最不喜欢郊区打高尔夫的风险投资家。&lt;/p&gt;&#xA;&lt;p&gt;他喜欢在行动之前观察初创公司一段时间，所以如果他显得犹豫不决，不要感到沮丧。&lt;/p&gt;&#xA;&lt;p&gt;&amp;ndash;pg&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;发件人：&lt;/strong&gt; Fred Wilson&#xA;&lt;strong&gt;收件人：&lt;/strong&gt; Paul Graham&#xA;&lt;strong&gt;日期：&lt;/strong&gt; 2009年1月25日星期日下午5:28&#xA;&lt;strong&gt;主题：&lt;/strong&gt; Re：认识airbed团队&lt;/p&gt;</description>
    </item>
    <item>
      <title>Airbnb团队</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/airbnbs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/airbnbs/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/airbnbs.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;airbnb团队&#34;&gt;Airbnb团队&lt;/h1&gt;&#xA;&lt;p&gt;2020年12月&lt;/p&gt;&#xA;&lt;p&gt;为了庆祝Airbnb的IPO并帮助未来的创始人，我认为解释一下Airbnb的特别之处可能会有用。&lt;/p&gt;&#xA;&lt;p&gt;Airbnb的特别之处在于他们有多么认真。他们做事从不半途而废，我们在面试中就能感觉到这一点。有时面试完一家初创公司后，我们会不确定该怎么做，需要商量一下。有时我们只会相视而笑。Airbnb的面试就是后者。我们甚至不太喜欢他们的想法。在那个阶段，用户也不喜欢；他们没有增长。但创始人们似乎充满能量，让人不可能不喜欢他们。&lt;/p&gt;&#xA;&lt;p&gt;第一印象并没有误导人。在那批项目中，我们给Brian Chesky起的绰号是塔斯马尼亚恶魔，因为就像卡通角色一样，他似乎是一场能量旋风。他们三个人都是这样。在YC期间，没有人比Airbnb团队更努力。当你和Airbnb团队谈话时，他们会做笔记。如果你在办公时间向他们提出一个想法，下次你和他们谈话时，他们不仅已经实现了它，还实现了在这个过程中想到的两个新想法。&amp;ldquo;他们可能拥有我们资助过的任何初创公司中最好的态度&amp;rdquo;，我在那批项目中写给Mike Arrington。&lt;/p&gt;&#xA;&lt;p&gt;他们现在仍然是这样。2018年夏天，Jessica和我和Brian一起吃了晚饭，就我们三个人。此时公司已经十岁了。他写了一页笔记，记录Airbnb可以做的新事物的想法。&lt;/p&gt;&#xA;&lt;p&gt;当我们第一次见到Brian、Joe和Nate时，我们没有意识到Airbnb已经奄奄一息了。在公司工作一年却没有增长后，他们同意给它最后一次机会。他们会试试这个Y Combinator的东西，如果公司仍然没有起飞，他们就放弃。&lt;/p&gt;&#xA;&lt;p&gt;任何正常人都会已经放弃了。他们一直用信用卡为公司提供资金。他们有一个装满了刷爆的信用卡的活页夹。投资者不太看好这个想法。他们在咖啡馆见到的一个投资者在会议中途走了出去。他们以为他是去洗手间，但他再也没有回来。&amp;ldquo;他甚至没有喝完他的冰沙，&amp;ldquo;Brian说。而现在，在2008年末，这是几十年来最严重的衰退。股市自由落体，还要四个月才会触底。&lt;/p&gt;&#xA;&lt;p&gt;他们为什么没有放弃？这是一个有用的问题。人，像物质一样，在极端条件下会显现本性。清楚的一点是，他们这样做不仅仅是为了钱。作为一个赚钱计划，这相当糟糕：一年的工作，他们能展示的只是一个装满了刷爆的信用卡的活页夹。那么他们为什么还在为这家初创公司工作？因为他们作为第一批房东的经历。&lt;/p&gt;&#xA;&lt;p&gt;当他们第一次在设计大会期间尝试在地板上出租气垫床时，他们所希望的只是赚足够的钱支付那个月的房租。但发生了一些令人惊讶的事情：他们喜欢让第一批三位客人住在他们那里。客人们也很喜欢。他们和客人们这样做都是在某种意义上被迫的，然而他们都有很棒的体验。显然这里有新的东西：对房东来说，是一种新的赚钱方式，就在他们眼皮底下；对客人来说，是一种新的旅行方式，在很多方面比酒店更好。&lt;/p&gt;&#xA;&lt;p&gt;这就是Airbnb团队没有放弃的原因。他们知道自己发现了什么。他们看到了未来的一瞥，他们无法放手。&lt;/p&gt;&#xA;&lt;p&gt;他们知道一旦人们尝试住在现在所谓的&amp;quot;airbnb&amp;quot;中，他们也会意识到这就是未来。但只有他们尝试了，而他们没有。这就是Y Combinator期间的问题：开始增长。&lt;/p&gt;&#xA;&lt;p&gt;Airbnb在YC期间的目标是达到我们称之为拉面盈利的状态，这意味着公司赚足够的钱来支付创始人的生活费用，如果他们靠拉面生活的话。拉面盈利显然不是任何初创公司的最终目标，但这是路上最重要的门槛，因为这是你起飞的点。这是你不再需要投资者许可才能继续存在的点。对Airbnb来说，拉面盈利是一个月4000美元：3500美元房租，500美元食物。他们把这个目标贴在公寓浴室的镜子上。&lt;/p&gt;&#xA;&lt;p&gt;在像Airbnb这样的东西中开始增长的方法是专注于市场中最热的子集。如果你能在那里开始增长，它会传播到其他地方。当我问Airbnb团队哪里需求最大时，他们从搜索中知道：纽约市。所以他们专注于纽约。他们亲自去那里拜访房东，帮助他们使他们的房源更有吸引力。一个重要部分是更好的照片。所以Joe和Brian租了一台专业相机，亲自为房东的地方拍照。&lt;/p&gt;&#xA;&lt;p&gt;这不仅使房源更好。它还教会了他们关于房东的事情。当他们从第一次纽约之行回来时，我问他们注意到的关于房东的让他们惊讶的事情是什么，他们说最大的惊喜是有多少房东和他们曾经处于同样的境地：他们需要这笔钱来支付房租。记住，这是几十年来最严重的衰退，而且纽约最先受到打击。感到人们需要他们 definitely 增加了Airbnb团队的使命感。&lt;/p&gt;&#xA;&lt;p&gt;2009年1月下旬，大约在Y Combinator开始三周后，他们的努力开始显示结果，他们的数字向上攀升。但很难确定这是增长还是只是随机波动。到了2月，很明显这是真正的增长。他们在2月第一周赚取了460美元费用，第二周897美元，第三周1428美元。就是这样：他们起飞了。Brian在2月22日给我发了一封邮件，宣布他们已经拉面盈利，并给出了过去三周的数字。&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;我假设你知道你现在为下周设定了什么，&amp;ldquo;我回应道。&lt;/p&gt;&#xA;&lt;p&gt;Brian的回复是七个字：&amp;ldquo;我们不会放慢脚步。&amp;rdquo;&lt;/p&gt;</description>
    </item>
    <item>
      <title>ANSI Common Lisp 简介</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/acl1txtt1748944359/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/acl1txtt1748944359/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/acl1txtt1748944359.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;ansi-common-lisp-简介&#34;&gt;ANSI Common Lisp 简介&lt;/h1&gt;&#xA;&lt;p&gt;ANSI Common Lisp 简介&lt;/p&gt;&#xA;&lt;p&gt;（这是Paul Graham的《ANSI Common Lisp》一书的第一章。版权1995年，Prentice-Hall。）&lt;/p&gt;&#xA;&lt;h2 id=&#34;介绍&#34;&gt;介绍&lt;/h2&gt;&#xA;&lt;p&gt;John McCarthy和他的学生于1958年开始在第一个Lisp实现上工作。除了Fortran之外，Lisp是仍在使用的最古老的语言。[1] 更值得注意的是，它仍然处于编程语言技术的前沿。了解Lisp的程序员会告诉你，这种语言有某种独特之处。&lt;/p&gt;&#xA;&lt;p&gt;Lisp的独特之处部分在于它被设计为可进化的。你可以使用Lisp来定义新的Lisp操作符。当新的抽象变得流行时（例如面向对象编程），事实证明在Lisp中实现它们总是很容易的。像DNA这样的语言不会过时。&lt;/p&gt;&#xA;&lt;h2 id=&#34;新工具&#34;&gt;新工具&lt;/h2&gt;&#xA;&lt;p&gt;为什么学习Lisp？因为它让你做其他语言做不到的事情。如果你只是想写一个返回小于n的数字之和的函数，在Lisp和C中看起来会非常相似：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-lisp&#34; data-lang=&#34;lisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;; Lisp&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(defun sum (n)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  (&lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; ((s &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (dotimes (i n s)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      (incf s i))))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;/* C */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;sum&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; n){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;int&lt;/span&gt; i, s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt;(i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; n; i&lt;span style=&#34;color:#f92672&#34;&gt;++&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    s &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; i;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;(s);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果你只需要做这样的简单事情，你使用哪种语言并不重要。假设相反，你想写一个函数，它接受一个数字n，并返回一个将n加到其参数上的函数：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-lisp&#34; data-lang=&#34;lisp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;; Lisp&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(defun addn (n)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;#&amp;#39;&lt;/span&gt;(lambda (x) (&lt;span style=&#34;color:#a6e22e&#34;&gt;+&lt;/span&gt; x n)))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;addn在C中是什么样的？你根本写不出来。&lt;/p&gt;&#xA;&lt;p&gt;你可能会想知道，什么时候有人会想做这样的事情？编程语言教会你不要渴望它们不能提供的东西。你必须用一种语言思考才能用其编写程序，很难渴望你无法描述的东西。当我开始编写程序时——使用Basic——我不想念递归，因为我不知道有这样的东西。我用Basic思考。我只能构想迭代算法，为什么要想念递归？&lt;/p&gt;&#xA;&lt;p&gt;如果你不怀念词法闭包（这就是前面例子中制作的东西），暂时相信Lisp程序员一直使用它们。很难找到任何长度的Common Lisp程序不利用闭包。到第112页，你自己也会使用它们。而闭包只是我们在其他语言中找不到的抽象之一。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Java的外衣</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/javacover/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/javacover/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/javacover.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;java的外衣&#34;&gt;Java的外衣&lt;/h1&gt;&#xA;&lt;p&gt;2001年4月&lt;/p&gt;&#xA;&lt;p&gt;这篇文章源于我与几位程序员关于Java为何气味可疑的对话。这不是对Java的批判！这是黑客雷达的一个案例研究。&lt;/p&gt;&#xA;&lt;p&gt;随着时间的推移，黑客对好（和坏）技术培养出了一种嗅觉。我想试着写下是什么让Java对我来说似乎可疑，这可能会很有趣。&lt;/p&gt;&#xA;&lt;p&gt;一些读过这篇文章的人认为这是试图以前所未有的方式写一些有趣的事情。其他人说我将因为看起来写我不理解的东西而陷入麻烦。所以，以防万一有任何好处，让我澄清我在这里不是在写Java（我从未使用过），而是在写黑客雷达（我对此思考很多）。&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;不能凭封面判断一本书&amp;quot;这句格言起源于书籍用普通纸板封面出售的时代，由每个购买者根据自己的品味装订。在那个时代，你不能凭封面判断一本书。但出版业从那时起进步了：现在的出版商努力使封面成为你可以判断一本书的依据。&lt;/p&gt;&#xA;&lt;p&gt;我花了很多时间在书店，我觉得我现在已经学会理解出版商想要告诉我关于一本书的一切，可能还有更多。我没有在书店度过的时间主要花在电脑前，我觉得我在某种程度上已经学会了通过封面来判断技术。这可能只是运气，但我已经让自己避免了一些最终被证明是真正糟糕的技术。&lt;/p&gt;&#xA;&lt;p&gt;到目前为止，Java对我来说似乎很糟糕。我从未写过Java程序，从未看过关于它的参考书，但我有一个预感，它不会是一种非常成功的语言。我可能被证明是错的；对技术做出预测是危险的事情。但作为某种时间胶囊，就其价值而言，这就是为什么我不喜欢Java的外观：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;它被如此热情地炒作。真正的标准不需要被推广。没有人需要推广C、Unix或HTML。真正的标准在大多数人听到它之前就已经建立了。在黑客雷达屏幕上，Perl和Java一样大，或者更大，仅仅是凭借自身的优点。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;它的目标很低。在最初的Java白皮书中，Gosling明确表示Java的设计对习惯C的程序员来说不会太困难。它被设计成另一个C++：C加上一些从更高级语言中借来的想法。就像情景喜剧、垃圾食品或包价旅游的创造者一样，Java的设计者有意识地为不如他们聪明的人设计产品。历史上，为他人使用而设计的语言都很糟糕：Cobol、PL/I、Pascal、Ada、C++。好的语言是那些为自己的设计者设计的：C、Perl、Smalltalk、Lisp。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;它有不可告人的动机。有人说过，如果人们只在有话要说时才写书，而不是因为想写书，世界会变得更美好。同样，我们一直听到Java的原因不是因为它对编程语言有什么要说的。我们听到Java作为Sun公司削弱微软计划的一部分。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;没有人喜欢它。C、Perl、Python、Smalltalk和Lisp程序员都喜欢他们的语言。我从未听任何人说过他们喜欢Java。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;人们被迫使用它。我认识的许多使用Java的人使用它是因为他们觉得必须这样做。要么是他们觉得为了获得资助必须这样做，要么是他们认为客户会想要，要么是管理层告诉他们要这样做。这些都是聪明人；如果技术好，他们会自愿使用它。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;它有太多的厨师。最好的编程语言是由小团体开发的。Java似乎是由一个委员会管理的。如果它最终成为一种好语言，这将是历史上委员会第一次设计出好语言。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;它是官僚主义的。据我对Java的一点点了解，似乎有很多做事的协议。真正的好语言不是那样的。它们让你做你想做的事，然后让路。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;它是伪时髦的。Sun现在假装Java是一种像Perl或Python那样的草根、开源语言努力。这个恰好由一家大公司控制。所以这种语言很可能具有与大公司生产的任何东西相同的单调笨重。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;它是为大型组织设计的。大型组织的目标与黑客不同。他们想要适合大型平庸程序员团队使用的语言——具有像U-Haul卡车中的限速器那样的功能，防止傻瓜造成太大损害。黑客不喜欢对他们居高临下的语言。黑客只想要力量。历史上，为大型组织设计的语言（PL/I、Ada）都失败了，而黑客语言（C、Perl）获胜了。原因：今天的青少年黑客是明天的CTO。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;错误的人喜欢它。我最钦佩的程序员整体上没有被Java迷住。谁喜欢Java？西装革履的人，不知道一种语言与另一种的区别，但知道他们在媒体上不断听到Java；大公司的程序员，惊讶地发现还有比C++更好的东西；以及即插即用的本科生，准备好喜欢任何可能让他们找到工作的东西（这会考试吗？）。这些人的意见随风而变。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;它的爸爸陷入困境。Sun的商业模式正受到两方面的侵蚀。与台式机相同类型的廉价Intel处理器现在对服务器来说已经足够快了。而且FreeBSD似乎至少与Solaris一样适合作为服务器操作系统。Sun的广告暗示你需要Sun服务器用于工业级应用程序。如果这是真的，Yahoo会第一个排队购买Sun；但当我在那里工作时，服务器都是运行FreeBSD的Intel盒子。这对Sun的未来是个坏兆头。如果Sun遇到麻烦，他们可能会把Java拖下水。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;国防部喜欢它。国防部鼓励开发者使用Java。这在我看来是最 damning 的迹象。国防部的国防工作做得很好（虽然昂贵），但他们喜欢计划、程序和协议。他们的文化与黑客文化相反；在软件问题上他们往往会下错注。国防部最后一次真正喜欢一种编程语言是Ada。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;请记住，这不是对Java的批判，而是对其外衣的批判。我对Java的了解还不足以喜欢或不喜欢它。这只是为什么我不觉得急于学习它的解释。&lt;/p&gt;&#xA;&lt;p&gt;在尝试用一种语言编写程序之前就将其 dismissed 可能看起来 cavalier。但这是所有程序员都必须做的事情。外面的技术太多了，无法全部学习。你必须学会通过外部迹象来判断哪些值得你花时间。我同样 cavalier 地 dismissed 了Cobol、Ada、Visual Basic、IBM AS400、VRML、ISO 9000、SET协议、VMS、Novell Netware和CORBA等。它们只是气味不对。&lt;/p&gt;&#xA;&lt;p&gt;在Java的情况下我可能错了。可能一种由一家大公司推广以削弱另一家大公司、由委员会为&amp;quot;主流&amp;quot;受众设计、被炒作到天际、国防部喜欢的语言，碰巧是一种我会喜欢编程的干净、美丽、强大的语言。可能，但这似乎非常不可能。&lt;/p&gt;&#xA;&lt;p&gt;Trevor Re: Java&amp;rsquo;s Cover | Berners-Lee Re: Java | Being Popular | Sun Internal Memo | 2005: BusinessWeek Agrees&lt;/p&gt;&#xA;&lt;p&gt;日语翻译&lt;/p&gt;</description>
    </item>
    <item>
      <title>Lisp的不同之处</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/diff/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/diff/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/diff.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;lisp的不同之处&#34;&gt;Lisp的不同之处&lt;/h1&gt;&#xA;&lt;p&gt;2001年12月（修订于2002年5月）&lt;/p&gt;&#xA;&lt;p&gt;（本文是回应LL1邮件列表上一些问题而产生的。现在已收录在《书呆子的复仇》中。）&lt;/p&gt;&#xA;&lt;p&gt;当McCarthy在1950年代末设计Lisp时，它是对现有语言的彻底突破，其中最重要的是Fortran。&lt;/p&gt;&#xA;&lt;p&gt;Lisp体现了九个新思想：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;条件语句。&lt;/strong&gt; 条件语句是if-then-else结构。现在我们认为这是理所当然的。它们是McCarthy在开发Lisp过程中发明的。（当时的Fortran只有条件goto，紧密基于底层硬件的分支指令。）McCarthy是Algol委员会的成员，他将条件语句引入Algol，随后传播到大多数其他语言。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;函数类型。&lt;/strong&gt; 在Lisp中，函数是一等对象——它们是一种数据类型，就像整数、字符串等，并且有字面表示，可以存储在变量中，可以作为参数传递，等等。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;递归。&lt;/strong&gt; 递归当然在Lisp之前作为数学概念存在，但Lisp是第一个支持递归的编程语言。（可以说这在使函数成为一等对象中是隐含的。）&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;变量的新概念。&lt;/strong&gt; 在Lisp中，所有变量实际上都是指针。具有类型的是值，而不是变量，赋值或绑定变量意味着复制指针，而不是它们指向的内容。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;垃圾回收。&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;由表达式组成的程序。&lt;/strong&gt; Lisp程序是表达式的树，每个表达式都返回一个值。（在某些Lisp中，表达式可以返回多个值。）这与Fortran和大多数后续语言形成对比，后者区分表达式和语句。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;在Fortran中有这种区别是很自然的，因为（在输入格式为打孔卡的语言中不足为奇）该语言是面向行的。你不能嵌套语句。因此，虽然你需要表达式来进行数学运算，但让其他任何东西返回值都没有意义，因为不可能有任何东西在等待它。&lt;/p&gt;&#xA;&lt;p&gt;随着块结构语言的出现，这个限制消失了，但那时已经太晚了。表达式和语句的区别已经根深蒂固。它从Fortran传播到Algol，然后传播到它们的后代。&lt;/p&gt;&#xA;&lt;p&gt;当一种语言完全由表达式构成时，你可以任意组合表达式。你可以说（使用Arc语法）&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;(if foo (= x 1) (= x 2))&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;或者&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;(= x (if foo 1 2))&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;7&#34;&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;符号类型。&lt;/strong&gt; 符号与字符串的不同在于你可以通过比较指针来测试相等性。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;使用符号树表示代码的记号。&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;整个语言始终可用。&lt;/strong&gt; 读取时间、编译时间和运行时间之间没有真正的区别。你可以在读取时编译或运行代码，在编译时读取或运行代码，在运行时读取或编译代码。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;在读取时运行代码允许用户重新编程Lisp的语法；在编译时运行代码是宏的基础；在运行时编译是Lisp用作扩展语言的基础，如在Emacs等程序中；在运行时读取使程序能够使用s表达式进行通信，这个想法最近被重新发明为XML。&lt;/p&gt;&#xA;&lt;p&gt;当Lisp首次发明时，所有这些想法都与当时的普通编程实践相去甚远，后者主要由1950年代末可用的硬件决定。&lt;/p&gt;&#xA;&lt;p&gt;随着时间的推移，体现在一系列流行语言中的默认语言逐渐向Lisp演变。1-5现在已经广泛传播。6开始出现在主流中。Python具有7的一种形式，尽管似乎没有任何语法支持它。8（与9一起）是使Lisp宏成为可能的特性，到目前为止仍然是Lisp独有的，也许是因为（a）它需要那些括号，或者同样糟糕的东西，（b）如果你添加这最后的力量增量，你不能再声称发明了一种新语言，而只是设计了一种新的Lisp方言 ;-)&lt;/p&gt;&#xA;&lt;p&gt;虽然对当今的程序员有用，但通过描述Lisp与其他语言采用的随机权宜之计的差异来描述它是很奇怪的。这可能不是McCarthy对它的看法。Lisp不是设计来修复Fortran中的错误；它更像是试图将计算公理化的副产品。&lt;/p&gt;&#xA;&lt;p&gt;相关链接：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.aoky.net/articles/paul_graham/what_made_lisp_different_japanese.htm&#34;&gt;日语翻译&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Lisp的根源</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/rootsoflisp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/rootsoflisp/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/rootsoflisp.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;lisp的根源&#34;&gt;Lisp的根源&lt;/h1&gt;&#xA;&lt;p&gt;2001年5月&lt;/p&gt;&#xA;&lt;p&gt;（我写这篇文章是为了帮助自己准确理解McCarthy的发现。你不需要知道这些东西来用Lisp编程，但对于想要理解Lisp本质的人来说——无论是从起源还是语义核心的角度——这应该是有帮助的。Lisp拥有这样一个核心是其区别于其他语言的特征之一，也是为什么与其他语言不同，Lisp有方言的原因。）&lt;/p&gt;&#xA;&lt;p&gt;1960年，John McCarthy发表了一篇非凡的论文，他在编程领域做了类似于欧几里得对几何学所做的事情。他展示了，给定一些简单的操作符和函数表示法，如何构建一个完整的编程语言。他称这种语言为Lisp，即&amp;quot;列表处理&amp;quot;，因为他的一个关键想法是使用一种称为列表的简单数据结构来同时表示代码和数据。&lt;/p&gt;&#xA;&lt;p&gt;值得理解McCarthy的发现，不仅作为计算机史上的里程碑，而且作为我们时代编程发展方向的模型。在我看来，迄今为止有两个真正干净、一致的编程模型：C模型和Lisp模型。这两个模型似乎像是高地，之间是沼泽般的低地。随着计算机变得越来越强大，正在开发的新语言一直在稳步向Lisp模型移动。过去20年来，新编程语言的一个流行配方是采用C计算模型，然后零散地添加从Lisp模型中提取的部分，如运行时类型和垃圾收集。&lt;/p&gt;&#xA;&lt;p&gt;在这篇文章中，我将尝试用最简单的术语解释McCarthy的发现。重点不仅仅是了解某人40年前想出的一个有趣的理论结果，而是展示语言的发展方向。Lisp的不寻常之处——事实上，Lisp的定义性特征——是它可以用自身来编写。要理解McCarthy的意思，我们将追溯他的步骤，将他的数学表示法转换为运行的Common Lisp代码。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;&lt;em&gt;注意：这似乎是一篇较长文章的介绍或摘要。全文可能作为PostScript文件提供，在原始来源中链接为&amp;quot;Complete Article (Postscript)&amp;quot;。&lt;/em&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;&lt;strong&gt;相关链接：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;What Made Lisp Different&lt;/li&gt;&#xA;&lt;li&gt;The Code&lt;/li&gt;&#xA;&lt;li&gt;中文翻译&lt;/li&gt;&#xA;&lt;li&gt;日语翻译&lt;/li&gt;&#xA;&lt;li&gt;葡萄牙语翻译&lt;/li&gt;&#xA;&lt;li&gt;韩语翻译&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Mac的回归</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/mac/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/mac/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/mac.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;mac的回归&#34;&gt;Mac的回归&lt;/h1&gt;&#xA;&lt;p&gt;2005年3月&lt;/p&gt;&#xA;&lt;p&gt;我认识的所有最好的黑客都在逐渐转向Mac。我的朋友Robert说，他在MIT的整个研究小组最近都给自己买了Powerbook。这些人不是90年代中期苹果低谷时期购买Mac的图形设计师和祖母们。他们是你能找到的最核心的OS黑客。&lt;/p&gt;&#xA;&lt;p&gt;原因当然是OS X。Powerbook设计精美，运行FreeBSD。你还需要知道什么？&lt;/p&gt;&#xA;&lt;p&gt;我在去年年底买了一台Powerbook。当我的IBM Thinkpad的硬盘很快损坏后，它成了我唯一的笔记本电脑。当我的朋友Trevor最近出现在我家时，他拿着一台与我相同的Powerbook。&lt;/p&gt;&#xA;&lt;p&gt;对我们大多数人来说，这不是转向苹果，而是回归。尽管在90年代中期很难相信，但Mac在其时代是典型的黑客计算机。&lt;/p&gt;&#xA;&lt;p&gt;1983年秋天，我大学的一门CS课教授站起来，像先知一样宣布，很快将有一种计算机具有半MIPS的处理能力，可以放在飞机座位下，价格如此便宜，我们可以从暑假工作中节省足够的钱来买一台。整个房间都倒吸了一口气。当Mac出现时，它甚至比我们希望的还要好。它如承诺的那样小、强大和便宜。但它也是我们从未想过计算机能成为的东西：设计精美。&lt;/p&gt;&#xA;&lt;p&gt;我必须拥有一台。我不是一个人。在80年代中后期，我认识的所有黑客都在为Mac编写软件，或者想要这样做。剑桥的每个沙发床垫上似乎都躺着一本相同的胖白皮书。如果你把它翻过来，上面写着&amp;quot;Inside Macintosh&amp;quot;。&lt;/p&gt;&#xA;&lt;p&gt;然后是Linux和FreeBSD，黑客们跟随最强大的OS wherever it leads，发现自己转向了Intel盒子。如果你关心设计，你可以买一台Thinkpad，如果你能把Intel和Microsoft的标签从前面撕掉，它至少不会 actively 令人反感。[1]&lt;/p&gt;&#xA;&lt;p&gt;随着OS X的出现，黑客们回来了。当我走进剑桥的苹果商店时，就像回家一样。很多东西都变了，但空气中仍然有那种苹果的酷炫感，感觉表演是由真正关心的人运营的，而不是随机的公司交易者。&lt;/p&gt;&#xA;&lt;p&gt;那又怎样，商界可能会说。谁在乎黑客是否再次喜欢苹果？毕竟，黑客市场有多大？&lt;/p&gt;&#xA;&lt;p&gt;相当小，但相对于其规模来说很重要。当涉及计算机时，黑客现在正在做的事情，十年后每个人都会做。几乎所有的技术，从Unix到位图显示到Web，都是在CS部门和研究实验室中首先流行的，然后逐渐传播到世界其他地方。&lt;/p&gt;&#xA;&lt;p&gt;我记得1986年告诉我父亲，有一种叫做Sun的新型计算机，它是一台严肃的Unix机器，但如此小和便宜，你可以拥有一个自己坐在前面，而不是坐在连接到单个中央Vax的VT100前面。我建议，也许他应该买一些这家公司的股票。我想他真的希望他听了。&lt;/p&gt;&#xA;&lt;p&gt;1994年，我的朋友Koling想和他在台湾的女朋友交谈，为了节省长途账单，他写了一些软件，将声音转换为可以通过互联网发送的数据包。当时我们不确定这是否是互联网的适当用途，互联网当时仍然是一个准政府实体。他现在做的事情被称为VoIP，它是一个巨大且快速增长的业务。&lt;/p&gt;&#xA;&lt;p&gt;如果你想知道十年后普通人会用计算机做什么，只需在一个好大学的CS部门走一圈。无论他们在做什么，你都会做。&lt;/p&gt;&#xA;&lt;p&gt;在&amp;quot;平台&amp;quot;问题上，这种趋势更加明显，因为新颖的软件源自伟大的黑客，他们倾向于首先为他们个人使用的任何计算机编写它。软件销售硬件。Apple II的初始销售中，如果不是大多数的话，很多来自购买它来运行VisiCalc的人。为什么Bricklin和Frankston为Apple II编写VisiCalc？因为他们个人喜欢它。他们可以选择任何机器使其成为明星。&lt;/p&gt;&#xA;&lt;p&gt;如果你想吸引黑客编写销售你的硬件的软件，你必须使它成为他们自己使用的东西。仅仅使其&amp;quot;开放&amp;quot;是不够的。它必须开放且好。&lt;/p&gt;&#xA;&lt;p&gt;而开放且好正是Macs再次成为的。中间的几年创造了一种据我所知前所未有的情况：苹果在低端和高端都很受欢迎，但在中间不。我七十岁的母亲有一台Mac笔记本电脑。我拥有计算机科学博士学位的朋友都有Mac笔记本电脑。[2] 然而苹果的整体市场份额仍然很小。&lt;/p&gt;&#xA;&lt;p&gt;尽管前所未有，但我预测这种情况也是暂时的。&lt;/p&gt;&#xA;&lt;p&gt;所以爸爸，有家叫苹果的公司。他们制造一种新型计算机，设计得像Bang &amp;amp; Olufsen音响系统一样好，下面是你能买到的最好的Unix机器。是的，市盈率有点高，但我想很多人会想要这些。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 这些可怕的标签很像前Google搜索引擎上流行的侵入性广告。它们对客户说：你不重要。我们关心Intel和Microsoft，而不是你。&lt;/p&gt;&#xA;&lt;p&gt;[2] Y Combinator（我们希望）主要被黑客访问。操作系统的比例是：Windows 66.4%，Macintosh 18.8%，Linux 11.4%，FreeBSD 1.5%。Mac数字与五年前相比是一个很大的变化。&lt;/p&gt;&#xA;&lt;h2 id=&#34;意大利语翻译&#34;&gt;意大利语翻译&lt;/h2&gt;&#xA;&lt;h2 id=&#34;俄语翻译&#34;&gt;俄语翻译&lt;/h2&gt;&#xA;&lt;h2 id=&#34;中文翻译&#34;&gt;中文翻译&lt;/h2&gt;</description>
    </item>
    <item>
      <title>N 件事的清单</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/nthings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/nthings/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/nthings.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;n-件事的清单&#34;&gt;N 件事的清单&lt;/h1&gt;&#xA;&lt;p&gt;2009年9月&lt;/p&gt;&#xA;&lt;p&gt;我敢打赌，当前《Cosmopolitan》杂志上有一篇文章的标题以数字开头。&amp;ldquo;关于性他不会告诉你的7件事&amp;rdquo;，或者类似的内容。一些流行杂志每期封面上都有这类文章。这不可能是偶然发生的。编辑们一定知道它们吸引读者。&lt;/p&gt;&#xA;&lt;p&gt;为什么读者这么喜欢n件事的清单？主要是因为它比普通文章更容易阅读。[1] 从结构上讲，n件事的清单是散文的退化情况。散文可以随心所欲地到作者想去的地方。在n件事的清单中，作者同意约束自己，提出一系列大致同等重要的观点，并且他明确告诉读者这些观点是什么。&lt;/p&gt;&#xA;&lt;p&gt;阅读文章的部分工作是理解其结构——弄清我们在高中时可能会称之为&amp;quot;大纲&amp;quot;的东西。当然不是明确的，但真正理解文章的人之后脑子里可能会有一些对应于这样大纲的东西。在n件事的清单中，这项工作为你完成。它的结构是一个外骨骼。&lt;/p&gt;&#xA;&lt;p&gt;除了明确之外，结构保证是最简单的类型：几个主要点，几乎没有次要点，它们之间没有特别的联系。&lt;/p&gt;&#xA;&lt;p&gt;因为主要点是不相关的，n件事的清单是随机访问的。没有你必须遵循的推理线索。你可以以任何顺序阅读这个清单。因为这些要点彼此独立，它们就像一艘不沉船中的防水隔舱。如果你对一个要点感到厌烦，或者无法理解，或者不同意，你不必放弃这篇文章。你可以放弃那个观点，跳到下一个。n件事的清单是并行的，因此是容错的。&lt;/p&gt;&#xA;&lt;p&gt;有时候这种格式正是作家想要的。一个很明显的情况是，当你不得不说的话实际上就是n件事的清单。我曾经写过一篇关于导致初创公司犯错误的散文，一些人嘲笑我写了一篇标题以数字开头的文章。但在那种情况下，我真的试图制作一个独立事物的完整目录。事实上，我试图回答的问题之一是有多少。&lt;/p&gt;&#xA;&lt;p&gt;使用这种格式还有其他不太合理的原因。例如，当我接近截止日期时使用它。如果我必须做一个演讲而前几天还没有开始，我有时会保守行事，让演讲成为一个n件事的清单。&lt;/p&gt;&#xA;&lt;p&gt;n件事的清单对作家和读者都更容易。当你在写真正的散文时，总是有可能遇到死胡同。真正的散文是一列思路火车，有些思路火车就是这样消失的。当你几天后必须做演讲时，这是一个令人担忧的可能性。如果你没有想法怎么办？n件事的清单的分区结构保护作家免受自己愚蠢的影响，就像它保护读者一样。如果你在一个点上没有想法，没问题：它不会毁掉散文。如果需要，你可以删除整个要点，散文仍然会存活。&lt;/p&gt;&#xA;&lt;p&gt;写n件事的清单很放松。你在前5分钟就想到了其中的n/2个。砰，这就是结构，你只需要填充它。当你想到更多要点时，只需将它们添加到末尾。也许你会删除或重新排列或组合一些，但在每个阶段你都有一个有效的（虽然最初是低分辨率的）n件事的清单。这就像那种你非常快速地编写版本1然后逐渐修改它的编程，或者那种你用一小时完成一个完整但非常模糊的草图，然后花一周时间提高分辨率的绘画风格。&lt;/p&gt;&#xA;&lt;p&gt;因为n件事的清单对作家也更容易，读者更喜欢它并不总是一个不祥的征兆。这并不一定证明读者懒惰；也可能意味着他们对作家没有太大信心。在这方面，n件事的清单是散文形式的芝士汉堡。如果你在一家你怀疑不好的餐厅吃饭，你最好的选择是点芝士汉堡。即使是糟糕的厨师也能做出像样的芝士汉堡。而且对于芝士汉堡应该是什么样子有相当严格的约定。你可以假设厨师不会尝试奇怪和艺术性的东西。n件事的清单同样限制了糟糕作家可能造成的损害。你知道它将是关于标题所说的内容，格式阻止作家沉溺于任何奇思妙想。&lt;/p&gt;&#xA;&lt;p&gt;因为n件事的清单是最简单的散文形式，它应该是初学写作者的一个好形式。事实上，这是大多数初学写作者被教导的内容。经典的5段式散文实际上是n=3的n件事的清单。但写它们的学生没有意识到他们使用的是与他们在《Cosmopolitan》中阅读的文章相同的结构。他们不允许包含数字，并且期望他们用多余的过渡词（&amp;ldquo;此外&amp;hellip;&amp;hellip;&amp;quot;）填补空白，并在两端用介绍性和结论段落覆盖它，使其表面上看起来像真正的散文。[2]&lt;/p&gt;&#xA;&lt;p&gt;让学生从n件事的清单开始似乎是个好计划。这是最简单的形式。但如果我们打算这样做，为什么不公开做呢？让他们像专业人士一样写n件事的清单，有数字，没有过渡词或&amp;quot;结论&amp;rdquo;。&lt;/p&gt;&#xA;&lt;p&gt;有一种情况，n件事的清单是一个不诚实的格式：当你通过虚假声称清单是详尽的来吸引注意力时。即，如果你写一篇声称是关于7个成功秘诀的文章。那种标题类似于侦探小说的反射性挑战。你至少需要看一下文章，检查它们是否是你列出的同样的7个。你是否忽略了成功的秘诀之一？最好检查一下。&lt;/p&gt;&#xA;&lt;p&gt;如果你真的相信你已经制作了一个详尽的清单，可以在数字前加上&amp;quot;The&amp;quot;。但有证据表明，大多数这种标题的东西都是链接诱饵。&lt;/p&gt;&#xA;&lt;p&gt;n件事的清单最大的弱点是新思想的空间太小。散文写作的主要要点，当做得正确时，是你在写作过程中产生的新思想。真正的散文，顾名思义，是动态的：你开始时不知道你要写什么。它将是关于你在写作过程中发现的任何东西。&lt;/p&gt;&#xA;&lt;p&gt;这只能在n件事的清单中以非常有限的方式发生。你先制作标题，这就是它将要关于的内容。你在写作中不能有更多的新思想，只能适应你最初设置的防水隔舱。你的大脑似乎知道这一点：因为你没有新思想的空间，你就不会有新思想。&lt;/p&gt;&#xA;&lt;p&gt;向初学写作者承认5段式散文实际上是n件事的清单的另一个好处是，我们可以警告他们这一点。它只让你在一两句思想的规模上体验散文写作的定义特征：而5段式散文将n件事的清单隐藏在看起来像更复杂类型散文的东西中，这尤其危险。如果你不知道你在使用这种形式，你就不知道你需要逃离它。&lt;/p&gt;&#xA;&lt;p&gt;注释&lt;/p&gt;&#xA;&lt;p&gt;[1] 这种类型的文章在Delicious上也惊人地受欢迎，但我认为这是因为delicious/popular是由书签驱动的，而不是因为Delicious用户愚蠢。Delicious用户是收藏家，而n件事的清单似乎特别值得收藏，因为它本身就是一个集合。&lt;/p&gt;&#xA;&lt;p&gt;[2] 学校数学教科书中的大多数&amp;quot;文字题&amp;quot;也具有误导性。它们表面上看起来像是将数学应用于真实问题，但事实并非如此。因此，如果有什么的话，它们强化了数学仅仅是需要记忆的复杂但无意义的东西的印象。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Progbot</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/progbot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/progbot/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/progbot.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;progbot&#34;&gt;Progbot&lt;/h1&gt;&#xA;&lt;p&gt;1993年1月（本文选自《On Lisp》的引言）&lt;/p&gt;&#xA;&lt;p&gt;编程风格的一个悠久原则是，程序的功能组件不应过大。如果程序的某个组件增长到难以理解的程度，它就会变成一团复杂性，如同大城市隐藏逃犯一样轻易地隐藏错误。这样的软件将难以阅读、难以测试、难以调试。&lt;/p&gt;&#xA;&lt;p&gt;根据这一原则，大程序必须被分割成片段，程序越大，分割得越多。如何分割程序？传统的方法称为自顶向下设计：你说&amp;quot;程序的目的是做这七件事，所以我把它分成七个主要子程序。第一个子程序要做这四件事，所以它又有四个自己的子程序&amp;quot;，依此类推。这个过程持续到整个程序达到适当的粒度级别——每个部分足够大以完成实质性工作，又足够小以作为单个单元被理解。&lt;/p&gt;&#xA;&lt;p&gt;有经验的Lisp程序员以不同的方式分割他们的程序。除了自顶向下设计，他们遵循一个可以称为自底向上设计的原则——改变语言以适应问题。在Lisp中，你不仅向语言的方向编写程序，还向程序的方向构建语言。当你编写程序时，你可能会想&amp;quot;我希望Lisp有这样那样的运算符&amp;quot;。于是你就去写它。之后你意识到使用新的运算符会简化程序另一部分的设计，如此类推。语言和程序共同进化。如同两个交战国家之间的边界，语言和程序之间的边界被绘制和重绘，直到最终沿着山脉和河流——你问题的自然边界——安定下来。最终，你的程序看起来就像语言是为它而设计的。当语言和程序相互适应时，你最终得到的代码是清晰、小型和高效的。&lt;/p&gt;&#xA;&lt;p&gt;值得强调的是，自底向上设计不仅仅意味着以不同的顺序编写相同的程序。当你自底向上工作时，你通常最终会得到不同的程序。你得到的不是单一的、整体的程序，而是一个具有更多抽象运算符的更大语言，以及在其中编写的更小程序。你得到的不是门楣，而是拱门。在典型的代码中，一旦抽象出仅仅是簿记的部分，剩下的内容就短得多；你构建的语言层次越高，从上到下需要走的距离就越短。这带来了几个好处：&lt;/p&gt;&#xA;&lt;p&gt;通过让语言做更多的工作，自底向上设计产生的程序更小、更灵活。较短的程序不必被分成那么多组件，更少的组件意味着更容易阅读或修改的程序。更少的组件也意味着组件之间的连接更少，因此出错的机会更少。正如工业设计师努力减少机器中的运动部件数量一样，有经验的Lisp程序员使用自底向上设计来减少程序的大小和复杂性。&lt;/p&gt;&#xA;&lt;p&gt;自底向上设计促进代码重用。当你编写两个或更多程序时，你为第一个程序编写的许多实用程序在后续程序中也会很有用。一旦你获得了大量的实用程序基础，编写新程序可能只需要从头开始使用原始Lisp所需工作的一小部分。&lt;/p&gt;&#xA;&lt;p&gt;自底向上设计使程序更容易阅读。这种类型的抽象实例要求读者理解通用运算符；功能抽象的实例要求读者理解专用子程序。&lt;/p&gt;&#xA;&lt;p&gt;[1] 因为它使你总是在寻找代码中的模式，自底向上工作有助于澄清你对程序设计的想法。如果程序的两个相距较远的组件在形式上相似，你会注意到这种相似性，并可能以更简单的方式重新设计程序。&lt;/p&gt;&#xA;&lt;p&gt;自底向上设计在Lisp以外的语言中在一定程度上也是可能的。每当看到库函数时，就在进行自底向上设计。然而，Lisp在这方面给你更广泛的能力，增强语言在Lisp风格中起着更大的作用——如此之大，以至于Lisp不仅是一种不同的语言，而是一种完全不同的编程方式。&lt;/p&gt;&#xA;&lt;p&gt;确实，这种开发风格更适合可以由小组编写的程序。然而，同时，它扩展了小组可以做的事情的极限。在《人月神话》中，Frederick Brooks提出程序员小组的生产力不会随着其规模线性增长。随着小组规模的增加，单个程序员的生产力会下降。Lisp编程的经验提出了一种更令人振奋的方式来表述这个定律：随着小组规模的减小，单个程序员的生产力会提高。相对而言，小组获胜只是因为它更小。当小组也利用Lisp使之成为可能的技术时，它可以完全获胜。&lt;/p&gt;&#xA;&lt;p&gt;新：免费下载《On Lisp》。&lt;/p&gt;&#xA;&lt;p&gt;[1] &amp;ldquo;但是如果不理解你所有的新实用程序，没有人能读懂这个程序。&amp;ldquo;要了解为什么这样的陈述通常是错误的，请参见第4.8节。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Prop62</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/prop62/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/prop62/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/prop62.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;prop62&#34;&gt;Prop62&lt;/h1&gt;&#xA;&lt;p&gt;2016年11月&lt;/p&gt;&#xA;&lt;p&gt;如果你是加利福尼亚州的选民，今年的选票上有一项重要的提案：第62号提案，该提案禁止死刑。&lt;/p&gt;&#xA;&lt;p&gt;我年轻的时候常常认为死刑辩论的焦点是什么时候可以剥夺人的生命。杀死一个杀人犯是否可以？&lt;/p&gt;&#xA;&lt;p&gt;但这里的问题不是这个。&lt;/p&gt;&#xA;&lt;p&gt;现实世界并不像我在电视上看到的那样。警察经常抓错人。被告的律师往往无能。检察官往往更多地追求名气而不是正义。&lt;/p&gt;&#xA;&lt;p&gt;在现实世界中，大约4%被判死刑的人是无辜的。所以这不是关于杀死杀人犯是否可以的问题。这是关于杀死无辜的人是否可以的问题。&lt;/p&gt;&#xA;&lt;p&gt;连小孩子都能为你回答这个问题。&lt;/p&gt;&#xA;&lt;p&gt;今年，在加利福尼亚，你有机会结束这种情况，就是对第62号提案投赞成票。但要小心，因为还有另一个提案，第66号提案，其目标是更容易执行死刑。所以62号提案投赞成票，66号提案投反对票。&lt;/p&gt;&#xA;&lt;p&gt;是时候了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Property</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/property/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/property/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/property.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;property&#34;&gt;Property&lt;/h1&gt;&#xA;&lt;p&gt;2012年3月&lt;/p&gt;&#xA;&lt;p&gt;小时候我读过一本关于十八世纪日本著名法官大冈忠相的故事书。他审理的一个案件是由一家食品店老板提起的。一个只能负担得起米饭的穷学生一边吃着米饭，一边享受着从食品店飘来的美味烹饪气味。店主想要学生为他享受的气味付费。&lt;/p&gt;&#xA;&lt;p&gt;这个学生在偷他的气味！&lt;/p&gt;&#xA;&lt;p&gt;每当我听到美国唱片工业协会和美国电影协会指控人们偷窃音乐和电影时，这个故事常常浮现在我的脑海中。&lt;/p&gt;&#xA;&lt;p&gt;对我们来说，将气味视为财产听起来很荒谬。但我可以想象一些可以收费的气味场景。想象我们生活在一个月球基地上，我们必须按升购买空气。我可以想象空气供应商额外收费添加香味。&lt;/p&gt;&#xA;&lt;p&gt;对我们来说，将气味视为财产之所以荒谬，是因为这样做行不通。但在月球基地上，这倒是可行的。&lt;/p&gt;&#xA;&lt;p&gt;什么被视为财产取决于什么可以有效地被视为财产。这不仅可以改变，而且已经改变了。人类可能总是（对于人类和总是的某种定义）将个人携带的小物品视为财产。但是狩猎采集者并没有像我们那样将土地视为财产。&lt;/p&gt;&#xA;&lt;p&gt;[1] 许多人认为财产具有单一不变定义的原因是，它的定义变化非常缓慢。&lt;/p&gt;&#xA;&lt;p&gt;[2] 但我们现在正处于这样的变化之中。唱片公司和电影工作室过去用来分发他们的作品就像月球基地上通过管道输送的空气一样。但随着网络的出现，我们仿佛搬到了一个有可呼吸大气层的行星上。现在数据像气味一样流动。通过一厢情愿和短期贪婪的结合，唱片公司和电影工作室使自己处于食品店老板的位置，指控我们都偷了他们的气味。&lt;/p&gt;&#xA;&lt;p&gt;（我说短期贪婪的原因是，唱片公司和电影工作室的根本问题是，经营它们的人是由奖金而不是股权驱动的。如果他们是由股权驱动的，他们会寻找利用技术变化的方法，而不是与之抗争。但是构建新事物需要太长时间。他们的奖金取决于今年的收入，而增加收入的最好方法是从他们已经做的事情中榨取更多钱。）&lt;/p&gt;&#xA;&lt;p&gt;那么这意味着什么？人们不应该能够为内容收费吗？这个问题没有一个单一的肯定或否定答案。人们应该能够在为内容收费有效时为内容收费。&lt;/p&gt;&#xA;&lt;p&gt;但我说&amp;quot;有效&amp;quot;时，指的是比&amp;quot;当他们能够逃脱时&amp;quot;更微妙的东西。我的意思是，人们能够为内容收费而不扭曲社会来实现这一点。毕竟，在月球基地销售香气的公司可以继续在地球上销售它们，如果他们成功游说要求我们所有人都继续通过管道呼吸的法律，即使我们不再需要这样做。&lt;/p&gt;&#xA;&lt;p&gt;唱片公司和电影工作室一直在采取的疯狂法律措施有很多这种味道。报纸和杂志同样处境艰难，但至少它们在优雅地衰落。如果可以的话，美国唱片工业协会和美国电影协会会让我们通过管道呼吸。&lt;/p&gt;&#xA;&lt;p&gt;最终这归结为常识。当你试图通过对随机选择的人使用大规模诉讼作为一种惩戒性惩罚来滥用法律系统，或者游说通过后会使互联网崩溃的法律时，这本身就证明你正在使用一个不起作用的财产定义。&lt;/p&gt;&#xA;&lt;p&gt;这就是拥有有效的民主制度和多个主权国家的有益之处。如果世界有一个单一的专制政府，唱片公司和电影工作室可以购买法律，使财产的定义成为他们想要的任何东西。但幸运的是，仍然有一些国家不是美国的版权殖民地，即使在美国，政治家们似乎仍然害怕足够数量的实际选民。&lt;/p&gt;&#xA;&lt;p&gt;[3] 管理美国的人可能不喜欢选民或其他国家拒绝屈从于他们的意愿，但最终，这对我们所有人都有利，因为试图扭曲法律以服务自己目的的人没有单一的攻击点。私有财产是一个极其有用的概念——可以说是我们最伟大的发明之一。迄今为止，它的每一个新定义都给我们带来了日益增长的物质财富。&lt;/p&gt;&#xA;&lt;p&gt;[4] 有理由假设最新的定义也会如此。如果我们都不得不因为一些有权势的人太懒于升级而继续运行过时的版本，那将是一场灾难。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 如果你想更多地了解狩猎采集者，我强烈推荐伊丽莎白·马歇尔·托马斯的《无害的人们》和《旧的方式》。&lt;/p&gt;&#xA;&lt;p&gt;[2] 然而，财产定义的变化主要是由技术进步驱动的，由于技术进步正在加速，财产定义的变化率可能也会加速。这意味着社会能够优雅地应对这些变化变得更加重要，因为它们将以越来越快的速度到来。&lt;/p&gt;&#xA;&lt;p&gt;[3] 据我所知，&amp;ldquo;版权殖民地&amp;quot;一词最早由迈尔斯·彼得森使用。&lt;/p&gt;&#xA;&lt;p&gt;[4] 技术状态不仅仅是财产定义的函数。它们相互制约。但既然如此，你不能干扰财产的定义而不影响（可能损害）技术状态。苏联的历史生动地说明了这一点。&lt;/p&gt;&#xA;&lt;p&gt;感谢萨姆·奥特曼和杰夫·拉尔斯通阅读本文草稿。&lt;/p&gt;&#xA;&lt;p&gt;日文翻译&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python悖论</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/pypar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/pypar/</guid>
      <description>&lt;h1 id=&#34;python悖论&#34;&gt;Python悖论&lt;/h1&gt;&#xA;&lt;p&gt;2004年8月&lt;/p&gt;&#xA;&lt;p&gt;在最近的一次演讲中，我说了一些让很多人不高兴的话：你可以让更聪明的程序员在Python项目上工作，而不是在Java项目上工作。&lt;/p&gt;&#xA;&lt;p&gt;我这样说并不是指Java程序员很笨。我的意思是Python程序员很聪明。学习一门新的编程语言需要很多工作。人们学习Python并不是因为它能给他们带来工作；他们学习它是因为他们真正喜欢编程，并且对已经知道的语言不满意。&lt;/p&gt;&#xA;&lt;p&gt;这使他们成为公司应该想要雇佣的那种程序员。因此，由于缺乏更好的名称，我称之为Python悖论：如果一个公司选择用相对冷门的语言编写其软件，他们将能够雇佣到更好的程序员，因为他们只会吸引那些足够关心它而去学习它的人。而对于程序员来说，这个悖论更加明显：如果你想找到一份好工作，应该学习的语言是那些人们不仅仅是为了找工作而学习的语言。&lt;/p&gt;&#xA;&lt;p&gt;到目前为止，只有少数公司足够聪明地意识到了这一点。但这里也有一种选择在进行：它们正是程序员最想为之工作的公司。例如，Google。当他们发布Java编程工作时，他们也希望有Python经验。&lt;/p&gt;&#xA;&lt;p&gt;我的一位朋友几乎知道所有广泛使用的语言，他在大多数项目中都使用Python。他说主要的原因是他喜欢源代码的外观。这可能是选择一种语言而不是另一种语言的轻率理由。但并没有听起来那么轻率：当你编程时，你花在阅读代码上的时间比写代码的时间多。你推着源代码团，就像雕塑家推着粘土团一样。因此，一种让源代码看起来丑陋的语言对于要求精确的程序员来说是令人发疯的，就像充满疙瘩的粘土对于雕塑家一样。&lt;/p&gt;&#xA;&lt;p&gt;提到丑陋的源代码，人们当然会想到Perl。但Perl表面的丑陋并不是我指的那种。真正的丑陋不是看起来刺耳的语法，而是不得不用错误的概念来构建程序。Perl可能看起来像一个骂人的卡通人物，但在某些情况下，它在概念上超越了Python。&lt;/p&gt;&#xA;&lt;p&gt;到目前为止，无论如何。当然，这两种语言都是不断发展的目标。但它们与Ruby（以及Icon、Joy、J、Lisp和Smalltalk）共享一个事实：它们都是由真正关心编程的人创建和使用的。而那些往往是做得好的人。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;&lt;em&gt;如果你喜欢这篇文章，你可能也会喜欢&lt;a href=&#34;../essays_zh/hp.html&#34;&gt;黑客与画家&lt;/a&gt;。&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Reddit创始人</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/reddits/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/reddits/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/reddits.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;reddit创始人&#34;&gt;Reddit创始人&lt;/h1&gt;&#xA;&lt;p&gt;2024年3月&lt;/p&gt;&#xA;&lt;p&gt;我在我们甚至开始Y Combinator之前就认识了Reddit创始人。事实上，他们是我们开始创办它的原因之一。&lt;/p&gt;&#xA;&lt;p&gt;YC源于我在哈佛计算机协会（本科生计算机俱乐部）的一次关于如何创办创业公司的演讲。观众中的其他人可能都是本地人，但史蒂夫和亚历克西斯是从弗吉尼亚大学乘火车来的，他们是那里的高年级学生。既然他们来了这么远，我同意和他们见面喝咖啡。他们告诉我一个后来我们资助他们放弃的创业想法：一种在手机上订购快餐的方式。&lt;/p&gt;&#xA;&lt;p&gt;这是在智能手机之前的时代。他们必须与手机运营商和快餐连锁店达成协议才能推出。所以这是不可能实现的。即使在19年后的今天，这仍然不存在。但我对他们的智慧和能量印象深刻。事实上，我对他们以及我在那次演讲中遇到的其他一些人是如此印象深刻，以至于我决定创办一些东西来资助他们。几天后，我告诉史蒂夫和亚历克西斯我们正在创办Y Combinator，并鼓励他们申请。&lt;/p&gt;&#xA;&lt;p&gt;第一批我们没有任何方式来识别申请人，所以我们给他们起了绰号。Reddit创始人是&amp;quot;手机食物松饼&amp;quot;。&amp;ldquo;松饼&amp;quot;是杰西卡用来形容小狗和两岁小孩等事物的亲昵称呼。所以这让你对史蒂夫和亚历克西斯当时给人的印象有所了解。他们有着小鸟那种略带凌乱的惊讶表情。&lt;/p&gt;&#xA;&lt;p&gt;不过他们的想法很糟糕。而且由于那时我们认为我们是在资助想法而不是创始人，所以我们拒绝了他们。但我们对此感到不好。杰西卡因为我们拒绝了松饼而难过。对我来说，拒绝那些激励我们创办YC来资助的人似乎是错误的。&lt;/p&gt;&#xA;&lt;p&gt;我认为创业公司意义上的&amp;quot;转型&amp;quot;这个词还没有被发明出来，但我们想要资助史蒂夫和亚历克西斯，所以如果他们的想法不好，他们就必须研究其他东西。而且我知道是什么。那时候有一个叫Delicious的网站，你可以在那里保存链接。它有一个叫del.icio.us/popular的页面，列出了最多保存的链接，人们正在使用这个页面作为事实上的Reddit。我知道这一点是因为我网站的很多流量都来自它。需要有一个类似del.icio.us/popular的东西，但设计用于分享链接而不是作为保存链接的副产品。&lt;/p&gt;&#xA;&lt;p&gt;所以我打电话给史蒂夫和亚历克西斯，说我们喜欢他们，只是不喜欢他们的想法，所以如果他们研究其他东西，我们会资助他们。那时他们正在乘火车回弗吉尼亚的家。他们在下一站下车，登上了北上的下一班火车，到那天结束时，他们承诺致力于现在被称为Reddit的东西。&lt;/p&gt;&#xA;&lt;p&gt;他们本想叫它Snoo，就像&amp;quot;What snoo？&amp;ldquo;一样。但snoo.com太贵了，所以他们决定把吉祥物叫Snoo，并为网站选择一个未被注册的名字。早期Reddit只是一个临时名称，或者至少他们是这样告诉我的，但现在可能改不掉了。&lt;/p&gt;&#xA;&lt;p&gt;就像所有真正伟大的创业公司一样，公司和创始人之间有一种不寻常的紧密匹配。特别是史蒂夫。Reddit有一种特定的性格——好奇、怀疑、准备被娱乐——这种性格就是史蒂夫的性格。&lt;/p&gt;&#xA;&lt;p&gt;史蒂夫会对这个翻白眼，但他是一个知识分子；他对为了其自身而感兴趣的想法感兴趣。这就是他为什么会出现在剑桥的那个观众席上。他认识我是因为他对一种我写过的叫做Lisp的编程语言感兴趣，而Lisp是那种很少有人学习的语言之一，除非是出于智力好奇心。史蒂夫那种真空吸尘器式的好奇心正是你想要的那种，当你创办一个网站，它是一个包含任何有趣内容的链接列表。&lt;/p&gt;&#xA;&lt;p&gt;史蒂夫不是权威的粉丝，所以他也喜欢一个没有编辑的网站的想法。那时程序员的主要论坛是一个叫Slashdot的网站。它很像Reddit，只是首页上的故事是由人工版主选择的。虽然他们做得很好，但这一微小的差异被证明是一个巨大的差异。由用户提交驱动意味着Reddit比Slashdot更新。那里的新闻更新，用户总是会去最新的新闻所在的地方。&lt;/p&gt;&#xA;&lt;p&gt;我推动Reddit创始人快速发布。第一版不需要超过几百行代码。怎么需要一周多的时间来构建？他们确实发布得相对较快，大约在第一批YC批次开始后三周。第一批用户是史蒂夫、亚历克西斯、我，以及他们的一些YC同班同学和大学朋友。事实证明，你不需要那么多用户来收集一个像样的有趣链接列表，特别是如果你每个用户有多个账户。&lt;/p&gt;&#xA;&lt;p&gt;Reddit从他们的YC批次又得到了两个人：克里斯·斯洛和亚伦·斯沃茨，他们也异常聪明。克里斯刚刚完成他在哈佛的物理学博士学业。亚伦更年轻，一个大学新生，甚至比史蒂夫更反权威。将他描述为后来权威对他所做的事情的殉道者并不夸张。&lt;/p&gt;&#xA;&lt;p&gt;Reddit的流量缓慢但不可阻挡地增长。起初数字太小，很难与背景噪音区分开来。但在几周内，很明显有一个真正的用户核心定期返回网站。尽管Reddit公司在后来的年份里经历了各种各样的事情，但Reddit网站从未回头。&lt;/p&gt;&#xA;&lt;p&gt;Reddit网站（现在的应用程序）是一个如此根本有用的东西，几乎是不可摧毁的。这就是为什么，尽管在史蒂夫离开后很长一段时间里，管理策略从良性忽视到惊人的错误都有，但流量一直在增长。你不能对大多数公司这样做。大多数公司你把眼睛从球上移开六个月，你就会陷入深深的麻烦。但Reddit是特别的，当史蒂夫在2015年回来时，我知道世界将会感到惊讶。&lt;/p&gt;&#xA;&lt;p&gt;人们认为他们看透了Reddit：硅谷的参与者之一，但不是重要的参与者。但那些知道幕后发生的事情的人知道故事不止于此。如果Reddit能够在最多无害的管理下增长到它所达到的规模，如果史蒂夫回来，它能做什么？我们现在知道这个问题的答案。或者至少是答案的下限。史蒂夫还没有没有想法。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ronco原则</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/ronco/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/ronco/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/ronco.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;ronco原则&#34;&gt;Ronco原则&lt;/h1&gt;&#xA;&lt;p&gt;2015年1月&lt;/p&gt;&#xA;&lt;p&gt;无论是风险投资还是天使投资，没有人比Ron Conway投资了更多的顶级创业公司。他知道硅谷每笔交易的内情，其中一半的交易都是他安排的。&lt;/p&gt;&#xA;&lt;p&gt;然而他是一个超级好的人。事实上，&amp;ldquo;好&amp;quot;这个词还不足以形容他。Ronco是善良的。我不知道有任何他表现不好的例子。甚至很难想象这样的事情。&lt;/p&gt;&#xA;&lt;p&gt;当我第一次来到硅谷时，我想：&amp;ldquo;多么幸运，一个如此有权势的人如此仁慈。&amp;ldquo;但渐渐地我意识到这不是运气。正是因为仁慈，Ronco才变得如此有权势。所有他投资的机会都是通过推荐来的。Google是。Facebook是。Twitter是Evan Williams亲自推荐的。这么多人向他推荐交易的原因是他已经证明自己是一个好人。&lt;/p&gt;&#xA;&lt;p&gt;善良并不意味着好欺负。我不想面对一个愤怒的Ronco。但如果Ron对你生气，那是因为你做错了什么。Ron是如此老派，他就像旧约中的人物。他会在正义的愤怒中击打你，但其中没有恶意。&lt;/p&gt;&#xA;&lt;p&gt;在几乎所有领域，看似善良都有优势。它让人们信任你。但实际上善良是看似善良的一种昂贵方式。对一个不道德的人来说，这可能看起来有点过分。&lt;/p&gt;&#xA;&lt;p&gt;在某些领域可能是这样，但在创业世界显然不是。虽然很多投资者都是混蛋，但他们之间有一个明显的趋势：最成功的投资者也是最正直的。[1]&lt;/p&gt;&#xA;&lt;p&gt;过去并不总是这样。我不敢说二十年前的投资者也是如此。&lt;/p&gt;&#xA;&lt;p&gt;什么改变了？创业世界变得更加透明和更加不可预测。这两者都让不实际善良而看似善良变得更加困难。&lt;/p&gt;&#xA;&lt;p&gt;透明度产生这种效果的原因是显而易见的。现在当一个投资者虐待创始人时，事情会传出去。可能不会完全传到媒体那里，但其他创始人会听说，那个投资者就开始失去交易。[2]&lt;/p&gt;&#xA;&lt;p&gt;不可预测性的影响更加微妙。它增加了行为不一致的工作量。如果你要两面派，你必须知道你应该对谁好，可以对谁坏而不受惩罚。在创业世界，事情变化如此之快，你无法判断。今天和你谈话的随机大学生可能在几年后成为硅谷最热门创业公司的CEO。如果你无法判断应该对谁好，你必须对每个人都好。而唯一能够做到这一点的人可能是那些真正善良的人。&lt;/p&gt;&#xA;&lt;p&gt;在一个足够连接和不可预测的世界里，你不能不善良而看似善良。&lt;/p&gt;&#xA;&lt;p&gt;像经常发生的那样，Ron偶然发现了如何成为未来的投资者。他没有预见创业投资的未来，意识到正直会有回报，并强迫自己以那种方式行事。对他来说，以任何其他方式行事都会感觉不自然。他已经生活在未来。&lt;/p&gt;&#xA;&lt;p&gt;幸运的是，那个未来并不限于创业世界。创业世界比大多数领域更透明和不可预测，但几乎到处都是这个趋势。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 我不是说如果你按仁慈程度对投资者进行排序，你也按回报率对他们进行了排序，而是说如果你做一个散点图，x轴是仁慈程度，y轴是回报率，你会看到一个明显的上升趋势。&lt;/p&gt;&#xA;&lt;p&gt;[2] Y Combinator特别是因为它聚合了如此多创业公司的数据，对投资者行为有相当全面的看法。&lt;/p&gt;&#xA;&lt;p&gt;感谢Sam Altman和Jessica Livingston阅读本文草稿。&lt;/p&gt;</description>
    </item>
    <item>
      <title>RSS</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/rss/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/rss/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/rss.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;rss&#34;&gt;RSS&lt;/h1&gt;&#xA;&lt;p&gt;Aaron Swartz 创建了论文页面的抓取订阅源。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;&lt;em&gt;注意：这似乎是一个非常简短的说明，关于Aaron Swartz为Paul Graham的论文页面创建RSS订阅源。&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>一些英雄</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/heroes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/heroes/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/heroes.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;一些英雄&#34;&gt;一些英雄&lt;/h1&gt;&#xA;&lt;p&gt;2008年4月&lt;/p&gt;&#xA;&lt;p&gt;我保存了一些话题，因为写它们会很有趣。这就是其中之一：我的英雄名单。&lt;/p&gt;&#xA;&lt;p&gt;我并不是说这是n个最令人敬佩的人的名单。谁能列出这样的名单，即使他们想这么做？例如，爱因斯坦不在名单上，尽管他可能应该出现在任何令人敬佩的人的简短名单上。我曾问一位物理学家朋友，爱因斯坦是否真的像他的名声所暗示的那样聪明，她说是的，他是。那为什么他不在名单上呢？因为我必须去问。这是一个影响过我的人的名单，而不是如果我能理解他们的工作就会影响我的人。&lt;/p&gt;&#xA;&lt;p&gt;我的检验标准是想到一个人然后问&amp;quot;这个人是我的英雄吗？&amp;ldquo;它经常返回令人惊讶的答案。例如，对于蒙田，他可以说是散文的发明者，它返回了假。为什么？当我思考称某人为英雄意味着什么时，这意味着我会通过问他们在同样情况下会做什么来决定我该做什么。这是一个比敬佩更严格的标准。&lt;/p&gt;&#xA;&lt;p&gt;在列出名单后，我看看是否有模式，确实有，一个非常清晰的模式。名单上的每个人都有两个品质：他们几乎过度地关心他们的工作，而且他们绝对诚实。我说的诚实不是指值得信赖，而是指他们从不迎合：他们从不因为观众想要而说或做某些事情。由于这个原因，他们基本上都是颠覆性的，尽管他们隐瞒的程度不同。&lt;/p&gt;&#xA;&lt;h2 id=&#34;杰克兰伯特&#34;&gt;杰克·兰伯特&lt;/h2&gt;&#xA;&lt;p&gt;我在1970年代的匹兹堡长大。除非你在那里，否则很难想象那个镇对钢人队的感觉。在当地，所有的消息都是坏的。钢铁工业正在消亡。但钢人队是美式足球中最棒的球队——而且，以一种似乎反映城市个性的方式。他们不做任何花哨的事情。他们只是把工作做好。&lt;/p&gt;&#xA;&lt;p&gt;其他球员更有名：特里·布拉德肖、佛朗哥·哈里斯、林恩·斯旺。但他们打进攻，你总是会因此获得更多关注。作为一个十二岁的足球专家，在我看来，他们中最好的是杰克·兰伯特。而使他如此出色的原因是他完全无情。他不仅仅在乎打得好；他几乎在乎得太多了。当对方的球员在他的争球线一侧持球时，他似乎把这视为个人侮辱。&lt;/p&gt;&#xA;&lt;p&gt;1970年代匹兹堡的郊区是个相当沉闷的地方。学校很无聊。周围的所有成年人都在为大公司工作而感到无聊。通过大众传媒传递给我们的一切都是（a）平淡无奇的，（b）在别处生产的。杰克·兰伯特是个例外。他像我见过的任何东西都不同。&lt;/p&gt;&#xA;&lt;h2 id=&#34;肯尼斯克拉克&#34;&gt;肯尼斯·克拉克&lt;/h2&gt;&#xA;&lt;p&gt;肯尼斯·克拉克是我所知道的最好的非小说作家，在任何主题上都是。大多数写艺术史的人并不真正喜欢艺术；你可以从一千个小迹象中看出来。但克拉克喜欢，不仅仅是智识上的，而是像期待美味晚餐那样的喜欢。&lt;/p&gt;&#xA;&lt;p&gt;然而，真正使他脱颖而出的是他想法的质量。他的风格看似随意，但他的书中的内容比一个艺术专著图书馆还要多。阅读《裸体》就像乘坐法拉利。就在你刚刚安顿下来时，加速把你猛地推回座位。在你调整之前，汽车尖叫着转入第一个弯道，你被甩向一边。他的大脑产生的想法几乎快到无法掌握。最后在章节结束时，你停下来，眼睛睁得大大的，脸上带着大大的笑容。&lt;/p&gt;&#xA;&lt;p&gt;肯尼斯·克拉克在他那个时代是个明星，这要归功于纪录片系列《文明》。如果你只读一本关于艺术史的书，我会推荐《文明》。它比大学生被迫购买用于艺术史101的乏味西尔斯商品目录要好得多。&lt;/p&gt;&#xA;&lt;h2 id=&#34;拉里米哈尔科&#34;&gt;拉里·米哈尔科&lt;/h2&gt;&#xA;&lt;p&gt;很多孩子在童年时都有一位伟大的老师。拉里·米哈尔科就是我的。当我回想时，好像三年级和四年级之间划了一条线。在米哈尔科先生之后，一切都不同了。&lt;/p&gt;&#xA;&lt;p&gt;为什么？首先，他智力上很好奇。我有其他一些聪明的老师，但我不会用智力上好奇来形容他们。回想起来，他作为小学老师不合时宜，我想他知道这一点。这对他来说一定很难，但对我们他的学生来说，这太棒了。他的班级是一次不断的冒险。我过去每天都喜欢上学。&lt;/p&gt;&#xA;&lt;p&gt;使他不同的另一件事是他喜欢我们。孩子们很擅长分辨这一点。其他老师充其量是仁慈的漠不关心。但米哈尔科先生似乎真的想成为我们的朋友。在四年级的最后一天，他拿出一台沉重的学校唱片机，给我们播放詹姆斯·泰勒的&amp;quot;你有朋友&amp;rdquo;。只要叫我的名字，你知道无论我在哪里，我都会跑过去。&lt;/p&gt;&#xA;&lt;p&gt;他在59岁时死于肺癌。我从来没有像在他的葬礼上那样哭过。&lt;/p&gt;&#xA;&lt;h2 id=&#34;列奥纳多&#34;&gt;列奥纳多&lt;/h2&gt;&#xA;&lt;p&gt;我在制作东西的过程中学到的一件事是，我小时候没有意识到，最好的东西很多都不是为观众制作的，而是为自己制作的。你在博物馆里看到绘画和图画，想象它们是为你观看而制作的。实际上很多最好的作品是作为一种探索世界的方式制作的，而不是取悦他人的方式。这些探索中最好的有时比明确为取悦而制作的东西更令人愉悦。&lt;/p&gt;&#xA;&lt;p&gt;列奥纳多做了很多事情。他最令人敬佩的品质之一是他做了这么多不同且令人敬佩的事情。人们现在所知道的是他的绘画和他更引人注目的发明，比如飞行器。这使他看起来像某种梦想家，在旁边勾勒火箭飞船的艺术概念。事实上，他做了大量更实用的技术发现。他作为工程师和作为画家一样出色。&lt;/p&gt;&#xA;&lt;p&gt;对我来说，他最令人印象深刻的作品是他的绘画。它们明显地更多是作为研究世界的方式制作的，而不是生产美丽的东西。然而，它们可以与任何艺术作品相媲美。在他之前或之后，没有人在没有人观看时能做得那么好。&lt;/p&gt;&#xA;&lt;h2 id=&#34;罗伯特莫里斯&#34;&gt;罗伯特·莫里斯&lt;/h2&gt;&#xA;&lt;p&gt;罗伯特·莫里斯有一个非常不寻常的品质：他从不犯错。这似乎要求你全知全能，但实际上出人意料地容易。除非你相当确定，否则不要说任何话。如果你不是全知全能的，你最终不会说太多。&lt;/p&gt;&#xA;&lt;p&gt;更准确地说，诀窍是注意你如何限定你所说的话。通过使用这个诀窍，据我所知，罗伯特只犯过一次错误，那是他还是个本科生的时候。当Mac出现时，他说小型台式电脑永远不会适合真正的黑客工作。&lt;/p&gt;&#xA;&lt;p&gt;不过，在他的情况下称之为诀窍是错误的。如果这是一个有意识的诀窍，他会在兴奋的时刻滑倒。对罗伯特来说，这个品质是天生的。他具有几乎超人的正直。他不仅仅是一般正确，而且对他自己正确的程度也正确。&lt;/p&gt;&#xA;&lt;p&gt;你会认为永远不会犯错是如此美好的事情，每个人都会这样做。似乎不需要太多额外的工作来对想法的错误和对想法本身给予同样多的关注。然而几乎没有人这样做。我知道这有多难，因为自从遇见罗伯特以来，我尝试在软件中做他似乎在硬件中所做的事情。&lt;/p&gt;&#xA;&lt;h2 id=&#34;pg伍德豪斯&#34;&gt;P.G.伍德豪斯&lt;/h2&gt;&#xA;&lt;p&gt;人们终于开始承认伍德豪斯是伟大的作家。如果你想在自己时代被认为是伟大的小说家，你必须听起来很智识。如果你写的东西是流行的、娱乐性的或有趣的，你就理所当然地令人怀疑。这使得伍德豪斯更加令人印象深刻，因为这意味着要按自己的意愿写作，他必须承诺在自己的一生中被鄙视。&lt;/p&gt;&#xA;&lt;p&gt;伊夫林·沃称他为伟大的作家，但在当时的大多数人看来，这会被读作一种骑士精神或故意反常的姿态。当时，任何随机的大学生自传小说都可以指望从文学界获得更尊重的对待。&lt;/p&gt;&#xA;&lt;p&gt;伍德豪斯可能从简单的原子开始，但他将它们组合成分子的方式几乎是完美无缺的。特别是他的节奏。写这个让我自我意识很强。我只能想到另外两个在风格上接近他的作家：伊夫林·沃和南希·米特福德。这三个人使用英语就像他们拥有它一样。&lt;/p&gt;&#xA;&lt;p&gt;但伍德豪斯有他们两个都没有的东西。他很自在。伊夫林·沃和南希·米特福在乎别人对他们的看法：他想看起来贵族化；她担心自己不够聪明。但伍德豪斯根本不在乎别人对他的看法。他写的就是他想写的。&lt;/p&gt;&#xA;&lt;h2 id=&#34;亚历山大考尔德&#34;&gt;亚历山大·考尔德&lt;/h2&gt;&#xA;&lt;p&gt;考尔德在这份名单上是因为他让我快乐。他的作品能与列奥纳多的相比吗？可能不能。20世纪可能没有任何东西能与之相比。但现代主义好的方面，考尔德都有，而且是以一种看起来毫不费力的方式拥有的。&lt;/p&gt;&#xA;&lt;p&gt;现代主义好的方面是它的新鲜感。艺术在19世纪变得沉闷。当时流行的绘画大多是McMansion的艺术等价物——大、做作、虚假。现代主义意味着重新开始，用儿童可能有的同样真诚的动机制作东西。从中受益最多的艺术家是那些保留了儿童自信的人，比如克利和考尔德。&lt;/p&gt;&#xA;&lt;p&gt;克利令人印象深刻，因为他能以如此多不同的风格工作。但在两者之间，我更喜欢考尔德，因为他的作品看起来更快乐。归根结底，艺术的目的是吸引观众。很难预测什么会；有时最初看起来有趣的东西一个月后会让你感到厌烦。考尔德的雕塑从来不会变得无聊。它们只是静静地坐在那里散发着乐观主义，像永远不会耗尽的电池。从书籍和照片中我可以判断，考尔德作品的快乐是他自己的快乐表现出来的。&lt;/p&gt;&#xA;&lt;h2 id=&#34;简奥斯汀&#34;&gt;简·奥斯汀&lt;/h2&gt;&#xA;&lt;p&gt;每个人都敬佩简·奥斯汀。把我的名字加到名单上。对我来说，她似乎是有史以来最伟大的小说家。&lt;/p&gt;&#xA;&lt;p&gt;我对事物如何运作感兴趣。当我读大多数小说时，我既关注故事，也关注作者的选择。但在她的小说中，我看不见运作的齿轮。尽管我真的很想知道她是怎么做到的，但我无法弄清楚，因为她太棒了，她的故事看起来不像是编造的。我感觉自己正在读对实际发生事情的描述。&lt;/p&gt;&#xA;&lt;p&gt;我年轻时读很多小说。我现在不能读了，因为它们中没有足够的信息。与历史和传记相比，小说显得如此贫乏。但读奥斯汀就像读非小说类作品。她写得如此之好，你甚至不会注意到她。&lt;/p&gt;&#xA;&lt;h2 id=&#34;约翰麦卡锡&#34;&gt;约翰·麦卡锡&lt;/h2&gt;&#xA;&lt;p&gt;约翰·麦卡锡发明了Lisp，人工智能领域（或至少是术语），并且是两个顶级计算机科学系MIT和斯坦福的早期成员。没有人会否认他是伟人之一，但他对我来说特别是个英雄，因为Lisp。&lt;/p&gt;&#xA;&lt;p&gt;我们现在很难理解这在当时是一个多么大的概念飞跃。矛盾的是，他的成就难以欣赏的原因之一是它如此成功。过去20年发明的几乎所有编程语言都包含了Lisp的想法，而且每年中位数语言变得越来越像Lisp。&lt;/p&gt;&#xA;&lt;p&gt;在1958年，这些想法绝对不明显。在1958年，似乎有两种思考编程的方式。有些人认为它是数学，并证明图灵机的定理。其他人认为它是一种完成事情的方式，并设计过于受当时技术影响的语言。只有麦卡锡弥合了差距。他设计了一种是数学的语言。但设计这个词不太对；发现更合适。&lt;/p&gt;&#xA;&lt;h2 id=&#34;喷火战斗机&#34;&gt;喷火战斗机&lt;/h2&gt;&#xA;&lt;p&gt;当我列出这份名单时，我发现自己在想道格拉斯·巴德、R.J.米切尔和杰弗里·奎尔这样的人，我意识到尽管他们一生中做了很多事情，但有一个最重要的因素连接着他们：喷火战斗机。&lt;/p&gt;&#xA;&lt;p&gt;这应该是一份英雄名单。一台机器怎么能出现在上面？因为那台机器不仅仅是一台机器。它是一个英雄的透镜。非凡的奉献投入其中，非凡的勇气从中产生。&lt;/p&gt;&#xA;&lt;p&gt;称第二次世界大战为善与恶的较量是陈词滥调，但在战斗机设计之间，确实如此。喷火战斗机的原始对手，ME 109，是一架残酷实用的飞机。它是一台杀戮机器。喷火战斗机是乐观主义的化身。不仅仅是在它美丽的线条上：它处于可制造能力的边缘。但走高端路线奏效了。在空中，美有优势，只是一点点。&lt;/p&gt;&#xA;&lt;h2 id=&#34;史蒂夫乔布斯&#34;&gt;史蒂夫·乔布斯&lt;/h2&gt;&#xA;&lt;p&gt;肯尼迪被杀时还活着的人通常记得听到消息时他们确切在哪里。我清楚地记得当朋友问我是否听说史蒂夫·乔布斯得了癌症时我在哪里。就像地板塌陷了一样。几秒钟后她告诉我那是罕见的可手术类型，他会没事的。但那几秒钟似乎很长。&lt;/p&gt;&#xA;&lt;p&gt;我不确定是否要把乔布斯列入这份名单。苹果公司的很多人似乎都害怕他，这是个坏兆头。但他迫使人们敬佩。&lt;/p&gt;&#xA;&lt;p&gt;史蒂夫·乔布斯是什么没有名字，因为以前从来没有像他这样的人。他自己不设计苹果的产品。从历史上看，与他所做的最接近的类比是伟大的文艺复兴艺术赞助人。作为公司的CEO，这使他独一无二。&lt;/p&gt;&#xA;&lt;p&gt;大多数CEO将品味委托给下属。设计悖论意味着他们或多或少在随机选择。但史蒂夫·乔布斯自己就有品味——如此好的品味，他向世界展示了品味比他们意识到的更重要得多。&lt;/p&gt;&#xA;&lt;h2 id=&#34;艾萨克牛顿&#34;&gt;艾萨克·牛顿&lt;/h2&gt;&#xA;&lt;p&gt;牛顿在我的英雄万神殿中扮演着奇怪的角色：他是那个我责备自己的人。他致力于大事，至少在他生命的一部分时间是如此。在做小事时很容易分心。你正在回答的问题愉快地熟悉。你获得立即的奖励——事实上，如果你从事暂时重要的事情，你在你的时代会获得更大的奖励。但我不安地意识到，这是通往应得的默默无闻的道路。&lt;/p&gt;&#xA;&lt;p&gt;要做真正伟大的事情，你必须寻找人们甚至没有意识到是问题的问题。可能还有其他人像牛顿一样做得那么好，对于他们的时代，但牛顿是我这种思想方式的典范。我只能开始理解这对他来说一定是种什么感觉。&lt;/p&gt;&#xA;&lt;p&gt;你只有一次生命。为什么不做大事？&amp;ldquo;范式转换&amp;quot;这个词现在被过度使用，但库恩抓住了什么。而且你知道还有更多在那里，被后来令人惊讶的懒惰和愚蠢的薄墙与我们分开。如果我们像牛顿那样工作。&lt;/p&gt;&#xA;&lt;p&gt;感谢特雷弗·布莱克韦尔、杰西卡·利文斯顿和杰基·麦克多诺阅读本文的草稿。&lt;/p&gt;</description>
    </item>
    <item>
      <title>一场本地革命？</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/revolution/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/revolution/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/revolution.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;一场本地革命&#34;&gt;一场本地革命？&lt;/h1&gt;&#xA;&lt;p&gt;2009年4月&lt;/p&gt;&#xA;&lt;p&gt;最近我意识到我脑中一直有两个想法，如果结合起来会爆炸。&lt;/p&gt;&#xA;&lt;p&gt;第一个是创业公司可能代表一个新的经济阶段，规模相当于工业革命。我不确定这一点，但似乎有相当大的可能性是真实的。作为创业公司的创始人或早期员工，人们的生产力要高得多——想象一下，如果拉里和谢尔盖去一家大公司工作，他们的成就会有多少减少——而那种规模的改进可以改变社会习俗。&lt;/p&gt;&#xA;&lt;p&gt;第二个想法是创业公司是一种在某些专门从事它的地方繁荣的企业类型——硅谷专门从事创业公司，就像洛杉矶专门从事电影，或纽约专门从事金融一样。[1]&lt;/p&gt;&#xA;&lt;p&gt;如果两个都是真的呢？如果创业公司既是一个新的经济阶段，又是一种只在某些中心繁荣的企业类型呢？&lt;/p&gt;&#xA;&lt;p&gt;如果是这样，这场革命将是特别革命性的。所有以前的革命都传播了。农业、城市和工业化都广泛传播。如果创业公司最终像电影业一样，只有少数几个中心和一个主导中心，那将产生新颖的后果。&lt;/p&gt;&#xA;&lt;p&gt;已经有迹象表明创业公司可能不会特别广泛传播。创业公司的传播似乎比工业革命的传播慢得多，尽管现在的通信速度快得多。&lt;/p&gt;&#xA;&lt;p&gt;在博尔顿与瓦特成立后的几十年内，蒸汽机散布在北欧和北美各地。工业化有一段时间没有传播到这些地区以外。它只传播到有强大中产阶级的地方——即私人公民可以发财而不被没收的国家。否则，投资工厂就不值得了。但在有强大中产阶级的国家，工业技术很容易扎根。单个矿山或工厂主可以决定安装蒸汽机，几年内他可能会找到当地的人来为他制造一个。所以蒸汽机传播很快。而且它们传播广泛，因为矿山和工厂的位置是由河流、港口和原材料来源等特征决定的。[2]&lt;/p&gt;&#xA;&lt;p&gt;创业公司似乎不那么容易传播，部分是因为它们更多是社会的而不是技术的现象，部分是因为它们不与地理相关。单个欧洲制造商可以进口工业技术，它们会工作得很好。但这似乎对创业公司不太有效：你需要一个专业知识的社区，就像你在电影业中一样。[3] 此外，没有相同的力量推动创业公司传播。一旦铁路或电网被发明，每个地区都必须拥有它们。没有铁路或电力的地区是一个丰富的潜在市场。但这对创业公司来说不是真的。不需要法国的微软或德国的谷歌。&lt;/p&gt;&#xA;&lt;p&gt;政府可能决定他们想在当地鼓励创业公司，但政府政策不能像真正的需求那样将它们召唤出来。&lt;/p&gt;&#xA;&lt;p&gt;这一切将如何发展？如果我现在必须预测，我会说创业公司会传播，但非常缓慢，因为它们的传播将不是由政府政策（不会起作用）或市场需求（不存在）驱动的，而是在它发生的程度上，由迄今为止导致创业文化传播的相同随机因素驱动。而这种随机因素将越来越被现有创业中心的吸引力所压倒。&lt;/p&gt;&#xA;&lt;p&gt;硅谷之所以在那里，是因为威廉·肖克利想搬回他长大的帕洛阿尔托，被他吸引到西部与他一起工作的专家们非常喜欢那里而留了下来。西雅图作为科技中心的地位很大程度上归功于同样的原因：盖茨和艾伦想回家。否则，阿尔伯克基可能会在排名中拥有西雅图的位置。波士顿是一个科技中心，因为它是美国乃至世界的知识之都。如果电池风险投资公司没有拒绝Facebook，波士顿现在在创业雷达屏幕上会大得多。&lt;/p&gt;&#xA;&lt;p&gt;但当然，Facebook在硅谷而不是波士顿获得资助并非巧合。硅谷比波士顿有更多更大胆的投资者，甚至本科生都知道这一点。&lt;/p&gt;&#xA;&lt;p&gt;波士顿的例子说明了在这个游戏的后期建立一个新的创业中心的困难。如果你想通过重现现有创业中心发生的方式来创建一个创业中心，方法是在一个如此美好的地方建立一流的研究大学，以至于富人想住在那里。那么这个城市将对两个你需要的群体都友好：创始人和投资者。这就是产生硅谷的组合。但硅谷没有硅谷与之竞争。如果你现在尝试在一个好地方建立一所伟大大学来创建创业中心，它会更难开始，因为它产生的许多最好的创业公司会被吸引到现有的创业中心。&lt;/p&gt;&#xA;&lt;p&gt;最近我提出了一个潜在的捷径：付钱让创业公司搬迁。一旦你有足够多的优秀创业公司在一个地方，它将创造一个自我维持的连锁反应。创始人会开始搬到那里而不需要付钱，因为那是他们的同行所在的地方，投资者也会出现，因为那是交易所在的地方。&lt;/p&gt;&#xA;&lt;p&gt;在实践中，我怀疑任何政府都有胆量尝试这个，或者有正确的头脑来做。我并不是作为一个实用的建议，而更多是对故意创建创业中心所需最低限度的探索。&lt;/p&gt;&#xA;&lt;p&gt;最可能的情况是（1）没有政府会成功建立创业中心，（2）创业文化的传播将因此由迄今为止驱动它的随机因素驱动，但是（3）这些因素将越来越被现有创业中心的吸引力所压倒。结果：这场革命，如果它是一场革命的话，将是异常本地化的。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 有两种非常不同类型的创业公司：一种是自然演化的，另一种是为了&amp;quot;商业化&amp;quot;科学发现而被召唤出来的。大多数计算机/软件创业公司现在是第一种，大多数制药创业公司是第二种。当我在本文中谈论创业公司时，我指的是第一种创业公司。使第二种创业公司传播没有困难：你所要做的就是资助医学研究实验室；商业化专家们抛出的任何新发现就像建造一个新机场一样简单。第二种创业公司既不需要也不产生创业文化。但这意味着拥有第二种创业公司不会让你得到第一种创业公司。费城就是一个例子：很多第二种创业公司，但几乎没有第一种。&lt;/p&gt;&#xA;&lt;p&gt;顺便说一句，谷歌可能看起来像第二种创业公司的一个例子，但它不是。谷歌不是商业化的PageRank。他们可以使用另一种算法，一切都会是一样的。使谷歌成为谷歌的是他们在网络演化的关键时期关心做好搜索。&lt;/p&gt;&#xA;&lt;p&gt;[2] 瓦特没有发明蒸汽机。他的关键发明是一个使蒸汽机效率显著提高的改进：独立的冷凝器。但这简化了他的作用。他对问题有如此不同的态度，并以如此大的能量接近它，以至于他改变了这个领域。也许最准确的说法是瓦特重新发明了蒸汽机。&lt;/p&gt;&#xA;&lt;p&gt;[3] 这里最大的反例是Skype。如果你做的事情在美国会被关闭，那么位于别处就成为优势。这就是为什么Kazaa取代了Napster。创始人从运行Kazaa获得的专业知识和联系有助于确保Skype的成功。&lt;/p&gt;&#xA;&lt;p&gt;感谢帕特里克·科利森、杰西卡·利文斯顿和弗雷德·威尔逊阅读本文草稿。&lt;/p&gt;</description>
    </item>
    <item>
      <title>不屈不挠的足智多谋</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/relres/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/relres/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/relres.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;不屈不挠的足智多谋&#34;&gt;不屈不挠的足智多谋&lt;/h1&gt;&#xA;&lt;p&gt;2009年3月&lt;/p&gt;&#xA;&lt;p&gt;几天前，我终于把成为一名优秀创业创始人的素质概括为两个词：不屈不挠的足智多谋。&lt;/p&gt;&#xA;&lt;p&gt;在此之前，我最多只能把相反的素质概括为一个词：不幸。大多数词典说不幸意味着运气不好。但词典做得并不好。一支在比赛中超越对手但因裁判的错误决定而输掉的队伍可能被称为运气不好，但不会是不幸。不幸意味着被动。所谓不幸就是被环境所击打——让世界随心所欲地对待你，而不是你随心所欲地对待世界。[1]&lt;/p&gt;&#xA;&lt;p&gt;不幸的是，不幸没有反义词，这使得很难告诉创始人应该追求什么。&amp;ldquo;不要不幸&amp;quot;不是一个很好的口号。&lt;/p&gt;&#xA;&lt;p&gt;用隐喻来表达我们寻找的素质并不困难。最好的可能是橄榄球跑卫。一个好的跑卫不仅仅是有决心，还有灵活性。他们想要向前推进，但他们会即时调整计划。&lt;/p&gt;&#xA;&lt;p&gt;不幸的是，这只是一个隐喻，对美国以外的大多数人来说并不是很有用。&amp;ldquo;像一个跑卫一样&amp;quot;并不比&amp;quot;不要不幸&amp;quot;好。&lt;/p&gt;&#xA;&lt;p&gt;但最终我找到了如何直接表达这种素质的方法。我正在为投资者写演讲，我必须解释要在创始人中寻找什么。与不幸相反的人会是什么样？他们会是不屈不挠的足智多谋。不仅仅是不屈不挠。除了在一些大多数情况下不那么有趣的领域之外，这不足以让事情按照你的方式发展。在任何有趣的领域，困难都会是新颖的。这意味着你不能简单地冲过它们，因为你最初不知道它们有多难；你不知道你即将冲过的是泡沫块还是花岗岩。所以你必须足智多谋。你必须不断尝试新事物。&lt;/p&gt;&#xA;&lt;p&gt;不屈不挠地足智多谋。&lt;/p&gt;&#xA;&lt;p&gt;听起来不错，但这仅仅是一般成功的描述吗？我不这么认为。例如，这不是写作或绘画成功的秘诀。在那种工作中，秘诀更多的是主动好奇。足智多谋意味着障碍是外部的，在创业中通常是这样。但在写作和绘画中，它们主要是内部的；障碍是你自己的迟钝。[2]&lt;/p&gt;&#xA;&lt;p&gt;可能还有其他领域，&amp;ldquo;不屈不挠的足智多谋&amp;quot;是成功的秘诀。但尽管其他领域可能共享它，我认为这是我们找到的关于什么使一个优秀的创业创始人的最佳简短描述。我怀疑它可以变得更精确。&lt;/p&gt;&#xA;&lt;p&gt;既然我们知道我们在寻找什么，这就引出了其他问题。例如，这种素质可以教吗？经过四年试图教给人们，我可以说，是的，令人惊讶的是，很多时候它可以。不是对所有人，而是对许多人。[3] 有些人天生被动，但其他人有潜在的不屈不挠的足智多谋能力，只需要被发掘出来。&lt;/p&gt;&#xA;&lt;p&gt;对于那些迄今为止一直处于某种权威控制下的年轻人来说尤其如此。不屈不挠的足智多谋绝对不是大公司或大多数学校成功的秘诀。我甚至不想想大公司的秘诀是什么，但它肯定更长、更混乱，涉及足智多谋、服从和建立联盟的某种组合。&lt;/p&gt;&#xA;&lt;p&gt;识别这种素质也使我们更接近回答人们经常好奇的问题：可能有多少创业公司。并不像某些人认为的那样，这个数字有任何经济上限。没有理由相信消费者可以吸收的新创造财富量有任何限制，就像可证明的定理数量没有限制一样。所以可能创业公司数量的限制因素是潜在创始人的池子。有些人会成为优秀的创始人，而其他人不会。既然我们可以说什么使一个优秀的创始人，我们就知道如何为池子的大小设置上限。&lt;/p&gt;&#xA;&lt;p&gt;这个测试对个人也很有用。如果你想知道你是否是适合创业的那种人，问问自己你是否不屈不挠地足智多谋。如果你想知道是否应该招募某人作为联合创始人，问问他们是否是。&lt;/p&gt;&#xA;&lt;p&gt;你甚至可以在战术上使用它。如果我经营一家创业公司，这是我会在镜子上贴上的短语。&amp;ldquo;做人们想要的东西&amp;quot;是目的地，但&amp;quot;不屈不挠地足智多谋&amp;quot;是你如何到达那里。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 我认为词典错误的原因是词义已经改变。今天从头开始写词典的人不会说不幸意味着运气不好。但几百年前他们可能会。过去的人们更多地受制于环境，结果我们用于好结果和坏结果的很多词语都源于关于运气的词。&lt;/p&gt;&#xA;&lt;p&gt;当我在意大利生活时，我曾经试图告诉某人我在做某件事上没有取得多大成功，但我想不起意大利语中表示成功的词。我花了一些时间试图描述我想要的词。最后她说：&amp;ldquo;啊！Fortuna！&amp;quot;（运气）。&lt;/p&gt;&#xA;&lt;p&gt;[2] 创业公司有一些方面，秘诀是主动好奇。有时候你所做的几乎纯粹是发现。不幸的是，这些时间在整个过程中只占很小的比例。另一方面，在研究中也是如此。&lt;/p&gt;&#xA;&lt;p&gt;[3] 我几乎会对大多数人这么说，但我意识到（a）我不知道大多数人是怎样的，（b）我对人们改变的能力病理性地乐观。&lt;/p&gt;&#xA;&lt;p&gt;感谢特雷弗·布莱克威尔和杰西卡·利文斯顿阅读本文草稿。&lt;/p&gt;</description>
    </item>
    <item>
      <title>不平等</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/inequality/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/inequality/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/inequality.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;不平等&#34;&gt;不平等&lt;/h1&gt;&#xA;&lt;p&gt;2005年8月&lt;/p&gt;&#xA;&lt;p&gt;（本文源自2005年Defcon大会的演讲。）&lt;/p&gt;&#xA;&lt;p&gt;假设你想要消除经济不平等。有两种方法可以做到：给穷人钱，或者从富人那里拿走钱。但它们实际上是一回事，因为如果你想给穷人钱，你必须从某个地方得到它。你不能从穷人那里得到，否则他们最终会回到起点。你必须从富人那里得到。&lt;/p&gt;&#xA;&lt;p&gt;当然，有一种方法可以让穷人变得更富裕，而不仅仅是从富人那里转移资金。你可以帮助穷人提高生产力——例如，通过改善获得教育的机会。而不是从工程师那里拿钱给收银员，你可以让那些可能成为收银员的人成为工程师。&lt;/p&gt;&#xA;&lt;p&gt;这是让穷人变得更富裕的绝佳策略。但过去200年的证据表明，这并没有减少经济不平等，因为它也让富人变得更富裕。如果有更多的工程师，那么就有更多机会雇佣他们和向他们出售东西。亨利·福特不可能在一个大多数人仍然是自给农民的社会中通过制造汽车致富；他既没有工人也没有顾客。&lt;/p&gt;&#xA;&lt;p&gt;如果你想要减少经济不平等，而不仅仅是提高整体生活水平，仅仅提升穷人是不够的。如果你的新工程师之一有雄心壮志，并成为另一个比尔·盖茨怎么办？经济不平等将和以前一样糟糕。如果你真的想要压缩贫富差距，你必须向下压制顶部，同时向上提升底部。&lt;/p&gt;&#xA;&lt;p&gt;你如何向下压制顶部？你可以尝试减少那些赚钱最多的人的生产力：让最好的外科医生用左手操作，强迫受欢迎的演员暴饮暴食，等等。但这种方法很难实施。唯一的实际解决方案是让人们尽其所能做最好的工作，然后（通过税收或限制他们可以收取的费用）没收你认为任何盈余。&lt;/p&gt;&#xA;&lt;p&gt;所以让我们明确减少经济不平等意味着什么。它与从富人那里拿钱完全相同。&lt;/p&gt;&#xA;&lt;p&gt;当你将数学表达式转换为另一种形式时，你经常会注意到新事物。在这里也是如此。从富人那里拿钱结果会产生一些意想不到的后果，当你用&amp;quot;减少不平等&amp;quot;来表达同样的想法时。&lt;/p&gt;&#xA;&lt;p&gt;问题是，风险和回报必须成比例。一个只有10%获胜机会的赌注必须比有50%获胜机会的赌注支付更多，否则没有人会接受它。所以如果你削减可能回报的顶部，你从而减少了人们承担风险的意愿。&lt;/p&gt;&#xA;&lt;p&gt;转换为我们的原始表达式，我们得到：减少经济不平等意味着减少人们愿意承担的风险。&lt;/p&gt;&#xA;&lt;p&gt;如果最大回报减少，整个类别的风险就不再值得承担。高税率灾难性原因之一是，这类风险包括创办新公司。&lt;/p&gt;&#xA;&lt;h2 id=&#34;投资者&#34;&gt;投资者&lt;/h2&gt;&#xA;&lt;p&gt;创业公司本质上是有风险的。创业公司就像公海上的小船。一个大波浪你就会沉没。竞争产品、经济低迷、获得资金或监管批准的延迟、专利诉讼、技术标准变化、关键员工的离职、大客户的损失——任何这些都可能在一夜之间摧毁你。似乎只有大约十分之一的创业公司成功。[1]&lt;/p&gt;&#xA;&lt;p&gt;我们的创业公司支付给第一轮外部投资者36倍的回报。这意味着，按照当前的美国税率，如果我们有超过二十四分之一的成功机会，投资我们是有意义的。听起来大约正确。当我们是几个没有商业经验、在公寓里运营的书呆子时，这可能大致是我们的样子。&lt;/p&gt;&#xA;&lt;p&gt;如果这种风险没有回报，我们所知的风险投资就不会发生。&lt;/p&gt;&#xA;&lt;p&gt;如果新公司有其他资本来源，这可能没问题。为什么不就让政府或一些类似房利美的大型准政府组织来做风险投资，而不是私人基金呢？&lt;/p&gt;&#xA;&lt;p&gt;我告诉你为什么那不会奏效。因为那时你在要求政府或准政府员工做他们最不擅长的事情：承担风险。&lt;/p&gt;&#xA;&lt;p&gt;任何为政府工作的人都知道，重要的不是做出正确的选择，而是做出如果失败可以在以后证明合理的选择。如果有一个安全的选择，那就是官僚会选择的选择。但这恰恰是做风险投资的错误方式。业务的性质意味着你想做出风险极高的选择，如果前景看起来足够好的话。&lt;/p&gt;&#xA;&lt;p&gt;风险投资家目前的薪酬方式使他们专注于前景：他们获得基金收益的百分比。这有助于克服他们对投资一家由看起来像（也许确实是）大学生的书呆子运营的公司的可以理解的恐惧。&lt;/p&gt;&#xA;&lt;p&gt;如果不允许风险投资家变富，他们会表现得像官僚。没有获利的希望，他们只会害怕损失。所以他们会做出错误的选择。他们会拒绝书呆子，而选择穿着西装的花言巧语的MBA，因为如果失败了，那项投资更容易在以后证明合理。&lt;/p&gt;&#xA;&lt;h2 id=&#34;创始人&#34;&gt;创始人&lt;/h2&gt;&#xA;&lt;p&gt;但即使你能以某种方式重新设计风险投资，使其在不允许风险投资家变富的情况下工作，还有另一种投资者你根本无法替代：创业公司的创始人和早期员工。&lt;/p&gt;&#xA;&lt;p&gt;他们投资的是他们的时间和想法。但这些等同于金钱；证明是投资者愿意（如果被迫）将它们视为可互换的，给予&amp;quot; sweat equity&amp;quot;和他们用现金购买的股权相同的地位。&lt;/p&gt;&#xA;&lt;p&gt;你在投资时间这一事实并没有改变风险和回报之间的关系。如果你要把时间投资在成功机会很小的事情上，只有当有相应大的回报时你才会这样做。[2] 如果不允许大的回报，你不如稳妥行事。&lt;/p&gt;&#xA;&lt;p&gt;像许多创业创始人一样，我这样做是为了致富。但不是因为我想买昂贵的东西。我想要的是安全感。我想赚足够的钱，不必担心钱。如果我被禁止从创业公司赚足够的钱来做到这一点，我会通过其他方式寻求安全感：例如，去为一个大型的、稳定的组织工作，从那里很难被解雇。而不是在创业公司拼命工作，我会试图在一个大型研究实验室获得一个不错的、低压力的工作，或者在大学获得终身职位。&lt;/p&gt;&#xA;&lt;p&gt;这就是在不奖励风险的社会中每个人所做的。如果你不能确保自己的安全，下一个最好的事情是在某个大型组织中为自己筑巢，你的地位主要取决于资历。[3]&lt;/p&gt;&#xA;&lt;p&gt;即使我们能以某种方式替代投资者，我也不明白我们如何能替代创始人。投资者主要贡献金钱，原则上无论来源如何都是一样的。但创始人贡献想法。你无法替代那些。&lt;/p&gt;&#xA;&lt;p&gt;让我们复习一下到目前为止的论证链条。我正在得出一个许多读者可能会踢着尖叫地接受的结论，所以我试图使每个环节都牢不可破。减少经济不平等意味着从富人那里拿钱。由于风险和回报是等价的，减少潜在回报会自动减少人们对风险的偏好。创业公司本质上是有风险的。如果没有与风险成比例回报的前景，创始人不会将他们的时间投资在创业公司中。创始人是不可替代的。所以消除经济不平等意味着消除创业公司。&lt;/p&gt;&#xA;&lt;p&gt;经济不平等不仅仅是创业公司的结果。它是驱动它们的引擎，就像水的落差驱动水磨一样。人们创办创业公司是希望变得比以前富裕得多。如果你的社会试图阻止任何人比其他人富裕得多，它也会阻止一个人在t2比t1富裕得多。&lt;/p&gt;&#xA;&lt;h2 id=&#34;增长&#34;&gt;增长&lt;/h2&gt;&#xA;&lt;p&gt;这个论证相应适用。不仅仅是你消除经济不平等，你就没有创业公司。在你减少经济不平等的程度上，你减少了创业公司的数量。[4] 增加税收，承担风险的意愿相应减少。&lt;/p&gt;&#xA;&lt;p&gt;这似乎对每个人都不好。新技术和新工作都不成比例地来自新公司。事实上，如果你没有创业公司，很快你也不会有老牌公司，就像如果你停止生孩子，很快你也不会有任何成年人一样。&lt;/p&gt;&#xA;&lt;p&gt;说我们应该减少经济不平等听起来很仁慈。当你那样说的时候，谁能与你争论？不平等一定是坏的，对吧？说我们应该减少新公司成立率听起来就不那么仁慈了。然而一个意味着另一个。&lt;/p&gt;&#xA;&lt;p&gt;事实上，减少投资者对风险的偏好可能不仅仅扼杀初生的创业公司，而且特别扼杀最有前途的创业公司。与老牌公司相比，创业公司以更大的风险产生更快的增长。这种趋势在创业公司中也成立吗？也就是说，风险最高的创业公司是否是那些如果成功就产生最大增长的公司？我怀疑答案是肯定的。这是一个令人不寒而栗的想法，因为这意味着如果你削减投资者对风险的偏好，最有益的创业公司是第一批消失的。&lt;/p&gt;&#xA;&lt;p&gt;当然，并非所有富人都是通过创业公司致富的。如果我们让人们通过创办创业公司致富，但通过税收拿走所有其他盈余财富，那会怎样？那至少会减少不平等吗？&lt;/p&gt;&#xA;&lt;p&gt;比你想象的要少。如果你让人们只能通过创办创业公司致富，想要致富的人都会创办创业公司。这可能是一件伟大的事情。但我认为这不会对财富分配产生太大影响。想要致富的人会做他们必须做的一切。如果创业公司是唯一的方法，你只会得到更多的人创办创业公司。（也就是说，如果你非常仔细地制定法律。更可能的是，你会得到很多人做那些可以在纸上看起来像创业公司的事情。）&lt;/p&gt;&#xA;&lt;p&gt;如果我们决心消除经济不平等，仍然有一条出路：我们可以说我们愿意继续前进，不要创业公司。如果我们这样做了会发生什么？&lt;/p&gt;&#xA;&lt;p&gt;至少，我们不得不接受较低的技术增长率。如果你相信大型、老牌的公司可以某种程度地像创业公司一样快速开发新技术，那么球在你这边，解释如何。（如果你能提出一个看似合理的说法，你可以通过写商业书籍和为大公司咨询赚大钱。）[5]&lt;/p&gt;&#xA;&lt;p&gt;好的，所以我们增长变慢。有那么糟糕吗？嗯，实际中它糟糕的一个原因是其他国家可能不同意与我们一起放慢。如果你满足于以比世界其他地区慢的速度开发新技术，实际发生的是你根本不会发明任何东西。你可能发现的任何东西都已经在其他地方被发明了。你唯一能回报的就是原材料和廉价劳动力。一旦你沦落到那么低，其他国家可以对你做任何他们喜欢的事情：安装傀儡政府、抽走你最好的工人、让你的女人当妓女、在你的领土上倾倒他们的有毒废物——我们现在对穷国做的所有事情。唯一的防御是孤立自己，就像共产主义国家在二十世纪所做的那样。但那时的问题是，你必须成为警察国家来执行它。&lt;/p&gt;&#xA;&lt;h2 id=&#34;财富和权力&#34;&gt;财富和权力&lt;/h2&gt;&#xA;&lt;p&gt;我意识到创业公司不是那些想要消除经济不平等的人的主要目标。他们真正厌恶的是通过与权力联盟而自我永续的那种财富。例如，为政治家竞选活动提供资金以换取政府合同的建筑公司，或者通过把孩子送到为此目的而设计的昂贵学校来让孩子进入好大学的富父母。但如果你试图通过经济政策攻击这种类型的财富，很难不摧毁创业公司作为附带损害。&lt;/p&gt;&#xA;&lt;p&gt;这里的问题不是财富，而是腐败。那么为什么不针对腐败呢？&lt;/p&gt;&#xA;&lt;p&gt;如果我们能防止财富转化为权力，我们就不需要防止人们变富。在这方面已经取得了进展。1925年康内留斯·范德比尔特的浪费孙子雷吉因饮酒过度去世之前，曾五次撞倒行人，其中两人死亡。到1969年泰德·肯尼迪在查帕奎迪克桥上开车坠桥时，这个限制似乎下降到一个。今天可能完全是零。但改变的不是财富的变化。改变的是财富转化为权力的能力。&lt;/p&gt;&#xA;&lt;p&gt;你如何打破财富和权力之间的联系？要求透明度。密切关注权力如何行使，并要求说明决策是如何做出的。为什么不是所有警察审问都被录像？为什么普林斯顿大学2007届36%的学生来自预科学校，而只有1.7%的美国孩子上这些学校？美国真正入侵伊拉克的原因是什么？为什么政府官员不披露更多关于他们财务的信息，而且为什么只在任期内？&lt;/p&gt;&#xA;&lt;p&gt;我的一位非常了解计算机安全的朋友说，最重要的步骤是记录一切。在他还是个孩子试图闯入计算机时，最担心他的是留下痕迹的想法。避免给他带来的不便比任何故意设置在他路径上的障碍都大。&lt;/p&gt;&#xA;&lt;p&gt;像所有非法联系一样，财富和权力之间的联系在秘密中繁荣。暴露所有交易，你将大大减少它。记录一切。那是一个似乎已经在起作用的策略，它没有让你的整个国家变穷的副作用。&lt;/p&gt;&#xA;&lt;p&gt;我不认为很多人意识到经济不平等和风险之间有联系。我直到最近才完全理解。我多年来当然知道，如果在创业公司中没有成功，另一个选择是获得一个舒适的、终身制的研究工作。但我不明白支配我行为的方程式。同样，经验上明显，一个不让人们致富的国家注定要灾难，无论是戴克里先的罗马还是哈罗德·威尔逊的英国。但直到最近我才理解风险所起的作用。&lt;/p&gt;&#xA;&lt;p&gt;如果你试图攻击财富，你最终也会钉住风险，以及增长。如果我们想要一个更公平的世界，我认为更好地攻击下游一步，财富转化为权力的地方。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;注释&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;[1] 这里的成功是从初始投资者的角度定义的：要么是IPO，要么是以超过最后一轮融资估值的收购。传统的十分之一成功率看起来可疑地整齐，但与风险投资家的对话表明，对于整体创业公司来说这大致正确。顶级风险投资公司期望做得更好。&lt;/p&gt;&#xA;&lt;p&gt;[2] 我不是声称创始人坐下来计算创业公司的预期税后回报。他们受到其他做过这件事的人的例子激励。而这些例子确实反映了税后回报。&lt;/p&gt;&#xA;&lt;p&gt;[3] 推测：在一个（不腐败）国家或组织中的财富变化将与资历制度的普遍性成反比。所以如果你压制财富变化，资历将相应变得更加重要。到目前为止，我不知道有反例，虽然在非常腐败的国家你可能同时得到两者。（感谢Daniel Sobral指出这一点。）&lt;/p&gt;&#xA;&lt;p&gt;[4] 在一个真正封建经济的国家，你可能能够成功地重新分配财富，因为没有创业公司可杀。&lt;/p&gt;&#xA;&lt;p&gt;[5] 创业公司开发新技术的速度是他们支付如此之好的另一个原因。正如我在《如何创造财富》中所解释的，你在创业公司中所做的是将一生的价值的工作压缩到几年中。阻止那看起来和阻止承担风险一样愚蠢。&lt;/p&gt;&#xA;&lt;p&gt;感谢克里斯·安德森、特雷弗·布莱克威尔、丹·吉芬、杰西卡·利文斯顿和埃文·威廉姆斯阅读本文草稿，以及兰利·斯坦纳特、桑加姆·潘特和迈克·莫里茨提供关于风险投资的信息。&lt;/p&gt;&#xA;&lt;p&gt;罗马尼亚语翻译 | 荷兰语翻译 | 繁体中文翻译 | 日语翻译 | 希伯来语翻译&lt;/p&gt;</description>
    </item>
    <item>
      <title>不要不要创业</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/notnot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/notnot/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/notnot.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;不要不要创业&#34;&gt;不要不要创业&lt;/h1&gt;&#xA;&lt;p&gt;2007年3月&lt;/p&gt;&#xA;&lt;p&gt;（本文源自2007年创业学校和伯克利CSUA的演讲。）&lt;/p&gt;&#xA;&lt;p&gt;我们现在做Y Combinator已经足够长的时间，有了一些关于成功率的数据。我们的第一批，2005年夏天，有八家创业公司。在那八家中，现在看来至少有四家成功了。三家被收购：Reddit是两家公司合并的结果，Reddit和Infogami，还有一家我们不能谈论的被收购了。那批中的另一家是Loopt，做得非常好，如果他们愿意，大概十分钟内就可以被收购。&lt;/p&gt;&#xA;&lt;p&gt;所以大约两年前那个夏天的一半创始人，现在都富有了，至少按照他们的标准是这样。（当你变富时学到的一件事是，富有有很多层次。）&lt;/p&gt;&#xA;&lt;p&gt;我不准备预测我们的成功率会保持在50%那么高。第一批可能是个异常。但我们应该能够优于经常被引用的（可能是编造的）10%的标准数字。我觉得瞄准25%是安全的。&lt;/p&gt;&#xA;&lt;p&gt;即使是失败的创始人似乎也没有那么糟糕的经历。在最初的八家创业公司中，三家现在可能已经死了。在两种情况下，创始人在夏天结束后只是去做其他事情了。我不认为他们被这次经历创伤了。最接近创伤性失败的是Kiko，其创始人继续为他们的创业公司工作了一整年，然后被Google Calendar压垮了。但他们最终很快乐。他们在eBay上以25万美元的价格出售了他们的软件。在偿还了天使投资者后，他们每人约有大约一年的薪水。[1]然后他们立即开始了一家新的、更令人兴奋的创业公司，Justin.TV。&lt;/p&gt;&#xA;&lt;p&gt;所以这里有一个更引人注目的统计数据：那第一批中有0%的人有糟糕的经历。他们有起有落，像每家创业公司一样，但我不认为有人会用格子间的工作来交换。而且这个统计数据可能不是异常。无论我们的长期成功率最终如何，我认为希望得到常规工作的人的比例将保持在接近0%。&lt;/p&gt;&#xA;&lt;p&gt;对我来说最大的谜团是：为什么没有更多的人创业？如果几乎每个这样做的人都更喜欢它而不是常规工作，而且相当比例的人变得富有，为什么不是每个人都想做这件事？很多人认为我们在每个融资周期收到数千份申请。事实上，我们通常只收到几百份。为什么没有更多的人申请？虽然对于观察这个世界的人来说，创业公司似乎像疯狂一样涌现，但与拥有必要技能的人数相比，这个数字很小。绝大多数程序员仍然直接从大学到格子间，并留在那里。&lt;/p&gt;&#xA;&lt;p&gt;人们似乎没有为自己的利益行事。这是怎么回事？嗯，我可以回答这个问题。由于Y Combinator在风险投资过程的最开始的位置，我们可能是世界上关于不确定是否想创业的人的心理学的专家。&lt;/p&gt;&#xA;&lt;p&gt;不确定没有什么错。如果你是一个正在考虑创业并犹豫不决的黑客，你是一个伟大传统的一部分。拉里和谢尔盖在开始Google之前似乎也有同样的感觉，杰里和杨致远在开始雅虎之前也是如此。事实上，我猜最成功的创业公司是由不确定的黑客而不是热血沸腾的商业人士创办的。&lt;/p&gt;&#xA;&lt;p&gt;我们有一些证据支持这一点。几家我们资助的最成功的创业公司后来告诉我们，他们只是在最后一刻才决定申请。有些人在截止日期前几小时才决定。&lt;/p&gt;&#xA;&lt;p&gt;处理不确定性的方法是将其分析为组成部分。大多数不愿意做某件事的人头脑中有大约八个不同的原因混在一起，他们自己也不知道哪些最大。有些是合理的，有些是虚假的，但除非你知道每个的相对比例，否则你不知道你的整体不确定性是主要合理还是主要虚假。&lt;/p&gt;&#xA;&lt;p&gt;所以我将列出人们不愿创业的所有组成部分，并解释哪些是真实的。然后潜在的创始人可以用它作为检查清单来检查自己的感受。&lt;/p&gt;&#xA;&lt;p&gt;我承认我的目标是增强你的自信。但这里有两点与通常的信心建设练习不同。一是我有诚实的动机。在信心建设行业的大多数人，当你买书或付费参加他们告诉你有多棒的研讨会时，他们已经实现了他们的目标。而如果我鼓励不应该创业的人创业，我让自己的生活更糟。如果我鼓励太多人申请Y Combinator，这只是意味着我有更多工作，因为我必须阅读所有申请。&lt;/p&gt;&#xA;&lt;p&gt;另一件将要不同的事情是我的方法。而不是积极的，我将是消极的。而不是告诉你&amp;quot;来吧，你能做到&amp;quot;，我将考虑你不这样做的所有原因，并说明为什么大多数（但不是全部）应该被忽略。我们将从每个人都有的那个开始。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;太年轻&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;很多人认为他们太年轻，不能创业。很多是对的。世界各地的中位数年龄约为27岁，所以可能有三分之一的人口可以真实地说他们太年轻了。&lt;/p&gt;&#xA;&lt;p&gt;什么年龄太年轻？我们对Y Combinator的目标之一是发现创业公司创始人的年龄下限。在我们看来，投资者在这方面似乎过于保守——他们想资助教授，而实际上他们应该资助研究生甚至本科生。&lt;/p&gt;&#xA;&lt;p&gt;我们从推动这个边界中发现的主要事情不是边界在哪里，而是它有多模糊。外部界限可能低至16岁。我们不考虑18岁以下的人，因为比那更年轻的人不能合法签订合同。但我们迄今为止资助的最成功的创始人，Sam Altman，当时是19岁。&lt;/p&gt;&#xA;&lt;p&gt;然而，Sam Altman是一个离群的数据点。当他19岁时，他看起来好像有40岁的人在他里面。还有其他19岁的人内心是12岁。&lt;/p&gt;&#xA;&lt;p&gt;我们对超过特定年龄的人有一个独特的词&amp;quot;成年人&amp;quot;是有原因的。有一个你跨越的门槛。它通常固定在21岁，但不同的人在非常不同的年龄跨越它。如果你已经跨越了这个门槛，无论你的年龄如何，你都足够老，可以创业了。&lt;/p&gt;&#xA;&lt;p&gt;你怎么判断？成年人有几个测试。实际上，我在遇到Sam Altman后才意识到这些测试的存在。我注意到我感觉好像在和一个比我年长得多的人交谈。后来我想，我到底在衡量什么？是什么让他看起来更老？&lt;/p&gt;&#xA;&lt;p&gt;成年人使用的一个测试是你是否还有孩子般的逃避反应。当你还是个小孩子，被要求做困难的事情时，你可以哭并说&amp;quot;我做不到&amp;quot;，成年人可能会让你离开。作为一个孩子，你可以通过说&amp;quot;我只是个孩子&amp;quot;来按下一个神奇的按钮，让你摆脱大多数困难情况。而成年人，根据定义，不允许逃避。他们当然还会这样做，但当他们这样做时，会被无情地修剪。&lt;/p&gt;&#xA;&lt;p&gt;判断成年人的另一种方式是他们如何应对挑战。尚未成年的人往往以承认成年人优势的方式回应成年人的挑战。如果一个成年人的说&amp;quot;那是个愚蠢的想法&amp;quot;，孩子要么会夹着尾巴爬走，要么会反抗。但反抗和顺从一样都假定了 inferiority。对&amp;quot;那是个愚蠢的想法&amp;quot;的成年人回应只是看着对方的眼睛说&amp;quot;真的吗？你为什么这么想？&amp;quot;&lt;/p&gt;&#xA;&lt;p&gt;当然，有很多成年人仍然以孩子般的方式应对挑战。你不常发现的是像成年人一样应对挑战的孩子。当你找到时，你找到了一个成年人，无论他们的年龄。&lt;/p&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;太缺乏经验&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;我曾经写过，创业公司创始人应该至少23岁，人们应该在创办自己的公司之前为另一家公司工作几年。我不再相信这一点，改变我想法的是我们资助的创业公司的例子。&lt;/p&gt;&#xA;&lt;p&gt;我仍然认为23岁比21岁好。但是如果你21岁，获得经验的最好方法是创业。所以，矛盾的是，如果你太缺乏经验而不能创业，你应该做什么？创业。这是治愈缺乏经验比正常工作更有效的方法。事实上，获得正常工作实际上可能让你更不能创业，把你变成一个温顺的动物，认为他需要办公室来工作，需要产品经理告诉他写什么软件。&lt;/p&gt;&#xA;&lt;p&gt;真正让我相信这一点的是Kikos。他们一毕业就开始创业。他们的缺乏经验导致他们犯了很多错误。但是当我们资助他们的第二家创业公司时，一年后，他们变得极其强大。他们当然不是温顺的动物。如果他们那年在微软，甚至谷歌工作，他们不可能有这么多成长。他们仍然会是腼腆的初级程序员。&lt;/p&gt;&#xA;&lt;p&gt;所以现在我建议人们一毕业就开始创业。没有比年轻时承担风险更好的时机了。当然，你可能会失败。但即使是失败也会让你比找工作更快达到最终目标。&lt;/p&gt;&#xA;&lt;p&gt;说这些让我有点担心，因为实际上我们是在建议人们通过在我们的费用上失败来教育自己，但这是事实。&lt;/p&gt;&#xA;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;不够坚定&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;作为创业公司创始人，你需要很多决心才能成功。这可能是成功最好的单一预测因素。&lt;/p&gt;&#xA;&lt;p&gt;有些人可能不够坚定，无法成功。我很难确定地说，因为我如此坚定，无法想象那些不坚定的人头脑中在想什么。但我知道他们存在。&lt;/p&gt;&#xA;&lt;p&gt;大多数黑客可能低估了他们的决心。我看到很多人在习惯了经营创业公司后变得更加坚定。我能想到我们资助的几个人，起初如果被200万美元收购会很高兴，但现在他们着眼于世界统治。&lt;/p&gt;&#xA;&lt;p&gt;当拉里和谢尔盖自己对创业不确定时，你怎么判断你是否足够坚定？我在这里猜测，但我会说测试是你是否有足够的动力去从事自己的项目。虽然他们可能对是否想创业不确定，但拉里和谢尔盖似乎不是温顺的小研究助理，服从地做顾问们的吩咐。他们开始自己的项目。&lt;/p&gt;&#xA;&lt;ol start=&#34;4&#34;&gt;&#xA;&lt;li&gt;不够聪明&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;你可能需要中等聪明才能作为创业公司创始人取得成功。但如果你担心这个，你可能错了。如果你足够聪明，担心你可能不够聪明而不能创业，那你可能就是。&lt;/p&gt;&#xA;&lt;p&gt;无论如何，创业并不需要那么多的智力。有些创业公司需要。你必须擅长数学才能编写Mathematica。但大多数公司做的更平凡的事情，决定因素是努力，而不是智力。硅谷可能会扭曲你对此的看法，因为这里有一个聪明的崇拜。不聪明的人至少试图表现得那样。但如果你认为需要很多智力才能变富，试着在纽约或洛杉矶的一些高档地方待几天。&lt;/p&gt;&#xA;&lt;p&gt;如果你认为自己不够聪明，不能做技术上困难的事情创业，那就编写企业软件。企业软件公司不是技术公司，它们是销售公司，销售主要取决于努力。&lt;/p&gt;&#xA;&lt;ol start=&#34;5&#34;&gt;&#xA;&lt;li&gt;对商业一无所知&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;这是另一个系数应该为零的变量。创业不需要了解商业知识。最初的焦点应该是产品。在这个阶段，你只需要知道如何建造人们想要的东西。如果你成功了，你将不得不考虑如何从中赚钱。但这很容易，你可以在实践中学习。&lt;/p&gt;&#xA;&lt;p&gt;我告诉创始人只要做出伟大的东西，不要太担心赚钱，受到了相当多的批评。然而所有经验证据都指向那个方向：几乎所有制造出受欢迎东西的创业公司都能设法从中赚钱。收购者私下告诉我，他们收购创业公司不是为了收入，而是为了它们的战略价值。这意味着，因为他们制造了人们想要的东西。收购者知道这个规则对他们也适用：如果用户喜欢你，你总能从中赚钱，如果他们不喜欢，世界上最聪明的商业模式也无法拯救你。&lt;/p&gt;&#xA;&lt;p&gt;为什么这么多人与我争论？我认为一个原因是他们讨厌二十多岁的人可以通过制造一些不赚钱的酷东西而变富的想法。他们只是不希望那是可能的。但它有多可能并不取决于他们多么希望它是可能的。&lt;/p&gt;&#xA;&lt;p&gt;有一段时间，听到自己被描述为某种不负责任的吹笛人，引导易受影响的年轻黑客走向毁灭，让我很恼火。但现在我意识到这种争议是好主意的标志。&lt;/p&gt;&#xA;&lt;p&gt;最有价值的真理是大多数人不相信的真理。它们就像被低估的股票。如果你从它们开始，你将拥有整个领域。所以当你找到一个你知道是好的但大多数人不同意的主意时，你不应该仅仅忽略他们的反对，而应该积极地向那个方向推进。在这种情况下，这意味着你应该寻找那些会受欢迎但似乎很难从中赚钱的主意。&lt;/p&gt;&#xA;&lt;p&gt;我们赌一轮种子资金，你不能制造出我们无法弄清楚如何从中赚钱的受欢迎东西。&lt;/p&gt;&#xA;&lt;ol start=&#34;6&#34;&gt;&#xA;&lt;li&gt;没有联合创始人&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;没有联合创始人是一个真正的问题。创业公司对一个人来说太多了。虽然我们在很多问题上与其他投资者不同，但我们都同意这一点。所有投资者，无一例外，更可能资助有联合创始人的人而不是没有的。&lt;/p&gt;&#xA;&lt;p&gt;我们资助了两个单人创始人，但在这两种情况下，我们建议他们的第一要务应该是找到联合创始人。两人都做到了。但我们宁愿他们在申请前就有联合创始人。对于一个刚刚获得资助的项目来说，找到联合创始人并不太难，我们宁愿有足够承诺的联合创始人来签署非常困难的事情。&lt;/p&gt;&#xA;&lt;p&gt;如果你没有联合创始人，你应该做什么？找一个。这比什么都重要。如果你住的地方没有人想和你一起创业，就搬去有这样的人的地方。如果没有人想在你当前的想法上与你合作，就转向人们想合作的想法。&lt;/p&gt;&#xA;&lt;p&gt;如果你还在上学，你被潜在的联合创始人包围着。几年后，找到他们就变得更难了。你不仅可以从中选择的人更少，而且大多数人已经有工作，甚至可能有家庭要支持。所以如果你在大学时有朋友曾经与你一起策划创业，尽可能与他们保持联系。这可能有助于保持梦想的活力。&lt;/p&gt;&#xA;&lt;p&gt;你可能通过用户组或会议之类的地方遇到联合创始人。但我不会太乐观。你需要与某人一起工作才能知道你是否想要他们作为联合创始人。[2]&lt;/p&gt;&#xA;&lt;p&gt;从这里得出的真正教训不是如何找到联合创始人，而是你应该在年轻且有很多人在身边的时候创业。&lt;/p&gt;&#xA;&lt;ol start=&#34;7&#34;&gt;&#xA;&lt;li&gt;没有想法&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;在某种意义上，如果你没有好主意，这不是问题，因为大多数创业公司都会改变他们的想法。在平均的Y Combinator创业公司中，我猜在头三个月结束时，70%的想法是新的。有时是100%。&lt;/p&gt;&#xA;&lt;p&gt;事实上，我们如此确信创始人比初始想法更重要，我们将在这个融资周期尝试一些新的东西。我们将让人们根本没有想法就申请。如果你愿意，你可以用&amp;quot;我们不知道&amp;quot;来回答申请表上问你要做什么的问题。如果你看起来真的很好，我们无论如何都会接受你。我们有信心可以坐下来和你一起策划一些有希望的项目。&lt;/p&gt;</description>
    </item>
    <item>
      <title>专利承诺</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/patentpledge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/patentpledge/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/patentpledge.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;专利承诺&#34;&gt;专利承诺&lt;/h1&gt;&#xA;&lt;p&gt;2011年8月&lt;/p&gt;&#xA;&lt;p&gt;我最近意识到，我们也许能够解决专利问题的一部分，而无需等待政府。&lt;/p&gt;&#xA;&lt;p&gt;我从来没有100%确定专利是帮助还是阻碍技术进步。当我还是个孩子的时候，我认为它们有帮助。我认为它们保护发明人免于被大公司窃取想法。也许在过去，当更多东西是物理的时候，这更真实。但无论专利总体上是否是好事，似乎确实有使用它们的坏方式。而且由于专利的坏用途似乎在增加，对专利改革的呼吁也在增加。&lt;/p&gt;&#xA;&lt;p&gt;专利改革的问题在于它必须通过政府。那往往很慢。但最近我意识到我们也可以在下游攻击问题。除了在专利发布时掐断专利流外，在某些情况下，我们也许能够在它们被使用时掐断它。&lt;/p&gt;&#xA;&lt;p&gt;使用专利的一种明显不鼓励创新的方式是，当拥有糟糕产品的老牌公司使用专利来压制拥有好产品的小竞争对手时。这种滥用类型我们也许能够减少，而无需通过政府。&lt;/p&gt;&#xA;&lt;p&gt;这样做的方法是让那些不屑于玩这种把戏的公司公开承诺不这样做。然后，那些不会做出这种承诺的公司将非常显眼。潜在员工不会想为他们工作。投资者也将能够看到他们是那种通过诉讼而不是通过制造好产品来竞争的公司。&lt;/p&gt;&#xA;&lt;p&gt;承诺如下：不首先使用软件专利针对少于25人的公司。&lt;/p&gt;&#xA;&lt;p&gt;我故意为了简洁而牺牲了精确性。专利承诺没有法律约束力。它就像谷歌的&amp;quot;不作恶&amp;quot;。他们没有定义什么是邪恶，但通过公开这样说，他们说自己愿意被一个标准约束，比如奥驰亚就不是。虽然有限制，但&amp;quot;不作恶&amp;quot;对谷歌有好处。技术公司通过吸引最有生产力的人来获胜，而最有生产力的人被那些对自己要求高于法律要求的雇主所吸引。[1]&lt;/p&gt;&#xA;&lt;p&gt;专利承诺实际上是一个更狭窄但开源的&amp;quot;不作恶&amp;quot;。我鼓励每家技术公司采用它。如果你想帮助修复专利问题，鼓励你的雇主采用。&lt;/p&gt;&#xA;&lt;p&gt;大多数技术公司已经不会降低到对创业公司使用专利。你没有看到谷歌或Facebook因专利侵权而起诉创业公司。他们不需要。所以对于更好的技术公司，专利承诺不需要改变行为。他们只是承诺做他们无论如何都会做的事情。当所有不会对创业公司使用专利的公司都这样说了，坚持者将非常显眼。&lt;/p&gt;&#xA;&lt;p&gt;专利承诺不能解决专利的每一个问题。例如，它不会阻止专利流氓；他们已经是被排斥者。但专利承诺确实解决的问题可能比专利流氓的问题更严重。专利流氓只是寄生虫。笨拙的寄生虫偶尔可能会杀死宿主，但这不是它的目标。而因专利侵权而起诉创业公司的公司通常这样做，明确的目标是让他们的产品远离市场。&lt;/p&gt;&#xA;&lt;p&gt;对创业公司使用专利的公司是在根本上攻击创新。现在任何人都可以对这个问题做一些事情，而无需等待政府：询问公司的立场。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;专利承诺网站&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;注释：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;[1] 因为承诺故意含糊，我们在解释时需要常识。甚至反之亦然：承诺含糊是为了让人们在解释时使用常识。&lt;/p&gt;&#xA;&lt;p&gt;例如，我故意避免说25人是否必须是员工，或者承包商是否也算。如果一个公司必须在这种精细程度上吹毛求疵，说明诉讼是否会违反专利承诺，这可能仍然是一种卑鄙的行为。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;没有发生的投资&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>两种判断</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/judgement/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/judgement/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/judgement.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;两种判断&#34;&gt;两种判断&lt;/h1&gt;&#xA;&lt;p&gt;2007年4月&lt;/p&gt;&#xA;&lt;p&gt;人们有两种不同的方式来判断你。有时正确判断你是最终目标。但还有第二种更常见的判断类型，其中正确判断你不是目标。我们倾向于将所有对我们的判断视为第一种类型。如果我们意识到哪些是哪些不是，我们可能会更快乐。&lt;/p&gt;&#xA;&lt;p&gt;第一种判断类型，即判断你是最终目标的类型，包括法庭案件、课程成绩和大多数比赛。这样的判断当然可能是错误的，但因为目标是正确判断你，通常有某种上诉过程。如果你觉得自己被错误判断，你可以抗议自己受到了不公正对待。&lt;/p&gt;&#xA;&lt;p&gt;几乎所有对儿童做出的判断都是这种类型，所以我们很早就养成了认为所有判断都是这样的习惯。&lt;/p&gt;&#xA;&lt;p&gt;但事实上还有第二个更大的判断类别，其中判断你只是达到其他目的的手段。这些包括大学录取、招聘和投资决策，当然还有约会中的判断。这种判断并不是真正关于你。&lt;/p&gt;&#xA;&lt;p&gt;把自己置于为国家队选拔球员的位置。假设为了简单起见，这是一个没有位置的比赛，你必须选择20名球员。会有一些明显应该入选的明星球员，许多明显不应该入选的球员。你的判断唯一有影响的地方是在边界案例中。假设你搞砸了，低估了第20好的球员，导致他没有入选，他的位置被第21好的球员取代。你仍然选择了一个好球队。如果球员的能力分布正常，第21好的球员只会比第20好的球员稍微差一点。他们之间的差异可能小于测量误差。&lt;/p&gt;&#xA;&lt;p&gt;第20好的球员可能觉得自己被错误判断了。但你的目标不是提供估计人们能力的服务。而是选择一个球队，如果第20和第21好的球员之间的差异小于测量误差，你仍然最优地做到了。&lt;/p&gt;&#xA;&lt;p&gt;甚至用&amp;quot;不公正&amp;quot;这个词来描述这种错误判断也是错误的类比。它的目标不是产生对任何给定个人的正确估计，而是选择一个合理的最优集合。&lt;/p&gt;&#xA;&lt;p&gt;导致我们在这里误入歧途的一件事是选择者似乎处于权力地位。这使他看起来像法官。如果你把判断你的人视为顾客而不是法官，对公平的期望就消失了。一本好小说的作者不会抱怨读者更喜欢有艳丽封面的低俗小说是不公平的。愚蠢，也许，但不公平。&lt;/p&gt;&#xA;&lt;p&gt;我们早期的训练和自我中心结合起来使我们相信每一次对我们的判断都是关于我们。事实上大多数不是。这是一个罕见的例子，减少自我中心会使人们更自信。一旦你意识到大多数判断你的人多么不关心正确判断你——一旦你意识到由于大多数申请人池的正常分布，在判断最有影响的情况下，准确判断最不重要——你就不会那么个人化地对待拒绝。&lt;/p&gt;&#xA;&lt;p&gt;奇怪的是，不那么个人化地对待拒绝可能帮助你更少地被拒绝。如果你认为判断你的人会努力正确判断你，你可以被动。但你越意识到大多数判断受到随机、无关因素的极大影响——大多数判断你的人更像善变的小说购买者而不是智慧有洞察力的地方官——你越意识到你可以做事情来影响结果。&lt;/p&gt;&#xA;&lt;p&gt;应用这个原则的一个好地方是大学申请。大多数申请大学的高中生以通常儿童的自卑和自我中心混合这样做：自卑在于他们假设招生委员会必须是全知的；自我中心在于他们假设招生委员会足够关心他们，深入挖掘他们的申请，弄清楚他们是否优秀。这些结合起来使申请人在申请时被动，在被拒绝时受伤。如果大学申请人意识到大多数选拔过程多么快速和非个人化，他们会更努力推销自己，不那么个人化地对待结果。&lt;/p&gt;&#xA;&lt;p&gt;西班牙语翻译 | 俄语翻译 | 阿拉伯语翻译&lt;/p&gt;</description>
    </item>
    <item>
      <title>为什么 Arc 不是特别面向对象的</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/noop/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/noop/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/noop.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;为什么-arc-不是特别面向对象的&#34;&gt;为什么 Arc 不是特别面向对象的&lt;/h1&gt;&#xA;&lt;p&gt;目前有一种对面向对象编程的狂热，但我认识的一些最聪明的程序员是对此最不兴奋的人。&lt;/p&gt;&#xA;&lt;p&gt;我自己的感觉是，面向对象编程在某些情况下是一种有用的技术，但它不是必须渗透到你写的每个程序中的东西。你应该能够定义新类型，但不必将每个程序都表达为新类型的定义。&lt;/p&gt;&#xA;&lt;p&gt;我认为人们喜欢面向对象编程有五个原因，其中三个半是坏的：&lt;/p&gt;&#xA;&lt;p&gt;如果你有一个静态类型的语言，没有词法闭包或宏，面向对象编程是令人兴奋的。在某种程度上，它提供了一种绕过这些限制的方法。（见 Greenspun 第十规则。）&lt;/p&gt;&#xA;&lt;p&gt;面向对象编程在大公司很受欢迎，因为它适合他们编写软件的方式。在大公司，软件往往由大量（且经常变动的）平庸程序员团队编写。面向对象编程对这些程序员施加了一种纪律，防止任何一个人造成太大的损害。代价是产生的代码充满了协议和重复。这对大公司来说不是太高的价格，因为他们的软件无论如何都可能是臃肿和充满重复的。&lt;/p&gt;&#xA;&lt;p&gt;面向对象编程产生了很多看起来像工作的东西。在折叠纸的时代，有一种程序员只会在一页上放五到十行代码，前面是二十行精心格式化的注释。面向对象编程对这些来说就像可卡因：它让你将所有这些脚手架直接整合到源代码中。Lisp 黑客可能通过将符号推到列表上来处理的东西，变成了整个类的文件和方法。所以如果你想说服自己或其他人你正在做很多工作，这是一个好工具。&lt;/p&gt;&#xA;&lt;p&gt;如果语言本身是一个面向对象的程序，它可以被用户扩展。嗯，也许。或者也许你可以通过提供面向对象编程的子概念单点来做得更好。例如，重载本质上并不与类绑定。我们拭目以待。&lt;/p&gt;&#xA;&lt;p&gt;面向对象的抽象很好地映射到某些特定类型程序的领域，比如模拟和 CAD 系统。&lt;/p&gt;&#xA;&lt;p&gt;我个人从来不需要面向对象的抽象。Common Lisp 有一个极其强大的对象系统，我从未使用过一次。我做过很多事情（例如，制作充满闭包的哈希表），这些在较弱的语言中需要面向对象技术，但我从未不得不使用 CLOS。&lt;/p&gt;&#xA;&lt;p&gt;也许我只是很愚蠢，或者只在应用程序的有限子集上工作过。基于自己的编程经验设计语言是有危险的。但放入你从未需要的东西因为它被认为是个好主意似乎更危险。&lt;/p&gt;</description>
    </item>
    <item>
      <title>为什么书呆子不受欢迎</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/nerds/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/nerds/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/nerds.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;为什么书呆子不受欢迎&#34;&gt;为什么书呆子不受欢迎&lt;/h1&gt;&#xA;&lt;p&gt;2003年2月&lt;/p&gt;&#xA;&lt;p&gt;当我们还在初中的时候，我的朋友 Rich 和我根据受欢迎程度制作了一张学校午餐桌的地图。这很容易做到，因为孩子们只和受欢迎程度相当的人一起吃午饭。我们把它们从 A 到 E 分级。A 桌坐满了橄榄球运动员和啦啦队长等等。E 桌坐的是有轻度唐氏综合症的孩子，用当时的语言我们称之为&amp;quot;智障&amp;quot;。&lt;/p&gt;&#xA;&lt;p&gt;我们坐在 D 桌，这是在不显得身体有异常的情况下能达到的最低级别。我们把自己评为 D 并不是特别坦诚。要说别的就需要故意撒谎了。学校里的每个人都确切地知道其他每个人的受欢迎程度，包括我们。&lt;/p&gt;&#xA;&lt;p&gt;我在高中期间的人气逐渐上升。青春期终于到来；我成为一名不错的足球运动员；我创办了一份声名狼藉的地下报纸。所以我已经看到了受欢迎程度格局的大部分。&lt;/p&gt;&#xA;&lt;p&gt;我认识很多在学校时是书呆子的人，他们都讲述了同样的故事：聪明和成为书呆子之间有很强的相关性，而成为书呆子和受欢迎之间则有更强的负相关性。聪明似乎让你不受欢迎。&lt;/p&gt;&#xA;&lt;p&gt;为什么？对于现在还在学校的人来说，这似乎是个奇怪的问题。这个事实是如此压倒性的，以至于想象情况会有所不同似乎很奇怪。但确实可以。聪明不会让你在小学成为被排斥者。它在现实世界中也不会伤害你。据我所知，在大多数其他国家，这个问题也没有那么严重。但在典型的美国中学，聪明很可能让你的生活变得困难。为什么？这个谜题的关键是稍微重新表述一下问题。为什么聪明的孩子不让自己受欢迎？如果他们那么聪明，为什么他们不弄清楚受欢迎程度是如何运作的，然后击败这个系统，就像他们对待标准化考试一样？&lt;/p&gt;&#xA;&lt;p&gt;有一种论点说这是不可能的，聪明的孩子不受欢迎是因为其他孩子嫉妒他们的聪明，而他们做什么都无法让自己受欢迎。我希望如此。如果初中的其他孩子嫉妒我，他们很好地隐藏了这一点。无论如何，如果聪明真的是一种令人羡慕的品质，女孩们就会打破阵营。男孩子们嫉妒的人，女孩们喜欢。&lt;/p&gt;&#xA;&lt;p&gt;在我去的学校里，聪明根本不怎么重要。孩子们不崇拜它也不鄙视它。在其他条件相同的情况下，他们宁愿在平均水平的聪明一边而不是笨拙一边，但智力远不如，比如说，外表、魅力或运动能力重要。&lt;/p&gt;&#xA;&lt;p&gt;那么，如果智力本身不是受欢迎程度的因素，为什么聪明的孩子如此一贯地不受欢迎？答案，我认为，是他们真的不想受欢迎。&lt;/p&gt;&#xA;&lt;p&gt;如果当时有人告诉我这一点，我会嘲笑他。在学校不受欢迎让孩子们痛苦不堪，有些如此痛苦以至于他们自杀。告诉我说我不想受欢迎，就像告诉一个在沙漠中渴死的人说他不想要一杯水。我当然想受欢迎。&lt;/p&gt;&#xA;&lt;p&gt;但事实上我没有，不够想。有其他我更想要的东西：变得聪明。不仅仅是在学校表现好，虽然这算一些，而是设计漂亮的火箭，或者写得好，或者理解如何编程计算机。总的来说，是做伟大的事情。&lt;/p&gt;&#xA;&lt;p&gt;那时我从未试图分开我的欲望并相互权衡。如果我这样做了，我会看到变得更聪明更重要。如果有人给我机会成为学校最受欢迎的孩子，但只能以普通智力为代价（请原谅我），我不会接受的。&lt;/p&gt;&#xA;&lt;p&gt;尽管他们因不受欢迎而受苦，我认为很多书呆子不会。对他们来说，普通智力的想法是无法忍受的。但大多数孩子会接受这个交易。对他们中一半的人来说，这会是一个进步。即使是第80个百分位的人（假设，就像当时每个人似乎都认为的那样，智力是一个标量），谁不愿意下降30分来换取被每个人爱和钦佩呢？&lt;/p&gt;&#xA;&lt;p&gt;而这，我认为，就是问题的根源。书呆子侍奉两个主人。他们当然想受欢迎，但他们更想变得聪明。而受欢迎不是你可以在业余时间做的事情，尤其是在美国中学竞争激烈的环境中。阿尔贝蒂，可以说是文艺复兴时期人的原型，写道&amp;quot;没有一门艺术，无论多么微小，如果你想在其中出类拔萃，都需要全身心的投入。&amp;ldquo;我想知道世界上是否有人比美国学校孩子在受欢迎程度上更努力。海豹突击队和神经外科住院医师相比之下似乎是懒散的。他们偶尔休假；有些人甚至有爱好。美国青少年可能会在醒着的每一分钟都在努力受欢迎，一年365天。&lt;/p&gt;&#xA;&lt;p&gt;我并不是建议他们有意识地这样做。他们中的一些人真的是小马基雅维利主义者，但我在这里真正意思是青少年总是在职，作为顺从者。&lt;/p&gt;&#xA;&lt;p&gt;例如，青少年非常注重衣服。他们没有意识地为了受欢迎而穿衣。他们穿得好看。但是给谁看？给其他孩子。其他孩子的意见成为他们对正确的定义，不仅是对衣服，而且对他们所做的一切，一直到他们走路的方式。因此，他们为把事情做&amp;quot;对&amp;quot;所做的每一项努力，无论是有意识的还是无意识的，都是更受欢迎的努力。&lt;/p&gt;&#xA;&lt;p&gt;书呆子没有意识到这一点。他们没有意识到受欢迎需要努力。一般来说，某些非常苛刻领域之外的人没有意识到成功在多大程度上取决于持续（虽然通常是无意识的）努力。例如，大多数人似乎把绘画能力视为某种天生的品质，就像个子高一样。事实上，大多数&amp;quot;会画画&amp;quot;的人喜欢画画，并且花了很多时间这样做；这就是他们擅长它的原因。同样，受欢迎不仅仅是你是不是，而是你自己造就的东西。&lt;/p&gt;&#xA;&lt;p&gt;书呆子不受欢迎的主要原因是他们有其他事情要思考。他们的注意力被书籍或自然世界吸引，而不是时尚和派对。他们就像试图一边在头顶平衡一杯水一边踢足球的人。其他能够全神贯注于比赛的球员毫不费力地击败他们，并奇怪为什么他们似乎如此无能。&lt;/p&gt;&#xA;&lt;p&gt;即使书呆子和其他孩子一样关心受欢迎程度，对他们来说受欢迎也会是更多的工作。受欢迎的孩子学会了如何受欢迎，并且想要受欢迎，就像书呆子学会了如何聪明，并且想要变得聪明一样：从他们的父母那里。当书呆子被训练得到正确答案时，受欢迎的孩子被训练取悦他人。&lt;/p&gt;&#xA;&lt;p&gt;到目前为止，我一直在模糊处理聪明和书呆子之间的关系，把它们当作可以互换的。事实上，只是上下文使它们如此。书呆子是社交能力不够的人。但&amp;quot;足够&amp;quot;取决于你在哪里。在典型的美国学校，酷的标准如此之高（或者至少如此具体），以至于你不必特别笨拙就显得笨拙。&lt;/p&gt;&#xA;&lt;p&gt;很少有聪明孩子能腾出受欢迎程度所需的注意力。除非他们碰巧也是长相好看、天生的运动员，或者受欢迎孩子的兄弟姐妹，否则他们往往会成为书呆子。这就是为什么聪明人在大约十一到十七岁之间生活最糟糕。在这个年龄，生活比之前或之后更多地围绕受欢迎程度展开。&lt;/p&gt;&#xA;&lt;p&gt;在此之前，孩子的生活由父母主导，而不是由其他孩子。孩子在小学确实关心同龄人的想法，但这不是他们的全部生活，后来才变成这样。&lt;/p&gt;&#xA;&lt;p&gt;在大约十一岁的时候，孩子们似乎开始把他们的家庭当作一份白天的工作。他们在自己中间创造了一个新世界，在这个世界中的地位才是重要的，而不是在他们家庭中的地位。事实上，在家庭中惹上麻烦可以让他们在关心的世界中赢得分数。&lt;/p&gt;&#xA;&lt;p&gt;问题是，这些孩子为自己创造的世界最初是一个非常粗陋的世界。如果你让一群十一岁的孩子自生自灭，你得到的是《蝇王》。像很多美国孩子一样，我在学校读了这本书。想必这不是巧合。想必有人想向我们指出我们是野蛮人，我们为自己创造了一个残酷而愚蠢的世界。这对我来说太微妙了。虽然这本书似乎完全可信，但我没有得到额外的信息。我希望他们就直接告诉我们我们是野蛮人，我们的世界是愚蠢的。&lt;/p&gt;&#xA;&lt;p&gt;如果不受欢迎仅仅导致书呆子被忽视，他们会发现他们的不受受欢迎更容易忍受。不幸的是，在学校不受受欢迎就是被积极迫害。&lt;/p&gt;&#xA;&lt;p&gt;为什么？再一次，任何现在还在学校的人可能认为这是一个奇怪的问题。事情怎么可能不是这样？但确实可以。成年人通常不会迫害书呆子。为什么青少年会这样做？&lt;/p&gt;&#xA;&lt;p&gt;部分是因为青少年还是半孩子，而许多孩子天生就残忍。有些人折磨书呆子的原因和他们扯掉蜘蛛腿的原因一样。在你发展出良心之前，折磨是有趣的。&lt;/p&gt;&#xA;&lt;p&gt;孩子们迫害书呆子的另一个原因是让自己感觉更好。当你踩水时，你通过向下推水来把自己抬起来。同样，在任何社会等级中，对自己位置不确定的人会通过虐待他们认为地位低于自己的人来强调它。我读到过，这就是为什么美国穷人是黑人最敌对的群体。&lt;/p&gt;&#xA;&lt;p&gt;但我认为其他孩子迫害书呆子的主要原因是它是受欢迎程度机制的一部分。受欢迎程度只有部分与个人吸引力有关。更多的是关于联盟。要变得更受欢迎，你需要不断地做让你接近其他受欢迎的人的事情，没有什么比共同的敌人更能让人们亲近了。&lt;/p&gt;&#xA;&lt;p&gt;就像想要分散选民对国内困难时期注意力的政客一样，如果没有真正的敌人，你可以创造一个敌人。通过挑出并迫害一个书呆子，一群来自更高等级的孩子在他们之间创造联系。攻击一个外人让他们都成为内部人。这就是为什么最严重的欺凌案件发生在群体中。问任何书呆子：你从一群孩子那里受到的待遇比任何个体恶霸遭受的都要糟糕，无论多么虐待狂。&lt;/p&gt;&#xA;&lt;p&gt;如果这对书呆子有任何安慰的话，这不是个人的。聚集在一起欺负你的孩子们做同样的事情，出于同样的原因，就像一群聚在一起去打猎的人。他们实际上并不恨你。他们只是需要一些东西来追逐。&lt;/p&gt;&#xA;&lt;p&gt;因为他们在等级的底层，书呆子是整个学校的安全目标。如果我没记错的话，最受欢迎的孩子不会迫害书呆子；他们不需要屈就做这种事情。大多数迫害来自地位较低的孩子，紧张的中产阶级。&lt;/p&gt;&#xA;&lt;p&gt;问题是，他们有很多。受欢迎程度的分布不是金字塔，而是像梨一样在底部变细。最不受欢迎的群体相当小。（我相信我们是自助餐厅地图中唯一的 D 桌。）所以想欺负书呆子的人比书呆子还多。&lt;/p&gt;&#xA;&lt;p&gt;除了通过远离不受欢迎的孩子来获得分数外，靠近他们也会失去分数。我认识的一个女人说，她在高中时喜欢书呆子，但害怕被看到和他们说话，因为其他女孩会嘲笑她。不受欢迎是一种传染病；太善良而不欺负书呆子的孩子仍然会出于自我保护而孤立他们。&lt;/p&gt;&#xA;&lt;p&gt;那么，聪明孩子往往在初中和高中不快乐就不足为奇了。他们的其他兴趣让他们几乎没有注意力分给受欢迎程度，而且由于受欢迎程度类似于零和游戏，这反过来使他们成为整个学校的目标。奇怪的是，这种噩梦情景的发生没有任何故意的恶意，仅仅是由于情况的形状。对我来说最糟糕的时期是初中，当时孩子文化是新的和严酷的，后来会逐渐将更聪明的孩子分开的专业化几乎还没有开始。我交谈过的几乎每个人都同意：最低点在十一到十四岁之间。&lt;/p&gt;&#xA;&lt;p&gt;在我们学校是八年级，对我来说是十二岁和十三岁。那年有一次短暂轰动，我们的一位老师无意中听到一群女孩等校车时说的话，非常震惊，以至于第二天她把整堂课都用来雄辩地恳求不要如此残忍地对待彼此。&lt;/p&gt;&#xA;&lt;p&gt;这没有任何明显效果。当时让我吃惊的是她很惊讶。你的意思是她不知道他们彼此说的话的种类？你的意思是这不正常？&lt;/p&gt;&#xA;&lt;p&gt;重要的是要认识到，不，成年人不知道孩子们彼此在做什么。他们在抽象上知道孩子们彼此之间是兽性的残酷，就像我们在抽象上知道人们在较穷国家受到折磨一样。但是，像我们一样，他们不喜欢沉浸在这个压抑的事实上，除非他们去寻找，他们看不到具体虐待的证据。&lt;/p&gt;&#xA;&lt;p&gt;公立学校教师与监狱看守处境非常相似。看守主要关心的是把囚犯关在场所内。他们还需要让他们有饭吃，并尽可能防止他们互相残杀。除此之外，他们想尽可能少地与囚犯打交道，所以他们让他们创造任何他们想要的社会组织。从我读到的内容来看，囚犯创造的社会是扭曲的、野蛮的和普遍的，处于底层一点也不好玩。&lt;/p&gt;&#xA;&lt;p&gt;大致上，我去过的学校也是这样。最重要的是留在场所内。在那里，当局给你食物，防止公开暴力，并努力教你一些东西。但除此之外，他们不想与孩子有太多关系。像监狱看守一样，老师大多让我们自己管理自己。而像囚犯一样，我们创造的文化是野蛮的。&lt;/p&gt;&#xA;&lt;p&gt;为什么现实世界对书呆子更友好？似乎答案仅仅是它由成年人组成，他们太成熟了，不会彼此欺负。但我不认为这是真的。监狱里的成年人当然会彼此欺负。显然，社交名媛也会；在曼哈顿的一些地方，女性的生活听起来像是高中的延续，有着同样琐碎的阴谋。&lt;/p&gt;&#xA;&lt;p&gt;我认为现实世界的重要之处不是它由成年人组成，而是它非常大，你所做的事情有实际的影响。这就是学校、监狱和午餐女士所缺乏的。所有这些世界的居民都被困在小泡沫里，他们所做的一切不可能有超过局部的影响。自然这些社会退化为野蛮。他们的形式没有功能可遵循。&lt;/p&gt;&#xA;&lt;p&gt;当你做的事情有实际影响时，仅仅取悦就不再够了。开始重要的是得到正确答案，而这就是书呆子显示出优势的地方。比尔·盖茨当然会浮现在我脑海中。虽然众所周知缺乏社交技能，但他得到正确答案，至少按收入衡量是这样。&lt;/p&gt;&#xA;&lt;p&gt;现实世界的另一个不同之处是它大得多。在一个足够大的水池里，即使是最小的少数群体如果聚集在一起也能达到临界质量。在现实世界中，书呆子聚集在某些地方，形成自己的社会，在那里智力是最重要的。有时潮流甚至开始向相反方向流动：有时，特别是在大学数学和科学系，书呆子故意夸大他们的笨拙以显得更聪明。约翰·纳什如此钦佩诺伯特·维纳，以至于他采用了他在走廊里走时触摸墙壁的习惯。&lt;/p&gt;&#xA;&lt;p&gt;作为一个十三岁的孩子，我对世界的了解并不比我立即看到的周围多多少。我们生活的扭曲小世界，我认为，就是世界。世界似乎残酷和无聊，我不确定哪个更糟。&lt;/p&gt;&#xA;&lt;p&gt;因为我不适应这个世界，我认为一定是我有什么问题。我没有意识到我们书呆子不适应的原因是在某些方面我们领先了一步。我们已经在思考现实世界中重要的事情，而不是像其他人一样把所有时间花在玩一个精确但大多无意义的游戏上。&lt;/p&gt;&#xA;&lt;p&gt;我们有点像一个成年人如果被扔回中学会有的样子。他不知道该穿什么衣服，该喜欢什么音乐，该用什么俚语。他对孩子们来说会是个完全的外星人。问题是，他知道得足够多，不在乎他们怎么想。我们没有这样的自信。&lt;/p&gt;&#xA;&lt;p&gt;很多人似乎认为在这个生活阶段把聪明的孩子和&amp;quot;正常&amp;quot;孩子混在一起是好事。也许。但至少在某些情况下，书呆子不适应的真正原因是其他人都疯了。我记得坐在高中的一次&amp;quot;动员大会&amp;quot;观众席上，看着啦啦队员们把一个对手玩家的模拟像扔进观众席被撕成碎片。我感觉像一个探险家目睹某种奇怪的部落仪式。如果我能回去给我十三岁的自己一些建议，我要告诉他的主要事情是抬起头来环顾四周。我当时没有真正理解，但我们生活的整个世界像 Twinkie 一样虚假。不只是学校，而是整个城镇。为什么人们搬到郊区？为了生孩子！所以难怪它似乎无聊和无菌。整个地方是一个巨大的托儿所，一个人造城镇，明确为繁育孩子而创建。&lt;/p&gt;&#xA;&lt;p&gt;我长大的地方，感觉好像无处可去，也无事可做。这不是偶然的。郊区是特意设计用来排除外部世界的，因为它包含可能危及孩子的东西。&lt;/p&gt;&#xA;&lt;p&gt;至于学校，它们只是这个虚假世界中的围栏。学校的官方目的是教育孩子。实际上它们的主要目的是把孩子锁在一个地方一大段时间，以便成年人可以把事情做完。我对此没有异议：在专业化的工业社会，让孩子们四处乱跑将是灾难。&lt;/p&gt;&#xA;&lt;p&gt;让我烦恼的不是孩子被关在监狱里，而是（a）他们没有被告知这一点，（b）监狱大多由囚犯管理。孩子们被送去花六年时间在一个由一群追逐椭圆形棕色球的巨人统治的世界里记忆无意义的事实，好像这是世界上最自然的事情。如果他们对这种超现实的鸡尾酒有抵触，他们被称为不合群的人。在这个扭曲的世界里生活对孩子们来说是压力很大的。不仅对书呆子。像任何战争一样，它甚至对胜利者都是有害的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>为什么创业中心有效</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/hubs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/hubs/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/hubs.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;为什么创业中心有效&#34;&gt;为什么创业中心有效&lt;/h1&gt;&#xA;&lt;p&gt;想要创业？获得Y Combinator的投资。&lt;/p&gt;&#xA;&lt;p&gt;2011年10月&lt;/p&gt;&#xA;&lt;p&gt;如果你按人口排序查看美国城市名单，每 capita 的成功创业公司数量相差几个数量级。不知何故，大多数地方似乎都被喷洒了创业杀虫剂。&lt;/p&gt;&#xA;&lt;p&gt;我对这个问题的思考有很多年。我可以看出，普通城镇就像创业野心的蟑螂旅馆：聪明、有雄心的人进去，但没有创业公司出来。但我从来没能弄清楚旅馆内部到底发生了什么——到底是什么在杀死所有潜在的创业公司。[1]&lt;/p&gt;&#xA;&lt;p&gt;几周前，我终于想通了。我把问题框错了。问题不是大多数城镇杀死创业公司。而是死亡是创业公司的默认状态，大多数城镇不会拯救它们。与其认为大多数地方被喷洒了创业杀虫剂，不如更准确地认为所有创业公司都被毒药毒害了，少数地方被喷洒了解药。&lt;/p&gt;&#xA;&lt;p&gt;其他地方的创业公司只是在做创业公司自然做的事情：失败。真正的问题是，像硅谷这样的地方是什么在拯救创业公司？[2]&lt;/p&gt;&#xA;&lt;h2 id=&#34;环境&#34;&gt;环境&lt;/h2&gt;&#xA;&lt;p&gt;我认为解药有两个组成部分：身处一个创业公司很酷的地方，以及与能帮助你的人偶然相遇。而驱动这两者的都是你周围的创业公司数量。&lt;/p&gt;&#xA;&lt;p&gt;第一个组成部分在创业公司生命的第一阶段特别有帮助，那时你从仅仅对创办公司感兴趣到真正去做。创办创业公司是一个相当大的飞跃。这是一件不寻常的事情。但在硅谷，这似乎很正常。[3]&lt;/p&gt;&#xA;&lt;p&gt;在大多数地方，如果你创办创业公司，人们会把你当作失业者对待。硅谷的人不会仅仅因为你创办公司就自动印象深刻，但他们会关注。任何在这里呆了足够时间的人都知道不要默认持怀疑态度，无论你看起来多么没有经验，或者你的想法听起来多么没有前途，因为他们都见过没有经验、想法听起来没有前途的创始人在几年后成为亿万富翁。&lt;/p&gt;&#xA;&lt;p&gt;周围有人关心你在做什么是一种非常强大的力量。即使是最有意志的人也会受其影响。在我们创办Y Combinator大约一年后，我对一家知名风险投资公司的合作伙伴说了一些话，这给了他（错误的）印象，认为我正在考虑创办另一家创业公司。他回应得如此热切，以至于大约半秒钟我发现自己正在考虑这样做。&lt;/p&gt;&#xA;&lt;p&gt;在大多数其他城市，创办创业公司的远景似乎不真实。在硅谷，这不仅是真实的，而且是时尚的。这无疑导致许多不应该创办创业公司的人去创办了。但我认为这没关系。很少有人适合经营创业公司，而且很难提前预测哪些是（我从试图预测的行业中深知这一点），所以很多不应该创办创业公司的人创办创业公司可能是最佳状态。只要你处于生命中的一个阶段，能够承受失败的风险，找出你是否适合经营创业公司的最好方法就是尝试。&lt;/p&gt;&#xA;&lt;h2 id=&#34;机遇&#34;&gt;机遇&lt;/h2&gt;&#xA;&lt;p&gt;解药的第二个组成部分是与能帮助你的人偶然相遇。这种力量在两个阶段都起作用：既包括从想创办创业公司到实际创办的过渡，也包括从创办公司到成功的过渡。偶然相遇的力量比周围人关心创业公司变化更大，后者像一种影响每个人的背景辐射，但在其最强时，它要强大得多。&lt;/p&gt;&#xA;&lt;p&gt;偶然相遇产生奇迹来补偿创业公司特有的灾难。在硅谷，可怕的事情不断发生在创业公司身上，就像在其他地方的创业公司一样。硅谷的创业公司更有可能成功的原因是，伟大的事情也发生在它们身上。在硅谷，闪电有一个符号位。&lt;/p&gt;&#xA;&lt;p&gt;例如，你创办了一个针对大学生的网站，决定搬到帕洛阿尔托过一个夏天在那里工作。然后在帕洛阿尔托的一个随机的郊区街道上，你偶然遇到了肖恩·帕克，他非常了解这个领域，因为他自己创办了一家类似的创业公司，而且他也认识所有投资者。而且，他对2004年的创始人保留公司控制权有先进的看法。&lt;/p&gt;&#xA;&lt;p&gt;你无法确切地说奇迹会是什么，或者甚至肯定会有一个奇迹发生。最多只能说：如果你在创业中心，意想不到的好事情可能会发生在你身上，特别是如果你应得的话。&lt;/p&gt;&#xA;&lt;p&gt;我敢打赌，即使是我们资助的创业公司也是如此。即使我们努力为他们有目的地制造事情发生，硅谷有帮助的偶然相遇的频率如此之高，这仍然是我们能提供的显著增量。&lt;/p&gt;&#xA;&lt;p&gt;偶然相遇的作用类似于放松在产生想法中的作用。大多数人都有这样的经历：努力解决某个问题，无法解决，放弃去睡觉，然后在早上的淋浴中想到答案。让答案出现的是让你的思绪稍微漂移——从而从你前一晚一直在追求的错误路径漂移到旁边正确的路径上。&lt;/p&gt;&#xA;&lt;p&gt;偶然相遇让你的相识关系漂移，就像淋浴让你的思绪漂移一样。两种情况下的关键都是它们漂移的程度恰到好处。拉里·佩奇和谢尔盖·布林之间的会面是一个好例子。他们让他们的相识关系漂移，但只是稍微漂移；他们都在与有很多共同点的人会面。&lt;/p&gt;&#xA;&lt;p&gt;对于拉里·佩奇来说，解药最重要的组成部分是谢尔盖·布林，反之亦然。解药是人。使硅谷有效的不是它的物理基础设施，不是天气，也不是任何类似的东西。那些帮助它开始，但现在反应是自我维持的，驱动它的是人。&lt;/p&gt;&#xA;&lt;p&gt;许多观察家注意到，创业中心最显著的特点之一是人们互相帮助的程度，没有任何期望得到回报。我不确定为什么会这样。也许是因为创业公司不像大多数类型的企业那样是零和游戏；它们很少被竞争对手杀死。也许是因为这么多创业公司创始人有科学背景，在科学中鼓励合作。&lt;/p&gt;&#xA;&lt;p&gt;Y C的大部分功能是加速这个过程。我们是硅谷中的一个硅谷，在那里，从事创业公司的人员密度和他们互相帮助的意愿都被人为地放大了。&lt;/p&gt;&#xA;&lt;h2 id=&#34;数量&#34;&gt;数量&lt;/h2&gt;&#xA;&lt;p&gt;解药的两个组成部分——鼓励创业公司的环境，以及与能帮助你的人偶然相遇——都是由同样的潜在原因驱动的：你周围的创业公司数量。要创建一个创业中心，你需要很多对创业感兴趣的人。&lt;/p&gt;&#xA;&lt;p&gt;有三个原因。第一个，很明显，是如果你没有足够的密度，偶然相遇就不会发生。[4] 第二个是不同的创业公司需要如此不同的东西，所以你需要很多人来为每个创业公司提供它们最需要的东西。2004年的肖恩·帕克正是Facebook所需要的。另一个创业公司可能需要一个数据库专家，或者一个在电影行业有人脉的人。&lt;/p&gt;&#xA;&lt;p&gt;顺便说一下，这就是我们资助这么多公司的原因之一。社区越大，其中包含拥有你最需要的那个人的人的机会就越大。&lt;/p&gt;&#xA;&lt;p&gt;你需要很多人来创建创业中心的第三个原因是，一旦你有足够多的人对同一个问题感兴趣，他们就开始设定社会规范。而当周围的气氛鼓励你做本来似乎过于雄心勃勃的事情时，这是一件特别有价值的事情。在大多数地方，气氛把你拉向平均值。&lt;/p&gt;&#xA;&lt;p&gt;几天前我飞进湾区。每次飞越硅谷时我都会注意到这一点：不知何故你能感觉到有什么事情正在发生。显然，你可以从地方看起来多么好看出繁荣。但繁荣有不同的种类。硅谷看起来不像波士顿，不像纽约，不像洛杉矶，不像华盛顿特区。我试图想用一个词来描述硅谷辐射的感觉，我想到的词是乐观主义。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 我并不是说在创业公司很少的城市不可能成功，只是更难。如果你足够擅长产生自己的士气，你可以在没有外部鼓励的情况下生存。Wufoo基于坦帕，他们成功了。但Wufoo的人是异常自律的。&lt;/p&gt;&#xA;&lt;p&gt;[2] 顺便说一句，这种现象不仅限于创业公司。大多数不寻常的雄心都会失败，除非拥有它们的人设法找到正确类型的社区。&lt;/p&gt;&#xA;&lt;p&gt;[3] 创办公司很常见，但创办创业公司很少见。我在其他地方谈论过这两者之间的区别，但本质上创业公司是一种为规模而设计的新业务。大多数新业务是服务业务，除了罕见情况外，这些业务不会扩展。&lt;/p&gt;&#xA;&lt;p&gt;[4] 当我写这篇文章时，我见证了硅谷创业公司人员密度的证据。杰西卡和我骑自行车去帕洛阿尔托的大学大道，在极好的Oren&amp;rsquo;s Hummus吃午饭。当我们走进去时，我们遇到查理·齐弗坐在门附近。塞琳娜·托巴卡瓦拉在出去时停下来打招呼。然后乔什·威尔逊进来取外卖订单。午饭后我们去吃冷冻酸奶。在路上我们遇到了拉杰特·苏里。当我们到达酸奶店时，我们发现戴夫·沈在那里，当我们走出去时，我们遇到了尤里·萨加洛夫。我们和他走了一个街区左右，然后遇到了穆扎米尔·扎维里，然后又走了一个街区后我们遇到了艾丁·森库特。这是帕洛阿尔托的日常生活。我没有试图遇见人；我只是在吃午饭。而且我敢肯定，我看到的每个我认识的创业公司或投资者，还有5个我不认识的。如果罗恩·康威和我们在一起，他会遇到30个他认识的人。&lt;/p&gt;&#xA;&lt;p&gt;感谢山姆·奥特曼、保罗·布赫海特、杰西卡·利文斯顿和哈吉·塔加阅读本文草稿。&lt;/p&gt;</description>
    </item>
    <item>
      <title>为什么创始人友善是安全的</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/safe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/safe/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/safe.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;为什么创始人友善是安全的&#34;&gt;为什么创始人友善是安全的&lt;/h1&gt;&#xA;&lt;p&gt;2015年8月&lt;/p&gt;&#xA;&lt;p&gt;我最近收到一位创始人的电子邮件，帮助我理解了一件重要的事情：为什么创业公司创始人友善是安全的。&lt;/p&gt;&#xA;&lt;p&gt;我从小对非常成功的商人有一个漫画式的想法（在漫画中总是男性）：一个五十多岁、贪婪、抽雪茄、拍桌子的人，通过行使权力获胜，而且对方式不太挑剔。正如我以前写过的，创业公司最让我惊讶的事情之一是，最成功的创始人中很少有人是这样的。也许其他行业的成功人士是这样；我不知道；但创业公司创始人不是。[1]&lt;/p&gt;&#xA;&lt;p&gt;我从经验上知道这一点，但我从来没有看到其中的数学原理，直到收到这位创始人的邮件。在邮件中，他说他担心自己心地太软，倾向于免费给予太多。他认为他可能需要&amp;quot;一点反社会人格的剂量&amp;quot;。&lt;/p&gt;&#xA;&lt;p&gt;我告诉他不要担心，只要他构建的东西足够好，能够通过口碑传播，他就会有一个超线性增长曲线。如果他不擅长从人们那里赚钱，最坏的情况下，这条曲线将是他可能拥有的某个小于1的常数倍数。但任何曲线的常数倍数都是完全相同的形状。Y轴上的数字更小，但曲线同样陡峭，当任何东西以成功创业公司的速度增长时，Y轴会自己解决。&lt;/p&gt;&#xA;&lt;p&gt;一些例子会让这更清楚。假设你的公司现在每月赚1000美元，你构建的东西非常棒，每周增长5%。两年后，你每月将赚约16万美元。&lt;/p&gt;&#xA;&lt;p&gt;现在假设你如此不贪婪，只从用户那里提取你可能得到的一半。这意味着两年后你每月将赚8万美元，而不是16万美元。你落后多少？赶上你本可能达到的位置需要多长时间？仅仅15周。两年后，不贪婪的创始人只比贪婪的创始人落后3.5个月。[2]&lt;/p&gt;&#xA;&lt;p&gt;如果你要优化一个数字，选择的是你的增长率。假设像以前一样，你只从用户那里提取你可能得到的一半，但你能够每周增长6%而不是5%。现在两年后你与贪婪的创始人相比如何？你已经领先了——每月21.4万美元对16万美元——并且迅速拉开距离。再过一年，你每月将赚440万美元，而贪婪的创始人赚200万美元。&lt;/p&gt;&#xA;&lt;p&gt;显然，一个贪婪会有帮助的情况是增长依赖于此。创业公司与众不同的是通常不依赖于此。创业公司通常通过制作如此棒的东西来获胜，以至于人们向朋友推荐它。而贪婪不仅无助于你做到这一点，可能还有害。[3]&lt;/p&gt;&#xA;&lt;p&gt;创业公司创始人可以安全友善的原因是，制作伟大的东西是复合的，而贪婪不是。&lt;/p&gt;&#xA;&lt;p&gt;所以如果你是创始人，这里有一个你可以与自己达成的协议，既能让你快乐，又能让你的公司成功。告诉自己，你可以像你希望的那样友善，只要你在增长率上努力工作以补偿。大多数成功的创业公司无意识地做出了这种权衡。也许如果你有意识地这样做，你会做得更好。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 许多人认为成功的创业公司创始人是由金钱驱动的。事实上，最成功的创始人的秘密武器是他们不是。如果是的话，他们早就接受了每个快速增长的创业公司在上升过程中收到的收购要约。驱动最成功创始人的东西与驱动大多数制造东西的人相同：公司是他们的项目。&lt;/p&gt;&#xA;&lt;p&gt;[2] 事实上，由于2 ≈ 1.05 ^ 15，不贪婪的创始人总是比贪婪的创始人落后15周。&lt;/p&gt;&#xA;&lt;p&gt;[3] 可能擅长从客户身上榨取钱的另一个原因是，创业公司通常一开始就亏损，每个客户赚更多钱使得在初始资金耗尽前更容易达到盈利。虽然创业公司因耗尽初始资金然后无法筹集更多资金而死亡非常常见，但根本原因通常是增长缓慢或支出过度，而不是不足以从现有客户身上提取金钱的努力。&lt;/p&gt;&#xA;&lt;p&gt;感谢Sam Altman、Harj Taggar、Jessica Livingston和Geoff Ralston阅读本文草稿，并感谢Randall Bennett是这么好的人。&lt;/p&gt;</description>
    </item>
    <item>
      <title>为什么在经济衰退时期创业</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/badeconomy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/badeconomy/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/badeconomy.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;为什么在经济衰退时期创业&#34;&gt;为什么在经济衰退时期创业&lt;/h1&gt;&#xA;&lt;p&gt;想要创业吗？获得Y Combinator的资助。&lt;/p&gt;&#xA;&lt;p&gt;2008年10月&lt;/p&gt;&#xA;&lt;p&gt;经济形势显然如此严峻，一些专家担心我们可能会迎来一个像七十年代中期那样糟糕的时期。当时微软和苹果公司成立。&lt;/p&gt;&#xA;&lt;p&gt;正如这些例子所示，经济衰退时期可能不是创业的坏时机。我并不是说这特别好。真相更无聊：经济状况其实并不那么重要。&lt;/p&gt;&#xA;&lt;p&gt;如果我们从资助这么多创业公司中学到了一件事，那就是它们的成功或失败取决于创始人的素质。经济当然有影响，但作为成功的预测因素，与创始人相比，它只是四舍五入的误差。&lt;/p&gt;&#xA;&lt;p&gt;这意味着重要的是你是谁，而不是你什么时候做。如果你是合适的人，即使在经济不好的时候你也会成功。如果你不是，好的经济也无法拯救你。那些认为&amp;quot;我最好现在不要创业，因为经济如此糟糕&amp;quot;的人，与在泡沫时期认为&amp;quot;我只需要创业，就会变得富有&amp;quot;的人犯了同样的错误。&lt;/p&gt;&#xA;&lt;p&gt;所以如果你想提高机会，你应该更多地考虑你能招募谁作为联合创始人，而不是经济状况。如果你担心公司生存的威胁，不要在新闻中寻找它们。照照镜子。&lt;/p&gt;&#xA;&lt;p&gt;但对于任何给定的创始人团队，在经济好转之前等待跳跃不是更明智吗？如果你要开餐厅，也许吧，但如果你从事技术工作，就不是了。技术的发展或多或少独立于股票市场。所以对于任何给定的想法，在经济不好时快速行动的回报比等待更高。微软的第一个产品是Altair的Basic解释器。这正是1975年世界所需要的，但如果盖茨和艾伦决定等几年，那就太晚了。&lt;/p&gt;&#xA;&lt;p&gt;当然，你现在有的想法不会是你最后一个。总是有新的想法。但如果你有一个特定的想法想要付诸行动，现在就行动。&lt;/p&gt;&#xA;&lt;p&gt;这并不意味着你可以忽视经济。客户和投资者都会感到拮据。客户感到拮据不一定是问题：你甚至可能从中受益，通过制造省钱的东西。创业公司通常让东西更便宜，所以在这方面，它们比大公司更有条件在衰退中繁荣。&lt;/p&gt;&#xA;&lt;p&gt;投资者更多是个问题。创业公司通常需要筹集一定数量的外部资金，投资者往往在经济不好时不愿意投资。他们不应该这样。每个人都知道你应该在时机不好时买入，在时机好时卖出。但当然，投资如此违反直觉的原因是，在股权市场中，好时机被定义为每个人都认为是买入的时候。你必须是一个逆向投资者才能正确，根据定义，只有少数投资者可以。&lt;/p&gt;&#xA;&lt;p&gt;所以就像1999年的投资者们互相踩踏试图投资糟糕的创业公司一样，2009年的投资者们大概也会不愿意投资好的创业公司。&lt;/p&gt;&#xA;&lt;p&gt;你必须适应这一点。但这没什么新鲜的：创业公司总是必须适应投资者的反复无常。在任何经济条件下问任何创始人是否认为投资者善变，看看他们做的表情。去年你必须准备好解释你的创业公司如何病毒式传播。明年你必须解释它如何能够抵御衰退。&lt;/p&gt;&#xA;&lt;p&gt;（这两者都是很好的状态。投资者犯的错误不是他们使用的标准，而是他们总是倾向于关注一个而排除其他的。）&lt;/p&gt;&#xA;&lt;p&gt;幸运的是，让创业公司抵御衰退的方法就是做你无论如何都应该做的事情：尽可能便宜地运营它。多年来我一直告诉创始人，成功的最可靠途径成为企业界的蟑螂。创业公司死亡的直接原因总是资金耗尽。所以你的公司运营成本越低，就越难杀死它。幸运的是，运行创业公司的成本已经变得非常便宜。衰退会让它更便宜。&lt;/p&gt;&#xA;&lt;p&gt;如果真的来了核冬天，做蟑螂可能比保住工作更安全。如果客户不再负担得起你，他们可能会一个个离开，但你不会一下子失去他们；市场不会&amp;quot;减少人手&amp;quot;。&lt;/p&gt;&#xA;&lt;p&gt;如果你辞职创业失败了，找不到另一份工作怎么办？如果你从事销售或市场营销，这可能是个问题。在这些领域，在经济不好时找新工作可能需要几个月。但黑客似乎更具流动性。好的黑客总能找到某种工作。可能不是你梦想的工作，但你不会饿死。&lt;/p&gt;&#xA;&lt;p&gt;坏时机的另一个优势是竞争更少。技术列车定期离站。如果其他人都在角落里发抖，你可能会有一整节车厢给自己。&lt;/p&gt;&#xA;&lt;p&gt;你也是投资者。作为创始人，你用工作购买股票：拉里和谢尔盖如此富有，与其说是他们做了价值数百亿美元的工作，不如说他们是谷歌的第一批投资者。像任何投资者一样，你应该在时机不好时买入。&lt;/p&gt;&#xA;&lt;p&gt;几段前当我谈到投资者不愿意在坏市场向创业公司投资时，即使那时他们理性上应该最愿意购买，你是否点头同意，认为&amp;quot;愚蠢的投资者&amp;quot;？嗯，创始人也好不到哪里去。时机不好时，黑客去读研究生。毫无疑问这次也会发生。事实上，让前一段话成真的是大多数读者不会相信它——至少不会到付诸行动的程度。&lt;/p&gt;&#xA;&lt;p&gt;所以也许经济衰退是创业的好时机。很难说像缺乏竞争这样的优势是否胜过像不情愿的投资者这样的劣势。但无论如何这不重要。重要的是人。对于给定的人在给定的技术上工作的时候总是现在。&lt;/p&gt;</description>
    </item>
    <item>
      <title>为什么没有更多的Google</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/googles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/googles/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/googles.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;为什么没有更多的google&#34;&gt;为什么没有更多的Google&lt;/h1&gt;&#xA;&lt;p&gt;2008年4月&lt;/p&gt;&#xA;&lt;p&gt;乌迈尔·哈克最近写道，之所以没有更多的Google，是因为大多数初创公司在它们能够改变世界之前就被收购了。Google，尽管微软和雅虎对其表现出了严肃的兴趣——在当时那看起来似乎是有利可图的兴趣——却没有卖掉。Google可能只是雅虎或MSN的搜索框。&lt;/p&gt;&#xA;&lt;p&gt;为什么不是这样？因为Google有一种深刻的目标感：一个让世界变得更好的信念。这听起来很好，但不是真的。Google的创始人在早期是愿意出售的。他们只是想要比收购者愿意支付的更多的钱。&lt;/p&gt;&#xA;&lt;p&gt;Facebook也是如此。他们本来会卖掉的，但雅虎因为出价太少而搞砸了。&lt;/p&gt;&#xA;&lt;p&gt;给收购者的建议：当初创公司拒绝你时，考虑提高你的报价，因为他们想要的天价后来可能会显得很便宜。[1]&lt;/p&gt;&#xA;&lt;p&gt;从我到目前为止看到的证据来看，拒绝收购要约的初创公司通常最终会做得更好。不是总是如此，但通常会有更大的要约到来，甚至是IPO。&lt;/p&gt;&#xA;&lt;p&gt;当然，初创公司在拒绝收购要约时做得更好的原因不一定是所有这样的要约都低估了初创公司。更可能的原因是，那些有胆量拒绝大报价的创始人类型也往往非常成功。这种精神正是你在初创公司中想要的。&lt;/p&gt;&#xA;&lt;p&gt;虽然我确信拉里和谢尔盖现在确实想改变世界，但Google能够生存下来成为一家大型独立公司的原因与Facebook迄今为止保持独立的原因相同：收购者低估了它们。&lt;/p&gt;&#xA;&lt;p&gt;企业并购在这方面是一个奇怪的生意。他们总是错失最好的交易，因为拒绝合理的报价是你能发明的最可靠的测试，用来判断初创公司是否会做大。&lt;/p&gt;&#xA;&lt;h2 id=&#34;风险投资&#34;&gt;风险投资&lt;/h2&gt;&#xA;&lt;p&gt;那么为什么没有更多的Google呢？奇怪的是，这与Google和Facebook保持独立的原因相同：资金 guys 低估了最具创新性的初创公司。&lt;/p&gt;&#xA;&lt;p&gt;没有更多Google的原因不是投资者鼓励创新的初创公司卖掉，而是他们甚至不会资助它们。在我们做Y Combinator的3年里，我学到了很多关于风险投资的知识，因为我们经常不得不与他们密切合作。我学到的最令人惊讶的事情是他们有多么保守。风险投资公司展现了一个大胆鼓励创新的形象。实际上只有少数几家这样做，即使是它们，在现实中比从阅读它们的网站所能猜到的更保守。&lt;/p&gt;&#xA;&lt;p&gt;我过去常常把风险投资家想象成海盗式的：大胆但不择手段。更深入了解后，他们更像是官僚。他们比我过去认为的正直（至少好的那些是），但不太大胆。也许风险投资行业已经改变了。也许他们过去更大胆。但我怀疑是初创公司世界改变了，而不是他们。创办初创公司的低成本意味着平均的好赌注是风险更高的一个，但大多数现有的风险投资公司仍然像在1985年投资硬件初创公司那样运作。&lt;/p&gt;&#xA;&lt;p&gt;霍华德·艾肯说&amp;quot;不要担心人们偷你的想法。如果你的想法足够好，你将不得不把它们塞进人们的喉咙里。&amp;ldquo;当我试图说服风险投资家投资Y Combinator资助的初创公司时，我有类似的感觉。他们对真正新颖的想法感到恐惧，除非创始人足够好的销售员来弥补。&lt;/p&gt;&#xA;&lt;p&gt;但正是大胆的想法产生了最大的回报。任何真正好的新想法对大多数人来说似乎都很糟糕；否则早就有人已经在做了。然而大多数风险投资家是由共识驱动的，不仅在他们的公司内部，而且在风险投资社区内部。决定风险投资家对你初创公司感觉的最大因素是其他风险投资家对它的感觉。我怀疑他们是否意识到这一点，但这种算法保证了他们会错过所有最好的想法。越多的人必须喜欢一个新想法，你就失去越多的离群值。&lt;/p&gt;&#xA;&lt;p&gt;无论下一个Google是谁，他们现在可能正被告知风险投资家等他们有更多&amp;quot;牵引力&amp;quot;时再回来。&lt;/p&gt;&#xA;&lt;p&gt;为什么风险投资家如此保守？这可能是多种因素的结合。他们投资规模很大使他们保守。加上他们投资的是别人的钱，这使他们担心如果做有风险的事情并且失败了，他们会惹上麻烦。加上他们大多数是资金 guy 而不是技术 guy，所以他们不理解他们投资的初创公司做什么。&lt;/p&gt;&#xA;&lt;h2 id=&#34;接下来是什么&#34;&gt;接下来是什么&lt;/h2&gt;&#xA;&lt;p&gt;市场经济的令人兴奋之处在于愚蠢等于机会。在这种情况下也是如此。在初创公司投资中存在一个巨大的、未开发的机会。Y Combinator在最开始资助初创公司。风险投资家在它们已经开始成功时资助它们。但在这两者之间存在一个巨大的缺口。&lt;/p&gt;&#xA;&lt;p&gt;有些公司会给除了创始人之外什么都没有的初创公司2万美元，有些公司会给已经腾飞的初创公司2百万美元，但没有足够的投资者会给一个看起来非常有前途但仍然有一些事情要弄清楚的初创公司20万美元。这个领域主要由个人天使投资者占据——像安迪·贝托尔斯海姆这样的人，他在Google看起来有前途但仍然有一些事情要弄清楚时给了他们10万美元。我喜欢天使，但只是没有足够多的他们，投资对大多数人来说是兼职工作。&lt;/p&gt;&#xA;&lt;p&gt;然而，随着创办初创公司变得越来越便宜，这个稀少占据的领域变得越来越有价值。如今许多初创公司不想筹集数百万美元的A轮融资。他们不需要那么多钱，也不想要随之而来的麻烦。从Y Combinator出来的典型初创公司想要筹集25-50万美元。当他们去风险投资公司时，他们不得不要求更多，因为他们知道风险投资家对这样的小交易不感兴趣。&lt;/p&gt;&#xA;&lt;p&gt;风险投资家是资金经理。他们在寻找方法让大笔资金运作。但初创公司世界正在远离他们目前的模式。&lt;/p&gt;&#xA;&lt;p&gt;初创公司变得更便宜了。这意味着他们想要更少的钱，但也意味着有更多的他们。所以你仍然可以在大笔资金上获得大回报；你只需要更广泛地分散它。&lt;/p&gt;&#xA;&lt;p&gt;我曾试图向风险投资公司解释这一点。不要做一个200万美元的投资，做五个40万美元的投资。那意味着要坐太多的董事会吗？不要坐在他们的董事会。那意味着太多的尽职调查吗？做得更少。如果你在十分之一的估值投资，你只需要有十分之一的把握。&lt;/p&gt;&#xA;&lt;p&gt;这似乎很明显。但我向几家风险投资公司提议，他们拨出一些钱并指定一个合伙人做更多、更小的赌注，他们的反应就像我提议合伙人都戴鼻环一样。他们对他们标准的操作方式如此依赖是显著的。&lt;/p&gt;&#xA;&lt;p&gt;但这里有一个巨大的机会，不管怎样它都会被填补。要么风险投资公司会向下发展进入这个缺口，或者更可能的是，新的投资者会出现来填补它。当这种情况发生时将是好事，因为这些新投资者将被他们做出的投资结构迫使比现在的风险投资家大胆十倍。这将给我们带来更多的Google。至少，只要收购者仍然愚蠢。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 另一个建议：如果你想要获得所有价值，不要在购买后破坏初创公司。给创始人足够的自主权，让他们能够把收购发展成它本来会成为的样子。&lt;/p&gt;&#xA;&lt;p&gt;感谢萨姆·奥特曼、保罗·布赫特、大卫·霍尼克、杰西卡·利文斯顿、罗伯特·莫里斯和弗雷德·威尔逊阅读本文的草稿。&lt;/p&gt;</description>
    </item>
    <item>
      <title>也许</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/maybe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/maybe/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/maybe.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;也许&#34;&gt;也许&lt;/h1&gt;&#xA;&lt;p&gt;2009年2月&lt;/p&gt;&#xA;&lt;p&gt;很多城市看着硅谷，问&amp;quot;我们如何能让这样的事情在这里发生？&amp;ldquo;做到这一点的自然方法是在富人想住的地方建立一流的大学。硅谷就是这样形成的。但是你能通过资助创业公司来缩短这个过程吗？&lt;/p&gt;&#xA;&lt;p&gt;有可能。让我们考虑一下需要什么。&lt;/p&gt;&#xA;&lt;p&gt;首先要理解的是，鼓励创业公司与鼓励特定城市的创业公司是两个不同的问题。后者要昂贵得多。&lt;/p&gt;&#xA;&lt;p&gt;人们有时认为他们可以通过在镇上创办类似Y Combinator的项目来改善当地的创业环境，但实际上这几乎没有任何效果。我知道是因为Y Combinator本身在波士顿呆了半年，对那里几乎没有影响。我们资助的人来自全国各地（实际上是世界各地），之后他们去了能获得更多资金的地方——通常意味着硅谷。&lt;/p&gt;&#xA;&lt;p&gt;种子投资业务不是区域性业务，因为在这个阶段，创业公司是流动的。他们只是几个带着笔记本电脑的创始人。[1]&lt;/p&gt;&#xA;&lt;p&gt;如果你想在特定城市鼓励创业公司，你必须资助那些不会离开的创业公司。有两种方法可以做到这一点：制定规则阻止他们离开，或者在它们自然扎根的时候资助它们。第一种方法是错误的，因为它成为了选择糟糕创业公司的过滤器。如果你的条款强迫创业公司做他们不想做的事情，只有绝望的人才会拿你的钱。&lt;/p&gt;&#xA;&lt;p&gt;好的创业公司会搬到另一个城市作为融资的条件。他们不会做的是同意在下次需要融资时不搬走。所以让他们留下的唯一方法是给他们足够的资金，让他们永远不需要离开。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;这需要多少钱？如果你想阻止创业公司离开你的城市，你必须给他们足够的资金，让他们不被那些要求他们搬到硅谷的风险投资公司的诱惑所动摇。如果一个创业公司已经成长到（a）在你的城市扎根和/或（b）如此成功以至于即使他们不搬，风险投资公司也会资助他们的程度，他们就能拒绝这样的提议。&lt;/p&gt;&#xA;&lt;p&gt;将一个创业公司发展到那个程度需要多少成本？至少几十万美元。Wufoo似乎用11.8万美元在坦帕扎根了，但他们是一个极端案例。平均来说，至少需要50万美元。&lt;/p&gt;&#xA;&lt;p&gt;所以，如果你认为通过像Y Combinator那样给每个创业公司1.5-2万美元就能在当地培育一个硅谷，那听起来太好了以至于不像真的，这是因为确实如此。要让他们留下来，你必须给他们至少20倍的资金。&lt;/p&gt;&#xA;&lt;p&gt;然而，即使如此，这也是一个有趣的前景。假设为了安全起见，每个创业公司需要100万美元。如果你能让每个创业公司用100万美元留在你的城市，那么用10亿美元你可以带来1000个创业公司。这可能不会让你超过硅谷本身，但可能会让你获得第二名。&lt;/p&gt;&#xA;&lt;p&gt;用一个足球场的价格，任何适合居住的城市都可以使自己成为世界上最大的创业中心之一。&lt;/p&gt;&#xA;&lt;p&gt;更重要的是，这不会花很长时间。你可能在五年内完成。在一个市长的任期内。而且随着时间的推移会变得更容易，因为你镇上的创业公司越多，让新创业公司搬来所需的条件就越少。当你的镇上有1000个创业公司时，风险投资公司就不会那么努力地试图让他们搬到硅谷；相反，他们会开设当地办事处。那时你真的就处于有利地位了。你已经开启了一个自我维持的连锁反应，就像驱动硅谷的那个一样。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;但现在困难的部分来了。你必须挑选创业公司。你怎么做到这一点？挑选创业公司是一种罕见而宝贵的技能，拥有这种技能的少数人并不容易雇佣。而且这种技能如此难以衡量，如果政府试图雇佣拥有这种技能的人，他们几乎肯定会选错人。&lt;/p&gt;&#xA;&lt;p&gt;例如，一个城市可以给风险投资基金钱来建立当地分支机构，让他们做出选择。但只有糟糕的风险投资基金才会接受这笔交易。他们在城市官员看来不会显得糟糕。他们会看起来非常令人印象深刻。但他们在挑选创业公司方面会很糟糕。这是风险投资公司的特征性失败模式。所有风险投资公司在有限合伙人看来都令人印象深刻。好的和坏的之间的区别只有在他们工作的另一半才会显现：选择和指导创业公司。[2]&lt;/p&gt;&#xA;&lt;p&gt;你真正想要的是一群当地的天使投资人——用自己创业赚来的钱投资的人。但不幸的是，你在这里遇到了鸡和蛋的问题。如果你的城市还不是创业中心，那里就不会有从创业公司致富的人。我想不出一个城市能如何吸引外来的天使投资人。根据定义，他们很富有。没有任何激励会让他们搬家。[3]&lt;/p&gt;&#xA;&lt;p&gt;然而，一个城市可以通过利用非本地投资者的专业知识来选择创业公司。列出最著名的硅谷天使投资人，然后从中生成他们投资过的所有创业公司的列表，这是相当直接的。如果一个城市向这些公司提供每人100万美元让他们搬来，很多早期阶段的创业公司可能会接受。&lt;/p&gt;&#xA;&lt;p&gt;尽管这个计划听起来很荒谬，但这可能是城市选择好的创业公司最有效的方式。&lt;/p&gt;&#xA;&lt;p&gt;与原来的投资者分离会对创业公司造成一些伤害。另一方面，额外的100万美元会给它们更多的跑道。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;移植的创业公司能生存下来吗？很有可能。找出答案的唯一方法是尝试。作为市政支出来说，这将是一个相当便宜的实验。选择30个著名天使投资人最近投资过的创业公司，如果他们愿意搬到你的城市，给他们每人100万美元，看看一年后会发生什么。如果他们似乎正在蓬勃发展，你可以尝试更大规模地引进创业公司。&lt;/p&gt;&#xA;&lt;p&gt;不要太法律化地对待他们被允许离开的条件。只需要有一个君子协议。&lt;/p&gt;&#xA;&lt;p&gt;不要试图在便宜的实验上只选择10个。如果你的规模太小，你只会保证失败。创业公司需要围绕其他创业公司。30个就足以感觉像一个社区。&lt;/p&gt;&#xA;&lt;p&gt;不要试图让他们都在你改成&amp;quot;孵化器&amp;quot;的翻新仓库里工作。真正的创业公司更喜欢在自己的空间里工作。&lt;/p&gt;&#xA;&lt;p&gt;实际上，不要对创业公司施加任何限制。创业公司创始人大多是黑客，黑客比法规更受君子协议的约束。如果他们就承诺与你握手，他们会遵守。但向他们展示一把锁，他们的第一个想法是如何撬开它。&lt;/p&gt;&#xA;&lt;p&gt;有趣的是，任何足够富有的私人公民都可以进行30个创业公司的实验。如果这成功了，会对城市造成什么压力。[4]&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;城市应该拿股票作为回报吗？原则上他们有资格，但他们如何选择创业公司的估值？你不能给他们相同的估值：这对一些来说太低（他们会拒绝你），对另一些来说太高（因为这可能使他们的下一轮成为&amp;quot;低价轮&amp;rdquo;）。既然我们假设我们在没有能力挑选创业公司的情况下这样做，我们也必须假设我们无法评估它们，因为这几乎是同一件事。&lt;/p&gt;&#xA;&lt;p&gt;不在创业公司中持股的另一个原因是创业公司经常涉及不光彩的事情。成熟公司也是如此，但他们不会因此受到指责。如果有人被在Facebook上认识的人谋杀，媒体会把这个故事当作是关于Facebook的来报道。如果有人被在超市认识的人谋杀，媒体只会把它当作一个谋杀案来报道。所以要明白，如果你投资创业公司，他们可能会构建被用于色情、文件共享或表达不受欢迎观点的东西。你可能应该与你的政治对手共同赞助这个项目，这样他们就不能用创业公司所做的事情作为打击你的武器。&lt;/p&gt;&#xA;&lt;p&gt;然而，仅仅给创业公司钱也会带来太多的政治责任。所以最好的计划是让它成为可转换债券，但除非在非常大的一轮融资中，比如2000万美元，否则不转换。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;这个计划的效果如何取决于城市。有些城镇，如波特兰，很容易变成创业中心，而其他地方，如底特律，真的会是一场艰苦的战斗。所以在尝试之前，要诚实地面对自己城市的情况。&lt;/p&gt;&#xA;&lt;p&gt;这将与你的城市与旧金山的相似程度成正比。你们有好天气吗？人们住市中心吗，还是他们已经放弃了市中心去了郊区？这个城市会被描述为&amp;quot;时髦&amp;quot;和&amp;quot;宽容&amp;quot;，还是反映&amp;quot;传统价值观&amp;quot;？附近有好大学吗？有适合步行的社区吗？书呆子会觉得自在吗？如果你对所有这些问题的回答都是肯定的，你可能不仅能成功实施这个计划，而且每个创业公司的成本可能不到100万美元。&lt;/p&gt;&#xA;&lt;p&gt;我意识到任何城市都有政治意愿来执行这个计划的机会微乎其微。我只是想探索如果有城市这样做，需要什么。启动一个硅谷有多难？想到这么多城市都能达到这个目标是令人着迷的。所以即使他们仍然会在体育场上花钱，至少现在有人可以问他们：你为什么选择这样做，而不是成为硅谷的真正竞争对手？&lt;/p&gt;&#xA;&lt;p&gt;注释&lt;/p&gt;&#xA;&lt;p&gt;[1] 创办这些所谓本地种子公司的人总是发现（a）他们的申请者来自各地，不仅仅是本地，（b）本地创业公司也申请其他种子公司。所以最终发生的是申请人池按质量而不是地理位置划分。&lt;/p&gt;&#xA;&lt;p&gt;[2] 有趣的是，糟糕的风险投资公司通过选择由像他们这样的人经营的创业公司而失败——那些善于演讲但没有实质内容的人。这是假货领导假货的情况。而且由于所有相关人员都如此令人信服，投资这些基金的有限合伙人在衡量回报之前都不知道发生了什么。&lt;/p&gt;&#xA;&lt;p&gt;[3] 我怀疑即使是避税天堂也不行。这让一些富人搬家，但不是那种会成为创业公司好天使投资人的人。&lt;/p&gt;&#xA;&lt;p&gt;[4] 感谢Michael Keenan指出这一点。&lt;/p&gt;&#xA;&lt;p&gt;感谢Trevor Blackwell、Jessica Livingston、Robert Morris和Fred Wilson阅读草稿。&lt;/p&gt;</description>
    </item>
    <item>
      <title>书呆子的复仇</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/icad/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/icad/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/icad.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;书呆子的复仇&#34;&gt;书呆子的复仇&lt;/h1&gt;&#xA;&lt;p&gt;想要创业？获得Y Combinator的投资。&lt;/p&gt;&#xA;&lt;p&gt;2002年5月&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;我们当时在追逐C++程序员。我们成功地将他们中的许多人拖到了Lisp的路上。&amp;rdquo;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Guy Steele，Java规范合著者&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;在软件行业中，一直存在着一场持续的斗争，一方是尖脑袋的学者，另一方是同样强大的力量——尖头发的老板。大家都知道尖头发的老板是谁，对吧？我认为技术界的大多数人不仅认识这个卡通人物，而且知道他们公司中这个人物的原型是谁。&lt;/p&gt;&#xA;&lt;p&gt;尖头发的老板奇迹般地结合了两个各自常见但很少同时出现的品质：(a)他对技术一无所知，(b)他对技术有非常强烈的看法。&lt;/p&gt;&#xA;&lt;p&gt;假设，例如，你需要编写一个软件。尖头发的老板对这个软件应该如何工作一无所知，也无法区分一种编程语言和另一种，但他知道你应该用什么语言来编写它。完全正确。他认为你应该用Java来编写。&lt;/p&gt;&#xA;&lt;p&gt;他为什么这么认为？让我们来看看尖头发的老板的大脑里面在想什么。他在想的大概是这样的。Java是一个标准。我知道它一定是标准，因为我总是在媒体上看到它。既然它是标准，我使用它就不会惹上麻烦。这也意味着总会有很多Java程序员，所以如果现在为我工作的程序员辞职了——为我工作的程序员总是神秘地辞职——我可以很容易地替换他们。&lt;/p&gt;&#xA;&lt;p&gt;嗯，这听起来并不那么不合理。但这一切都基于一个未言明的假设，而这个假设结果是错误的。尖头发的老板认为所有编程语言都差不多是等价的。如果这是真的，那他完全正确。如果所有语言都等价，当然，使用其他人都在使用的语言。&lt;/p&gt;&#xA;&lt;p&gt;但并非所有语言都是等价的，我想我甚至不需要深入它们之间的差异就能向你证明这一点。如果你在1992年问尖头发的老板软件应该用什么语言编写，他会像今天一样毫不犹豫地回答。软件应该用C++编写。但如果所有语言都等价，为什么尖头发的老板的意见会改变？事实上，Java的开发者为什么要费心创建一种新语言？&lt;/p&gt;&#xA;&lt;p&gt;据推测，如果你创建一种新语言，那是因为你认为它在某些方面比人们已有的语言更好。事实上，Gosling在第一份Java白皮书中明确表示，Java被设计用来解决C++的一些问题。所以事情就是这样：语言并不都是等价的。如果你顺着尖头发的老板的大脑思路追踪到Java，然后再回溯Java的历史到它的起源，你最终会得到一个与你开始时的假设相矛盾的想法。&lt;/p&gt;&#xA;&lt;p&gt;那么，谁是对的？James Gosling，还是尖头发的老板？毫不奇怪，Gosling是对的。某些语言对于某些问题来说比其他语言更好。你知道，这引发了一些有趣的问题。Java被设计为在特定问题上比C++更好。什么问题？什么时候Java更好，什么时候C++更好？是否存在某些情况下其他语言比两者都更好？&lt;/p&gt;&#xA;&lt;p&gt;一旦你开始考虑这个问题，你就打开了一个真正的潘多拉盒子。如果尖头发的老板不得不以全部复杂性来思考这个问题，他的大脑会爆炸。只要他认为所有语言都等价，他所要做的就是选择一个似乎最有势头的语言，既然这更多是时尚问题而不是技术问题，即使他也可能得到正确的答案。但如果语言各不相同，他突然必须同时解两个方程，试图在他一无所知的两件事之间找到最佳平衡：解决他需要解决的问题的二十种左右主要语言的相对适用性，以及为每种语言找到程序员、库等的可能性。如果门后是这样的东西，尖头发的老板不想打开它也就不足为奇了。&lt;/p&gt;&#xA;&lt;p&gt;认为所有编程语言都等价的缺点是这不是真的。但优点是它让你的生活简单得多。我认为这是这个想法如此广泛传播的主要原因。这是一个令人舒适的想法。&lt;/p&gt;&#xA;&lt;p&gt;我们知道Java一定相当不错，因为它是酷的、新的编程语言。或者真是如此吗？如果你从远处看编程语言的世界，看起来Java是最新的事物。（从足够远的地方看，你只能看到Sun支付的大型闪烁广告牌。）但如果你近距离观察这个世界，你会发现酷的程度是不同的。在黑客亚文化中，有一种叫做Perl的语言被认为比Java酷得多。例如，Slashdot就是用Perl生成的。我想你不会发现那些家伙使用Java Server Pages。但还有另一种更新的语言叫做Python，它的用户倾向于看不起Perl，还有更多的语言在等待。&lt;/p&gt;&#xA;&lt;p&gt;如果你按顺序看这些语言，Java、Perl、Python，你会注意到一个有趣的模式。至少，如果你是Lisp黑客，你会注意到这种模式。每一种都比前一种更像Lisp。Python甚至复制了许多Lisp黑客认为是错误的特性。你可以将简单的Lisp程序逐行翻译成Python。现在是2002年，编程语言几乎赶上了1958年。&lt;/p&gt;&#xA;&lt;h2 id=&#34;追上数学&#34;&gt;追上数学&lt;/h2&gt;&#xA;&lt;p&gt;我的意思是，Lisp是John McCarthy在1958年首次发现的，而流行的编程语言现在才赶上他当时发展的想法。&lt;/p&gt;&#xA;&lt;p&gt;现在，这怎么可能是真的？计算机技术不是变化很快的东西吗？我的意思是，在1958年，计算机是冰箱大小的庞然大物，处理能力相当于手表。怎么可能有那么古老的技术仍然相关，更不用说比最新的发展更优越？&lt;/p&gt;&#xA;&lt;p&gt;我来告诉你原因。这是因为Lisp并不是真正被设计为一种编程语言，至少不是我们今天意义上的编程语言。我们所说的编程语言是我们用来告诉计算机做什么的东西。McCarthy最终确实打算发展这种意义上的编程语言，但我们实际得到的Lisp是基于他作为理论练习所做的另一件事——努力定义一个比图灵机更方便的替代方案。正如McCarthy后来所说，&lt;/p&gt;&#xA;&lt;p&gt;展示Lisp比图灵机更整洁的另一种方法是编写一个通用的Lisp函数，并证明它比通用图灵机的描述更简洁、更易理解。这就是Lisp函数eval&amp;hellip;&amp;hellip;它计算Lisp表达式的值&amp;hellip;&amp;hellip;编写eval需要发明一种表示Lisp函数作为Lisp数据的符号，这种符号是为了论文的目的而设计的，并没有想到它会用来实际表达Lisp程序。&lt;/p&gt;&#xA;&lt;p&gt;接下来发生的事情是，在1958年末的某个时候，Steve Russell，McCarthy的一个研究生，看着这个eval的定义，意识到如果将它翻译成机器语言，结果将是一个Lisp解释器。&lt;/p&gt;&#xA;&lt;p&gt;这在当时是一个很大的惊喜。以下是McCarthy后来在采访中对此的评论：&lt;/p&gt;&#xA;&lt;p&gt;Steve Russell说，看，为什么我不来编程这个eval&amp;hellip;&amp;hellip;，我对他说，呵，呵，你把理论和实践混淆了，这个eval是为了阅读，不是为了计算的。但他还是继续做了。也就是说，他把我论文中的eval编译成[IBM] 704机器码，修复了一些错误，然后将其宣传为Lisp解释器，它确实是。在那时，Lisp基本上就有了今天的形式。&lt;/p&gt;&#xA;&lt;p&gt;所以，我想在几周内，McCarthy发现他的理论练习转变为实际的编程语言——而且是一种比他预期更强大的语言。&lt;/p&gt;&#xA;&lt;p&gt;所以，这个1950年代的语言没有过时的简短解释是它不是技术而是数学，而数学不会过时。将Lisp比较的正确对象不是1950年代的硬件，而是，比如说，快速排序算法，它发现于1960年，至今仍然是最快的通用排序算法。&lt;/p&gt;&#xA;&lt;p&gt;1950年代还有另一种语言幸存下来，Fortran，它代表了语言设计的相反方法。Lisp是一段意想不到地转变为编程语言的理论。Fortran是故意被开发为一种编程语言的，但我们现在认为是一种非常低级的语言。&lt;/p&gt;&#xA;&lt;p&gt;1956年开发的Fortran I语言与现在的Fortran是完全不同的动物。Fortran I基本上是带有数学的汇编语言。在某些方面它比最近的汇编语言功能更弱；例如，没有子程序，只有分支。现在的Fortran可以说更接近Lisp而不是Fortran I。&lt;/p&gt;&#xA;&lt;p&gt;Lisp和Fortran是两个独立进化树的树干，一个根植于数学，一个根植于机器架构。这两棵树从那时起一直在收敛。Lisp开始时很强大，在接下来的二十年里变得快速。所谓的主流语言开始时很快，在接下来的四十年里逐渐变得更强大，直到现在它们中最先进的相当接近Lisp。接近，但仍然缺少一些东西。&lt;/p&gt;&#xA;&lt;h2 id=&#34;使lisp不同的东西&#34;&gt;使Lisp不同的东西&lt;/h2&gt;&#xA;&lt;p&gt;当Lisp首次被开发时，它体现了九个新想法。其中一些我们现在认为是理所当然的，其他只在更先进的语言中看到，有两个仍然是Lisp独有的。这九个想法按主流采用的顺序排列，&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;条件语句&lt;/strong&gt;。条件语句是if-then-else结构。我们现在认为这是理所当然的，但Fortran I没有它们。它只有基于底层机器指令的条件goto。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;函数类型&lt;/strong&gt;。在Lisp中，函数是一种像整数或字符串一样的数据类型。它们有字面表示，可以存储在变量中，可以作为参数传递，等等。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;递归&lt;/strong&gt;。Lisp是第一种支持递归的编程语言。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;动态类型&lt;/strong&gt;。在Lisp中，所有变量实际上都是指针。值才有类型，变量没有，赋值或绑定变量意味着复制指针，而不是它们指向的内容。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;垃圾回收&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;由表达式组成的程序&lt;/strong&gt;。Lisp程序是表达式的树，每个表达式都返回一个值。这与Fortran和大多数后续语言形成对比，它们区分表达式和语句。&lt;/p&gt;&#xA;&lt;p&gt;在Fortran I中很自然要有这种区别，因为你不能嵌套语句。所以虽然你需要表达式来进行数学运算，但没有必要让其他任何东西返回值，因为不可能有任何东西在等待它。&lt;/p&gt;&#xA;&lt;p&gt;随着块结构语言的出现，这种限制消失了，但那时已经太晚了。表达式和语句的区别已经根深蒂固。它从Fortran传播到Algol，然后传播到它们两者的后代。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;符号类型&lt;/strong&gt;。符号实际上是指向存储在哈希表中的字符串的指针。所以你可以通过比较指针来测试相等性，而不是比较每个字符。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;使用符号和常量树的代码表示法&lt;/strong&gt;。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;整个语言一直存在&lt;/strong&gt;。读取时、编译时和运行时之间没有真正的区别。你可以在读取时编译或运行代码，在编译时读取或运行代码，在运行时读取或编译代码。&lt;/p&gt;&#xA;&lt;p&gt;在读取时运行代码允许用户重新编程Lisp的语法；在编译时运行代码是宏的基础；在运行时编译是Lisp在Emacs等程序中用作扩展语言的基础；在运行时读取使程序能够使用s表达式进行通信，这是一个最近重新发明的想法，称为XML。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;当Lisp首次出现时，这些想法与普通的编程实践相距甚远，这在很大程度上是由1950年代后期可用的硬件决定的。随着时间的推移，默认语言，体现在一系列流行语言中，逐渐向Lisp发展。想法1-5现在已经广泛传播。数字6开始出现在主流中。Python有7的形式，尽管似乎没有任何语法。&lt;/p&gt;&#xA;&lt;p&gt;至于数字8，这可能是最有趣的。想法8和9只是偶然成为Lisp的一部分，因为Steve Russell实现了McCarthy从未打算实现的东西。然而，这些想法结果要对Lisp的奇怪外观和其最独特的特征负责。Lisp看起来奇怪不是因为它有奇怪的语法，而是因为它没有语法；你直接在解析树中表达程序，当其他语言被解析时，这些解析树是在幕后构建的，而这些树是由列表组成的，列表是Lisp数据结构。&lt;/p&gt;&#xA;&lt;p&gt;用其自身的数据结构表达语言结果证明是一个非常强大的特性。想法8和9一起意味着你可以编写编写程序的程序。这可能听起来像是一个奇怪的想法，但在Lisp中这是日常的事情。最常见的方法是使用叫做宏的东西。&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;宏&amp;quot;这个术语在Lisp中的含义与其他语言中的含义不同。Lisp宏可以是从缩写到新语言编译器的任何东西。如果你想真正理解Lisp，或者只是扩展你的编程视野，我会学习更多关于宏的知识。&lt;/p&gt;&#xA;&lt;p&gt;据我所知，Lisp意义上的宏仍然是Lisp独有的。这部分是因为为了拥有宏，你可能必须使你的语言看起来像Lisp一样奇怪。也可能是因为如果你确实添加了这最后的力量增量，你不能再声称你发明了一种新语言，只是一种新的Lisp方言。&lt;/p&gt;&#xA;&lt;p&gt;我提到这主要是作为一个笑话，但这是相当真实的。如果你定义一种具有car、cdr、cons、quote、cond、atom、eq和函数列表表示法的语言，那么你可以从中构建出所有其余的Lisp。这实际上是Lisp的定义品质：McCarthy给予Lisp现在的形状就是为了使这一点成为可能。&lt;/p&gt;&#xA;&lt;h2 id=&#34;语言重要的地方&#34;&gt;语言重要的地方&lt;/h2&gt;&#xA;&lt;p&gt;所以假设Lisp确实代表了主流语言渐近接近的一种极限——这是否意味着你实际上应该使用它来编写软件？使用不太强大的语言你会失去多少？有时候，不处于创新的最前沿不是更明智吗？受欢迎度在某种程度上不是其自身的证明吗？例如，尖头发的老板想要使用一种他可以轻松雇到程序员的语言，难道不对吗？&lt;/p&gt;&#xA;&lt;p&gt;当然，有些项目编程语言的选择并不重要。通常，应用程序要求越高，使用强大语言获得的优势就越大。但很多项目根本不要求高。大多数编程可能包括编写小的粘合程序，对于小的粘合程序，你可以使用任何你已经熟悉的语言，并且对于你需要做的事情有好的库。如果你只需要将数据从一个Windows应用程序馈送到另一个，当然，使用Visual Basic。&lt;/p&gt;</description>
    </item>
    <item>
      <title>五位创始人</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/5founders/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/5founders/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/5founders.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;五位创始人&#34;&gt;五位创始人&lt;/h1&gt;&#xA;&lt;p&gt;五位创始人 2009年4月&lt;/p&gt;&#xA;&lt;p&gt;Inc最近问我，我认为过去30年中最有趣的5位创业创始人是谁。你如何决定谁是最有趣的？最好的标准似乎是影响力：哪5个人对我影响最大？当我与我们投资的公司交谈时，我会用谁作为例子？我发现自己经常引用谁的话？&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;史蒂夫·乔布斯&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;我猜史蒂夫不仅对我，而且对大多数人来说都是最有影响力的创始人。很多创业文化都是苹果文化。他是最初的年轻创始人。虽然&amp;quot;疯狂伟大&amp;quot;的概念在艺术界已经存在，但在20世纪80年代将其引入公司是一个新颖的想法。&lt;/p&gt;&#xA;&lt;p&gt;更值得注意的是，他在30年里一直保持着人们的兴趣。人们期待新的苹果产品，就像期待受欢迎小说家的新书一样。史蒂夫可能不是亲自设计它们，但如果没有他担任CEO，这些产品就不会出现。&lt;/p&gt;&#xA;&lt;p&gt;史蒂夫聪明且充满动力，但硅谷的很多人也是如此。使他独特的是他的设计感。在他之前，大多数公司把设计看作是多余的奢侈品。苹果的竞争对手现在明白了这一点。&lt;/p&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;TJ·罗杰斯&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;TJ·罗杰斯不像史蒂夫·乔布斯那么出名，但他可能是硅谷CEO中最好的作家。关于创业思维方式，我从他那里学到的可能比从任何其他人都多。不是从他写的具体内容，而是通过重构产生这些思想的思维：极其坦率；积极地淘汰过时的想法；但受实用主义而不是意识形态驱动。&lt;/p&gt;&#xA;&lt;p&gt;我读到的他的第一篇文章是如此令人振奋，以至于我清楚地记得当时在哪里。那是《高科技创新：自由市场还是政府补贴？》，我当时在哈佛广场T站的楼下。感觉就像有人在我脑中打开了一个电灯开关。&lt;/p&gt;&#xA;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;拉里和谢尔盖&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;我很抱歉把拉里和谢尔盖当作一个人来对待。我一直认为这对他们不公平。但谷歌确实似乎是一次合作。&lt;/p&gt;&#xA;&lt;p&gt;在谷歌之前，硅谷的公司已经知道拥有最好的黑客很重要。至少他们是这么声称的。但谷歌比任何人都更进一步地推动了这个想法。他们的假设似乎是，至少在初始阶段，你只需要优秀的黑客：如果你雇佣所有最聪明的人，让他们在可以衡量其成功的问题上工作，你就会赢。其他所有东西——包括商学院认为商业所包含的所有东西——你可以在过程中弄清楚。结果不会完美，但它们会是最佳的。如果这是他们的假设，现在已经被实验验证了。&lt;/p&gt;&#xA;&lt;ol start=&#34;4&#34;&gt;&#xA;&lt;li&gt;保罗·布赫海特&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;很少有人知道这一点，但有一个人，保罗·布赫海特，负责谷歌所做的三件最好的事情。他是GMail的原创作者，这是谷歌在搜索之后最令人印象深刻的东西。他还写了AdSense的第一个原型，是谷歌口号&amp;quot;不要作恶&amp;quot;的作者。&lt;/p&gt;&#xA;&lt;p&gt;PB在一次演讲中提出的观点，现在我对我们资助的每家创业公司都提到：最初，让少数用户真正喜欢你比让大量用户有点喜欢你更好。如果我只能告诉创业公司十句话，这会是其中之一。&lt;/p&gt;&#xA;&lt;p&gt;现在他是一家名为Friendfeed的创业公司的联合创始人。它才成立一年，但硅谷的每个人已经在关注他们。一个对谷歌的三个最大想法负责的人将会想出更多。&lt;/p&gt;&#xA;&lt;ol start=&#34;5&#34;&gt;&#xA;&lt;li&gt;萨姆·奥特曼&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;有人告诉我，我不应该在这个名单中提到YC资助公司的创始人。但萨姆·奥特曼不会被这样脆弱的规则阻止。如果他想在这个名单上，他就会在。&lt;/p&gt;&#xA;&lt;p&gt;说实话，萨姆和史蒂夫·乔布斯一样，是我向创业公司提供建议时最常提到的创始人。在设计问题上，我问&amp;quot;史蒂夫会怎么做？&amp;ldquo;但在战略或抱负问题上，我问&amp;quot;萨马会怎么做？&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;从与萨马会面中我学到的是，选民教义适用于创业公司。它适用的程度远比大多数人认为的要少：创业投资并不像赛马那样试图挑选获胜者。但有几个人具有如此强大的意志力，他们将得到他们想要的任何东西。&lt;/p&gt;&#xA;&lt;hr&gt;</description>
    </item>
    <item>
      <title>从众主义</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/conformism/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/conformism/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/conformism.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;从众主义&#34;&gt;从众主义&lt;/h1&gt;&#xA;&lt;h2 id=&#34;从众主义的四个象限&#34;&gt;从众主义的四个象限&lt;/h2&gt;&#xA;&lt;p&gt;2020年7月&lt;/p&gt;&#xA;&lt;p&gt;最有揭示性的人物分类方法之一是根据人们从众的程度和攻击性。想象一个笛卡尔坐标系，其水平轴从左到右是从众思维到独立思维，垂直轴从下到上是从被动到攻击性。产生的四个象限定义了四种类型的人。从左上开始逆时针方向：攻击性从众思维、被动从众思维、被动独立思维和攻击性独立思维。&lt;/p&gt;&#xA;&lt;p&gt;我认为在大多数社会中你会发现所有四种类型，人们落入哪个象限更多地取决于他们自己的个性，而不是他们社会中普遍的信仰。&lt;/p&gt;&#xA;&lt;p&gt;小孩子为这两个观点提供了一些最好的证据。任何上过小学的人都见过这四种类型，而学校规则如此任意这一事实是强有力的证据，证明人们落入哪个象限更多地取决于他们自己，而不是规则。&lt;/p&gt;&#xA;&lt;p&gt;左上象限的孩子，即攻击性从众思维的孩子，是告密者。他们不仅认为规则必须遵守，而且认为不遵守规则的人必须受到惩罚。&lt;/p&gt;&#xA;&lt;p&gt;左下象限的孩子，即被动从众思维的孩子，是绵羊。他们小心地遵守规则，但当其他孩子违反规则时，他们的冲动是担心那些孩子会受到惩罚，而不是确保他们会被惩罚。&lt;/p&gt;&#xA;&lt;p&gt;右下象限的孩子，即被动独立思维的孩子，是爱幻想的孩子。他们不太关心规则，可能甚至不完全确定规则是什么。&lt;/p&gt;&#xA;&lt;p&gt;右上象限的孩子，即攻击性独立思维的孩子，是淘气的孩子。当他们看到规则时，他们的第一冲动是质疑它。仅仅被告知要做什么就会使他们倾向于做相反的事情。&lt;/p&gt;&#xA;&lt;p&gt;当然，在衡量从众主义时，你必须说明是相对于什么，这随着孩子年龄的增长而变化。对较小的孩子来说，这是成年人制定的规则。但随着孩子年龄的增长，规则的来源变成他们的同龄人。因此，一群以同样方式违反学校规则的青少年并不是独立思维的；恰恰相反。&lt;/p&gt;&#xA;&lt;p&gt;在成年期，我们可以通过他们独特的叫声来识别这四种类型，就像你可以识别四种鸟类一样。攻击性从众思维的叫声是&amp;quot;粉碎&amp;lt;外群体&amp;gt;！&amp;quot;（在变量后面看到感叹号相当令人担忧，但这就是攻击性从众思维的整个问题。）被动从众思维的叫声是&amp;quot;邻居会怎么想？&amp;ldquo;被动独立思维的叫声是&amp;quot;各人自扫门前雪&amp;rdquo;。攻击性独立思维的叫声是&amp;quot;然而它确实在动&amp;quot;。&lt;/p&gt;&#xA;&lt;p&gt;这四种类型并不同样常见。被动的人比攻击性的人多，而从众思维的人比独立思维的人多得多。因此被动从众思维是最大的群体，而攻击性独立思维是最小的。&lt;/p&gt;&#xA;&lt;p&gt;由于一个人的象限更多地取决于一个人的个性而不是规则的性质，即使他们在完全不同的社会中长大，大多数人也会占据相同的象限。&lt;/p&gt;&#xA;&lt;p&gt;普林斯顿教授罗伯特·乔治最近写道：&amp;ldquo;我有时问学生，如果他们是白人并在废除奴隶制前生活在南方，他们对奴隶制的立场会是什么。猜猜看？他们都会是废奴主义者！他们都会勇敢地反对奴隶制，并为反对奴隶制而不懈努力。&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;他太礼貌了，没有明说，但当然他们不会。事实上，我们的默认假设不仅应该是他的学生在平均意义上会像当时的人们一样表现，而且应该是现在攻击性从众思维的人在当时也会是攻击性从众思维的。换句话说，他们不仅不会反对奴隶制，而且会是奴隶制最坚定的捍卫者之一。&lt;/p&gt;&#xA;&lt;p&gt;我承认我有偏见，但在我看来，攻击性从众思维的人对世界上不成比例的麻烦负有责任，而且我们自启蒙运动以来发展起来的许多习俗都是为了保护我们其他人免受他们的伤害。特别是，异端概念的废除以及用自由辩论各种不同想法的原则来替代，即使是那些目前被认为不可接受的想法，对于那些尝试看看它们是否有效的人也没有任何惩罚。&lt;/p&gt;&#xA;&lt;p&gt;然而，为什么独立思维的人需要被保护？因为他们拥有所有的新想法。例如，要成为一个成功的科学家，仅仅正确是不够的。你必须在其他人都错的时候正确。从众思维的人做不到这一点。出于类似的原因，所有成功的创业公司CEO不仅仅是独立思维的，而且是攻击性的。因此，社会只有在拥有习俗来遏制从众思维的情况下才能繁荣，这并非巧合。&lt;/p&gt;&#xA;&lt;p&gt;在过去的几年里，我们许多人注意到保护自由探究的习俗已经被削弱。有些人说我们反应过度——它们没有被削弱很多，或者它们被削弱是为了更大的利益。后者我立即处理。当从众思维的人占据上风时，他们总是说这是为了更大的利益。只是每次碰巧是一个不同的、不兼容的更大利益。&lt;/p&gt;&#xA;&lt;p&gt;至于前一种担忧，即独立思维的人过于敏感，自由探究没有被关闭那么多，除非你自己是独立思维的，否则你无法判断这一点。除非你有那些边缘的想法，否则你不知道有多少想法空间被砍掉，而只有独立思维的人才有那些边缘的想法。正因为如此，他们对人们可以自由探索想法的程度的变化非常敏感。他们是这个煤矿里的金丝雀。&lt;/p&gt;&#xA;&lt;p&gt;从众思维的人像往常一样说，他们不想关闭所有想法的讨论，只是坏的想法。&lt;/p&gt;&#xA;&lt;p&gt;你会认为仅仅从这句话就可以明显看出他们在玩一个多么危险的游戏。但我会详细说明。为什么我们需要能够讨论即使是&amp;quot;坏&amp;quot;的想法有两个原因。&lt;/p&gt;&#xA;&lt;p&gt;首先，任何决定禁止哪些想法的过程都一定会犯错误。尤其是因为没有聪明人想要承担那种工作，所以最终由愚蠢的人来做。当一个过程犯很多错误时，你需要留下错误的空间。在这种情况下，这意味着你需要禁止比你想要的更少的想法。但这对于攻击性从众思维的人来说很难做到，部分是因为他们喜欢看到人们受到惩罚，从他们小时候开始就是这样，部分是因为他们相互竞争。正统的执行者不允许存在一个模糊的想法，因为这给了其他执行者在道德纯洁部门胜过他们的机会，甚至可能将执行者转向他们自己。因此，我们没有得到我们需要的错误空间，而是得到了相反的东西：一场逐底竞争，任何似乎可以被禁止的想法最终都被禁止。&lt;/p&gt;&#xA;&lt;p&gt;禁止讨论想法之所以危险的第二个原因是想法之间的关系比看起来更密切。这意味着如果你限制某些话题的讨论，它不仅影响那些话题。限制会传播回任何在禁止话题中有含义的话题。这不是边缘情况。最好的想法正是这样做的：它们在远离其起源的领域中有影响。在一个有些想法被禁止的世界里有想法就像在一个角落有雷区的足球场上踢足球。你不是玩你本来会玩的游戏，而是在一个不同形状的场地上玩。即使在安全的场地上，你也玩一个更加压抑的游戏。&lt;/p&gt;&#xA;&lt;p&gt;在过去，独立思维的人保护自己的方式是聚集在少数地方——首先在法院，后来在大学——在那里他们可以在一定程度上制定自己的规则。人们在那里与想法工作的地方倾向于有保护自由探究的习俗，出于同样的原因，晶圆厂有强大的空气过滤器，或录音室有良好的隔音。至少在过去的几个世纪里，当攻击性从众思维的人无论出于什么原因横行时，大学是最安全的地方。&lt;/p&gt;&#xA;&lt;p&gt;然而，这次可能不会奏效，由于不幸的事实，最新一波的不宽容始于大学。它始于1980年代中期，到2000年似乎已经平息，但随着社交媒体的到来，它最近再次爆发。不幸的是，这似乎是硅谷的一个乌龙球。尽管运行硅谷的人几乎都是独立思维的，但他们给了攻击性从众思维的人一个他们只能梦想的工具。&lt;/p&gt;&#xA;&lt;p&gt;另一方面，也许大学内自由探究精神的下降既是独立思维人离开的症状，也是原因。50年前会成为教授的人现在有其他选择。现在他们可以成为量化分析师或创办创业公司。在这两个领域取得成功都必须是独立思维的。如果这些人当了教授，他们会为学术自由提出更强烈的抵抗。因此，独立思维人逃离衰落的大学的图景过于悲观。也许大学正在衰落，因为许多人已经离开了。&lt;/p&gt;&#xA;&lt;p&gt;尽管我花了很多时间思考这种情况，我无法预测结果如何。一些大学能否扭转当前趋势并保持独立思维人想要聚集的地方？或者独立思维人会逐渐放弃它们？如果发生了这种情况，我非常担心我们可能会失去什么。&lt;/p&gt;&#xA;&lt;p&gt;但我长期来看是有希望的。独立思维人善于保护自己。如果现有机构受到损害，他们会创建新的机构。这可能需要一些想象力。但想象力毕竟是他们的专长。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 我当然意识到，如果人们的个性在任何两个方向上变化，你可以用它们作为轴，并将产生的四个象限称为个性类型。所以我真正声称的是轴是正交的，并且两个方向都有显著变化。&lt;/p&gt;&#xA;&lt;p&gt;[2] 攻击性从众思维的人不对世界上所有的麻烦负责。另一个大麻烦的来源是通过吸引他们来获得权力的有魅力的领导者类型。当这样的领导者出现时，他们变得更加危险。&lt;/p&gt;&#xA;&lt;p&gt;[3] 当我运营Y Combinator时，我从不担心写冒犯从众思维人的东西。如果YC是一家饼干公司，我会面临艰难的道德选择。从众思维的人也吃饼干。但他们不创办成功的创业公司。所以我阻止他们申请YC的唯一效果是节省我们阅读申请的工作。&lt;/p&gt;&#xA;&lt;p&gt;[4] 在一个领域取得了进展：谈论被禁止想法的惩罚比过去轻。被杀害的危险很小，至少在较富裕的国家。攻击性从众思维的人基本上对让人们被解雇感到满意。&lt;/p&gt;&#xA;&lt;p&gt;[5] 许多教授是独立思维的——特别是在数学、硬科学和工程学中，你必须这样才能成功。但学生更能代表一般人口，因此主要是从众思维的。所以当教授和学生发生冲突时，这不仅仅是代际之间的冲突，也是不同类型人之间的冲突。&lt;/p&gt;&#xA;&lt;p&gt;感谢Sam Altman、Trevor Blackwell、Nicholas Christakis、Patrick Collison、Sam Gichuru、Jessica Livingston、Patrick McKenzie、Geoff Ralston和Harj Taggar阅读本文的草稿。&lt;/p&gt;&#xA;&lt;h2 id=&#34;相关&#34;&gt;相关&lt;/h2&gt;&#xA;&lt;p&gt;德语翻译&#xA;韩语翻译&#xA;塞尔维亚语翻译&lt;/p&gt;</description>
    </item>
    <item>
      <title>令人恐惧的雄心勃勃的创业想法</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/ambitious/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/ambitious/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/ambitious.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;令人恐惧的雄心勃勃的创业想法&#34;&gt;令人恐惧的雄心勃勃的创业想法&lt;/h1&gt;&#xA;&lt;p&gt;2012年3月&lt;/p&gt;&#xA;&lt;p&gt;YC最近要求申请者描述他们公司可以扩展到的一个令人恐惧的雄心勃勃的创业想法。这让我想知道什么是令人恐惧的雄心勃勃的创业想法，以及它们是否存在。&lt;/p&gt;&#xA;&lt;p&gt;首先让我问，什么是雄心勃勃的创业想法？我的意思是，不是那种雄心勃勃的初创公司，而是那些雄心勃勃的想法。这些想法在某种意义上说是初创公司能够追求的最大想法。&lt;/p&gt;&#xA;&lt;p&gt;一个令人恐惧的雄心勃勃的创业想法的想法似乎是一个可以发展成为一个价值数十亿美元的公司。但仅仅大并不足以令人恐惧。没有人害怕一个牙膏公司，即使它可以卖10亿美元的牙膏。&lt;/p&gt;&#xA;&lt;p&gt;这个想法必须是一个有争议的初创公司，这意味着它必须有一个秘密。秘密是一个重要但尚未被广泛相信的真实想法。大多数雄心勃勃的想法实际上都有多个秘密。例如，一个杀死并替换Google的想法至少包含三个秘密：(1)搜索结果可以显著更好，(2)你可以通过某种方式赚钱，让用户满意，同时仍然保持搜索结果中立，以及(3)你可以做到而不被Google碾压。&lt;/p&gt;&#xA;&lt;p&gt;这些想法令人恐惧，因为它们有争议的后果。雄心勃勃的想法之所以有争议，是因为它们挑战了一些被广泛相信的谎言。而人们不会对挑战他们认为是真实的事情感到不安，但当有人挑战他们认为理所当然的谎言时，他们会感到被冒犯。&lt;/p&gt;&#xA;&lt;p&gt;但仅仅有争议还不足以令人恐惧。一个想法要令人恐惧，还必须有某种规模。没有人会担心一个声称某些地方性美食不好吃的想法。一个令人恐惧的想法是一个有争议的、大的想法。&lt;/p&gt;&#xA;&lt;p&gt;一个有争议的大想法是挑战一些大型既得利益者的想法。因此，一个令人恐惧的雄心勃勃的创业想法的想法是一个挑战某些大型既得利益者的、大的、有争议的想法。&lt;/p&gt;&#xA;&lt;h2 id=&#34;新搜索引擎&#34;&gt;新搜索引擎&lt;/h2&gt;&#xA;&lt;p&gt;例如，假设你想杀死并替换Google。这显然是一个令人恐惧的雄心勃勃的创业想法。它挑战了一个大型既得利益者——实际上是最大的——但更重要的是，它挑战了人们的一个核心信念：即Google是最好的搜索引擎，没有人可以做得更好。这几乎是宗教信仰。&lt;/p&gt;&#xA;&lt;p&gt;杀死Google的想法令人恐惧，但令人恐惧的是雄心勃勃的想法，而不是初创公司。初创公司本身并不那么令人恐惧。事实上，它们通常很弱小。你只需要一台笔记本电脑。你不需要很多钱。你不需要很多员工。你不需要很多经验。&lt;/p&gt;&#xA;&lt;p&gt;杀死Google的想法令人恐惧，因为它是一个大的、有争议的想法。它挑战了一个大型既得利益者，它挑战了一个核心信念，而且它是一个大想法。&lt;/p&gt;&#xA;&lt;h2 id=&#34;替换电子邮件&#34;&gt;替换电子邮件&lt;/h2&gt;&#xA;&lt;p&gt;另一个例子：替换电子邮件。电子邮件是一个巨大而重要的市场。但电子邮件是一个破碎的系统。它被垃圾邮件、垃圾邮件、垃圾邮件所困扰。没有人喜欢电子邮件。每个人都讨厌电子邮件。所以替换电子邮件的想法是一个雄心勃勃的想法。&lt;/p&gt;&#xA;&lt;p&gt;但这个想法令人恐惧吗？嗯，它挑战了一个大型既得利益者吗？嗯，是的，但它挑战了谁？电子邮件不是由任何一家公司控制的。它是一个开放的标准。所以它没有一个明确的既得利益者来挑战。&lt;/p&gt;&#xA;&lt;p&gt;它挑战了一个核心信念吗？嗯，是的。它挑战了这样一个信念：即电子邮件是不可避免的，我们必须忍受它。&lt;/p&gt;&#xA;&lt;p&gt;它是一个大想法吗？是的。替换电子邮件是一个巨大的想法。&lt;/p&gt;&#xA;&lt;p&gt;所以替换电子邮件是一个令人恐惧的雄心勃勃的创业想法吗？嗯，是的，但我认为它不像杀死Google那样令人恐惧。因为它没有一个明确的既得利益者来挑战。&lt;/p&gt;&#xA;&lt;h2 id=&#34;替换大学&#34;&gt;替换大学&lt;/h2&gt;&#xA;&lt;p&gt;另一个例子：替换大学。大学是一个巨大的市场。大学是一个破碎的系统。它们价格昂贵，它们教的东西没有用，它们官僚主义，它们被官僚主义所困扰。没有人喜欢大学。每个人都讨厌大学。所以替换大学的想法是一个雄心勃勃的想法。&lt;/p&gt;&#xA;&lt;p&gt;但这个想法令人恐惧吗？嗯，它挑战了一个大型既得利益者吗？嗯，是的。它挑战了大学。&lt;/p&gt;&#xA;&lt;p&gt;它挑战了一个核心信念吗？嗯，是的。它挑战了这样一个信念：即大学是获得良好教育的唯一途径，你需要一个大学学位才能获得好工作。&lt;/p&gt;&#xA;&lt;p&gt;它是一个大想法吗？是的。替换大学是一个巨大的想法。&lt;/p&gt;&#xA;&lt;p&gt;所以替换大学是一个令人恐惧的雄心勃勃的创业想法吗？嗯，是的，我认为它比替换电子邮件更令人恐惧，因为它有一个明确的既得利益者来挑战。&lt;/p&gt;&#xA;&lt;h2 id=&#34;互联网戏剧&#34;&gt;互联网戏剧&lt;/h2&gt;&#xA;&lt;p&gt;下一个例子：互联网戏剧。互联网是一个巨大的平台。但互联网是一个破碎的系统。它被垃圾邮件、垃圾邮件、垃圾邮件所困扰。没有人喜欢互联网。每个人都讨厌互联网。所以互联网戏剧的想法是一个雄心勃勃的想法。&lt;/p&gt;&#xA;&lt;p&gt;但这个想法令人恐惧吗？嗯，它挑战了一个大型既得利益者吗？嗯，是的。它挑战了电影和电视行业。&lt;/p&gt;&#xA;&lt;p&gt;它挑战了一个核心信念吗？嗯，是的。它挑战了这样一个信念：即电影和电视是娱乐的唯一形式。&lt;/p&gt;&#xA;&lt;p&gt;它是一个大想法吗？是的。互联网戏剧是一个巨大的想法。&lt;/p&gt;&#xA;&lt;p&gt;所以互联网戏剧是一个令人恐惧的雄心勃勃的创业想法吗？嗯，是的，我认为它比替换大学更令人恐惧，因为它挑战了一个更大的既得利益者。&lt;/p&gt;&#xA;&lt;h2 id=&#34;下一个史蒂夫乔布斯&#34;&gt;下一个史蒂夫·乔布斯&lt;/h2&gt;&#xA;&lt;p&gt;下一个例子：下一个史蒂夫·乔布斯。史蒂夫·乔布斯是一个巨大的想法。史蒂夫·乔布斯是一个破碎的系统。他死了。没有人喜欢史蒂夫·乔布斯。每个人都讨厌史蒂夫·乔布斯。所以下一个史蒂夫·乔布斯的想法是一个雄心勃勃的想法。&lt;/p&gt;&#xA;&lt;p&gt;但这个想法令人恐惧吗？嗯，它挑战了一个大型既得利益者吗？嗯，是的。它挑战了苹果公司。&lt;/p&gt;&#xA;&lt;p&gt;它挑战了一个核心信念吗？嗯，是的。它挑战了这样一个信念：即史蒂夫·乔布斯是不可替代的，没有人可以做到他所做的事情。&lt;/p&gt;&#xA;&lt;p&gt;它是一个大想法吗？是的。下一个史蒂夫·乔布斯是一个巨大的想法。&lt;/p&gt;&#xA;&lt;p&gt;所以下一个史蒂夫·乔布斯是一个令人恐惧的雄心勃勃的创业想法吗？嗯，是的，我认为它比互联网戏剧更令人恐惧，因为它挑战了一个更大的既得利益者。&lt;/p&gt;&#xA;&lt;h2 id=&#34;带回摩尔定律&#34;&gt;带回摩尔定律&lt;/h2&gt;&#xA;&lt;p&gt;下一个例子：带回摩尔定律。摩尔定律是一个巨大的想法。摩尔定律是一个破碎的系统。它已经死了。没有人喜欢摩尔定律。每个人都讨厌摩尔定律。所以带回摩尔定律的想法是一个雄心勃勃的想法。&lt;/p&gt;&#xA;&lt;p&gt;但这个想法令人恐惧吗？嗯，它挑战了一个大型既得利益者吗？嗯，是的。它挑战了英特尔公司。&lt;/p&gt;&#xA;&lt;p&gt;它挑战了一个核心信念吗？嗯，是的。它挑战了这样一个信念：即摩尔定律已经死了，没有人可以带回它。&lt;/p&gt;&#xA;&lt;p&gt;它是一个大想法吗？是的。带回摩尔定律是一个巨大的想法。&lt;/p&gt;&#xA;&lt;p&gt;所以带回摩尔定律是一个令人恐惧的雄心勃勃的创业想法吗？嗯，是的，我认为它比下一个史蒂夫·乔布斯更令人恐惧，因为它挑战了一个更大的既得利益者。&lt;/p&gt;&#xA;&lt;h2 id=&#34;持续诊断&#34;&gt;持续诊断&lt;/h2&gt;&#xA;&lt;p&gt;最后一个例子：持续诊断。持续诊断是一个巨大的想法。持续诊断是一个破碎的系统。它不存在。没有人喜欢持续诊断。每个人都讨厌持续诊断。所以持续诊断的想法是一个雄心勃勃的想法。&lt;/p&gt;&#xA;&lt;p&gt;但这个想法令人恐惧吗？嗯，它挑战了一个大型既得利益者吗？嗯，是的。它挑战了医疗行业。&lt;/p&gt;&#xA;&lt;p&gt;它挑战了一个核心信念吗？嗯，是的。它挑战了这样一个信念：即医疗是昂贵的，没有人能负担得起持续诊断。&lt;/p&gt;&#xA;&lt;p&gt;它是一个大想法吗？是的。持续诊断是一个巨大的想法。&lt;/p&gt;&#xA;&lt;p&gt;所以持续诊断是一个令人恐惧的雄心勃勃的创业想法吗？嗯，是的，我认为它比带回摩尔定律更令人恐惧，因为它挑战了一个更大的既得利益者。&lt;/p&gt;&#xA;&lt;h2 id=&#34;战术建议&#34;&gt;战术建议&lt;/h2&gt;&#xA;&lt;p&gt;所以这些都是令人恐惧的雄心勃勃的创业想法。但如何实现它们呢？如何开始追求一个令人恐惧的雄心勃勃的创业想法？&lt;/p&gt;&#xA;&lt;p&gt;首先，你需要一个想法。你需要一个大的、有争议的想法。你需要一个挑战某个大型既得利益者的想法。你需要一个挑战某个核心信念的想法。你需要一个大的想法。&lt;/p&gt;&#xA;&lt;p&gt;其次，你需要一个计划。你需要一个如何实现这个想法的计划。你需要一个如何开始、如何成长、如何赚钱的计划。你需要一个如何避免被既得利益者碾压的计划。&lt;/p&gt;&#xA;&lt;p&gt;第三，你需要一个团队。你需要一个能够实现这个想法的团队。你需要一个有经验的团队。你需要一个有才华的团队。你需要一个有决心的团队。&lt;/p&gt;&#xA;&lt;p&gt;第四，你需要资金。你需要实现这个想法的资金。你需要开始、成长、赚钱的资金。你需要避免被既得利益者碾压的资金。&lt;/p&gt;&#xA;&lt;p&gt;第五，你需要时间。你需要实现这个想法的时间。你需要开始、成长、赚钱的时间。你需要避免被既得利益者碾压的时间。&lt;/p&gt;&#xA;&lt;p&gt;第六，你需要运气。你需要实现这个想法的运气。你需要开始、成长、赚钱的运气。你需要避免被既得利益者碾压的运气。&lt;/p&gt;&#xA;&lt;p&gt;第七，你需要决心。你需要实现这个想法的决心。你需要开始、成长、赚钱的决心。你需要避免被既得利益者碾压的决心。&lt;/p&gt;&#xA;&lt;p&gt;所以这些都是令人恐惧的雄心勃勃的创业想法。但如何实现它们呢？如何开始追求一个令人恐惧的雄心勃勃的创业想法？你需要一个想法、一个计划、一个团队、资金、时间、运气和决心。&lt;/p&gt;&#xA;&lt;p&gt;但最重要的是，你需要一个令人恐惧的雄心勃勃的创业想法。因为如果你没有一个令人恐惧的雄心勃勃的创业想法，那么你就没有机会成功。&lt;/p&gt;&#xA;&lt;p&gt;所以如果你有一个令人恐惧的雄心勃勃的创业想法，那么恭喜你。你有机会成功。但你仍然需要计划、团队、资金、时间、运气和决心。&lt;/p&gt;&#xA;&lt;p&gt;但如果你没有一个令人恐惧的雄心勃勃的创业想法，那么你就麻烦了。因为你没有机会成功。&lt;/p&gt;&#xA;&lt;p&gt;所以问题是：你有一个令人恐惧的雄心勃勃的创业想法吗？&lt;/p&gt;&#xA;&lt;p&gt;如果你有，那么恭喜你。你有机会成功。&lt;/p&gt;&#xA;&lt;p&gt;如果你没有，那么你就麻烦了。因为你没有机会成功。&lt;/p&gt;&#xA;&lt;p&gt;所以去找到一个令人恐惧的雄心勃勃的创业想法。找到一个大的、有争议的想法。找到一个挑战某个大型既得利益者的想法。找到一个挑战某个核心信念的想法。找到一个大的想法。&lt;/p&gt;&#xA;&lt;p&gt;因为如果你没有一个令人恐惧的雄心勃勃的创业想法，那么你就没有机会成功。&lt;/p&gt;&#xA;&lt;p&gt;所以去找到一个令人恐惧的雄心勃勃的创业想法。因为如果你没有一个令人恐惧的雄心勃勃的创业想法，那么你就没有机会成功。&lt;/p&gt;</description>
    </item>
    <item>
      <title>企业开发</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/corpdev/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/corpdev/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/corpdev.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;企业开发&#34;&gt;企业开发&lt;/h1&gt;&#xA;&lt;h2 id=&#34;不要与企业开发部门交谈&#34;&gt;不要与企业开发部门交谈&lt;/h2&gt;&#xA;&lt;p&gt;2015年1月&lt;/p&gt;&#xA;&lt;p&gt;企业开发，简称corp dev，是公司内部负责收购其他公司的部门。如果你在与corp dev的人交谈，那就是原因，不管你是否意识到这一点。&lt;/p&gt;&#xA;&lt;p&gt;与corp dev交谈通常是一个错误，除非（a）你现在就想出售你的公司，并且（b）你有可能以可接受的价格获得要约。实际上，这意味着创业公司只有在做得非常好或非常糟糕时才应该与corp dev交谈。如果你做得非常糟糕，意味着公司即将倒闭，你不妨与他们交谈，因为你没什么可失去的。如果你做得非常好，你可以安全地与他们交谈，因为你们都知道价格必须很高，如果他们表现出丝毫浪费你时间的迹象，你会有足够的信心告诉他们离开。&lt;/p&gt;&#xA;&lt;p&gt;危险在于处于中间的公司。特别是那些快速增长但还没有足够长时间成长为大公司的年轻公司。对于一家不到一岁的有前途的公司来说，与corp dev交谈通常是一个错误。&lt;/p&gt;&#xA;&lt;p&gt;但这是创始人不断犯的错误。当corp dev的人想要会面时，创始人告诉自己他们至少应该弄清楚他们想要什么。此外，他们不想因拒绝会面而冒犯大公司。&lt;/p&gt;&#xA;&lt;p&gt;好吧，我会告诉你他们想要什么。他们想要谈论收购你。这就是&amp;quot;corp dev&amp;quot;这个头衔的意思。所以在同意与corp dev的人会面之前，问自己，&amp;ldquo;我们现在想出售公司吗？&amp;ldquo;如果答案是否定的，告诉他们&amp;quot;抱歉，但我们专注于发展公司。&amp;ldquo;他们不会被冒犯。当然，大公司的创始人也不会被冒犯。如果有什么的话，他们会更看重你。你会让他们想起自己。他们也没有出售；这就是为什么他们现在处于收购其他公司的位置。[1]&lt;/p&gt;&#xA;&lt;p&gt;大多数被corp dev联系过的创始人已经知道这意味着什么。然而，即使他们知道corp dev做什么并且知道他们不想出售，他们还是会参加会面。他们为什么这么做？同样的否认和一厢情愿的混合，这是创始人犯大多数错误的基础。与想要收购你的人交谈是令人高兴的。谁知道，也许他们的要约会高得出奇。你至少应该看看是什么，对吗？&lt;/p&gt;&#xA;&lt;p&gt;不。如果他们要通过电子邮件立即给你发要约，当然，你不妨打开它。但这不是与corp dev交谈的方式。如果你收到要约，那也是在一个长得令人难以置信的分心过程结束时。而如果要约令人惊讶，那将是惊人的低。&lt;/p&gt;&#xA;&lt;p&gt;分心是你最不能在创业公司中承受的事情。而与corp dev的交谈是最糟糕的分心类型，因为除了消耗你的注意力外，它们还会破坏你的士气。在艰苦过程中生存的技巧之一是不要停下来思考你有多累。相反，你进入一种心流状态。[2] 想象一下，在马拉松第20英里时，如果有人跑到你身边说&amp;quot;你一定觉得很累。你想停下来休息一下吗？&amp;ldquo;这会对你的影响。与corpdev的交谈就像那样，但更糟糕，因为停止的建议在你头脑中与你认为他们会提供的想象的高价格结合在一起。&lt;/p&gt;&#xA;&lt;p&gt;然后你就真的陷入困境了。如果可能的话，corp dev的人喜欢反过来对付你。他们喜欢让你达到试图说服他们购买的地步，而不是他们试图说服你出售。而且令人惊讶的是，他们经常成功。&lt;/p&gt;&#xA;&lt;p&gt;这是一个非常滑的斜坡，润滑着一些可以作用于创始人头脑的最强大力量，并且有一个经验丰富的专业人士陪同，他的全职工作就是把你推下去。&lt;/p&gt;&#xA;&lt;p&gt;他们在把你推下那个斜坡时的战术通常相当残酷。corp dev的人的整个工作就是收购公司，他们甚至不能选择收购哪些公司。衡量他们表现的唯一标准是他们能多便宜地收购你，更有野心的人会不择手段地实现这一点。例如，他们几乎总是会以低价开始，只是看看你是否会接受。即使你不接受，初始低价也会让你士气低落，使你更容易被操纵。&lt;/p&gt;&#xA;&lt;p&gt;这只是他们最无辜的战术。等到你同意了价格，认为你已经达成了交易，然后他们回来说他们的老板否决了这笔交易，不会以超过协议价格一半的价格进行。这种情况经常发生。如果你认为投资者可能行为不端，与corp dev的人能做的相比，那算不了什么。即使是其他方面仁慈的公司的corp dev人员也是如此。&lt;/p&gt;&#xA;&lt;p&gt;我记得有一次向谷歌的一个朋友抱怨他们的corp dev人员对一家YC创业公司玩的一些 nasty伎俩。&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;不作恶发生了什么？&amp;ldquo;我问。&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;我认为corp dev没有收到备忘录，&amp;ldquo;他回答。&lt;/p&gt;&#xA;&lt;p&gt;你在并购对话中遇到的战术可能是你在硅谷相对正直的世界中从未经历过的。就好像一块来自老式强盗大亨商业世界的遗传物质被整合到了创业世界中。[3]&lt;/p&gt;&#xA;&lt;p&gt;保护自己的最简单方法是使用约翰·D·洛克菲勒的技巧，他的祖父是个酒鬼，他用这个技巧来保护自己不成为酒鬼。他曾对一个主日学班级说：孩子们，你们知道我为什么从来没有成为酒鬼吗？因为我从来没有喝过第一杯酒。你现在想出售你的公司吗？不是最终，而是现在。如果不想，就不要参加第一次会面。他们不会被冒犯。而你反过来将保证免受创业公司可能发生的最糟糕经历之一。&lt;/p&gt;&#xA;&lt;p&gt;如果你确实想出售，有另一套技术可以做到这一点。但创始人处理corp dev时犯的最大错误不是在他们准备好时与他们交谈做得不好，而是在他们准备好之前就与他们交谈。所以如果你只记住这篇散文的标题，你已经知道了第一年关于并购的大部分知识。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 我不是说永远不要出售。我的意思是你应该在头脑中清楚是否想出售，不要被操纵或一厢情愿的思绪引导，比你本来打算的更早尝试出售。&lt;/p&gt;&#xA;&lt;p&gt;[2] 在创业公司中，就像在大多数竞争性运动中一样，眼前的任务几乎会自动为你做到这一点；你太忙了感觉不到累。但当你失去这种保护时，例如在终场哨声时，疲劳像波浪一样击中你。与corp dev交谈就是让你在比赛中感受到它。&lt;/p&gt;&#xA;&lt;p&gt;[3] 公平地说，corp dev人员的明显不当行为因为他们作为一个经常不知道自己想法的大组织的面孔而被放大。收购者对收购可能令人惊讶地优柔寡断，当他们不靠谱传到你这里时，与不诚实无法区分。&lt;/p&gt;&#xA;&lt;p&gt;感谢Marc Andreessen、Jessica Livingston、Geoff Ralston和Qasar Younis阅读本文的草稿。&lt;/p&gt;</description>
    </item>
    <item>
      <title>伟大的黑客</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/gh/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/gh/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/gh.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;伟大的黑客&#34;&gt;伟大的黑客&lt;/h1&gt;&#xA;&lt;p&gt;2004年7月&lt;/p&gt;&#xA;&lt;p&gt;（本文源自2004年Oscon大会的演讲。）&lt;/p&gt;&#xA;&lt;p&gt;几个月前我完成了一本新书，在评论中我不断注意到诸如&amp;quot;挑衅性&amp;quot;和&amp;quot;争议性&amp;quot;的词语。更不用说&amp;quot;白痴&amp;quot;了。&lt;/p&gt;&#xA;&lt;p&gt;我并不是想让这本书具有争议性。我试图让它高效。我不想浪费人们的时间告诉他们他们已经知道的事情。更高效的方法只是给他们差异。但我想这必然会产生一本令人担忧的书。&lt;/p&gt;&#xA;&lt;h2 id=&#34;爱迪生们&#34;&gt;爱迪生们&lt;/h2&gt;&#xA;&lt;p&gt;最具争议的想法是：财富的差异可能并不像我们想象的那么大问题。&lt;/p&gt;&#xA;&lt;p&gt;我在书中没有说财富差异本身就是好事。我说在某些情况下它可能是好事的标志。剧烈的头痛不是好事，但它可能是好事的标志——例如，你被击中头部后正在恢复意识。&lt;/p&gt;&#xA;&lt;p&gt;财富差异可能是生产力差异的标志。（在一个人的社会中，它们是相同的。）这几乎肯定是好事：如果你的社会没有生产力差异，可能不是因为每个人都是托马斯·爱迪生。而是因为你没有托马斯·爱迪生。&lt;/p&gt;&#xA;&lt;p&gt;在低技术社会中，你看不到太多的生产力差异。如果你有一群游牧民族为火收集木棍，最好的木棍收集者比最差的能多收集多少？两倍？而当你给人们一个像电脑这样的复杂工具时，他们能用它做的事情的差异是巨大的。&lt;/p&gt;&#xA;&lt;p&gt;这不是一个新想法。Fred Brooks在1974年写过这个，他引用的研究发表于1968年。但我认为他低估了程序员之间的差异。他写了代码行数方面的生产力：最好的程序员可以在十分之一的时间内解决给定问题。但如果问题没有给定呢？在编程中，就像在许多领域一样，困难的部分不是解决问题，而是决定要解决什么问题。想象力很难衡量，但在实践中它主导着以代码行数衡量的那种生产力。&lt;/p&gt;&#xA;&lt;p&gt;生产力在任何领域都有变化，但很少有领域变化如此之大。程序员之间的差异如此之大，以至于成为一种质的差异。我不认为这是编程固有的，但在每个领域，技术都放大了生产力的差异。我认为编程中发生的事情只是因为我们有很多技术杠杆。但在每个领域，杠杆都在变长，所以我们看到的差异是随着时间的推移，越来越多的领域都会看到的。公司和国家的成功将越来越取决于他们如何应对这个问题。&lt;/p&gt;&#xA;&lt;p&gt;如果生产力的差异随着技术而增加，那么最有生产力个体的贡献不仅会不成比例地大，而且会随着时间的推移而实际增长。当你达到一个群体的90%产出由其1%的成员创造的地步时，如果有什么（无论是维京袭击，还是中央计划）将他们的生产力拖到平均水平，你就会损失惨重。&lt;/p&gt;&#xA;&lt;p&gt;如果我们想充分利用他们，我们需要了解这些特别有生产力的人。什么激励他们？他们需要什么来做他们的工作？你如何认识他们？你如何让他们来为你工作？然后当然还有这个问题，你如何成为其中一员？&lt;/p&gt;&#xA;&lt;h2 id=&#34;不仅仅是金钱&#34;&gt;不仅仅是金钱&lt;/h2&gt;&#xA;&lt;p&gt;我认识一些超级黑客，所以我坐下来思考他们有什么共同点。他们的决定性品质可能是他们真的喜欢编程。普通程序员写代码是为了付账单。伟大的黑客认为这是他们为了乐趣而做的事情，并且很高兴发现有人会为此付钱。&lt;/p&gt;&#xA;&lt;p&gt;伟大的程序员有时被认为对金钱漠不关心。这不完全正确。确实，他们真正关心的只是做有趣的工作。但如果你赚了足够的钱，你就可以做任何你想做的工作，因此黑客被赚取巨额金钱的想法所吸引。但只要他们还必须每天上班工作，他们更关心在那里做什么，而不是得到多少报酬。&lt;/p&gt;&#xA;&lt;p&gt;从经济学上讲，这是最重要的事实，因为这意味着你不必支付伟大的黑客接近他们价值的报酬。一个伟大的程序员可能比普通程序员生产力高十倍或一百倍，但他会认为能获得三倍报酬就很幸运了。正如我稍后要解释的，这部分是因为伟大的黑客不知道他们有多好。但也是因为金钱不是他们主要想要的东西。&lt;/p&gt;&#xA;&lt;p&gt;黑客想要什么？像所有工匠一样，黑客喜欢好工具。事实上，这低估了。好的黑客发现无法忍受使用坏工具。他们会拒绝在错误基础设施的项目上工作。&lt;/p&gt;&#xA;&lt;p&gt;在我曾经工作过的一家创业公司，我们公告板上钉着的一张东西是IBM的广告。那是一张AS400的图片，标题写着，我认为，&amp;ldquo;黑客鄙视它。&amp;quot;[1]&lt;/p&gt;&#xA;&lt;p&gt;当你决定为项目使用什么基础设施时，你不仅在做出技术决定。你还在做出社会决定，而这可能是两者中更重要的。例如，如果你的公司想写一些软件，用Java写似乎是一个谨慎的选择。但当你选择一种语言时，你也在选择一个社区。你能雇佣来在Java项目上工作的程序员不会像你能雇佣来在Python项目上工作的那样聪明。而你的黑客的质量可能比你选择的语言更重要。虽然，坦率地说，好的黑客更喜欢Python而不是Java这一事实应该告诉你这些语言的相对优点。&lt;/p&gt;&#xA;&lt;p&gt;商业类型更喜欢最流行的语言，因为他们将语言视为标准。他们不想在公司上下注Betamax。但语言的问题是，它们不仅仅是标准。如果你必须通过网络传输比特，务必使用TCP/IP。但编程语言不仅仅是格式。编程语言是一种表达媒介。&lt;/p&gt;&#xA;&lt;p&gt;我读到Java刚刚超过Cobol成为最流行的语言。作为标准，你不能期望更多。但作为表达媒介，你可以做得更好。在我能想到的所有伟大程序员中，我只知道一个会自愿用Java编程。而在我能想到的所有不为Sun工作的伟大程序员中，在Java方面，我一个也不知道。&lt;/p&gt;&#xA;&lt;p&gt;伟大的黑客通常也坚持使用开源软件。不仅仅是因为它更好，还因为它给他们更多控制权。好的黑客坚持控制权。这是使他们成为好黑客的部分原因：当某些东西坏了时，他们需要修复它。你希望他们对你为他们编写的软件有这种感觉。当他们对操作系统有同样的感觉时，你不应该感到惊讶。&lt;/p&gt;&#xA;&lt;p&gt;几年前，一个风险投资家朋友告诉我他参与的一家新创业公司。听起来很有希望。但下次我和他交谈时，他们说他们决定在Windows NT上构建软件，并刚刚聘请了一位非常有经验的NT开发者担任首席技术官。当我听到这个时，我想，这些人注定要失败。第一，CTO不可能是第一流黑客，因为要成为杰出的NT开发者，他必须自愿多次使用NT，我无法想象一个伟大的黑客会这样做；第二，即使他很好，如果项目必须在NT上构建，他也很难雇佣到优秀的人才。[2]&lt;/p&gt;&#xA;&lt;h2 id=&#34;最后的边疆&#34;&gt;最后的边疆&lt;/h2&gt;&#xA;&lt;p&gt;除了软件，黑客最重要的工具可能是他的办公室。大公司认为办公室空间的功能是表达等级。但黑客不仅仅为此使用办公室：他们将办公室作为思考的地方。如果你是一家技术公司，他们的思想就是你的产品。所以让黑客在嘈杂、分散注意力的环境中工作，就像在油漆厂空气中充满烟尘。&lt;/p&gt;&#xA;&lt;p&gt;连环漫画Dilbert有很多关于隔间的说法，这是有充分理由的。我认识的所有黑客都鄙视它们。仅仅被中断的前景就足以阻止黑客处理困难问题。如果你想在有隔间的办公室里完成真正的工作，你只有两个选择：在家工作，或在别人不在的时候早点来、晚点来或周末来。公司没有意识到这是出了问题的标志吗？办公室环境应该是有助于你工作的东西，而不是你尽管如此才工作的东西。&lt;/p&gt;&#xA;&lt;p&gt;像思科这样的公司为每个人都有一间隔间而自豪，即使是CEO。但他们不像他们想象的那么先进；显然他们仍然将办公室空间视为等级的标志。还要注意，思科以很少在内部进行产品开发而闻名。他们通过收购创造新技术的创业公司来获得新技术——大概在那里黑客确实有安静的工作地方。&lt;/p&gt;&#xA;&lt;p&gt;一家理解黑客需求的大公司是微软。我曾经看到过微软的招聘广告，有一张门的大图片。为我们工作，前提是，我们会给你一个可以真正完成工作的地方。而且你知道，微软在大公司中之所以非凡，是因为他们能够在内部开发软件。也许不太好，但足够好。&lt;/p&gt;&#xA;&lt;p&gt;如果公司希望黑客有生产力，他们应该看看他们在家里做什么。在家里，黑客可以自己安排事情，以便完成最多的工作。当黑客在家工作时，他们不在嘈杂、开放的空间工作；他们在有门的房间里工作。他们在舒适、社区化的地方工作，周围有人，需要思考时可以散步，而不是在停车场英亩的玻璃盒子里。他们有可以在感到疲倦时小睡的沙发，而不是坐在桌前昏迷，假装工作。没有吸尘器人员在每晚黑客黄金时间呼啸而过。没有会议，或者，天哪，公司静修或团队建设练习。当你看他们在电脑上做什么时，你会发现它强化了我之前关于工具的说法。他们在工作时可能必须使用Java和Windows，但在家里，当他们可以自由选择时，你更可能发现他们使用Perl和Linux。&lt;/p&gt;&#xA;&lt;p&gt;事实上，这些关于Cobol或Java是最流行语言的统计数据可能会产生误导。如果我们想知道什么工具最好，我们应该看的是黑客在可以自由选择时选择什么——也就是说，在他们自己的项目中。当你问这个问题时，你会发现开源操作系统已经占据了主导市场份额，排名第一的语言可能是Perl。&lt;/p&gt;&#xA;&lt;h2 id=&#34;有趣&#34;&gt;有趣&lt;/h2&gt;&#xA;&lt;p&gt;除了好工具，黑客想要有趣的项目。什么使项目有趣？嗯，显然像隐形飞机或特效软件那样明显性感的应用程序会很有趣。但任何应用程序如果提出新颖的技术挑战，都可能很有趣。所以很难预测黑客会喜欢哪些问题，因为有些只有在工作的人发现新的解决方案时才变得有趣。在ITA（编写Orbitz内部软件的公司）之前，从事机票价格搜索的人可能认为这是可以想象的最无聊的应用程序。但ITA通过以更雄心勃勃的方式重新定义问题使其变得有趣。&lt;/p&gt;&#xA;&lt;p&gt;我认为谷歌也发生了同样的事情。当谷歌成立时，所谓门户网站的传统看法是搜索很无聊且不重要。但谷歌的人不认为搜索无聊，这就是为什么他们做得这么好。&lt;/p&gt;&#xA;&lt;p&gt;这是管理者可以有所作为的领域。就像父母对孩子说，我打赌你不能在十分钟内清理整个房间，一个好的管理者有时可以将问题重新定义为更有趣的问题。史蒂夫·乔布斯似乎特别擅长这个，部分原因只是因为他有高标准。在Mac之前有很多小型、便宜的电脑。他将问题重新定义为：制造一个漂亮的。这可能比任何胡萝卜或大棒更能驱动开发者。&lt;/p&gt;&#xA;&lt;p&gt;他们确实做到了。当Mac首次出现时，你甚至不必打开它就知道它会很好；你可以从机箱上看出来。几周前我在剑桥的街上走，在某个人的垃圾里我看到了一个似乎是Mac手提箱的东西。我往里看，里面有一台Mac SE。我带回家插上电，它启动了。快乐的Macintosh脸，然后是finder。我的天，它是如此简单。就像&amp;hellip;&amp;hellip;谷歌。&lt;/p&gt;&#xA;&lt;p&gt;黑客喜欢为有高标准的人工作。但仅仅精确是不够的。你必须坚持正确的事情。这通常意味着你必须自己是一个黑客。我偶尔看到过关于如何管理程序员的文章。真的应该有两篇文章：一篇是关于如果你自己是程序员该做什么，另一篇是关于如果你不是该做什么。而第二篇可能可以浓缩成两个词：放弃。&lt;/p&gt;&#xA;&lt;p&gt;问题不在于日常管理。真正好的黑客几乎是自我管理的。问题是，如果你不是黑客，你无法分辨谁是好黑客。一个类似的问题解释了为什么美国汽车如此丑陋。我称之为设计悖论。你可能认为你可以通过雇佣伟大的设计师来设计产品而使产品美丽。但如果你自己没有好品味，你如何认识好设计师？根据定义，你无法从他的作品集中判断。你也不能看他获得的奖项或工作，因为在设计领域，就像在大多数领域一样，这些往往是由时尚和交际驱动的，而实际能力排在第三位。没有办法：你无法在不知道什么是美丽的情况下管理一个旨在生产美丽的过程。美国汽车丑陋是因为美国汽车公司由品味差的人经营。&lt;/p&gt;&#xA;&lt;p&gt;这个国家的许多人认为品味是难以捉摸的，甚至是轻浮的。它都不是。要推动设计，管理者必须是公司产品最苛刻的用户。如果你真的有好品味，你可以像史蒂夫·乔布斯那样，使满足你成为好人喜欢解决的问题。&lt;/p&gt;&#xA;&lt;h2 id=&#34;讨厌的小问题&#34;&gt;讨厌的小问题&lt;/h2&gt;&#xA;&lt;p&gt;很容易说什么样的问题不是有趣的：那些你必须解决很多讨厌小问题，而不是解决几个大的、清晰的问题。最糟糕的项目之一是为充满错误的软件编写接口。另一个是当你必须为个别客户的复杂和定义不清的需求定制东西。对黑客来说，这类项目是千刀万剐的死亡。&lt;/p&gt;&#xA;&lt;p&gt;讨厌小问题的区别特征是你从中学不到任何东西。编写编译器很有趣，因为它教你什么是编译器。但为有错误的软件编写接口教不了你任何东西，因为错误是随机的。[3] 所以不仅仅是挑剔使好黑客避免讨厌的小问题。这更多是自我保护的问题。处理讨厌的小问题会让你变笨。好黑客避免它就像模特避免奶酪汉堡一样。&lt;/p&gt;&#xA;&lt;p&gt;当然，有些问题固有这种特征。由于供需关系，它们报酬特别高。所以找到方法让伟大黑客处理繁琐问题的公司会非常成功。你会怎么做？&lt;/p&gt;&#xA;&lt;p&gt;这种情况发生的一个地方是创业公司。在我们的创业公司，我们有Robert Morris担任系统管理员。这就像让滚石乐队在犹太成年礼上演奏。你雇佣不到那种人才。但人们会为他们创始人的公司做任何艰苦的工作。[4]&lt;/p&gt;&#xA;&lt;p&gt;大公司通过分割公司来解决这个问题。他们通过建立独立的研发部门来吸引聪明的人为他们工作，员工不必直接处理客户讨厌的小问题。[5] 在这个模型中，研发部门的功能就像矿山。他们产生新想法；也许公司其余部分能够使用它们。&lt;/p&gt;&#xA;&lt;p&gt;你可能不必走到这种极端。自底向上编程提供了另一种分割公司的方法：让聪明的人作为工具制造者工作。如果你的公司制造做x的软件，让一个组构建用于编写这类软件的工具，另一个组使用这些工具编写应用程序。这样你可能能够让聪明的人写99%的代码，但仍然让他们像在传统研发部门那样与用户几乎隔离。工具制造者会有用户，但他们只是公司自己的开发者。[6]&lt;/p&gt;&#xA;&lt;p&gt;如果微软使用这种方法，他们的软件就不会充满安全漏洞，因为编写实际应用程序的较不聪明的人不会做分配内存这样的低级工作。他们不会直接用C编写Word，而是将Word语言的大型乐高积木拼在一起。（Duplo，我相信是技术术语。）&lt;/p&gt;&#xA;&lt;h2 id=&#34;聚集&#34;&gt;聚集&lt;/h2&gt;&#xA;&lt;p&gt;除了有趣的问题，好黑客喜欢的还有其他好黑客。伟大的黑客倾向于聚集在一起——有时如此壮观，就像在施乐帕洛阿尔托研究中心。所以你不会以线性比例吸引好黑客，因为你为他们创造的环境有多好。聚集的倾向意味着它更像是环境的平方。所以赢家通吃。在任何给定时间，只有大约十个或二十个黑客最想工作的地方，如果你不是其中之一，你不仅会有更少的伟大黑客，你会是零。&lt;/p&gt;&#xA;&lt;p&gt;拥有伟大的黑客本身并不足以使公司成功。这对谷歌和ITA很有效，它们是现在的两个热点，但它没有帮助思维机器或施乐。Sun曾经有一段好时光，但他们的商业模式是下降电梯。在这种情况下，即使最好的黑客也救不了你。&lt;/p&gt;&#xA;&lt;p&gt;不过，我认为，在其他条件相同的情况下，能够吸引伟大黑客的公司将具有巨大优势。有人会不同意这一点。当我们在1990年代走访风险投资公司时，几家告诉我们软件公司不是通过编写伟大的软件获胜，而是通过品牌、主导渠道和做正确的交易。&lt;/p&gt;&#xA;&lt;p&gt;他们似乎真的相信这一点，我想我知道为什么。我认为许多风险投资家寻找的，至少在无意识中，是下一个微软。当然，如果微软是你的模型，你不应该寻找希望通过编写伟大软件获胜的公司。但风险投资家寻找下一个微软是错误的，因为没有创业公司能成为下一个微软，除非其他公司准备在恰到好处的时刻弯腰成为下一个IBM。&lt;/p&gt;&#xA;&lt;p&gt;使用微软作为模型是错误的，因为他们的整个文化源自那一次幸运的突破。微软是一个坏的数据点。如果你把他们扔出去，你会发现好产品确实倾向于在市场上获胜。风险投资家应该寻找的是下一个苹果，或下一个谷歌。&lt;/p&gt;&#xA;&lt;p&gt;我想比尔·盖茨知道这一点。谷歌让他担心的不是他们品牌的力量，而是他们有更好的黑客。[7]&lt;/p&gt;&#xA;&lt;h2 id=&#34;认可&#34;&gt;认可&lt;/h2&gt;&#xA;&lt;p&gt;那么谁是伟大的黑客？你遇到时如何知道？结果证明这非常困难。即使是黑客也说不出来。我现在很确定我的朋友Trevor Blackwell是一个伟大的黑客。你可能读过Slashdot上关于他如何制作自己的Segway的报道。这个项目的显著之处是他在一天内写了所有软件（顺便说一句，用Python）。&lt;/p&gt;&#xA;&lt;p&gt;对Trevor来说，这是家常便饭。但当我第一次遇到他时，我认为他是个十足的白痴。他站在Robert Morris的办公室里对他喋喋不休地说着什么，我记得我站在他身后向Robert做疯狂的手势，把这个疯子赶出办公室，这样我们就可以去吃午饭了。Robert说他一开始也误判了Trevor。显然当Robert第一次遇到他时，Trevor刚刚开始一个新计划，涉及在一堆索引卡上写下他生活各方面的所有内容，他随身携带。他也刚从加拿大来，有浓重的加拿大口音和mullet发型。&lt;/p&gt;&#xA;&lt;p&gt;由于黑客尽管有社交迟钝的声誉，有时却花费很大努力让自己看起来聪明，这使问题更加复杂。当我在研究生院时，我偶尔会在MIT AI实验室闲逛。起初有点吓人。那里的每个人都说话这么快。但过了一会儿我学会了快速说话的技巧。你不必思考得更快；只是用两倍的词说所有事情。信号中有这么多噪音，遇到好黑客时很难分辨。我现在也分辨不出。你也无法从他们的简历中看出来。似乎判断黑客的唯一方法是和他一起处理某个问题。&lt;/p&gt;</description>
    </item>
    <item>
      <title>你会希望你当初知道的事</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/hs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/hs/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/hs.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;你会希望你当初知道的事&#34;&gt;你会希望你当初知道的事&lt;/h1&gt;&#xA;&lt;p&gt;2005年1月&lt;/p&gt;&#xA;&lt;p&gt;（我为高中写了这篇演讲。我实际上从未做过这个演讲，因为学校当局否决了邀请我的计划。）&lt;/p&gt;&#xA;&lt;p&gt;当我说我要在高中演讲时，我的朋友们很好奇。你会对高中生说什么？于是我问他们，你希望有人在高中时告诉你什么？他们的回答惊人地相似。所以我要告诉你们我们都希望有人告诉过我们的事情。&lt;/p&gt;&#xA;&lt;p&gt;我先告诉你们一件你们在高中不需要知道的事情：你的人生想做什么。人们总是问你这个问题，所以你觉得你应该有个答案。但成年人问这个主要是为了开始对话。他们想知道你是哪种人，这个问题只是为了让你们开口说话。他们问这个问题就像你可能戳潮水池里的寄居蟹，看看它会做什么。&lt;/p&gt;&#xA;&lt;p&gt;如果我现在回到高中，有人问我的计划，我会说我的首要任务是了解有什么选择。你不需要急着选择你的人生工作。你需要做的是发现你喜欢什么。如果你想在所做的事情上做得好，你必须做你喜欢的事情。&lt;/p&gt;&#xA;&lt;p&gt;决定你喜欢什么似乎是最容易的事情，但结果证明是困难的，部分是因为很难准确了解大多数工作的真实情况。当医生并不像电视上描绘的那样。幸运的是，你也可以通过在医院做志愿者来观察真正的医生。[1]&lt;/p&gt;&#xA;&lt;p&gt;但是有些工作你无法了解，因为还没有人做这些工作。过去十年里我做的大多数工作在我上高中时都不存在。世界变化很快，变化的速度本身也在加快。在这样的世界里，制定固定计划不是个好主意。&lt;/p&gt;&#xA;&lt;p&gt;然而每年五月，全国各地的演讲者都会点燃标准毕业演讲，主题是：不要放弃你的梦想。我知道他们的意思，但这是个糟糕的说法，因为它暗示你应该被早期制定的某个计划束缚。计算机世界对此有个术语：过早优化。这等同于灾难。这些演讲者最好只简单地说，不要放弃。&lt;/p&gt;&#xA;&lt;p&gt;他们真正的意思是，不要气馁。不要认为你不能做别人能做的事情。我同意你不应该低估你的潜力。做过伟大事情的人似乎像是另一个种族的人。大多数传记只会夸大这种幻觉，部分原因是传记作者不可避免地陷入崇拜的态度，部分是因为，知道故事的结局，他们忍不住简化情节，直到似乎主题的生活是命运的问题，只是某种天生天才的展开。事实上，我怀疑如果你和十六岁的莎士比亚或爱因斯坦一起上学，他们会给人留下深刻印象，但并不是完全不像你的其他朋友。&lt;/p&gt;&#xA;&lt;p&gt;这是个令人不安的想法。如果他们只是像我们一样，那么他们必须非常努力地工作才能做到他们所做的事情。这是我们喜欢相信天才的原因之一。它为我们的懒惰找了个借口。如果这些人能够做到他们所做的事情只是因为某种神奇的莎士比亚性或爱因斯坦性，那么如果我们不能做到同样好的事情，不是我们的错。&lt;/p&gt;&#xA;&lt;p&gt;我并不是说没有天才这种东西。但如果你试图在两个理论之间选择，一个为你的懒惰找借口，另一个可能是正确的。&lt;/p&gt;&#xA;&lt;p&gt;到目前为止，我们已经将标准毕业演讲从&amp;quot;不要放弃你的梦想&amp;quot;削减到&amp;quot;别人能做的，你也能做。&amp;ldquo;但这还需要进一步削减。自然能力确实存在差异。大多数人高估了它的作用，但它确实存在。如果我和一个四英尺高、雄心是在NBA打球的人说话，我会说&amp;quot;只要你真正努力，你就能做任何事情&amp;rdquo;，这会显得非常愚蠢。[2]&lt;/p&gt;&#xA;&lt;p&gt;我们需要将标准毕业演讲削减为，&amp;ldquo;具有你能力的人能做的，你也能做；不要低估你的能力。&amp;ldquo;但经常发生的是，你越接近真相，你的句子就越混乱。我们采用了一个漂亮、整洁（但错误）的口号，把它搅得像泥潭一样。它不再是一篇很好的演讲了。但更糟糕的是，它不再告诉你该做什么了。具有你能力的人？你的能力是什么？&lt;/p&gt;&#xA;&lt;h2 id=&#34;逆风&#34;&gt;逆风&lt;/h2&gt;&#xA;&lt;p&gt;我认为解决方案是朝另一个方向努力。不要从目标倒推，要从有希望的情况向前推进。实际上，大多数成功的人都是这样做的。&lt;/p&gt;&#xA;&lt;p&gt;在毕业演讲的方法中，你决定二十年后想在哪里，然后问：我现在应该做什么才能到达那里？我建议你不要承诺未来任何事情，只看现在可用的选择，选择那些会给你最有希望的选择范围的。&lt;/p&gt;&#xA;&lt;p&gt;你做什么工作并不那么重要，只要你不浪费时间。做你感兴趣并增加你选择的事情，稍后再担心选择哪个。&lt;/p&gt;&#xA;&lt;p&gt;假设你是一个大学新生，决定主修数学还是经济学。嗯，数学会给你更多选择：你可以从数学进入几乎任何领域。如果你主修数学，很容易进入经济学研究生院，但如果你主修经济学，很难进入数学研究生院。&lt;/p&gt;&#xA;&lt;p&gt;滑翔机在这里是个很好的比喻。因为滑翔机没有引擎，你不能迎风飞行而不失去大量高度。如果你让自己离好的着陆点很远顺风，你的选择会不舒服地缩小。通常你想保持逆风。所以我建议用&amp;quot;保持逆风&amp;quot;来替代&amp;quot;不要放弃你的梦想&amp;rdquo;。&lt;/p&gt;&#xA;&lt;p&gt;但是，你怎么做到这一点呢？即使数学是经济学的逆风，你作为一个高中生怎么知道这一点？&lt;/p&gt;&#xA;&lt;p&gt;嗯，你不知道，而这是你需要发现的。寻找聪明人和困难的问题。聪明人倾向于聚集在一起，如果你能找到这样一个群体，加入它可能是值得的。但要找到这些并不直接，因为有很多造假行为。&lt;/p&gt;&#xA;&lt;p&gt;对于一个新来的本科生，所有大学系看起来都差不多。教授们似乎都令人生畏地博学，发表的论文对外人来说难以理解。但是，虽然在某些领域论文难以理解是因为它们充满了困难的想法，但在其他领域，它们被故意写成晦涩的方式，似乎在说重要的事情。这似乎是个令人震惊的主张，但它已经在著名的《社会文本》事件中被实验验证了。怀疑文学理论家发表的论文常常只是听起来理智的无稽之谈，一位物理学家故意写了一篇充满听起来理智的无稽之谈的论文，并提交给一家文学理论期刊，该期刊发表了它。&lt;/p&gt;&#xA;&lt;p&gt;最好的保护总是做困难的问题。写小说是困难的。读小说不是。困难意味着担忧：如果你不担心你制作的东西会出来得不好，或者你将无法理解你正在学习的东西，那么它就不够困难。必须有悬念。&lt;/p&gt;&#xA;&lt;p&gt;嗯，这可能看起来是对世界的悲观看法，你可能认为。我告诉你的是你应该担忧？是的，但并不像听起来那么糟糕。克服担忧是令人振奋的。你看不到比赢得金牌的人更快乐的面孔。你知道他们为什么那么快乐吗？解脱。&lt;/p&gt;&#xA;&lt;p&gt;我并不是说这是快乐的唯一方式。只是说某些担忧并不像听起来那么糟糕。&lt;/p&gt;&#xA;&lt;h2 id=&#34;雄心&#34;&gt;雄心&lt;/h2&gt;&#xA;&lt;p&gt;在实践中，&amp;ldquo;保持逆风&amp;quot;简化为&amp;quot;做困难的问题&amp;rdquo;。你今天就可以开始。我希望我在高中时就理解了这一点。&lt;/p&gt;&#xA;&lt;p&gt;大多数人喜欢在所做的事情上做得好。在所谓现实世界中，这种需求是一种强大的力量。但高中生很少从中受益，因为他们被给予一个虚假的事情做。当我在高中时，我让自己相信我的工作是做一个高中生。于是我让自己对在所做的事情上做得好的需求仅仅通过在学校做得好来满足。&lt;/p&gt;&#xA;&lt;p&gt;如果你在高中时问我高中生和成年人之间的区别是什么，我会说成年人必须谋生。错了。是成年人为自己负责。谋生只是其中的一小部分。更重要的是为自己承担智力责任。&lt;/p&gt;&#xA;&lt;p&gt;如果我不得不再次经历高中，我会把它当作日常工作对待。我不是说我在学校会松懈。把某事当作日常工作并不意味着把它做得很差。它意味着不被它定义。我的意思是我不认为自己是高中生，就像一个有服务员日常工作的音乐家不认为自己是服务员。[3] 当我不做日常工作的时候，我会开始尝试做真正的工作。&lt;/p&gt;&#xA;&lt;p&gt;当我问人们他们对高中最大的遗憾是什么时，他们几乎都说同样的事情：他们浪费了这么多时间。如果你想知道你现在在做什么，将来会最遗憾，可能就是这个。[4]&lt;/p&gt;&#xA;&lt;p&gt;有人说这是不可避免的——高中生还不能完成任何事情。但我不认为这是真的。证据就是你很无聊。你八岁的时候可能不无聊。你八岁的时候叫&amp;quot;玩耍&amp;quot;而不是&amp;quot;闲逛&amp;rdquo;，但这是一回事。当我八岁的时候，我很少无聊。给我一个后院和几个其他孩子，我就能玩一整天。&lt;/p&gt;&#xA;&lt;p&gt;我现在意识到，这在初中和高中变得陈旧的原因，是我准备好做别的事情了。童年正在变老。&lt;/p&gt;&#xA;&lt;p&gt;我不是说你不应该和朋友闲逛——不是说你们都应该成为除了工作什么都不做的无趣的小机器人。和朋友闲逛就像巧克力蛋糕。如果你偶尔吃它，你会更享受它，而不是每顿饭都只吃巧克力蛋糕。无论你多么喜欢巧克力蛋糕，吃了三顿饭后你会相当恶心。而这就是一个人在高中时感到的不适：精神恶心。[5]&lt;/p&gt;&#xA;&lt;p&gt;你可能想，我们必须做的不仅仅是取得好成绩。我们必须有课外活动。但你很清楚这些大多数是多么虚假。为慈善机构收集捐款是值得称赞的事情，但这不难。这不是完成什么事情。我所说的完成事情是指学习如何写得很好，或者如何编程计算机，或者前工业社会的生活到底是什么样的，或者如何写生人面。这种事情很少能转化为大学申请表上的一项。&lt;/p&gt;&#xA;&lt;h2 id=&#34;腐败&#34;&gt;腐败&lt;/h2&gt;&#xA;&lt;p&gt;围绕进入大学设计你的生活是危险的，因为你必须给留下印象才能进入大学的人不是一个很有洞察力的听众。在大多数大学，决定你是否能进入的不是教授，而是招生官员，他们远没有那么聪明。他们是智力世界的士官。他们看不出你有多聪明。预科学校的存在本身就证明了这一点。&lt;/p&gt;&#xA;&lt;p&gt;很少有父母会为他们的孩子付那么多钱去一个不改善他们入学前景的学校。预科学校公开说这是他们的目标之一。但如果你停下来想一想，这意味着他们可以入侵入学过程：他们可以让同一个孩子显得比他去当地公立学校时更有吸引力。[6]&lt;/p&gt;&#xA;&lt;p&gt;现在你们大多数人都觉得你们生活中的工作是成为一个有前途的大学申请人。但这意味着你在设计你的生活来满足一个如此无意识的过程，以至于有一个完整的行业致力于颠覆它。难怪你会变得愤世嫉俗。你感到的不适与真人秀节目制作人或烟草业高管所感到的相同。你甚至得不到很多报酬。&lt;/p&gt;&#xA;&lt;p&gt;那么你做什么？你不应该做的是反抗。我就是这么做的，那是个错误。我没有完全意识到我们身上发生了什么，但我闻到了一股大老鼠的味道。于是我就放弃了。显然世界糟透了，那又何必费心呢？&lt;/p&gt;&#xA;&lt;p&gt;当我发现我们的一位老师自己也在使用Cliff&amp;rsquo;s Notes时，这似乎是理所当然的。在这样的课上取得好成绩肯定毫无意义。&lt;/p&gt;&#xA;&lt;p&gt;回想起来这是愚蠢的。这就像有人在足球比赛中被犯规，说，嘿，你犯规了，这是违反规则的，然后愤愤地走下场。犯规会发生。当你被犯规时要做的是不要失去冷静。继续比赛。通过把你置于这种情况，社会对你犯规了。是的，正如你怀疑的，你在课堂上学到的很多东西都是垃圾。是的，正如你怀疑的，大学入学过程很大程度上是一场骗局。但像许多犯规一样，这个是无意的。[7]所以继续比赛。&lt;/p&gt;&#xA;&lt;p&gt;反抗几乎和服从一样愚蠢。无论哪种情况，你都让他们告诉你的事情来定义你。我认为最好的计划是踏上正交向量。不要只做他们告诉你的，也不要只是拒绝。而是把学校当作日常工作。作为日常工作来说，这是相当甜的。你三点钟就完成了，你甚至可以在那里做你自己的事情。&lt;/p&gt;&#xA;&lt;h2 id=&#34;好奇心&#34;&gt;好奇心&lt;/h2&gt;&#xA;&lt;p&gt;而你真正的工作应该是什么？除非你是莫扎特，你的首要任务是弄清楚这一点。有什么伟大的事情可以做？有想象力的人在哪里？最重要的是，你对什么感兴趣？&amp;ldquo;能力&amp;quot;这个词是误导性的，因为它暗示着某种天生的东西。最强大的能力是对某个问题的一种强烈兴趣，而这种兴趣通常是后天培养的品味。&lt;/p&gt;&#xA;&lt;p&gt;这种想法的扭曲版本已经以&amp;quot;激情&amp;quot;的名义渗入流行文化。最近我看到一则服务员的广告，说他们想要对服务有&amp;quot;激情&amp;quot;的人。真正的东西不是一个人可以为侍餐桌而拥有的东西。激情是个不好的词。更好的名字应该是好奇心。&lt;/p&gt;&#xA;&lt;p&gt;孩子是好奇的，但我说的好奇心与孩子的好奇心形状不同。孩子的好奇心广泛而浅薄；他们随机地问为什么关于一切。在大多数成年人中，这种好奇心完全干涸了。必须如此：如果你总是问为什么关于一切，你无法完成任何事情。但在有雄心的成年人中，好奇心不是干涸，而是变得狭窄而深沉。泥滩变成了井。&lt;/p&gt;&#xA;&lt;p&gt;好奇心把工作变成游戏。对爱因斯坦来说，相对论不是一本他为了考试而学习的充满困难东西的书。这是一个他试图解决的谜团。所以对他来说发明它可能感觉比现在某人在课堂上学习它更像游戏。&lt;/p&gt;&#xA;&lt;p&gt;你从学校得到的最危险的错觉之一是，做伟大的事情需要很多纪律。大多数学科的教学方式如此无聊，以至于只有通过纪律你才能鞭策自己完成它们。所以当我在大学早期读到维特根斯坦的一句话说他没有自律，从未能拒绝自己任何东西，甚至一杯咖啡，我感到很惊讶。&lt;/p&gt;&#xA;&lt;p&gt;现在我认识一些做伟大工作的人，他们都一样。他们几乎没有纪律。他们都是可怕的拖延者，发现几乎不可能让自己做他们不感兴趣的事情。一个还没有送出他婚礼感谢 notes的一半，那是四年前的事了。另一个的收件箱里有26,000封电子邮件。&lt;/p&gt;&#xA;&lt;p&gt;我并不是说你可以零自律。你可能需要你跑步所需要的那么多。我常常不愿意去跑步，但一旦去了，我很享受。如果我不跑步好几天，我会感到不舒服。做伟大事情的人也是如此。他们知道如果不工作会感觉不好，他们有足够的自律让自己到桌边开始工作。但一旦开始，兴趣接管，纪律就不再必要了。&lt;/p&gt;&#xA;&lt;p&gt;你认为莎士比亚是咬紧牙关，勤奋地试图写伟大的文学吗？当然不是。他在享受乐趣。这就是他如此优秀的原因。&lt;/p&gt;&#xA;&lt;p&gt;如果你想做好工作，你需要对一个有希望的问题有强烈的好奇心。爱因斯坦的关键时刻是当他看麦克斯韦方程组时说，这里到底发生了什么？&lt;/p&gt;&#xA;&lt;p&gt;可能需要数年时间才能确定一个有生产力的问题，因为可能需要数年时间才能弄清一个学科真正是关于什么的。举一个极端的例子，考虑数学。大多数人认为他们讨厌数学，但你在学校以&amp;quot;数学&amp;quot;名义做的无聊事情与数学家所做的事情完全不同。&lt;/p&gt;&#xA;&lt;p&gt;伟大的数学家G.H.哈代说他在高中时也不喜欢数学。他只是接受它是因为他比其他学生更擅长。只是后来他意识到数学很有趣——只是后来他才开始提问，而不仅仅是正确回答。&lt;/p&gt;&#xA;&lt;p&gt;当我的一个朋友过去常常因为他必须为学校写论文而抱怨时，他的母亲会告诉他：找一个让它变得有趣的方法。这就是你需要做的：找一个让世界变得有趣的问题。做伟大事情的人看着和其他人一样的世界，但注意到一些奇怪而引人入胜的神秘细节。&lt;/p&gt;&#xA;&lt;p&gt;不仅在智力方面。亨利·福特的伟大问题是，为什么汽车必须是奢侈品？如果你把它们当作商品对待会发生什么？弗朗茨·贝肯鲍尔的实际上是，为什么每个人都必须保持在自己的位置？为什么后卫也能进球呢？&lt;/p&gt;&#xA;&lt;h2 id=&#34;现在&#34;&gt;现在&lt;/h2&gt;&#xA;&lt;p&gt;如果需要数年时间才能阐明伟大的问题，你现在十六岁该做什么？努力寻找一个。伟大的问题不会突然出现。它们逐渐在你头脑中凝结。而使它们凝结的是经验。所以找到伟大问题的方法不是搜索它们——不是游荡思考，我将做出什么伟大发现？你无法回答那个问题；如果你能，你就已经做到了。&lt;/p&gt;&#xA;&lt;p&gt;让大想法出现在你头脑中的方法不是寻找大想法，而是花大量时间做你感兴趣的工作，并在这个过程中让你的头脑足够开放，让大想法可以栖息。爱因斯坦、福特和贝肯鲍尔都使用了这个配方。他们都像钢琴家知道键盘一样了解自己的工作。所以当有什么事情似乎不对劲时，他们有信心注意到它。&lt;/p&gt;&#xA;&lt;p&gt;如何花时间，花在什么上？只需选择一个看起来有趣的项目：掌握一些材料，或者制作一些东西，或者回答某个问题。选择一个需要不到一个月的项目，并确保你有办法完成它。做一些足够困难以扩展你自己的事情，但只是刚好，特别是在开始时。如果你在两个项目之间做决定，选择看起来最有趣的那个。如果一个在你面前爆炸了，开始另一个。重复直到，像内燃机一样，过程变得自我维持，每个项目都产生下一个项目。（这可能需要数年。）&lt;/p&gt;&#xA;&lt;p&gt;如果不为&amp;quot;学校&amp;quot;做项目可能会限制你或让它看起来像工作，那也好。如果你想，可以让你的朋友参与，但不要太多，只有当他们不是靠不住的人。朋友提供道义支持（很少有创业公司是一个人开始的），但秘密也有其优势。秘密项目有某种令人愉悦的感觉。你可以承担更多风险，因为没有人会知道你是否失败。&lt;/p&gt;&#xA;&lt;p&gt;如果一个项目似乎不在你应该有的某个目标的路径上，不要担心。路径可以比你想象的弯曲得多。所以让路径从项目中生长。最重要的是对它感到兴奋，因为你是通过做来学习的。&lt;/p&gt;&#xA;&lt;p&gt;不要不理会不良动机。最强大的是在某些事情上比别人做得更好的欲望。哈代说这就是让他开始的，我认为他唯一不寻常的地方是他承认了这一点。另一个强大的动力是做或知道你不应该做的事情的欲望。密切相关的是做某些大胆事情的欲望。十六岁的人不应该写小说。所以如果你尝试，你实现的任何事情都是积极的一面；如果你完全失败，你做得不比期望差。[8]&lt;/p&gt;</description>
    </item>
    <item>
      <title>你如何知道</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/know/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/know/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/know.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;你如何知道&#34;&gt;你如何知道&lt;/h1&gt;&#xA;&lt;p&gt;2014年12月&lt;/p&gt;&#xA;&lt;p&gt;我至少读过两次维尔阿杜安的第四次十字军东征编年史，可能是三次。然而如果我必须写下我记得的一切，我怀疑它不会超过一页。乘以几百倍，当我看着我的书架时，我有一种不安的感觉。如果你记得这么少，读所有这些书有什么用？&lt;/p&gt;&#xA;&lt;p&gt;几个月前，当我正在阅读康斯坦斯·里德的精彩希尔伯特传记时，我想出了如果不是这个问题的答案，至少是让我感觉更好一些的东西。她写道：&lt;/p&gt;&#xA;&lt;p&gt;希尔伯特对那些用事实填满学生但没有教他们如何构建问题和解决它们的数学讲座没有耐心。他经常告诉他们&amp;quot;一个问题的完美表述已经是它的一半解决方案。&amp;quot;&lt;/p&gt;&#xA;&lt;p&gt;这似乎对我来说一直是一个重要的观点，在听到希尔伯特确认它后，我更加确信了这一点。但我是如何首先相信这个想法的呢？我自己的经验和我读过的其他东西的结合。当时我什么也不记得了！最终我也会忘记希尔伯特也确认了这一点。但我对这个想法重要性的增加信念将仍然是我从这本书中学到的东西，即使我忘记了我学过它。&lt;/p&gt;&#xA;&lt;p&gt;阅读和经验训练你对世界的模型。即使你忘记了经验或你读过的内容，它对你世界模型的影响仍然存在。你的心智就像一个你已经丢失源代码的编译程序。它能工作，但你不知道为什么。&lt;/p&gt;&#xA;&lt;p&gt;寻找我从维尔阿杜安编年史中学到的东西的地方不是我记住的内容，而是我对十字军东征、威尼斯、中世纪文化、攻城战等等的心智模型。这并不意味着我不能更专注地阅读，但至少阅读的收获并不像看起来那么微不足道。&lt;/p&gt;&#xA;&lt;p&gt;这是那些事后看来显而易见的事情之一。但对我来说这是一个惊喜，想必对任何其他对他们（显然）忘记读过的那么多内容感到不安的人来说也是。&lt;/p&gt;&#xA;&lt;p&gt;然而，意识到它不仅仅是让你对忘记感觉好一点。还有具体的影响。&lt;/p&gt;&#xA;&lt;p&gt;例如，阅读和经验通常在发生时被&amp;quot;编译&amp;quot;，使用你当时的大脑状态。同一本书在你生命的不同时间会被不同地编译。这意味着多次阅读重要的书是非常值得的。我过去总是对重读书感到一些不安。我无意识地将阅读与木工等工作混为一谈，在那里不得不再次做某事意味着你第一次做错了。而现在&amp;quot;已经读过&amp;quot;这个短语似乎几乎不合语法。&lt;/p&gt;&#xA;&lt;p&gt;有趣的是，这种影响不仅限于书籍。技术将越来越多地使我们能够重新体验我们的经历。当人们今天这样做时，通常是为了再次享受它们（例如，当看旅行的照片时）或找到他们编译代码中某些错误的起源（例如，当斯蒂芬·弗莱成功记起阻止他唱歌的童年创伤时）。但随着记录和播放你生活的技术改进，人们可能会变得普遍地在没有特定目标的情况下重新体验经历，只是为了像重读书一样再次从它们中学习。&lt;/p&gt;&#xA;&lt;p&gt;最终我们可能不仅能够播放经历，还能够索引甚至编辑它们。所以虽然不知道你是如何知道事情的可能似乎是人性的一部分，但它可能不是。&lt;/p&gt;&#xA;&lt;p&gt;感谢 Sam Altman、Jessica Livingston 和 Robert Morris 阅读本文的草稿。&lt;/p&gt;&#xA;&lt;p&gt;日语翻译&lt;/p&gt;</description>
    </item>
    <item>
      <title>保持身份小规模</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/identity/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/identity/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/identity.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;保持身份小规模&#34;&gt;保持身份小规模&lt;/h1&gt;&#xA;&lt;p&gt;2009年2月&lt;/p&gt;&#xA;&lt;p&gt;我今天终于意识到为什么政治和宗教会产生如此无用的讨论。&lt;/p&gt;&#xA;&lt;p&gt;通常情况下，在在线论坛上任何提到宗教的内容都会退化为宗教争论。为什么？为什么这种情况发生在宗教上，而不是发生在人们在线程上讨论的JavaScript或烘焙或其他话题上？&lt;/p&gt;&#xA;&lt;p&gt;宗教的不同之处在于，人们不觉得需要任何特定的专业知识才能对它发表意见。他们所需要的只是坚定的信念，任何人都可以拥有这些。没有一个关于JavaScript的讨论会像关于宗教的讨论增长得那么快，因为人们觉得他们必须超过某种专业知识的门槛才能发表评论。但在宗教上，每个人都是专家。&lt;/p&gt;&#xA;&lt;p&gt;然后我突然想到：这也是政治的问题所在。政治和宗教一样，是一个不需要专业知识门槛就可以发表意见的话题。你所需要的只是坚定的信念。&lt;/p&gt;&#xA;&lt;p&gt;宗教和政治是否有共同之处可以解释这种相似性？一个可能的解释是，它们处理的是没有确定答案的问题，所以人们的意见没有压力。由于没有人可以被证明是错的，每个意见都是同样有效的，意识到这一点，每个人都随意发表他们的意见。&lt;/p&gt;&#xA;&lt;p&gt;但这不是真的。当然，有些政治问题有确定的答案，比如一个新的政府政策会花费多少。但更精确的政治问题也遭受着与更模糊问题相同的命运。&lt;/p&gt;&#xA;&lt;p&gt;我认为宗教和政治的共同点是它们成为人们身份的一部分，而人们永远无法对成为他们身份一部分的事情进行富有成效的争论。根据定义，他们是偏袒的。&lt;/p&gt;&#xA;&lt;p&gt;哪些话题涉及人们的身份取决于人，而不是话题。例如，关于涉及一个或多个国家公民的战斗的讨论可能会退化为政治争论。但是今天关于青铜时代发生的战斗的讨论可能不会。没有人知道应该站在哪一边。所以不是政治是麻烦的根源，而是身份。当人们说讨论已经退化为宗教战争时，他们真正的意思是它已经开始主要由人们的身份驱动。[1]&lt;/p&gt;&#xA;&lt;p&gt;因为这种情况发生的点取决于人而不是话题，所以得出结论说因为一个问题倾向于引发宗教战争，它一定没有答案是错误的。例如，编程语言相对优点的问题经常退化为宗教战争，因为许多程序员自认为是X程序员或Y程序员。这有时导致人们得出结论认为问题一定是无法回答的——所有语言都是同样好的。显然这是错误的：人们制作的任何其他东西都可以设计得好或坏；为什么这对编程语言来说是唯一不可能的？事实上，你可以对编程语言的相对优点进行富有成效的讨论，只要排除那些从身份回应的人。&lt;/p&gt;&#xA;&lt;p&gt;更一般地说，只有当一个话题不涉及任何参与者的身份时，你才能对它进行富有成效的讨论。政治和宗教成为雷区的原因是它们涉及许多人的身份。但原则上，你可以与某些人进行关于它们的有用对话。还有其他可能看起来无害的话题，比如福特和雪佛兰皮卡的相对优点，你不能安全地与他人讨论。&lt;/p&gt;&#xA;&lt;p&gt;如果这个理论是正确的，最有趣的是它不仅解释了要避免哪种讨论，还解释了如何有更好的想法。如果人们不能清楚地思考任何已经成为他们身份一部分的事情，那么在其他条件相同的情况下，最好的计划是让尽可能少的事情进入你的身份。[2]&lt;/p&gt;&#xA;&lt;p&gt;大多数阅读这篇文章的人已经相当宽容了。但还有一步超越认为自己是x但容忍y：甚至不认为自己是x。你为自己拥有的标签越多，它们就越让你愚蠢。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 当这种情况发生时，它往往发生得很快，就像核心达到临界状态。参与的门槛降为零，这带来了更多的人。而且他们倾向于说煽动性的事情，这引起更多更愤怒的反驳。&lt;/p&gt;&#xA;&lt;p&gt;[2] 可能有一些事情包含在你的身份中是净收益。例如，成为一名科学家。但可以说，这更像是一个占位符而不是一个实际的标签——就像在询问你中间名字首字母的表格上写NMI——因为它不承诺你相信任何特定的事情。科学家不像圣经字面主义者那样致力于拒绝自然选择那样致力于相信自然选择。他只承诺无论证据指向哪里都跟随证据。&lt;/p&gt;&#xA;&lt;p&gt;认为自己是科学家相当于在橱柜里放一个标志说&amp;quot;这个橱柜必须保持空着&amp;quot;。是的，严格来说，你在橱柜里放了一些东西，但不是在通常意义上。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;&lt;em&gt;感谢Sam Altman、Trevor Blackwell、Paul Buchheit和Robert Morris阅读本文的草稿。&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;俄语翻译 | 葡萄牙语翻译 | 罗马尼亚语翻译&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>信誉</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/cred/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/cred/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/cred.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;信誉&#34;&gt;信誉&lt;/h1&gt;&#xA;&lt;h2 id=&#34;冠状病毒与信誉&#34;&gt;冠状病毒与信誉&lt;/h2&gt;&#xA;&lt;p&gt;2020年4月&lt;/p&gt;&#xA;&lt;p&gt;我最近看到一段视频，电视记者和政治家们自信地说冠状病毒不会比流感更严重。让我感到震惊的不仅是他们看起来多么错误，还有他们多么大胆。他们怎么能放心地说这样的话？&lt;/p&gt;&#xA;&lt;p&gt;答案，我意识到，是他们不认为自己会被抓住。他们没有意识到做出错误预测有任何危险。这些人不断地做出错误的预测，并逃脱了惩罚，因为他们预测的事情要么结果足够模糊，他们可以吹嘘自己摆脱麻烦，要么发生在如此遥远的未来，很少有人记得他们说了什么。&lt;/p&gt;&#xA;&lt;p&gt;流行病不同。它迅速且明确地否定你的预测。&lt;/p&gt;&#xA;&lt;p&gt;但流行病足够罕见，这些人显然没有意识到这甚至是一种可能性。相反，他们只是继续使用他们的普通方法，正如流行病所表明的，就是自信地谈论他们不理解的事情。&lt;/p&gt;&#xA;&lt;p&gt;因此，这样的事件是衡量人的独特有力方式。正如沃伦·巴菲特所说，&amp;ldquo;只有当潮水退去时，你才知道谁在裸泳。&amp;ldquo;而潮水从未如此退去过。&lt;/p&gt;&#xA;&lt;p&gt;既然我们已经看到了结果，让我们记住我们所看到的，因为这是我们可能拥有的最准确的信誉测试。我希望如此。&lt;/p&gt;</description>
    </item>
    <item>
      <title>偏见</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/bias/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/bias/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/bias.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;偏见&#34;&gt;偏见&lt;/h1&gt;&#xA;&lt;p&gt;检测偏见的一种方法&lt;/p&gt;&#xA;&lt;p&gt;2015年10月&lt;/p&gt;&#xA;&lt;p&gt;这对很多人来说会是个惊喜，但在某些情况下，可以在不了解申请者池的情况下检测选择过程中的偏见。这令人兴奋，因为除其他外，这意味着第三方可以使用这种技术来检测偏见，无论进行选择的人是否希望他们这样做。&lt;/p&gt;&#xA;&lt;p&gt;当满足以下条件时，你可以使用这种技术：(a) 你至少有一个被选申请者的随机样本，(b) 他们后续的表现被测量，并且 (c) 你比较的申请者群体有大致相同的能力分布。&lt;/p&gt;&#xA;&lt;p&gt;它是如何工作的？想想偏见的含义。选择过程对类型x的申请者有偏见意味着他们更难通过。这意味着类型x的申请者必须比非类型x的申请者更优秀才能被选中。[1] 这意味着通过选择过程的类型x申请者将比其他成功的申请者表现更好。如果测量了所有成功申请者的表现，你就会知道他们是否确实如此。&lt;/p&gt;&#xA;&lt;p&gt;当然，你用来测量表现的测试必须是有效的。特别是，它不能被你试图测量的偏见所失效。但在某些领域，表现是可以测量的，在这些领域检测偏见是直接的。想知道选择过程是否对某种类型的申请者有偏见吗？检查他们是否比其他人表现更好。这不仅仅是检测偏见的启发式方法。这就是偏见的含义。&lt;/p&gt;&#xA;&lt;p&gt;例如，许多人怀疑风险投资公司对女性创始人有偏见。这很容易检测：在他们的投资组合公司中，有女性创始人的初创公司是否比没有的表现更好？几个月前，一家风险投资公司（几乎肯定是无意的）发表了一项显示这种偏见的研究。第一轮资本发现，在其投资组合公司中，有女性创始人的初创公司比没有的表现高出63%。[2]&lt;/p&gt;&#xA;&lt;p&gt;我一开始说这种技术会让很多人感到惊讶的原因是，我们很少看到这种类型的分析。我确信第一轮资本会惊讶地发现他们进行了一项。我怀疑那里有人意识到，通过将样本限制在自己的投资组合中，他们产生的不是初创公司趋势的研究，而是他们在选择公司时自身偏见的研究。&lt;/p&gt;&#xA;&lt;p&gt;我预测我们将来会看到这种技术被更多使用。进行此类研究所需的信息越来越容易获得。关于谁申请某事的数据通常由选择他们的组织严密保护，但如今关于谁被选中的数据通常对任何愿意花力气聚合它的人都是公开可用的。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 如果选择过程从不同类型的申请者中寻找不同的东西，这种技术就不会起作用——例如，如果雇主基于能力雇佣男性，但基于外貌雇佣女性。&lt;/p&gt;&#xA;&lt;p&gt;[2] 正如Paul Buchheit指出的，第一轮资本将他们最成功的投资Uber排除在研究之外。虽然从某些类型的研究中排除异常值是有道理的，但初创公司投资回报的研究（全部关于命中异常值）并不是其中之一。&lt;/p&gt;&#xA;&lt;p&gt;感谢Sam Altman、Jessica Livingston和Geoff Ralston阅读本文的草稿。&lt;/p&gt;&#xA;&lt;h2 id=&#34;相关&#34;&gt;相关&lt;/h2&gt;&#xA;&lt;p&gt;阿拉伯语翻译&#xA;瑞典语翻译&lt;/p&gt;</description>
    </item>
    <item>
      <title>做</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/do/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/do/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/do.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;做&#34;&gt;做&lt;/h1&gt;&#xA;&lt;h2 id=&#34;该做什么&#34;&gt;该做什么&lt;/h2&gt;&#xA;&lt;p&gt;2025年3月&lt;/p&gt;&#xA;&lt;p&gt;一个人应该做什么？这可能看起来是个奇怪的问题，但它不是无意义或无法回答的。这是孩子们在学会不问大问题之前会问的那种问题。我只是在调查其他事情时偶然遇到了这个问题。但一旦我遇到了，我觉得我至少应该尝试回答它。&lt;/p&gt;&#xA;&lt;p&gt;那么一个人应该做什么？一个人应该帮助人们，照顾世界。这两点是显而易见的。但是还有其他事情吗？当我问这个问题时，弹出的答案是创造好的新事物。&lt;/p&gt;&#xA;&lt;p&gt;我无法证明一个人应该这样做，就像我无法证明一个人应该帮助人们或照顾世界一样。我们在这里谈论的是第一性原理。但我可以解释为什么这个原则是有道理的。人类能做的最令人印象深刻的事情是思考。这可能是能做的最令人印象深刻的事情。而最好的思考，或者更准确地说，一个人思考得最好的最好证明，就是创造好的新事物。&lt;/p&gt;&#xA;&lt;p&gt;我是在非常一般的意义上说新事物。牛顿的物理学就是一个好的新事物。实际上，这个原则的第一个版本是拥有好的新想法。但这似乎不够一般：它不包括创作艺术或音乐，除非它们体现了新想法。虽然它们可能体现新想法，但它们体现的不仅仅是新想法，除非你把&amp;quot;想法&amp;quot;这个词拉伸得如此无用以至于它包括了你神经系统中经过的一切。&lt;/p&gt;&#xA;&lt;p&gt;即使对于一个人有意识的想法，我更喜欢&amp;quot;创造好的新事物&amp;quot;这种说法。还有其他方式来描述最好的思考。例如，做出发现，或者比其他人更深入地理解某件事。但如果你不能为它制作模型或写文章，你对某件事的理解有多好呢？确实，试图表达你所理解的不仅是证明你理解它的方式，也是更好地理解它的方式。&lt;/p&gt;&#xA;&lt;p&gt;我喜欢这种说法的另一个原因是它让我们倾向于创造。它使我们更喜欢那些自然被视为制作东西的想法，而不是，比如说，对其他人制作的东西做出批判性观察。那些也是想法，有时是有价值的想法，但很容易欺骗自己相信它们比实际更有价值。批评看起来很复杂，而创造新事物常常看起来很笨拙，特别是在一开始；然而正是那些最初的步骤最稀有和最有价值。&lt;/p&gt;&#xA;&lt;p&gt;新事物的本质是什么？我认为是的。显然在科学中是本质的。如果你抄袭了别人的论文并作为自己的发表，这不仅不会令人印象深刻，而且是不诚实的。在艺术中也是如此。一幅好画的复制品可以是令人愉悦的东西，但它不像原作那样令人印象深刻。这反过来意味着一遍又一遍地做同样的事情不会令人印象深刻，无论做得多么好；你只是在复制自己。&lt;/p&gt;&#xA;&lt;p&gt;但请注意，我们用这个原则谈论的是不同种类的&amp;quot;应该&amp;quot;。照顾人们和世界是意义上的&amp;quot;应该&amp;quot;，因为它们是一个人的责任，但创造好的新事物是意义上的&amp;quot;应该&amp;quot;，因为这是如何充分实现一个人潜力的方式。历史上大多数关于如何生活的规则都是两种&amp;quot;应该&amp;quot;的混合，但通常前者比后者多。[1]&lt;/p&gt;&#xA;&lt;p&gt;在历史的大部分时间里，&amp;ldquo;一个人应该做什么？&amp;ldquo;这个问题在任何地方都得到大致相同的答案，无论你问西塞罗还是孔子。你应该明智、勇敢、诚实、节制和公正，维护传统，服务公共利益。有一段很长的时间，在世界某些地方，答案变成了&amp;quot;侍奉上帝&amp;rdquo;，但在实践中，被认为明智、勇敢、诚实、节制和公正，维护传统，服务公共利益仍然是好的。事实上，这个配方对大多数维多利亚时代的人来说似乎是对的。但其中没有关于照顾世界或创造新事物的东西，这有点令人担忧，因为这个问题似乎应该是永恒的。答案不应该有太大变化。&lt;/p&gt;&#xA;&lt;p&gt;传统答案没有提到照顾世界，我对此不太担心。显然，只有当人们清楚我们可以毁灭世界时，人们才开始关心这一点。但如果传统答案没有提到创造好的新事物，它怎么可能重要呢？&lt;/p&gt;&#xA;&lt;p&gt;传统答案是对一个稍微不同问题的回答。它们是对如何存在而不是做什么问题的回答。听众对做什么没有太多选择。直到最近几个世纪，听众是土地拥有阶级，也是政治阶级。他们不是在做物理学和写小说之间选择。他们的工作是注定的：管理他们的庄园，参与政治，必要时战斗。在业余时间做某些其他类型的工作是可以的，但理想情况下一个人没有任何业余时间。西塞罗的《论责任》是对如何生活这个问题的伟大古典回答之一，他在其中明确说，如果不是因为最近的政治动荡被排除在公共生活之外，他甚至不会写这本书。[2]&lt;/p&gt;&#xA;&lt;p&gt;当然有人们做我们现在称之为&amp;quot;原创工作&amp;quot;的事情，他们常常因此受到钦佩，但他们不被视为榜样。阿基米德知道他是第一个证明球体体积是其最小外接圆柱体体积的2/3的人，并且对此感到非常高兴。但你找不到古代作家敦促他们的读者效仿他。他们更多地将他视为神童而不是榜样。&lt;/p&gt;&#xA;&lt;p&gt;现在我们中的更多人可以遵循阿基米德的例子，将大部分注意力投入到一种工作中。他毕竟成为了一个榜样，还有其他一群人，他的同代人会觉得奇怪地将他们视为一个独特的群体，因为创造新事物的人群与社会等级制度成直角运行。&lt;/p&gt;&#xA;&lt;p&gt;什么样的事物算数？我宁愿把这个问题留给它们的创造者。试图定义任何种类的门槛将是一件有风险的事情，因为新类型的工作常常最初被鄙视。雷蒙德·钱德勒写的是字面意义上的低俗小说，现在他被公认为二十世纪最好的作家之一。确实，这种模式如此常见，你可以将其用作配方：如果你对某种不被认为有声望的工作感到兴奋，并且你能解释其他人对其忽视了什么，那么这不仅是一种可以去做的工作，而且是一种要寻求的工作。&lt;/p&gt;&#xA;&lt;p&gt;我不想定义任何门槛的另一个原因是我们不需要它们。创造好的新事物的人不需要规则来保持诚实。&lt;/p&gt;&#xA;&lt;p&gt;所以这是我对一套生活原则的猜测：照顾人们和世界，创造好的新事物。不同的人会在不同程度上做这些事情。大概会有很多人完全专注于照顾人们。会有少数人主要专注于创造新事物。但即使你是其中之一，你至少应该确保你创造的新事物不会对人们或世界造成净伤害。如果你进一步尝试创造帮助他们的东西，你可能会发现你在交易中领先了。你在能创造的东西上会更受限制，但你会用更多的精力创造它。&lt;/p&gt;&#xA;&lt;p&gt;另一方面，如果你创造了令人惊叹的东西，即使你不是故意的，你也常常会帮助人们或世界。牛顿是由好奇心和雄心驱动的，而不是由他工作可能产生的任何实际影响驱动的，然而他工作的实际影响是巨大的。这似乎是规则而不是例外。所以如果你认为你可以创造令人惊叹的东西，你可能应该直接去做。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 我们可以通过说好好生活是一个人的责任来将所有三种视为同一种应该——例如，像一些基督徒所说的，充分利用上帝赐予的礼物是一个人的责任。但这似乎是人们为了逃避宗教的严格要求而发明的那种诡辩：花时间学习数学而不是祈祷或行善是允许的，因为否则你在拒绝上帝赐予你的礼物。无疑是有用的诡辩，但我们不需要它。&lt;/p&gt;&#xA;&lt;p&gt;我们也可以结合前两个原则，因为人是世界的一部分。为什么我们的物种应该得到特殊待遇？我不会试图为这个选择辩护，但我怀疑任何声称持不同想法的人实际上是否按照他们的原则生活。&lt;/p&gt;&#xA;&lt;p&gt;[2] 孔子在权力斗争失败后也被排除在公共生活之外，大概如果不是因为这段被迫的闲暇时间，他现在也不会如此著名。&lt;/p&gt;&#xA;&lt;p&gt;感谢Trevor Blackwell、Jessica Livingston和Robert Morris阅读本文草稿。&lt;/p&gt;</description>
    </item>
    <item>
      <title>做个新手</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/noob/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/noob/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/noob.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;做个新手&#34;&gt;做个新手&lt;/h1&gt;&#xA;&lt;p&gt;2020年1月&lt;/p&gt;&#xA;&lt;p&gt;当我年轻的时候，我认为老年人什么都搞懂了。现在我老了，我知道这不是真的。&lt;/p&gt;&#xA;&lt;p&gt;我总是感觉像个新手。似乎我总是在和某个在全新领域工作的初创公司交谈，我对那个领域一无所知，或者读一本我不够了解的主题的书，或者访问某个我不知道事情如何运作的新国家。&lt;/p&gt;&#xA;&lt;p&gt;感觉像个新手并不愉快。而且&amp;quot;新手&amp;quot;这个词肯定不是恭维。然而今天我意识到关于做新手的一些令人鼓舞的事情：你在本地越是新手，在全球就越是新手。&lt;/p&gt;&#xA;&lt;p&gt;例如，如果你留在自己的国家，你会比搬到一切都不同的 Farawavia 感觉更少像个新手。然而如果你搬家，你会知道更多。所以感觉像个新手与实际的无知成反比。&lt;/p&gt;&#xA;&lt;p&gt;但如果感觉像个新手对我们有好处，为什么我们不喜欢这种感觉呢？这种厌恶可能有什么进化目的呢？&lt;/p&gt;&#xA;&lt;p&gt;我认为答案是感觉像新手有两个来源：愚蠢和做新颖的事情。我们不喜欢感觉像新手是我们的大脑告诉我们&amp;quot;快点，快点，搞清楚这件事。&amp;ldquo;这在人类历史的大部分时间里都是正确的想法。狩猎采集者的生活很复杂，但没有像现在的生活变化这么大。他们不必突然搞清楚如何处理加密货币。因此，偏向于现有问题的能力而不是发现新问题是有意义的。人类不喜欢感觉像新手是有意义的，就像在食物稀缺的世界里，他们不喜欢饥饿的感觉是有意义的。&lt;/p&gt;&#xA;&lt;p&gt;现在食物过多比食物过少更是个问题，我们不喜欢饥饿的感觉让我们误入歧途。我认为我们不喜欢感觉像新手也是如此。&lt;/p&gt;&#xA;&lt;p&gt;虽然感觉不愉快，人们有时会因此嘲笑你，但你越是感觉像个新手，就越好。&lt;/p&gt;</description>
    </item>
    <item>
      <title>做善事</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/good/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/good/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/good.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;做善事&#34;&gt;做善事&lt;/h1&gt;&#xA;&lt;p&gt;2008年4月&lt;/p&gt;&#xA;&lt;p&gt;（本文源自2008年创业学校的演讲。）&lt;/p&gt;&#xA;&lt;p&gt;我们在Y Combinator开始大约一个月后，提出了一个成为我们座右铭的短语：做人们想要的东西。从那时起我们学到了很多东西，但如果现在要我选择，这仍然是我会选的那个。&lt;/p&gt;&#xA;&lt;p&gt;我们告诉创始人的另一件事是不要太担心商业模式，至少在开始时是这样。不是因为赚钱不重要，而是因为它比做出伟大的东西容易得多。&lt;/p&gt;&#xA;&lt;p&gt;几周前我意识到，如果你把这两个想法放在一起，你会得到一些令人惊讶的东西。做人们想要的东西。不要太担心赚钱。你得到的是对慈善机构的描述。&lt;/p&gt;&#xA;&lt;p&gt;当你得到这样一个意外的结果时，它可能是一个错误，也可能是一个新的发现。要么企业不应该像慈善机构，我们已经通过归谬法证明我们开始时的一个或两个原则是错误的。或者我们有一个新的想法。&lt;/p&gt;&#xA;&lt;p&gt;我怀疑是后者，因为一旦这个想法出现在我脑海中，许多其他事情就都水落石出了。&lt;/p&gt;&#xA;&lt;h2 id=&#34;例子&#34;&gt;例子&lt;/h2&gt;&#xA;&lt;p&gt;例如，Craigslist。它不是慈善机构，但他们像慈善机构一样运营它。而且他们惊人地成功。当你浏览最受欢迎网站列表时，Craigslist的员工数量看起来像是印刷错误。他们的收入没有可能的高，但大多数创业公司都很乐意与他们交换位置。&lt;/p&gt;&#xA;&lt;p&gt;在帕特里克·奥布莱恩的小说中，他的船长总是试图占据对手的上风。如果你处于上风，你决定何时以及是否与另一艘船交战。Craigslist实际上处于巨大收入的上风。如果他们想赚更多钱，会面临一些挑战，但不是那种当你逆风航行时面临的挑战，试图通过在销售上的花费是开发的十倍来将糟糕的产品强加给冷漠的用户。[1]&lt;/p&gt;&#xA;&lt;p&gt;我不是说创业公司的目标应该是最终像Craigslist。它们是特殊环境的产物。但它们是早期阶段的好模式。&lt;/p&gt;&#xA;&lt;p&gt;Google在开始时看起来很像慈善机构。他们一年多没有广告。在第一年，Google与非营利组织无法区分。如果非营利组织或政府组织已经开始了一个索引网络的项目，第一年的Google就是他们能生产的极限。&lt;/p&gt;&#xA;&lt;p&gt;当我从事垃圾邮件过滤器工作时，我认为拥有一个带有良好垃圾邮件过滤功能的基于网络的电子邮件服务是个好主意。我没有把它当作公司来考虑。我只是想防止人们收到垃圾邮件。但当我更多地考虑这个项目时，我意识到它可能必须是一家公司。运行它需要成本，而通过赠款和捐赠资助会很麻烦。&lt;/p&gt;&#xA;&lt;p&gt;这是一个令人惊讶的认识。公司经常声称是仁慈的，但令人惊讶的是发现纯粹仁慈的项目必须体现为公司才能运作。&lt;/p&gt;&#xA;&lt;p&gt;我不想再开一家公司，所以我没有这样做。但如果有人这样做了，他们现在可能相当富有。大约有两年的时间窗口，垃圾邮件正在迅速增加，但所有大型电子邮件服务都有糟糕的过滤器。如果有人推出一个新的、无垃圾邮件的邮件服务，用户会涌向它。&lt;/p&gt;&#xA;&lt;p&gt;注意到这里的模式了吗？从任何一个方向我们都到达同一个地方。如果你从成功的创业公司开始，你会发现它们经常表现得像非营利组织。如果你从非营利组织的想法开始，你会发现它们经常成为好的创业公司。&lt;/p&gt;&#xA;&lt;h2 id=&#34;力量&#34;&gt;力量&lt;/h2&gt;&#xA;&lt;p&gt;这个领域有多广泛？所有好的非营利组织都会成为好公司吗？可能不会。Google如此有价值的原因是他们的用户有钱。如果你让有钱的人喜欢你，你可能会得到一些。但你也可以通过对待没有钱的人像非营利组织一样来建立成功的创业公司吗？例如，你能通过治疗一种不时尚但致命的疾病如疟疾来发展成功的创业公司吗？&lt;/p&gt;&#xA;&lt;p&gt;我不确定，但我怀疑如果你推进这个想法，你会惊讶它能走多远。例如，申请Y Combinator的人通常没有多少钱，然而我们可以通过帮助他们获利，因为在我们的帮助下他们可以赚钱。也许疟疾的情况类似。也许帮助一个国家摆脱负担的组织可以从 resulting 增长中受益。&lt;/p&gt;&#xA;&lt;p&gt;我并不是说这是一个严肃的想法。我对疟疾一无所知。但我一直在思考想法足够长的时间，知道什么时候遇到了强大的想法。&lt;/p&gt;&#xA;&lt;p&gt;猜测一个想法能延伸多远的一种方法是问自己，在什么时候你会反对它。反对仁慈的想法令人警醒，就像说某事在技术上不可能一样。你只是在自找麻烦，因为这些是如此强大的力量。[2]&lt;/p&gt;&#xA;&lt;p&gt;例如，最初我认为这个原则可能只适用于互联网创业公司。显然它对Google有效，但微软呢？微软肯定不仁慈吗？但当我回想开始时，他们是仁慈的。与IBM相比，他们像罗宾汉。当IBM推出PC时，他们以为会通过高价销售硬件赚钱。但通过获得PC标准的控制权，微软向任何制造商开放了市场。硬件价格暴跌，很多人能够拥有电脑，否则他们负担不起。这是你期望Google做的事情。&lt;/p&gt;&#xA;&lt;p&gt;微软现在不那么仁慈了。现在当人们想到微软对用户所做的事情时，脑海中出现的所有动词都以F开头。[3]然而这似乎没有回报。他们的股票价格多年来一直持平。当他们是罗宾汉时，他们的股票价格像Google一样上涨。这有联系吗？&lt;/p&gt;&#xA;&lt;p&gt;你可以看到为什么会这样。当你很小的时候，你不能欺负客户，所以你必须取悦他们。而当你很大时，你可以随意虐待他们，而且你倾向于这样做，因为这比满足他们更容易。你通过友善成长壮大，但你可以通过恶毒保持强大。&lt;/p&gt;&#xA;&lt;p&gt;在潜在条件改变之前你可以逃脱惩罚，然后所有的受害者都会逃跑。所以&amp;quot;不要作恶&amp;quot;可能是Paul Buchheit为Google创造的最有价值的东西，因为它可能成为公司青春的灵丹妙药。我确信他们觉得这很受限制，但想想如果它能挽救他们免于困扰微软和IBM的致命懒惰，它将会有多宝贵。&lt;/p&gt;&#xA;&lt;p&gt;奇怪的是，这种灵丹妙药对任何其他公司都是免费提供的。任何人都可以采用&amp;quot;不要作恶&amp;quot;。问题是人们会坚持这一点。所以我认为你不会看到唱片公司或烟草公司使用这一发现。&lt;/p&gt;&#xA;&lt;h2 id=&#34;士气&#34;&gt;士气&lt;/h2&gt;&#xA;&lt;p&gt;有很多外部证据表明仁慈是有效的。但它如何运作？投资大量创业公司的一个优势是你获得了很多关于它们如何运作的数据。从我们所见到的，做好似乎以三种方式帮助创业公司：它提高了他们的士气，它使其他人想要帮助他们，最重要的是，它帮助他们果断。&lt;/p&gt;&#xA;&lt;p&gt;士气对创业公司极为重要——如此重要以至于士气本身就几乎足以决定成功。创业公司经常被描述为情绪过山车。一分钟你要接管世界，下一分钟你就注定要失败。感觉注定要失败的问题不仅仅是它让你不快乐，而是它让你停止工作。所以过山车的下坡比上坡更像是自我实现的预言。如果感觉你会成功让你更努力工作，这可能会提高你成功的机会，但如果感觉你会失败让你停止工作，这几乎保证你会失败。&lt;/p&gt;&#xA;&lt;p&gt;这就是仁慈的用武之地。如果你觉得你真的在帮助人们，即使看起来你的创业公司注定要失败，你也会继续工作。我们大多数人都有一些天生的仁慈。有人需要你的单纯事实就让你想要帮助他们。所以如果你开始那种用户每天都会回来的创业公司，你基本上为自己建立了一个巨大的电子宠物。你制造了一些你需要照顾的东西。&lt;/p&gt;&#xA;&lt;p&gt;Blogger是一个经历了真正的低谷并幸存下来的著名创业公司例子。有一次他们没钱了，所有人都离开了。Evan Williams第二天来上班，只有他一个人。是什么让他继续前进？部分原因是用户需要他。他在托管数千人的博客。他不能让网站就这么死了。&lt;/p&gt;&#xA;&lt;p&gt;快速启动有很多优势，但最重要的可能是，一旦你有了用户，电子宠物效应就开始了。一旦你有用户需要照顾，你被迫找出会让他们开心的事情，这实际上是很有价值的信息。&lt;/p&gt;&#xA;&lt;p&gt;来自试图帮助人们的额外信心也可以帮助你与投资者打交道。Chatterous的一位创始人最近告诉我，他和他的联合创始人已经决定这项服务是世界需要的，所以无论发生什么他们都会继续努力，即使他们不得不搬回加拿大住在父母的地下室。&lt;/p&gt;&#xA;&lt;p&gt;一旦他们意识到这一点，他们就不再那么在意投资者对他们的看法。他们仍然与他们见面，但如果没有得到他们的钱，他们也不会死。你知道吗？投资者变得更加感兴趣了。他们能感觉到Chatterouses无论如何都会做这个创业公司，无论有没有他们。&lt;/p&gt;&#xA;&lt;p&gt;如果你真的承诺并且你的创业公司运行成本低，你就变得很难被杀死。而且实际上所有创业公司，即使是最成功的，都会在某个时候接近死亡。所以为人们做好事给你一种使命感，使你更难被杀死，仅这一点就足以补偿你没有选择更自私项目所损失的任何东西。&lt;/p&gt;&#xA;&lt;h2 id=&#34;帮助&#34;&gt;帮助&lt;/h2&gt;&#xA;&lt;p&gt;做好事的另一个优势是它使其他人想要帮助你。这似乎也是人类的一种天生特质。&lt;/p&gt;&#xA;&lt;p&gt;我们资助的创业公司之一Octopart，目前正在进行善与恶的经典战斗。他们是工业零部件的搜索网站。很多人需要搜索零部件，在Octopart之前没有好的方法可以做到。事实证明，这并非巧合。&lt;/p&gt;&#xA;&lt;p&gt;Octopart建立了搜索零部件的正确方法。用户喜欢它，他们一直在快速增长。然而在Octopart的大部分时间里，最大的分销商Digi-Key一直试图强迫他们将价格从网站上删除。Octopart免费向他们发送客户，然而Digi-Key却试图阻止这种流量。为什么？因为他们当前的商业模式依赖于对价格信息不完整的人过度收费。他们不希望搜索正常工作。&lt;/p&gt;&#xA;&lt;p&gt;Octopart是世界上最好的人。他们从伯克利的物理博士项目退学来做这件事。他们只是想修复他们在研究中遇到的问题。想象一下，如果工程师可以在线搜索，你可以为世界工程师节省多少时间。所以当我听说一个大的、邪恶的公司为了保持搜索的 broken 状态而试图阻止他们时，这让我真的想要帮助他们。这让我花在Octopart上的时间比我们资助的其他大多数创业公司都多。这让我花了几分钟告诉你他们有多棒。为什么？因为他们是好人，他们试图帮助世界。&lt;/p&gt;&#xA;&lt;p&gt;如果你是仁慈的，人们会聚集在你周围：投资者、客户、其他公司和潜在员工。从长远来看，最重要的可能是潜在员工。我想现在每个人都知道好的黑客比平庸的黑客好得多。如果你能像Google一样吸引最好的黑客为你工作，你就有很大的优势。而且最好的黑客往往是理想主义的。他们对工作不感到绝望。他们可以在任何地方工作。所以大多数人都想做能让世界变得更好的事情。&lt;/p&gt;&#xA;&lt;h2 id=&#34;指南针&#34;&gt;指南针&lt;/h2&gt;&#xA;&lt;p&gt;但做好事最重要的优势是它起到指南针的作用。做创业公司最难的部分之一是你有太多的选择。只有两三个人，但你可以做一千件事。你怎么决定？&lt;/p&gt;&#xA;&lt;p&gt;答案是：做对你的用户最好的事情。你可以在飓风中像抓住绳子一样抓住这个，如果有什么能救你，它会的。跟随它，它会带你完成你需要做的一切。&lt;/p&gt;&#xA;&lt;p&gt;它甚至是对看似无关问题的答案，比如如何说服投资者给你钱。如果你是个好的推销员，你可以尝试说服他们。但更可靠的途径是通过你的用户说服他们：如果你做出用户足够喜欢以至于告诉朋友的东西，你就会呈指数级增长，这会说服任何投资者。&lt;/p&gt;&#xA;&lt;p&gt;做好事是在复杂情况下做决策的特别有用的策略，因为它是无状态的。这就像说真话。说谎的问题是你必须记住你过去所说的一切，以确保你不自相矛盾。如果你说真话，你不需要记住任何东西，这在事情发生得很快的领域是很有用的属性。&lt;/p&gt;&#xA;&lt;p&gt;例如，Y Combinator现在已经投资了80家创业公司，其中57家仍然活着。（其余的已经死亡、合并或被收购。）当你试图为57家创业公司提供建议时，结果是你必须有一个无状态的算法。当同时有57件事情在进行时，你不能有不可告人的动机，因为你记不住它们。所以我们的规则只是做对创始人最有利的事情。不是因为我们特别仁慈，而是因为这是唯一能在这种规模上运作的算法。&lt;/p&gt;&#xA;&lt;p&gt;当你写一些告诉人们要好的东西时，你似乎在声称自己是个好人。所以我想明确地说我不是个特别好的人。当我还是个孩子的时候，我坚定地站在坏人阵营。成年人使用&amp;quot;好&amp;quot;这个词的方式，似乎与安静同义，所以我长大后对此非常怀疑。&lt;/p&gt;&#xA;&lt;p&gt;你知道有些人当在谈话中提到他们的名字时每个人都会说&amp;quot;他是个好人&amp;quot;吗？人们从来不会这样说我。我得到的最好的评价是&amp;quot;他本意是好的&amp;quot;。我并不声称自己是个好人。充其量我只能算说好语作为第二语言。&lt;/p&gt;&#xA;&lt;p&gt;所以我不是建议你以通常伪善的方式做好事。我建议这样做是因为它有效。它不仅作为&amp;quot;价值观&amp;quot;的陈述有效，而且作为战略指南，甚至作为软件设计规范都有效。不仅仅是不要作恶。要做好事。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 五十年前，上市公司不支付红利似乎令人震惊。现在许多科技公司都不支付。市场似乎已经搞清楚了如何评估潜在股息。也许这不是这个演变的最后一步。也许市场最终会对潜在收益感到舒服。（风险投资家已经这样了，至少其中一些人一直都在赚钱。）&lt;/p&gt;&#xA;&lt;p&gt;我意识到这听起来像是在泡沫时期听到的关于&amp;quot;新经济&amp;quot;的东西。相信我，我当时没有喝那种kool-aid。但我确信泡沫思维中埋藏着一些好想法。例如，专注于增长而不是利润是可以的——但前提是增长是真实的。你不能购买用户；那是金字塔计划。但具有快速真实增长的公司是有价值的，最终市场学会如何评估有价值的东西。&lt;/p&gt;&#xA;&lt;p&gt;[2] 以仁慈为目标创办公司的想法目前被低估了，因为目前将此作为明确目标的人通常做得很差。&lt;/p&gt;&#xA;&lt;p&gt;开始某种模糊的慈善企业是信托基金受益人的标准职业道路之一。大多数人的问题在于他们要么有虚假的政治议程，要么执行不力。信托基金受益人的祖先并不是通过保护他们的传统文化而致富的；也许玻利维亚人也不想这样做。而且开始有机农场，虽然至少是直接的慈善，但并不能像Google那样帮助人们。&lt;/p&gt;&#xA;&lt;p&gt;大多数明确的慈善项目都没有充分对自己负责。他们表现得好像良好的意图足以保证良好的效果。&lt;/p&gt;</description>
    </item>
    <item>
      <title>做无法扩展的事情</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/ds/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/ds/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/ds.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;做无法扩展的事情&#34;&gt;做无法扩展的事情&lt;/h1&gt;&#xA;&lt;h2 id=&#34;做无法扩展的事情-1&#34;&gt;做无法扩展的事情&lt;/h2&gt;&#xA;&lt;p&gt;想要创业吗？获得Y Combinator的资助。&lt;/p&gt;&#xA;&lt;p&gt;2013年7月&lt;/p&gt;&#xA;&lt;p&gt;我们在Y Combinator最常见的建议类型之一是做无法扩展的事情。很多准创始人认为创业公司要么起飞，要么不行。你构建一些东西，让它可用，如果你制造了更好的捕鼠器，人们会如承诺的那样踏破你的门槛。或者他们不会，那样的话市场一定不存在。[1]&lt;/p&gt;&#xA;&lt;p&gt;实际上创业公司起飞是因为创始人让它们起飞。可能有少数是自然增长的，但通常需要某种推动才能让它们开始。一个好的比喻是汽车发动机在有电启动器之前用的曲柄。一旦发动机运转，它会持续运转，但有一个单独而费力的过程来启动它。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;招募&#34;&gt;招募&lt;/h2&gt;&#xA;&lt;p&gt;创始人在开始时必须做的最常见的无法扩展的事情是手动招募用户。几乎所有创业公司都必须这样做。你不能坐等用户来找你。你必须出去找到他们。&lt;/p&gt;&#xA;&lt;p&gt;Stripe是我们资助的最成功的创业公司之一，他们解决的问题非常紧迫。如果有人可以坐等用户，那就是Stripe。但事实上，他们在YC内部以积极的早期用户获取而闻名。&lt;/p&gt;&#xA;&lt;p&gt;为其他创业公司制造东西的创业公司在我们资助的其他公司中有大量潜在用户，但没有比Stripe更好地利用这一点的。在YC，我们用&amp;quot;Collison安装&amp;quot;这个词来描述他们发明的技术。更胆怯的创始人会问&amp;quot;你愿意试试我们的测试版吗？&amp;ldquo;如果答案是肯定的，他们会说&amp;quot;很好，我们会给你发送链接。&amp;ldquo;但Collison兄弟不打算等待。当任何人同意尝试Stripe时，他们会说&amp;quot;好的，把你的笔记本电脑给我&amp;rdquo;，然后当场为他们设置。&lt;/p&gt;&#xA;&lt;p&gt;创始人抗拒出去个别招募用户有两个原因。一个是害羞和懒惰的结合。他们宁愿坐在家里写代码，也不愿出去和一群陌生人交谈，可能还会被大多数人拒绝。但对于创业公司来说要成功，至少有一位创始人（通常是CEO）必须花大量时间在销售和营销上。[2]&lt;/p&gt;&#xA;&lt;p&gt;创始人忽略这条路径的另一个原因是绝对数字起初看起来很小。这不可能是那些大型的、著名的创业公司的起步方式，他们认为。他们犯的错误是低估了复合增长的力量。我们鼓励每个创业公司用每周增长率来衡量他们的进展。如果你有100个用户，下周需要获得10个新用户才能实现每周10%的增长。虽然110可能看起来不比100好多少，但如果你保持每周10%的增长，你会惊讶于数字变得有多大。一年后你将有14,000个用户，2年后你将有200万。&lt;/p&gt;&#xA;&lt;p&gt;当你一次获取一千个用户时，你将做不同的事情，增长最终必须放缓。但如果市场存在，你通常可以从手动招募用户开始，然后逐渐转向不那么手动的方法。[3]&lt;/p&gt;&#xA;&lt;p&gt;Airbnb是这种技术的经典例子。市场启动非常困难，你应该预期一开始要采取英雄式的措施。在Airbnb的情况下，这些措施包括在纽约挨家挨户地走访，招募新用户并帮助现有用户改进他们的列表。当我记得YC期间的Airbnb时，我脑海中浮现出他们带着拉杆箱的形象，因为他们来参加周二晚餐时总是刚从某个地方飞回来。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;脆弱&#34;&gt;脆弱&lt;/h2&gt;&#xA;&lt;p&gt;Airbnb现在看起来像不可阻挡的巨头，但早期它是如此脆弱，大约30天的外出与用户亲自接触决定了成功与失败的区别。&lt;/p&gt;&#xA;&lt;p&gt;这种最初的脆弱性不是Airbnb独有的特点。几乎所有创业公司在初期都是脆弱的。这是没有经验的创始人和投资者（以及记者和论坛上的万事通）对它们最大的误解之一。他们无意识地用成熟公司的标准来评判萌芽中的创业公司。他们就像看着新生儿并断言&amp;quot;这个小生物永远不可能成就任何事&amp;quot;的人。&lt;/p&gt;&#xA;&lt;p&gt;如果记者和万事通轻视你的创业公司，那是无害的。他们总是弄错。即使投资者轻视你的创业公司也没关系；当他们看到增长时会改变想法。最大的危险是你自己轻视你的创业公司。我见过这种情况发生。我经常必须鼓励那些看不到自己所构建事物的全部潜力的创始人。甚至比尔·盖茨也犯了那个错误。他在创办微软后回到哈佛参加秋季学期。他没有待很久，但如果他意识到微软将要达到后来规模的哪怕一部分，他就根本不会回去。[4]&lt;/p&gt;&#xA;&lt;p&gt;关于早期创业公司要问的问题不是&amp;quot;这家公司正在接管世界吗？&amp;ldquo;而是&amp;quot;如果创始人做正确的事情，这家公司能变得多大？&amp;ldquo;而正确的事情在当时往往看起来既费力又微不足道。当微软只是阿尔伯克基的几个人为几千个爱好者（当时他们这样称呼）市场编写Basic解释器时，它看起来不会很令人印象深刻，但回想起来，这是主导微机软件的最佳路径。而且我知道Brian Chesky和Joe Gebbia在为他们的第一批房东的公寓拍摄&amp;quot;专业&amp;quot;照片时，并不感觉自己正在通往成功的道路上。他们只是在努力生存。但回想起来，这也是主导大市场的最佳路径。&lt;/p&gt;&#xA;&lt;p&gt;你如何找到要手动招募的用户？如果你构建一些东西来解决自己的问题，那么你只需要找到你的同龄人，这通常很简单。否则，你将不得不做出更刻意的努力来定位最有希望的用户群。通常的做法是通过相对无针对性的发布获得一些初始用户群，然后观察哪些类型看起来最热情，并寻找更多类似的用户。例如，Ben Silbermann注意到很多最早的Pinterest用户对设计感兴趣，所以他参加了一个设计博客会议来招募用户，效果很好。[5]&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;取悦&#34;&gt;取悦&lt;/h2&gt;&#xA;&lt;p&gt;你应该采取非凡的措施不仅为了获取用户，还为了让他们快乐。在Wufoo能够做到的范围内（结果证明时间出奇地长），他们给每个新用户发送手写的感谢信。你的第一批用户应该感觉与你签约是他们做过的最好的选择之一。而你反过来应该绞尽脑汁想出新的方法来让他们高兴。&lt;/p&gt;&#xA;&lt;p&gt;为什么我们必须教创业公司这个？为什么这对创始人来说是反直觉的？我认为有三个原因。&lt;/p&gt;&#xA;&lt;p&gt;一个是很多创业公司的创始人接受过工程师培训，而客户服务不是工程师培训的一部分。你应该构建强大而优雅的东西，而不是像某种推销员那样奴性地关注个别用户。具有讽刺意味的是，工程学传统上反对手把手指导的部分原因是其传统可以追溯到工程师权力较小的时代——当他们只负责构建事物的狭窄领域，而不是经营整个节目时。你是Scotty时可以发脾气，但你是Kirk时就不能。&lt;/p&gt;&#xA;&lt;p&gt;另一个原因是创始人不够关注个别客户，因为他们担心这无法扩展。但当萌芽中的创业公司的创始人担心这一点时，我指出，在当前状态下他们没有什么可失去的。也许如果他们努力让现有用户超级快乐，有一天他们会因为用户太多而无法为他们做那么多事情。那将是一个很好的问题。看看你是否能让它发生。顺便说一句，当这种情况发生时，你会发现取悦客户的扩展性比你预期的要好。部分原因是你通常能找到让任何事情比你预期的更具扩展性的方法，部分原因是到那时取悦客户已经渗透到你的文化中。&lt;/p&gt;&#xA;&lt;p&gt;我从未见过一家创业公司因为过于努力让初始用户高兴而误入歧途。&lt;/p&gt;&#xA;&lt;p&gt;但也许阻止创始人意识到他们可以多么关注用户的最大原因是他们自己从未经历过这样的关注。他们的客户服务标准是由他们作为客户的公司设定的，这些公司大多是大型公司。蒂姆·库克不会在你购买笔记本电脑后给你寄手写笔记。他不能。但你可以。这是小公司的一个优势：你可以提供大公司无法提供的服务水平。[6]&lt;/p&gt;&#xA;&lt;p&gt;一旦你意识到现有的约定不是用户体验的上限，思考你能走多远来取悦用户会是一件非常愉快的事情。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;体验&#34;&gt;体验&lt;/h2&gt;&#xA;&lt;p&gt;我试图想出一个短语来表达你对用户的关注应该多么极端，我意识到史蒂夫·乔布斯已经做到了：疯狂地伟大。史蒂夫不仅仅是把&amp;quot;疯狂地&amp;quot;用作&amp;quot;非常&amp;quot;的同义词。他的意思更字面——一个人应该专注于执行质量，达到在日常生活中会被认为病态的程度。&lt;/p&gt;&#xA;&lt;p&gt;我们资助的所有最成功的创业公司都做到了，这可能不会让准创始人感到惊讶。新手创始人不理解的是疯狂地伟大在萌芽中的创业公司中意味着什么。当史蒂夫·乔布斯开始使用这个短语时，苹果已经是一家成熟的公司。他的意思是Mac（及其文档甚至包装——这就是痴迷的本质）应该疯狂地精心设计和制造。这对工程师来说不难掌握。这只是设计强大而优雅产品的更极端版本。&lt;/p&gt;&#xA;&lt;p&gt;创始人难以掌握的（史蒂夫本人可能也难以掌握）是，当你把时间滑块推回到创业公司生活的头几个月时，疯狂地伟大会变成什么。不是产品应该疯狂地伟大，而是作为你的用户的体验。产品只是其中的一部分。对于大公司来说，它必然是主导的部分。但你可以也应该给用户一个早期、不完整、有缺陷产品的疯狂地伟大体验，如果你用关注来弥补差异。&lt;/p&gt;&#xA;&lt;p&gt;可以，也许，但应该吗？是的。过度参与早期用户不仅仅是启动增长的可允许技术。对于大多数成功的创业公司来说，这是使产品变好的反馈循环的必要部分。制造更好的捕鼠器不是一个原子操作。即使你以大多数成功创业公司的方式开始，通过构建你自己需要的东西，你构建的第一个东西永远不会完全正确。除了在有重大惩罚错误的领域外，通常最好一开始不要追求完美。特别是在软件中，通常最好在东西有一些效用时就立即放在用户面前，然后看看他们用它做什么。完美主义常常是拖延的借口，无论如何，你最初的用户模型总是不准确的，即使你是其中之一。[7]&lt;/p&gt;&#xA;&lt;p&gt;从与你最早的用户直接接触中获得的反馈将是你能得到的最好的反馈。当你如此之大以至于必须依靠焦点小组时，你会希望你能去用户的家庭和办公室，像只有少数人时那样看他们使用你的东西。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;火&#34;&gt;火&lt;/h2&gt;&#xA;&lt;p&gt;有时正确的无法扩展技巧是专注于故意狭窄的市场。这就像一开始让火保持受控以让它真正炽热，然后再添加更多木柴。&lt;/p&gt;&#xA;&lt;p&gt;Facebook就是这么做的。起初它只对哈佛学生开放。在这种形式下，它只有几千人的潜在市场，但因为他们感觉这真的是为他们而设，他们中的临界数量签约了。在Facebook停止对哈佛学生开放后，它仍然是特定学院学生的网站相当长一段时间。当我在创业学校采访Mark Zuckerberg时，他说虽然为每个学校创建课程列表很费事，但这样做让学生觉得网站是他们的自然家园。&lt;/p&gt;&#xA;&lt;p&gt;任何可以被描述为市场平台的创业公司通常必须从市场的子集开始，但这也可以适用于其他创业公司。总是值得询问市场中是否有你可以快速获得临界用户数量的子集。[8]&lt;/p&gt;&#xA;&lt;p&gt;大多数使用控制火策略的创业公司无意识地这样做。他们为自己和朋友构建东西，这些人恰好是早期采用者，只有后来才意识到他们可以将其提供给更广阔的市场。即使你无意识地这样做，这个策略也同样有效。没有意识地意识到这种模式的最大危险是那些天真地丢弃其中一部分的人。例如，如果你不为自己和朋友构建东西，或者即使你做了，但你来自企业界，你的朋友不是早期采用者，你将不再有一个完美的初始市场 handed to you on a platter。&lt;/p&gt;&#xA;&lt;p&gt;在公司中，最好的早期采用者通常是其他创业公司。他们本质上对新事物更加开放，而且因为刚刚成立，他们还没有做出所有选择。此外，当他们成功时，他们增长很快，你也与他们一起增长。YC模式（特别是让YC变大）的许多未预见的优势之一是，B2B创业公司现在有数百个其他创业公司的即时市场可供使用。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;meraki&#34;&gt;Meraki&lt;/h2&gt;&#xA;&lt;p&gt;对于硬件创业公司，有一种做无法扩展事情的变体，我们称之为&amp;quot;拉一个Meraki&amp;rdquo;。虽然我们没有资助Meraki，但创始人是Robert Morris的研究生，所以我们知道他们的历史。他们通过做真正无法扩展的事情开始：自己组装路由器。&lt;/p&gt;&#xA;&lt;p&gt;硬件创业公司面临软件创业公司没有的障碍。工厂生产运行的最低订单通常是几十万美元。这会让你陷入进退两难的境地：没有产品你无法产生增长来筹集制造产品的资金。在硬件创业公司必须依赖投资者资金的时候，你必须非常有说服力才能克服这一点。众筹（或者更准确地说，预订）的到来帮助很大。但即使如此，如果可能的话，我建议创业公司一开始拉一个Meraki。Pebble就是这么做的。Pebbles自己组装了前几百块手表。如果他们没有经历那个阶段，当他们确实在Kickstarter上推出时，他们可能不会卖出价值1000万美元的手表。&lt;/p&gt;&#xA;&lt;p&gt;像过度关注早期客户一样，自己制造东西对硬件创业公司来说是有价值的。当你是工厂时，你可以更快地调整设计，而且你会学到否则永远不会知道的事情。Pebble的Eric Migicovsky说他学到的事情之一是&amp;quot;采购好螺丝的价值有多大。&amp;ldquo;谁知道呢？&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;咨询&#34;&gt;咨询&lt;/h2&gt;&#xA;&lt;p&gt;有时我们建议B2B创业公司的创始人将过度参与推向极端，选择一个单一用户，表现得好像他们是为那一个用户构建东西的顾问。初始用户作为你的模具的形式；不断调整直到你完美适应他们的需求，你通常会发现你制造了其他用户也想要的东西。即使他们中的人数不多，也可能有拥有更多用户的相邻领域。只要你找到一个真正需要某种东西并且能够据此行动的用户，你就拥有了制造人们想要的东西的立足点，这和任何创业公司最初需要的一样多。[9]&lt;/p&gt;&#xA;&lt;p&gt;咨询是无法扩展工作的典型例子。但（像其他慷慨施予恩惠的方式一样）只要你没有为此获得报酬，这样做就是安全的。这就是公司越界的地方。只要你是一个仅仅对客户特别关注的产品公司，即使你没有解决他们所有问题，他们也会非常感激。但是当他们开始专门为那种关注付费时——当他们开始按小时付费时——他们期望你做所有事情。&lt;/p&gt;&#xA;&lt;p&gt;另一种类似咨询的招募最初冷淡用户的技术是代表他们自己使用你的软件。我们在Viaweb就是这么做的。当我们接近商家询问他们是否想使用我们的软件制作在线商店时，有些人说不，但他们会让我们为他们做一个。因为我们愿意为获取用户做任何事，我们就做了。当时我们感觉相当差劲。我们没有组织大型战略电子商务伙伴关系，而是在试图销售行李、笔和男士衬衫。但回想起来，这正是正确的做法，因为它教会了我们商家使用我们的软件会有什么感觉。有时反馈循环几乎是即时的：在构建某个商家的网站的过程中，我发现我们需要一个我们没有的功能，所以我会花几个小时实现它，然后继续构建网站。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;手动&#34;&gt;手动&lt;/h2&gt;&#xA;&lt;p&gt;有一个更极端的变体，你不仅使用你的软件，你就是你的软件。当你只有少量用户时，你有时可以侥幸手动做一些你计划以后自动化的事情。这让你能更快推出，当你最终将自己自动化出循环时，你会确切知道要构建什么，因为你从自己做中有了肌肉记忆。&lt;/p&gt;&#xA;&lt;p&gt;当手动组件在用户看来像软件时，这种技术开始具有恶作剧的方面。例如，Stripe向其第一批用户提供&amp;quot;即时&amp;quot;商户账户的方式是创始人在幕后手动为他们注册传统商户账户。&lt;/p&gt;&#xA;&lt;p&gt;一些创业公司一开始完全可以是手动的。如果你找到一个有需要解决的问题的人并且你可以手动解决它，只要你能就继续这样做，然后逐渐自动化瓶颈。以尚未自动化的方式解决用户的问题会有点吓人，但比拥有自动化的东西但不解决任何人的问题这种更常见的情况要好。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;大&#34;&gt;大&lt;/h2&gt;&#xA;&lt;p&gt;我应该提一下一种通常不起作用的初始策略：大发布。我偶尔遇到一些创始人，他们似乎相信创业公司是抛射体而不是动力飞机，只有当它们以足够的初始速度发射时才能做大。他们想在8种不同的出版物同时发布，并有禁运令。当然是在星期二，因为他们在某处读到这是发布东西的最佳日子。&lt;/p&gt;</description>
    </item>
    <item>
      <title>关于语言设计的五个问题</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/langdes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/langdes/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/langdes.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;关于语言设计的五个问题&#34;&gt;关于语言设计的五个问题&lt;/h1&gt;&#xA;&lt;p&gt;2001年5月&lt;/p&gt;&#xA;&lt;p&gt;（这些是我在2001年5月10日MIT编程语言设计小组讨论会上所做的笔记。）&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-编程语言是为人设计的&#34;&gt;1. 编程语言是为人设计的。&lt;/h2&gt;&#xA;&lt;p&gt;编程语言是人们与计算机交流的方式。计算机对于任何无歧义的语言都会同样满意。我们有高级语言的原因是因为人们无法处理机器语言。编程语言的要点是防止我们可怜脆弱的人类大脑被大量细节所淹没。&lt;/p&gt;&#xA;&lt;p&gt;建筑师知道某些设计问题比其他问题更具个人性。最干净、最抽象的设计问题之一是设计桥梁。在那里，你的工作主要是用最少的材料跨越给定的距离。光谱的另一端是设计椅子。椅子设计师必须花时间思考人类的臀部。&lt;/p&gt;&#xA;&lt;p&gt;软件也是如此。设计网络数据路由算法是一个很好的抽象问题，就像设计桥梁。而设计编程语言就像设计椅子：这完全是关于处理人类弱点的问题。&lt;/p&gt;&#xA;&lt;p&gt;我们大多数人都讨厌承认这一点。设计具有数学优雅性的系统对我们大多数人来说比迎合人类弱点听起来更有吸引力。数学优雅确实有作用：某些优雅性使程序更容易理解。但优雅本身不是目的。&lt;/p&gt;&#xA;&lt;p&gt;当我说语言必须设计得适合人类弱点时，我并不是说语言必须为糟糕的程序员设计。事实上我认为你应该为最好的程序员设计，但即使是最好的程序员也有局限性。我认为没有人会喜欢在所有变量都是带整数下标的字母x的语言中编程。&lt;/p&gt;&#xA;&lt;h2 id=&#34;2-为自己和你的朋友设计&#34;&gt;2. 为自己和你的朋友设计。&lt;/h2&gt;&#xA;&lt;p&gt;如果你看看编程语言的历史，很多最好的语言都是为其作者自己使用的语言设计的，而很多最差的语言是为其他人使用而设计的。&lt;/p&gt;&#xA;&lt;p&gt;当语言为其他人设计时，总是特定的一群其他人：没有语言设计师聪明的人。所以你得到一种居高临下的语言。Cobol是最极端的例子，但很多语言都充斥着这种精神。&lt;/p&gt;&#xA;&lt;p&gt;这与语言的抽象程度无关。C是相当低级的，但它是为其作者使用而设计的，这就是为什么黑客喜欢它。&lt;/p&gt;&#xA;&lt;p&gt;为糟糕的程序员设计语言的论点是糟糕的程序员比好程序员多。可能是这样。但是那些少数好程序员编写了不成比例的大量软件。&lt;/p&gt;&#xA;&lt;p&gt;我对这个问题很感兴趣，你如何设计一种最好的黑客会喜欢的语言？我碰巧认为这与如何设计一种好的编程语言是同一个问题，但即使不是，它至少是一个有趣的问题。&lt;/p&gt;&#xA;&lt;h2 id=&#34;3-给程序员尽可能多的控制权&#34;&gt;3. 给程序员尽可能多的控制权。&lt;/h2&gt;&#xA;&lt;p&gt;许多语言（特别是为其他人设计的语言）都有保姆的态度：它们试图阻止你做它们认为对你不好的事情。我喜欢相反的方法：给程序员尽可能多的控制权。&lt;/p&gt;&#xA;&lt;p&gt;当我第一次学习Lisp时，我最喜欢的是它把我当作平等的伙伴。在我之前学习的其他语言中，有语言本身和用该语言写的我的程序，两者非常分离。但在Lisp中，我编写的函数和宏就像构成语言本身的那些一样。如果我想，我可以重写语言。它有着与开源软件相同的吸引力。&lt;/p&gt;&#xA;&lt;h2 id=&#34;4-追求简洁&#34;&gt;4. 追求简洁。&lt;/h2&gt;&#xA;&lt;p&gt;简洁被低估甚至被鄙视。但如果你深入了解黑客的内心，你会发现他们真的很喜欢它。你有多少次听到黑客深情地谈到，比如说，在APL中，他们只需几行代码就能做出惊人的事情？我认为任何真正聪明的人真正喜欢的东西都值得注意。&lt;/p&gt;&#xA;&lt;p&gt;我认为几乎任何能让程序更短的事情都是好的。应该有很多库函数；任何可以隐含的东西都应该；语法应该简洁到极致；甚至事物的名称都应该简短。&lt;/p&gt;&#xA;&lt;p&gt;不仅程序应该简短。手册也应该薄。手册的很大部分被用于澄清、保留、警告和特殊情况。如果你强迫自己缩短手册，在最好的情况下，你会通过修复语言中需要这么多解释的东西来实现。&lt;/p&gt;&#xA;&lt;h2 id=&#34;5-承认黑客的本质&#34;&gt;5. 承认黑客的本质。&lt;/h2&gt;&#xA;&lt;p&gt;很多人希望黑客是数学，或者至少是类似自然科学的东西。我认为黑客更像是建筑。建筑与物理学有关，因为建筑师必须设计不会倒塌的建筑，但建筑师的真正目标是建造伟大的建筑，而不是做出关于静力学的发现。&lt;/p&gt;&#xA;&lt;p&gt;黑客喜欢做的是编写伟大的程序。而且我认为，至少在我们自己的心中，我们必须记住，编写伟大的程序是一件令人钦佩的事情，即使这项工作不容易转化为研究论文的传统智力货币。在智力上，设计程序员会喜欢的语言与设计一个包含你可以发表论文的某些想法的糟糕语言同样有价值。&lt;/p&gt;&#xA;&lt;h2 id=&#34;开放性问题&#34;&gt;开放性问题&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-如何组织大型库&#34;&gt;1. 如何组织大型库？&lt;/h3&gt;&#xA;&lt;p&gt;库正在成为编程语言越来越重要的组成部分。它们也在变得更大，这可能很危险。如果找到能做你想要的事情的库函数比你自己编写它需要更长的时间，那么所有这些代码只是在让你的手册变厚。（Symbolics手册就是一个例子。）所以我认为我们必须研究组织库的方法。理想的情况是设计它们，使程序员能够猜测哪个库调用会做正确的事情。&lt;/p&gt;&#xA;&lt;h3 id=&#34;2-人们真的害怕前缀语法吗&#34;&gt;2. 人们真的害怕前缀语法吗？&lt;/h3&gt;&#xA;&lt;p&gt;这是一个开放性问题，在这个意义上我多年来一直在思考它，但仍然不知道答案。前缀语法对我来说似乎完全自然，可能除了数学。但Lisp不受欢迎可能只是因为它有陌生的语法。如果这是真的，是否要对此做些什么是另一个问题。&lt;/p&gt;&#xA;&lt;h3 id=&#34;3-基于服务器的软件需要什么&#34;&gt;3. 基于服务器的软件需要什么？&lt;/h3&gt;&#xA;&lt;p&gt;我认为未来二十年内编写的最令人兴奋的新应用程序中，很多将是基于Web的应用程序，意味着程序位于服务器上并通过Web浏览器与你交谈。而编写这类程序我们可能需要一些新东西。&lt;/p&gt;&#xA;&lt;p&gt;我们需要的一件事是支持基于服务器的应用程序发布的新方式。不像桌面软件那样每年有一两个大的发布版本，基于服务器的应用程序作为一系列小变化发布。你一天可能有五到十个发布版本。而且作为规则，每个人都会总是使用最新版本。&lt;/p&gt;&#xA;&lt;p&gt;你知道你可以设计程序以便调试吗？嗯，基于服务器的软件同样必须设计成可改变的。你必须能够轻松地改变它，或者至少知道什么是小的改变，什么是重大的改变。&lt;/p&gt;&#xA;&lt;p&gt;另一个可能对基于服务器的软件有用的东西，令人惊讶的是，是continuations。在基于Web的软件中，你可以使用类似continuation-passing style的东西来在Web会话本质上无状态的世界中获得子程序的效果。如果不太昂贵，拥有实际的continuations可能是值得的。&lt;/p&gt;&#xA;&lt;h3 id=&#34;4-还有什么新的抽象有待发现&#34;&gt;4. 还有什么新的抽象有待发现？&lt;/h3&gt;&#xA;&lt;p&gt;我不确定这个希望有多合理，但我个人真的很想做的一件事是发现一个新的抽象——某种能像拥有一等函数或递归甚至关键字参数那样产生巨大影响的东西。这可能是一个不可能实现的梦想。这些东西并不经常被发现。但我一直在寻找。&lt;/p&gt;&#xA;&lt;h2 id=&#34;预测&#34;&gt;预测&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-你可以使用任何你想要的语言&#34;&gt;1. 你可以使用任何你想要的语言。&lt;/h3&gt;&#xA;&lt;p&gt;编写应用程序过去意味着编写桌面软件。在桌面软件中，有很大的偏向于使用与操作系统相同的语言编写应用程序。所以十年前，编写软件几乎意味着用C编写软件。最终形成了一个传统：应用程序不能用不寻常的语言编写。而这个传统有很长时间发展，以至于像经理和风险投资家这样的非技术人员也学会了它。&lt;/p&gt;&#xA;&lt;p&gt;基于服务器的软件彻底打破了这一模式。使用基于服务器的软件，你可以使用任何你想要的语言。几乎没有人理解这一点（特别是经理和风险投资家）。一些黑客理解它，这就是为什么我们甚至听到像Perl和Python这样的新的独立语言。我们听到Perl和Python不是因为人们用它们编写Windows应用程序。&lt;/p&gt;&#xA;&lt;p&gt;作为对设计编程语言感兴趣的人，这对我们意味着我们的工作现在可能有真正的受众。&lt;/p&gt;&#xA;&lt;h3 id=&#34;2-速度来自分析器&#34;&gt;2. 速度来自分析器。&lt;/h3&gt;&#xA;&lt;p&gt;语言设计师，或者至少语言实现者，喜欢编写生成快速代码的编译器。但我不认为这是使语言对用户来说快速的原因。Knuth很久以前就指出，速度只在几个关键瓶颈中重要。任何尝试过的人都知道你无法猜测这些瓶颈在哪里。分析器是答案。&lt;/p&gt;&#xA;&lt;p&gt;语言设计师在解决错误的问题。用户不需要基准测试运行得快。他们需要的是一种能够显示他们自己程序的哪些部分需要重写的语言。这就是实践中速度的来源。所以也许如果语言实现者把他们本来会花在编译器优化上的一半时间用来编写一个好的分析器，这会是一个净收益。&lt;/p&gt;&#xA;&lt;h3 id=&#34;3-你需要一个应用程序来推动语言的设计&#34;&gt;3. 你需要一个应用程序来推动语言的设计。&lt;/h3&gt;&#xA;&lt;p&gt;这可能不是一个绝对的规则，但似乎最好的语言都是与它们被用来编写的某个应用程序一起演化的。C是由需要它进行系统编程的人编写的。Lisp的开发部分是为了进行符号微分，McCarthy如此急于开始，甚至在1960年第一篇关于Lisp的论文中就在编写微分程序。&lt;/p&gt;&#xA;&lt;p&gt;如果你的应用程序解决一些新问题，那就特别好。这将倾向于推动你的语言拥有程序员需要的新特性。我个人对编写一种适合编写基于服务器的应用程序的语言感兴趣。&lt;/p&gt;&#xA;&lt;p&gt;[在小组讨论中，Guy Steele也提出了这一点，并补充建议应用程序不应该包括为你语言编写编译器，除非你的语言碰巧是用于编写编译器的。]&lt;/p&gt;&#xA;&lt;h3 id=&#34;4-语言必须适合编写一次性程序&#34;&gt;4. 语言必须适合编写一次性程序。&lt;/h3&gt;&#xA;&lt;p&gt;你知道什么是一次性程序：你为某些有限任务快速编写的东西。我认为如果你环顾四周，你会发现很多大的、严肃的程序开始时是一次性程序。如果大多数程序开始时是一次性程序，我不会感到惊讶。所以如果你想制造一种适合一般软件编写的好语言，它必须适合编写一次性程序，因为这是大多数软件的幼虫阶段。&lt;/p&gt;&#xA;&lt;h3 id=&#34;5-语法与语义相连&#34;&gt;5. 语法与语义相连。&lt;/h3&gt;&#xA;&lt;p&gt;传统上认为语法和语义是完全分开的。这听起来很震惊，但它们可能不是。我认为你语言中想要的东西可能与你如何表达它有关。&lt;/p&gt;</description>
    </item>
    <item>
      <title>养育孩子</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/kids/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/kids/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/kids.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;养育孩子&#34;&gt;养育孩子&lt;/h1&gt;&#xA;&lt;p&gt;2019年12月&lt;/p&gt;&#xA;&lt;p&gt;在有孩子之前，我害怕生孩子。在那之前，我对孩子的感觉就像年幼的奥古斯丁对过道德生活的感觉一样。如果我想到自己永远不会有孩子，我会感到难过。但是我现在想要孩子吗？不。&lt;/p&gt;&#xA;&lt;p&gt;如果我有孩子，我将成为父母，而从我小时候起就知道，父母都不酷。他们沉闷、负责任，没有乐趣。虽然孩子们会这样想并不奇怪，但说实话，成年后我也没有看到太多能改变我看法的事情。每当我注意到有孩子的父母时，孩子们似乎都是小恶魔，而父母则是可怜的、疲惫不堪的生物，即使他们占了上风。&lt;/p&gt;&#xA;&lt;p&gt;当人们生婴儿时，我热情地祝贺他们，因为这似乎是应该做的事情。但我完全没有这种感觉。&amp;ldquo;幸好是你不是我，&amp;ldquo;我当时在想。&lt;/p&gt;&#xA;&lt;p&gt;现在当人们生婴儿时，我热情地祝贺他们，而且我是真心的。尤其是第一个孩子。我感觉他们刚刚得到了世界上最好的礼物。&lt;/p&gt;&#xA;&lt;p&gt;当然，改变的是我有了孩子。我曾经害怕的事情结果却是美妙的。&lt;/p&gt;&#xA;&lt;p&gt;部分原因，我不会否认，是因为我们的第一个孩子出生时几乎立即发生的严重化学变化。就像有人翻转了一个开关。我突然不仅对我们的孩子感到保护，而且对所有的孩子都是如此。当我开车带妻子和新生的儿子从医院回家时，我走近一个挤满行人的十字路口，我发现自己在想&amp;quot;我必须非常小心所有这些人。每个人都是某人的孩子！&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;所以在某种程度上，当我说生孩子很棒时，你不能完全相信我。在某种程度上，我像一个宗教邪教成员告诉你如果你加入邪教也会快乐——但这只是因为加入邪教会改变你的思想，使你成为一个快乐的邪教成员。&lt;/p&gt;&#xA;&lt;p&gt;但不完全是这样。关于生孩子这件事，有一些我在有孩子之前明显弄错了的地方。&lt;/p&gt;&#xA;&lt;p&gt;例如，我对父母和孩子的观察中存在巨大的选择偏见。有些父母可能注意到我写了&amp;quot;每当我注意到有孩子的父母时&amp;rdquo;。当然，我注意到孩子的时候都是出了问题的时候。只有当他们制造噪音时我才会注意到他们。而当我在哪里注意到他们呢？通常我从来不去有孩子的地方，所以我遇到他们的唯一地方是在飞机这样的共享瓶颈处。这根本不是有代表性的样本。几乎没有父母喜欢和幼儿一起飞行。&lt;/p&gt;&#xA;&lt;p&gt;我没有注意到的事情，是因为他们往往安静得多，是父母与孩子在一起的所有美好时刻。人们不太谈论这些——魔力很难用言语表达，而且所有其他父母都知道——但生孩子的最大好处之一是有很多时候你会觉得没有其他地方你更想去，也没有其他事情你更想做。你不必在做特别的事情。你可能只是一起去某个地方，或者哄他们睡觉，或者在公园里推他们荡秋千。但你不会用这些时刻交换任何东西。人们往往不会将孩子与平静联系起来，但这就是你的感受。你不需要再看得比你现在的位置更远。&lt;/p&gt;&#xA;&lt;p&gt;在有孩子之前，我也有过这种平静的时刻，但它们比较罕见。有了孩子，一天可以发生好几次。&lt;/p&gt;&#xA;&lt;p&gt;我关于孩子的另一个数据来源是我自己的童年，这也同样具有误导性。我当时相当调皮，总是因为这样或那样的事情惹上麻烦。所以在我看来，为人父母基本上就是执法。我没有意识到也有好时光。&lt;/p&gt;&#xA;&lt;p&gt;我记得我大约30岁时，母亲有一次告诉我她真的很享受有我和我妹妹的时光。我的天啊，我想，这个女人是个圣人。她不仅忍受了我们让她承受的所有痛苦，而且还乐在其中？现在我意识到她只是在说实话。&lt;/p&gt;&#xA;&lt;p&gt;她说她喜欢我们的一个原因是我们谈话很有趣。当我有孩子时，这让我感到惊讶。你不仅爱他们。他们也成了你的朋友。他们真的很有趣。虽然我承认幼儿非常喜欢重复（任何值得做一次的事情都值得做五十次），但和他们一起玩通常真的很有趣。这也让我感到惊讶。和2岁的孩子玩耍在我2岁时很有趣，在我6岁时肯定不好玩。为什么后来又变得有趣了？但它确实如此。&lt;/p&gt;&#xA;&lt;p&gt;当然，有些时候纯粹是苦差事。或者更糟，是恐惧。生孩子是那种强烈的体验类型，很难想象，除非你经历过。但这并不是像我生孩子之前隐含地认为的那样，只是你的DNA走向救生艇。&lt;/p&gt;&#xA;&lt;p&gt;不过，我关于生孩子的担忧有一些是对的。它们确实会让你生产力下降。我知道生孩子让一些人把事情整理好，但如果你的事情已经整理好了，你去做事情的时间就会减少。特别是，你必须按照时间表工作。孩子有时间表。我不确定是因为孩子就是这样，还是因为这是将他们的生活与成年人生活整合的唯一方式，但一旦你有了孩子，你往往必须按照他们的时间表工作。&lt;/p&gt;&#xA;&lt;p&gt;你会有大块的时间来工作。但你不能让工作随意地蔓延到你的整个生活中，就像我生孩子前那样。你必须在每天同一时间工作，无论灵感是否流动，而且会有时候你必须停止，即使它正在流动。&lt;/p&gt;&#xA;&lt;p&gt;我已经能够适应这种方式工作。工作，像爱情一样，总会找到方法。如果只有某些时间可以发生，它就会在那些时间发生。所以虽然我没有生孩子前完成那么多工作，但我完成的工作足够了。&lt;/p&gt;&#xA;&lt;p&gt;我讨厌这么说，因为抱负一直是我身份的一部分，但生孩子可能会让人不那么有抱负。看到这句话写下来我很痛苦。我挣扎着避免它。但如果没有真实的东西在那里，我为什么要挣扎？事实上，一旦你有了孩子，你可能会更关心他们而不是自己。而注意力是一个零和游戏。一次只有一个想法可以是你头脑中的首要想法。一旦你有了孩子，它通常会是你的孩子，这意味着它不太会是你正在工作的某个项目。&lt;/p&gt;&#xA;&lt;p&gt;我有一些技巧来接近这个边缘。例如，当我写文章时，我想我希望我的孩子知道什么。这驱使我把事情做对。当我写《贝尔》时，我告诉我的孩子一旦我完成它，我就带他们去非洲。当你对小孩子说这种话时，他们会把它当作承诺。这意味着我必须完成，否则我就要带走他们的非洲之旅。也许如果我真的很幸运，这样的技巧可能会让我净赚。但风就在那里，毫无疑问。&lt;/p&gt;&#xA;&lt;p&gt;另一方面，如果你的抱负连有孩子都经受不了，那是多么无力的抱负？你有这么少的余力吗？&lt;/p&gt;&#xA;&lt;p&gt;虽然生孩子可能扭曲了我现在的判断，但它没有覆盖我的记忆。我清楚地记得以前的生活是怎样的。足够想念很多事情，比如能够随时动身去另一个国家的能力。那真是太棒了。我为什么从来没有那样做？&lt;/p&gt;&#xA;&lt;p&gt;看到我做了什么？事实上，我在生孩子前拥有的大多数自由，我从来没有使用过。我用孤独为它付出了代价，但我从来没有使用过。&lt;/p&gt;&#xA;&lt;p&gt;我在有孩子前有很多快乐的时光。但如果我计算快乐时刻，不仅仅是潜在的快乐，而是实际的快乐时刻，生孩子后比以前多了。现在我几乎可以随时获得，几乎任何睡前时间。&lt;/p&gt;&#xA;&lt;p&gt;人们作为父母的经历差异很大，我知道我一直很幸运。但我认为我生孩子前的担忧一定很常见，而且从其他父母看到孩子时的脸色来看，孩子带来的幸福也一定很普遍。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注意&#34;&gt;注意&lt;/h2&gt;&#xA;&lt;p&gt;[1] 成年人足够复杂，能够看到2岁孩子是迷人的复杂角色，而对大多数6岁孩子来说，2岁孩子只是有缺陷的6岁孩子。&lt;/p&gt;&#xA;&lt;p&gt;感谢 Trevor Blackwell、Jessica Livingston 和 Robert Morris 阅读本文的草稿。&lt;/p&gt;&#xA;&lt;p&gt;阿拉伯语翻译 | 斯洛伐克语翻译&lt;/p&gt;</description>
    </item>
    <item>
      <title>再分化</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/re/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/re/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/re.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;再分化&#34;&gt;再分化&lt;/h1&gt;&#xA;&lt;p&gt;2016年1月&lt;/p&gt;&#xA;&lt;p&gt;年老的一个好处是，你能在自己的有生之年看到变化的发生。我看到的大部分变化都是分化。美国政治比以往更加两极化。文化上，我们共同的基础越来越少。创意阶层涌向少数几个幸福的城市，抛弃了其他地方。日益加剧的经济不平等意味着贫富差距也在扩大。我想提出一个假说：所有这些趋势都是同一现象的不同实例。而且，其根本原因不是某种将我们分开的力量，而是曾经将我们凝聚在一起的力量正在侵蚀。&lt;/p&gt;&#xA;&lt;p&gt;更糟糕的是，对于那些担心这些趋势的人来说，曾经将我们凝聚在一起的力量是一种异常现象，是一次性情况的结合，不太可能重复——而且，我们也不希望重复。&lt;/p&gt;&#xA;&lt;p&gt;这两种力量是战争（尤其是第二次世界大战）和大公司的兴起。&lt;/p&gt;&#xA;&lt;p&gt;第二次世界大战的影响既有经济上的，也有社会上的。在经济上，它减少了收入差异。与所有现代武装力量一样，美国的军队在经济上是社会主义的。&amp;ldquo;各尽所能，按需分配&amp;rdquo;。或多或少。军队中高级成员得到的更多（正如社会主义社会中高层人员总是那样），但他们得到的是根据其级别固定的。而且这种扁平化效应并不限于军人，因为美国经济也被征召入伍。在1942年到1945年期间，所有工资都由国家战争劳工委员会设定。像军队一样，它们默认扁平化。而且这种工资的标准化如此普遍，以至于在战争结束多年后其影响仍然可见。[1]&lt;/p&gt;&#xA;&lt;p&gt;企业主也不应该赚钱。罗斯福说&amp;quot;不允许任何一个战争百万富翁&amp;quot;出现。为确保这一点，任何公司战前利润的增长都被征收85%的税。当公司税后收入到达个人手中时，又以93%的边际税率再次征税。[2]&lt;/p&gt;&#xA;&lt;p&gt;在社会方面，战争也倾向于减少差异。超过1600万来自各种不同背景的男性和女性以一种真正统一的生活方式聚集在一起。1920年代初出生男性的服兵役率接近80%。为共同目标而努力，通常在压力下，使他们更加紧密地团结在一起。&lt;/p&gt;&#xA;&lt;p&gt;虽然严格来说，第二次世界大战对美国来说持续了不到4年，但其影响持续了更长时间。战争使中央政府更加强大，而第二次世界大战是这种情况的极端例子。在美国，就像所有其他盟国一样，联邦政府不愿意放弃它获得的新权力。事实上，在某些方面，战争并没有在1945年结束；敌人只是变成了苏联。在税率、联邦权力、国防开支、征兵和民族主义方面，战后的几十年看起来更像战时而非战前的和平时期。[3] 社会影响也持续了。那个从西弗吉尼亚州骡队后面被征召入伍的年轻人并没有简单回到农场。有其他东西在等待着他，看起来很像军队。&lt;/p&gt;&#xA;&lt;p&gt;如果总体战争是20世纪重大的政治故事，那么重大的经济故事就是一种新型公司的兴起。这也倾向于产生社会和经济凝聚力。[4]&lt;/p&gt;&#xA;&lt;p&gt;20世纪是大型全国性公司的世纪。通用电气、通用食品、通用汽车。金融、通信、交通和制造业的发展使一种新型公司成为可能，其首要目标是规模。这个世界的1.0版本是低分辨率的：由少数几家巨头公司主导每个大市场的乐高世界。[5]&lt;/p&gt;&#xA;&lt;p&gt;19世纪末和20世纪初是一个整合的时代，尤其由J.P.摩根领导。成千上万家由其创始人经营的公司合并成了几百家由专业经理人经营的巨头公司。规模经济统治了那个时代。当时的人们认为这是最终状态。约翰·D·洛克菲勒在1880年说：&amp;ldquo;联合的时代已经到来并将永远存在。个人主义已经消失，再也不会回来。&amp;ldquo;事实证明他错了，但在接下来的100年里，他似乎是对的。&lt;/p&gt;&#xA;&lt;p&gt;19世纪末开始的整合持续了20世纪的大部分时间。到第二次世界大战结束时，正如迈克尔·林德所写，&amp;ldquo;经济的主要部门要么组织成政府支持的卡特尔，要么由少数寡头公司主导。&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;对消费者来说，这个新世界意味着到处都有同样的选择，但只有少数几种选择。我长大时，大多数东西只有2或3种选择，而且由于它们都以市场中间为目标，没有什么可以区分它们。&lt;/p&gt;&#xA;&lt;p&gt;这种现象最重要的例子之一是在电视领域。这里有3个选择：NBC、CBS和ABC。加上为知识分子和共产主义者准备的公共电视。3个网络提供的节目无法区分。事实上，这里有三重压力向中心靠拢。如果一个节目确实尝试了一些大胆的东西，保守市场的当地分公司会让他们停止。此外，由于电视很贵，全家人一起看同样的节目，所以它们必须适合每个人。&lt;/p&gt;&#xA;&lt;p&gt;而且，每个人不仅得到同样的东西，而且在同一时间得到。现在很难想象，但每天晚上数千万家庭会一起坐在电视机前，和他们的邻居一样，在同一时间看同一个节目。现在超级碗发生的事情在当时每晚都发生。我们真的是同步的。[6]&lt;/p&gt;&#xA;&lt;p&gt;在某种程度上，中世纪的电视文化是好的。它给出的世界观就像在儿童读物中找到的，它可能具有（父母希望的）儿童读物所具有的效果，使人们表现得更好。但是，像儿童读物一样，电视也具有误导性。对成年人来说是危险的误导。罗伯特·麦克尼尔在他的自传中谈到看到刚从越南传来的恐怖图像时想，我们不能在家人吃晚饭时给他们看这些。&lt;/p&gt;&#xA;&lt;p&gt;我知道共同文化是多么普遍，因为我试图脱离它，而实际上不可能找到替代品。我13岁时意识到，更多是从内部证据而非任何外部来源，我们在电视上被灌输的想法都是垃圾，我就停止看电视了。[7] 但不仅仅是电视。我周围的一切似乎都是垃圾。政治家们说着同样的话，消费品牌生产几乎相同的产品，贴上不同的标签来表明它们应有的声望，带有虚假&amp;quot;殖民地&amp;quot;外观的轻框架房屋，每端有几英尺多余金属的汽车，几年后就开始解体，&amp;ldquo;红美味&amp;quot;苹果是红色的，但只是名义上的苹果。回想起来，那确实是垃圾。[8]&lt;/p&gt;&#xA;&lt;p&gt;但是，当我寻找替代品来填补这个空白时，我几乎什么也没找到。那时没有互联网。唯一能看的地方是我们当地购物中心连锁书店。[9] 在那里我找到了一本《大西洋月刊》。我希望我能说它成为了进入更广阔世界的门户，但事实上我发现它无聊且难以理解。像小孩子第一次尝威士忌并假装喜欢它一样，我像保存一本书一样小心翼翼地保存那本杂志。我相信我还在某个地方有它。但尽管它证明在某个地方存在一个不是红美味苹果的世界，但我直到大学才找到它。&lt;/p&gt;&#xA;&lt;p&gt;大公司不仅作为消费者让我们相似，作为雇主也是如此。在公司内部，有强大的力量将人们推向单一的外表和行为模式。IBM在这方面特别臭名昭著，但它们只是比其他大公司更极端一点。而且如何看和行动的模式在公司之间差异很小。意味着这个世界内的每个人都预期看起来或多或少相同。不仅是企业世界的人，还有所有渴望进入它的人——在20世纪中期，这意味着大多数还没有进入其中的人。在20世纪的大部分时间里，工人阶级努力看起来像中产阶级。你可以在老照片中看到。1950年很少有成年人渴望看起来危险。&lt;/p&gt;&#xA;&lt;p&gt;但是全国性公司的兴起不仅压缩了我们的文化，也压缩了我们的经济，而且是两端都压缩。&lt;/p&gt;&#xA;&lt;p&gt;随着全国性大公司，我们得到了全国性的大型工会。在20世纪中期，公司与工会达成交易，支付高于市场价格的劳动力。部分是因为工会是垄断的。[10] 部分是因为，作为寡头本身的组成部分，公司知道他们可以安全地将成本转嫁给客户，因为他们的竞争对手也必须这样做。部分是因为在20世纪中期，大多数大公司仍然专注于寻找新的方法来利用规模经济。就像初创公司合理地向AWS支付高于运行自己服务器成本的溢价一样，许多全国性大公司愿意为劳动力支付溢价。[11]&lt;/p&gt;&#xA;&lt;p&gt;20世纪的大公司不仅通过过度支付工会将收入从底部推高，也通过支付过少的高层管理人员薪酬将收入在顶部压低。经济学家J.K.加尔布雷斯在1967年写道：&amp;ldquo;很少有公司会建议高管薪酬已经达到最大值。&amp;quot;[12]&lt;/p&gt;&#xA;&lt;p&gt;在某种程度上这是一种错觉。高管的大部分实际薪酬从未出现在他们的所得税申报表上，因为它以福利形式出现。所得税税率越高，在税前支付员工薪酬的压力就越大。（在英国，税率比美国更高，公司甚至会支付他们孩子的私立学校学费。）20世纪中期大公司给员工的最有价值的东西之一是工作保障，这也没有出现在所得税申报表或收入统计中。因此这些组织中的就业性质往往产生关于经济不平等的错误低数字。但即使考虑到这一点，大公司支付给他们最好的人也比市场价格低。没有市场；预期是你会在同一家公司工作几十年，如果不是整个职业生涯的话。[13]&lt;/p&gt;&#xA;&lt;p&gt;你的工作如此缺乏流动性，几乎没有机会获得市场价格。但同样的缺乏流动性也鼓励你不要寻求它。如果公司承诺雇用你直到退休，并在之后给你养老金，你不想今年从中榨取尽可能多的东西。你需要照顾公司，这样公司才能照顾你。特别是当你与同一群人工作了几十年的时候。如果你试图从公司榨取更多钱，你就是在挤压将要照顾他们的组织。而且如果你不把公司放在第一位，你就不会被提升，如果你不能换梯子，在这个梯子上提升是唯一的上升方式。[14]&lt;/p&gt;&#xA;&lt;p&gt;对于在武装部队度过几年形成岁月的人来说，这种情况现在看起来并不像对我们那样奇怪。从他们的观点来看，作为大公司高管，他们是高级军官。他们比士兵得到的多得多。他们可以在最好的餐厅享用账户午餐，乘坐公司的湾流飞机到处飞。他们大多数人可能没有想到要问他们是否得到了市场价格。&lt;/p&gt;&#xA;&lt;p&gt;获得市场价格的最终方式是自己创业。这对现在任何有雄心的人来说似乎很明显。但在20世纪中期，这是一个陌生的概念。不是因为创业看起来太雄心勃勃，而是因为它看起来不够雄心勃勃。即使在20世纪70年代，我长大的时候，雄心勃勃的计划是在知名机构获得大量教育，然后加入另一个知名机构，在等级制度中逐步晋升。你的声望就是你所属于的机构的声望。人们当然创业，但受过教育的人很少这样做，因为那时实际上几乎没有什么我们现在称之为初创企业的概念：从小开始并长大的业务。这在20世纪中期要难得多。创业意味着创业从小开始并保持小规模。在大公司的时代，这通常意味着试图避免被大象踩踏。成为骑大象的管理阶级更有声望。&lt;/p&gt;&#xA;&lt;p&gt;到20世纪70年代，没有人停下来想知道那些大而有声望的公司最初是从哪里来的。它们似乎一直存在，就像化学元素一样。确实，在20世纪的雄心勃勃的孩子和大公司的起源之间有一双重的墙。许多大公司是整合而来的，没有明确的创始人。当它们有创始人时，创始人看起来不像我们。几乎所有的人都没有受过教育，就是没上过大学。他们是莎士比亚所说的粗鲁的机械师。大学训练一个人成为专业阶级的一员。其毕业生不期望做安德鲁·卡内基或亨利·福特开始做的那种粗活。[15]&lt;/p&gt;&#xA;&lt;p&gt;在20世纪，大学毕业生越来越多。他们从1900年约占总人口的2%增加到2000年的约25%。在世纪中叶，我们的两大力量以《退伍军人权利法案》的形式相交，该法案将220万二战退伍军人送入大学。很少有人这样想，但使大学成为雄心勃勃者的规范路径的结果是，一个为亨利·福特工作在社会上可以接受，但成为亨利·福特却不可以接受的世界。[16]&lt;/p&gt;&#xA;&lt;p&gt;我很清楚地记得这个世界。我成年时它刚开始解体。在我的童年它仍然占主导地位。不像以前那么占主导地位。我们可以从老电视节目、年鉴和成年人的行为方式看出，1950年代和60年代的人们比我们更加从众。中世纪的模型已经开始老化了。但那不是我们当时看待它的方式。我们最多会说1975年可以比1965年更大胆一些。确实，那时还没有太大变化。&lt;/p&gt;&#xA;&lt;p&gt;但变化即将到来。当乐高经济开始解体时，它同时以几种不同的方式解体。纵向整合的公司实际上解体了，因为更有效率。现有企业面临新的竞争对手，因为（a）市场全球化，（b）技术创新开始胜过规模经济，将规模从资产变成了负债。随着以前狭窄的消费者渠道拓宽，小公司越来越能够生存。随着全新类别的产品出现，市场本身也开始变化得更快。最后但并非最不重要的是，联邦政府之前一直对J.P.摩根的世界微笑，认为这是事物的自然状态，开始意识到它毕竟不是最终答案。&lt;/p&gt;&#xA;&lt;p&gt;J.P.摩根之于横向轴线，亨利·福特之于纵向轴线。他希望自己做所有事情。他在1917年到1928年间在红河建造的巨型工厂 literally 一端吸收铁矿石，另一端送出汽车。10万人在那里工作。当时这似乎是未来。但这不是今天的汽车公司运营方式。现在大部分设计和制造发生在长长的供应链中，汽车公司最终组装和销售其产品。汽车公司这样运营的原因是因为它效果更好。供应链中的每家公司都专注于它们最了解的。它们每家都必须做好，否则可以被另一个供应商取代。&lt;/p&gt;&#xA;&lt;p&gt;为什么亨利·福特没有意识到合作公司网络比单一公司效果更好？一个原因是供应商网络需要一段时间才能进化。在1917年，自己做所有事情对福特来说似乎是获得他所需规模的唯一方式。第二个原因是，如果你想用合作公司网络解决问题，你必须能够协调它们的努力，而你可以用计算机做得好得多。计算机减少了科斯所说的公司存在理由的交易成本。这是一个根本性的变化。&lt;/p&gt;&#xA;&lt;p&gt;在20世纪初，大公司是效率的同义词。在20世纪末，它们是低效率的同义词。在某种程度上这是因为公司本身变得僵化。但也是因为我们的标准更高了。&lt;/p&gt;&#xA;&lt;p&gt;变化不仅发生在现有行业内部。行业本身也发生了变化。制造许多新东西成为可能，有时现有的公司不是做得最好的。&lt;/p&gt;&#xA;&lt;p&gt;微型计算机是典型的例子。市场由像苹果这样的新贵开创。当市场变得足够大时，IBM决定值得注意。当时IBM完全主导计算机行业。他们假设现在这个市场成熟了，他们要做的就是伸手摘取。当时的大多数人会同意他们的看法。但接下来发生的事情说明了世界变得多么复杂。IBM确实推出了微型计算机。虽然相当成功，但没有压倒苹果。但更重要的是，IBM最终被一个从侧面进入的供应商所取代——来自软件，这甚至看起来不像同样的业务。IBM最大的错误是接受DOS的非独占许可。在当时这似乎是安全的举动。没有其他计算机制造商曾经能够超过他们的销量。如果其他制造商也能提供DOS，这有什么区别？那个错误计算的结果是廉价PC克隆机的爆炸式增长。微软现在拥有PC标准，以及客户。微型计算机业务最终成为苹果对微软。&lt;/p&gt;&#xA;&lt;p&gt;基本上，苹果挤掉了IBM，然后微软偷了它的钱包。这种事情在中世纪的大公司身上不会发生。但未来会越来越频繁地发生。&lt;/p&gt;&#xA;&lt;p&gt;在计算机业务中，变化大多是自行发生的。在其他行业，必须首先消除法律障碍。许多中世纪的寡头垄断得到了联邦政府政策的批准（以及在战时的大量订单），这些政策阻止了竞争对手。这在当时对政府官员来说并不像听起来那么可疑。他们认为两党制确保了政治上足够的竞争。它也应该适用于商业。&lt;/p&gt;&#xA;&lt;p&gt;政府逐渐意识到反竞争政策弊大于利，在卡特政府期间开始取消它们。用于这个过程的说法是误导性地狭窄：放松管制。真正发生的是去寡头垄断化。它一个接一个地发生在行业上。消费者最明显的两个是航空旅行和长途电话服务，两者在放松管制后都变得便宜得多。&lt;/p&gt;&#xA;&lt;p&gt;放松管制也促成了1980年代敌意收购浪潮。在过去，公司低效率的唯一限制，除了实际破产，是其竞争对手的低效率。现在公司必须面对绝对标准而非相对标准。任何未能为其资产产生足够回报的上市公司都面临管理层被更有效率的管理层取代的风险。新管理层经常通过将公司分解成单独更有价值的部分来做到这一点。[17]&lt;/p&gt;&#xA;&lt;p&gt;国民经济的1.0版本由几个大块组成，它们的关系由少数高管、政治家、监管者和工会领导在密室中谈判。2.0版本是更高分辨率的：有更多的公司，更多不同的大小，制造更多不同的东西，它们的关系变化更快。在这个世界上仍然有很多密室谈判，但更多留给市场力量。这进一步加速了分化。&lt;/p&gt;&#xA;&lt;p&gt;在描述一个渐进过程时谈论版本有点误导，但不像看起来那么误导。几十年内有很多变化，我们最终得到的是质的不同。1958年标准普尔500指数中的公司平均已经在那里61年。到2012年，这个数字是18年。[18]&lt;/p&gt;&#xA;&lt;p&gt;乐高经济的解体与计算能力的普及同时发生。计算能力在多大程度上是先决条件？回答这个问题需要一本书。显然计算能力的普及是初创企业兴起的先决条件。我怀疑它也是金融领域大部分事情的先决条件。但它是全球化或LBO浪潮的先决条件吗？我不知道，但我不会排除这种可能性。再分化可能是由计算机驱动的，就像工业革命是由蒸汽机驱动的一样。无论计算机是否是先决条件，它们肯定加速了它。&lt;/p&gt;&#xA;&lt;p&gt;公司的新流动性改变了人们与雇主的关系。为什么要爬一个可能被从你下面抽走的公司阶梯？有雄心的人开始把职业看作不是爬单一的阶梯，而是一系列可能在不同公司的工作。公司之间更多的流动（甚至潜在的流动）在薪酬中引入了更多的竞争。此外，随着公司变小，估计员工对公司收入的贡献变得更容易。两种变化都将薪酬推向市场价格。而且由于人们在生产力上差异很大，支付市场价格意味着薪酬开始分化。&lt;/p&gt;&#xA;&lt;p&gt;毫不奇怪，正是在20世纪80年代初，&amp;ldquo;雅皮士&amp;quot;这个词被创造出来。这个词现在不太使用，因为它描述的现象如此理所当然，但当时它是为新奇事物的标签。雅皮士是赚很多钱的年轻专业人士。对今天二十多岁的人来说，这似乎不值得命名。年轻专业人士为什么不赚很多钱？但直到20世纪80年代，职业生涯早期薪酬过低是专业人士的一部分意义。年轻专业人士正在支付他们的会费，在阶梯上努力工作。回报稍后会来。雅皮士的新奇之处在于他们想要现在工作的市场价格。&lt;/p&gt;&#xA;&lt;p&gt;第一批雅皮士不为初创公司工作。那还在未来。他们也不为大公司工作。他们是法律、金融和咨询等领域的专业人士。但他们的例子迅速激励了他们的同行。一旦他们看到那辆新的宝马325i，他们也想要一个。&lt;/p&gt;&#xA;&lt;p&gt;在职业生涯早期支付过低只有在每个人都这样做时才有效。一旦某个雇主打破行列，其他人都必须这样做，否则他们得不到好人才。一旦开始，这个过程扩散到整个经济，因为在人们职业生涯的开始时，他们可以轻易地不仅转换雇主，而且转换行业。&lt;/p&gt;&#xA;&lt;p&gt;但并不是所有年轻专业人士都受益。你必须有产出才能获得高薪。第一批雅皮士在容易衡量这一点的领域工作并非巧合。&lt;/p&gt;&#xA;&lt;p&gt;更普遍地说，一个观点正在回归，它的名字听起来老派正是因为它长期以来如此罕见：你可以创造你的财富。像过去一样，有多种方法可以做到这一点。一些人通过创造财富致富，其他人通过玩零和游戏致富。但一旦创造财富成为可能，雄心勃勃的人必须决定是否要这样做。1990年选择物理学而非华尔街的物理学家做出了1960年物理学家不必考虑的牺牲。&lt;/p&gt;&#xA;&lt;p&gt;这个观点甚至流回了大公司。大公司的CEO现在比以前赚得更多，我认为很大程度上原因是因为声望。1960年，公司CEO拥有巨大的声望。他们是镇上唯一经济游戏的赢家。但如果他们现在赚得像当时一样少，以实际美元计算，与专业运动员和从初创企业和对冲基金赚数百万的奇才相比，他们看起来像小角色。他们不喜欢这个想法，所以他们现在试图尽可能多地获得，这比他们以前得到的要多。[19]&lt;/p&gt;&#xA;&lt;p&gt;与此同时，在经济规模的其他端发生了类似的分化。随着大公司的寡头垄断变得不那么安全，它们越来越不能将成本转嫁给客户，因此越来越不愿意为劳动力支付过高。随着由几个大块组成的乐高世界分解成许多不同大小的公司——其中一些在国外——工会越来越难以执行其垄断。结果工人的工资也趋向市场价格。这（不可避免地，如果工会在做他们的工作）趋向于更低。如果自动化减少了对某种工作的需求，可能是戏剧性的。&lt;/p&gt;&#xA;&lt;p&gt;就像中世纪的模型不仅产生经济凝聚力，也产生社会凝聚力一样，其解体带来了社会和经济分化。人们开始穿着和行为不同。后来被称为&amp;quot;创意阶层&amp;quot;的人变得更加流动。不太关心宗教的人感到较少为了面子而去教堂的压力，而非常喜欢它的人选择了越来越丰富多彩的形式。一些人从肉饼换成豆腐，另一些人换成热口袋。一些人从驾驶福特轿车换成驾驶小型进口车，另一些人换成驾驶SUV。上私立学校或希望上私立学校的孩子开始穿着&amp;quot;预科生&amp;rdquo;，想要看起来叛逆的孩子有意识地努力看起来不体面。在一百个方面人们分散开来。[20]&lt;/p&gt;&#xA;&lt;p&gt;将近四十年后，分化仍在增加。它是净好还是净坏？我不知道；这个问题可能无法回答。并不完全是坏的。我们理所当然地认为我们喜欢的分化形式，只担心我们不喜欢的那些。但作为捕捉到中世纪从众主义尾巴的人，我可以告诉你那不是乌托邦。[21]&lt;/p&gt;&#xA;&lt;p&gt;我在这里的目标不是说分化是好是坏，只是解释它为什么发生。随着总体战争和20世纪寡头垄断的向心力力量大部分消失，接下来会发生什么？更具体地说，是否有可能扭转我们看到的一些分化？&lt;/p&gt;&#xA;&lt;p&gt;如果可能，它必须零碎地发生。你不能像最初产生中世纪凝聚力那样重现它。仅仅为了引发更多的民族团结而去战争将是疯狂的。一旦你理解20世纪经济历史在某种意义上是低分辨率的1.0版本的程度，很明显你也不能重现那个。&lt;/p&gt;&#xA;&lt;p&gt;20世纪的凝聚力至少在某种意义上是自然发生的。战争主要是由于外部力量，乐高经济是一个进化阶段。如果你现在想要凝聚力，你必须故意诱导它。而且如何做并不明显。我怀疑我们最多能做到的是处理分化的症状。但这可能就足够了。&lt;/p&gt;&#xA;&lt;p&gt;人们最近最担心的分化形式是经济不平等，如果你想消除这一点，你面对的是自石器时代以来一直运作的真正强大的逆风。技术。&lt;/p&gt;&#xA;&lt;p&gt;技术是一个杠杆。它放大工作。杠杆不仅变得越来越长，而且其增长速度本身也在增加。&lt;/p&gt;&#xA;&lt;p&gt;这反过来意味着人们可以创造的财富量的差异不仅在增加，而且在加速。20世纪中期盛行的异常情况掩盖了这一基本趋势。雄心勃勃的人别无选择，只能加入大型组织，让他们与许多人步调一致——在武装部队是字面意思，在大公司是比喻意义。即使大公司想要按人们的价值比例支付他们，他们也想不到如何做到。但那个约束现在消失了。自从它在20世纪70年代开始侵蚀以来，我们看到了基本力量再次起作用。[22]&lt;/p&gt;&#xA;&lt;p&gt;现在不是每个富人都是通过创造财富致富的，当然。但有相当数量的人是，而鲍莫效应意味着他们所有的同行也被拖累。[23] 只要通过创造财富致富是可能的，经济不平等加剧的默认倾向就会存在。即使你消除所有其他致富方式。你可以在底部用补贴，在顶部用税收来缓解这一点，但除非税收高到足以阻止人们创造财富，否则你将永远在生产力增加的差异增加方面打一场必输的战斗。[24]&lt;/p&gt;&#xA;&lt;p&gt;那种分化形式，就像其他形式一样，会在这里留下来。或者更确切地说，回来留下来。没有什么是一成不变的，但分化倾向应该比大多数事物更永恒，恰恰因为它不是由于任何特定原因。它只是回归均值。当洛克菲勒说个人主义已经消失时，他在100年里都是对的。它现在回来了，而且可能会在更长的时间里保持这样。&lt;/p&gt;</description>
    </item>
    <item>
      <title>决心</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/determination/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/determination/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/determination.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;决心&#34;&gt;决心&lt;/h1&gt;&#xA;&lt;h2 id=&#34;决心的剖析&#34;&gt;决心的剖析&lt;/h2&gt;&#xA;&lt;p&gt;2009年9月&lt;/p&gt;&#xA;&lt;p&gt;像所有投资者一样，我们花大量时间试图学习如何预测哪些创业公司会成功。我们可能比大多数投资者花更多时间思考这个问题，因为我们投资最早。预测通常是我们所能依靠的一切。&lt;/p&gt;&#xA;&lt;p&gt;我们很快学到的最重要成功预测因素是决心。起初我们以为可能是智力。每个人都喜欢相信那是创业公司成功的原因。公司成功是因为创始人如此聪明，这是一个更好的故事。传播这些故事的公关人员和记者可能自己都相信。但虽然聪明肯定有帮助，但它不是决定性因素。有很多人和比尔·盖茨一样聪明，却一事无成。&lt;/p&gt;&#xA;&lt;p&gt;在大多数领域，与决心相比，天赋被高估了——部分是因为它构成更好的故事，部分是因为它给旁观者提供了懒惰的借口，部分是因为一段时间后决心开始看起来像天赋。&lt;/p&gt;&#xA;&lt;p&gt;我想不出有任何领域决心被高估了，但决心和天赋的相对重要性确实可能有所不同。在更纯粹的工作类型中，天赋可能更重要，因为这类工作主要是解决单一类型的问题而不是许多不同类型的问题。我怀疑决心在数学中不会像在有组织犯罪中那样让你走得那么远。&lt;/p&gt;&#xA;&lt;p&gt;我通过这个比较并不意味着更多地依赖天赋的工作类型总是更令人钦佩。大多数人会同意擅长数学比记忆长串数字更令人钦佩，尽管后者更多地依赖自然能力。&lt;/p&gt;&#xA;&lt;p&gt;也许人们相信创业创始人通过更聪明而获胜的一个原因是，在技术创业公司中，智力确实比早期类型的公司更重要。要主导互联网搜索，你可能确实需要比主导铁路、酒店或报纸时更聪明一点。这可能是一个持续的趋势。但即使在最高科技产业中，成功仍然更多地依赖于决心而不是智力。&lt;/p&gt;&#xA;&lt;p&gt;如果决心如此重要，我们能分离出它的组成部分吗？有些比其他更重要吗？有些可以培养吗？&lt;/p&gt;&#xA;&lt;p&gt;决心的最简单形式是纯粹的意志力。当你想要某样东西时，你必须拥有它，无论如何。&lt;/p&gt;&#xA;&lt;p&gt;很大一部分意志力必须是天生的，因为常见的家庭情况是，一个兄弟姐妹比另一个拥有更多的意志力。环境可以改变它，但在高端，天性似乎比养育更重要。糟糕的环境可能击垮意志坚强的人的精神，但我认为你无法让意志薄弱的人变得更坚强。&lt;/p&gt;&#xA;&lt;p&gt;然而，仅意志坚强是不够的。你还必须对自己严格要求。意志坚强但自我放纵的人不会被称作有决心。决心意味着你的意志力被自律所平衡。&lt;/p&gt;&#xA;&lt;p&gt;平衡这个词很重要。你越有意志力，你就必须越自律。你的意志越强，除了你自己之外，越没有人能够与你争论。必须有人与你争论，因为每个人都有基本的冲动，如果你的意志多于自律，你就会屈服于它们，最终停留在局部最大化，如药物成瘾。&lt;/p&gt;&#xA;&lt;p&gt;我们可以想象意志和自律像两个手指挤压一颗滑溜的西瓜子。他们挤压得越用力，种子飞得越远，但他们必须同等用力挤压，否则种子就会向侧面旋转。&lt;/p&gt;&#xA;&lt;p&gt;如果这是真的，它就有有趣的含义，因为自律可以培养，并且实际上在个人生命过程中确实倾向于有很大变化。如果决心实际上是意志和自律的产物，那么通过更加自律，你可以变得更有决心。[1]&lt;/p&gt;&#xA;&lt;p&gt;西瓜子模型的另一个后果是，你越有意志力，缺乏自律就越危险。似乎有很多例子证实了这一点。在一些精力非常充沛的人的生活中，你会看到类似机翼颤振的情况，他们在做伟大的工作和完全不做任何事情之间交替。从外部看，这很像双相情感障碍。&lt;/p&gt;&#xA;&lt;p&gt;然而，西瓜子模型至少在一个方面不准确：它是静态的。实际上，缺乏自律的危险随着诱惑而增加。这意味着有趣的是，决心倾向于侵蚀自身。如果你足够决心成就伟大事业，这可能会增加你周围的诱惑数量。除非你按比例变得更加自律，否则意志力将占据上风，你的成就将回归平均水平。&lt;/p&gt;&#xA;&lt;p&gt;这就是为什么莎士比亚的凯撒认为瘦人如此危险。他们不受权力次要好处的诱惑。&lt;/p&gt;&#xA;&lt;p&gt;西瓜子模型意味着可能过于自律。是这样吗？我认为可能有人的意志力被过度的自律压垮，如果他们不对自己那么苛刻，可能会取得更多成就。年轻人有时在老年人失败的地方成功的原因之一是他们没有意识到自己多么无能。这让他们能够进行一种赤字支出。当他们刚开始做某事时，他们高估了自己的成就。但这给了他们继续工作的信心，他们的表现提高了。而眼光更清晰的人会看到他们最初的无能，并可能因继续而气馁。&lt;/p&gt;&#xA;&lt;p&gt;决心的另一个主要组成部分是野心。如果意志力和自律让你到达目的地，野心就是你如何选择目的地。&lt;/p&gt;&#xA;&lt;p&gt;我不确定说野心是决心的组成部分是否完全正确，但它们并非完全正交。如果有人说他们非常有决心去做一件极其容易的事情，这似乎是用词不当。&lt;/p&gt;&#xA;&lt;p&gt;幸运的是，野心似乎相当可塑；你可以做很多事情来增加它。大多数人不知道应该有多大野心，特别是当他们年轻的时候。他们不知道什么是困难的，也不知道自己有能力做什么。这个问题因同龄人少而加剧。有野心的人很少见，所以如果每个人都随机混合在一起，就像人们生命早期那样，那么有野心的人就不会有很多有野心的同龄人。当你把这样的人和其他有野心的人放在一起时，他们会像得到水的濒死植物一样绽放。可能大多数有野心的人都渴望从有野心的同龄人那里得到的那种鼓励，无论他们年龄多大。[2]&lt;/p&gt;&#xA;&lt;p&gt;成就也倾向于增加你的野心。每一步你都获得信心，下次可以伸展得更远。&lt;/p&gt;&#xA;&lt;p&gt;所以总而言之，决心似乎是这样运作的：它包括由意志力平衡的自律，由野心引导。幸运的是，这三个品质中至少有两个可以培养。你可能能够增加一些意志力；你绝对可以学习自律；而几乎每个人在野心方面都几乎是营养不良的。&lt;/p&gt;&#xA;&lt;p&gt;我觉得我现在对决心有了更好的理解。但只是一点点：意志力、自律和野心都是几乎和决心本身一样复杂的概念。[3]&lt;/p&gt;&#xA;&lt;p&gt;还要注意，决心和天赋并不是全部。成就还有第三个因素：你多么喜欢这份工作。如果你真的喜欢做某事，你不需要决心来驱动你；这是你无论如何都会做的事情。但大多数类型的工作都有人不喜欢的方面，因为大多数类型的工作包括为他人做事，而他们的需求所强加的任务不太可能恰好与你想做的事情一致。&lt;/p&gt;&#xA;&lt;p&gt;确实，如果你想创造最多的财富，方法就是更多地关注他们的需求而不是你的兴趣，并用决心来弥补差异。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 宽松地说。我声称西瓜子模型更像是决心与wd^m - k|w - d|^n成正比，其中w是意志，d是自律。&lt;/p&gt;&#xA;&lt;p&gt;[2] 这意味着帮助社会的一个最佳方式是创造将有野心的人聚集在一起的活动和机构。这就像从反应堆中抽出控制棒：他们发出的能量鼓励其他有野心的人，而不是被他们通常围绕的正常人吸收。&lt;/p&gt;&#xA;&lt;p&gt;相反，像一些欧洲国家那样，试图确保你的大学中没有一所显著优于其他大学，可能是一个错误。&lt;/p&gt;&#xA;&lt;p&gt;[3] 例如，意志力显然有两个子组成部分：顽固和精力。仅有第一个产生顽固不前的人。仅有第二个产生轻浮的人。当有意志力的人变老或以其他方式失去精力时，他们倾向于变得仅仅是顽固。&lt;/p&gt;&#xA;&lt;p&gt;感谢Sam Altman、Jessica Livingston和Robert Morris阅读本文的草稿。&lt;/p&gt;&#xA;&lt;p&gt;相关链接：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.aoky.net/articles/paul_graham/determination_italian.htm&#34;&gt;意大利语翻译&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.aoky.net/articles/paul_graham/determination_portuguese.htm&#34;&gt;葡萄牙语翻译&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.aoky.net/articles/paul_graham/determination_russian.htm&#34;&gt;俄语翻译&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>凯特在硅谷看到的</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/kate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/kate/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/kate.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;凯特在硅谷看到的&#34;&gt;凯特在硅谷看到的&lt;/h1&gt;&#xA;&lt;p&gt;2009年8月&lt;/p&gt;&#xA;&lt;p&gt;凯特·库尔托是设计Y Combinator办公室的建筑师。最近我们成功招募她在建筑项目不忙时帮助我们运营YC。虽然她从一开始就听说了很多关于YC的事情，但过去9个月是完全沉浸其中。&lt;/p&gt;&#xA;&lt;p&gt;我在创业世界待了这么久，以至于它对我来说似乎很正常，所以我很好奇听到什么最让她惊讶。这是她的清单：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;有多少创业公司失败。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;凯特原则上知道创业公司风险很大，但她惊讶地看到失败的威胁是多么持续——不仅对于小鱼，甚至对于那些创始人来YC晚餐演讲的著名创业公司也是如此。&lt;/p&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;创业公司的想法变化多大。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;像往常一样，到演示日时，大约一半的创业公司做的事情与他们开始时有显著不同。我们鼓励这样做。创办创业公司就像科学一样，你必须追随真理无论它导向哪里。在世界其他地方，人们不确定想要做什么不会开始事情，一旦开始，他们倾向于继续在初始路径上，即使它是错误的。&lt;/p&gt;&#xA;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;创办创业公司需要多么少的钱。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;在凯特的世界里，一切都是物质的和昂贵的。你几乎无法用创办创业公司的成本翻新一个浴室。&lt;/p&gt;&#xA;&lt;ol start=&#34;4&#34;&gt;&#xA;&lt;li&gt;创始人多么顽强。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;那是她的原话。我同意她，但在她提到这一点之前，我从未意识到这种品质在世界其他大多数地方多么不被欣赏。在大多数组织中，称某人为顽强不会是赞美。&lt;/p&gt;&#xA;&lt;p&gt;这意味着什么，确切地说？它基本上是好斗的小形式。一个顽强的人设法同时既有威胁性又不失尊严。在我看来，这正是一个人在任何类型的工作中想要成为的样子。如果你没有威胁性，你可能没有在做任何新事情，而尊严只是一种装饰。&lt;/p&gt;&#xA;&lt;ol start=&#34;5&#34;&gt;&#xA;&lt;li&gt;硅谷多么技术饱和。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&amp;ldquo;似乎这里的每个人都在这个行业。&amp;ldquo;这不完全是事实，但硅谷和其他地方有质的区别。你倾向于降低声音，因为旁边桌子的人很可能认识你正在谈论的一些人。我在波士顿从未有过这种感觉。好消息是，旁边桌子的人也有可能在某种程度上帮助你。&lt;/p&gt;&#xA;&lt;ol start=&#34;6&#34;&gt;&#xA;&lt;li&gt;YC的演讲者在建议上如此一致。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;实际上，我也注意到了这一点。我总是担心演讲者会通过告诉我们创业公司的事情来让我们处于尴尬位置，但这很少发生。&lt;/p&gt;&#xA;&lt;p&gt;当我问她记得演讲者总是说的具体事情时，她提到：成功的方法是快速推出一些东西，倾听用户，然后迭代；创业公司需要韧性，因为它们总是情绪过山车；大多数风险投资家是羊。&lt;/p&gt;&#xA;&lt;p&gt;我对演讲者多么一贯地倡导快速推出和迭代印象深刻。这是10年前的逆向建议，但现在显然是既定做法。&lt;/p&gt;&#xA;&lt;ol start=&#34;7&#34;&gt;&#xA;&lt;li&gt;成功的创业公司创始人多么随意。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;硅谷大多数著名创始人是你在街上会忽略的人。不仅仅是他们不打扮。他们也没有投射任何权力光环。&amp;ldquo;他们不试图给任何人留下印象。&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;有趣的是，虽然凯特说她永远无法挑选出成功的创始人，但她能认出风险投资家，既通过他们的穿着方式，也通过他们的举止。&lt;/p&gt;&#xA;&lt;ol start=&#34;8&#34;&gt;&#xA;&lt;li&gt;对创始人来说有可以询问建议的人多么重要。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;（我发誓我没有提示这一点。）没有建议&amp;quot;他们会有点迷失。&amp;ldquo;幸运的是，有很多人帮助他们。YC内有帮助其他YC资助创业公司的强大传统。但我们没有发明这个想法：它只是现有硅谷文化的稍微浓缩形式。&lt;/p&gt;&#xA;&lt;ol start=&#34;9&#34;&gt;&#xA;&lt;li&gt;创业公司多么孤独的任务。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;建筑师不断地与他人面对面互动，而做技术创业公司，至少，需要长时间不间断的工作时间。&amp;ldquo;你可以在盒子里做。&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;通过倒置这个清单，我们可以得到&amp;quot;正常&amp;quot;世界的肖像。它充满了人们彼此交谈很多，他们缓慢但和谐地在保守的、昂贵的项目上工作，这些项目的目的地预先决定，他们仔细调整自己的方式以反映他们在等级制度中的位置。&lt;/p&gt;&#xA;&lt;p&gt;这也是对过去的相当准确的描述。所以创业文化可能不仅仅以你期望任何亚文化不同的方式不同，而是一个领先指标。&lt;/p&gt;&#xA;&lt;p&gt;日语翻译&lt;/p&gt;</description>
    </item>
    <item>
      <title>出版</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/publishing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/publishing/</guid>
      <description>&lt;h1 id=&#34;出版&#34;&gt;出版&lt;/h1&gt;&#xA;&lt;p&gt;后 Medium 时代的出版&lt;/p&gt;&#xA;&lt;p&gt;2009年9月&lt;/p&gt;&#xA;&lt;p&gt;从新闻到音乐，各种类型的出版商都对消费者不再为内容付费感到不满。至少，他们是这么看的。&lt;/p&gt;&#xA;&lt;p&gt;实际上，消费者从来没有真正为内容付费，出版商也从来没有真正在销售内容。如果他们销售的是内容，为什么书籍、音乐或电影的价格总是主要取决于格式？为什么更好的内容不会更贵？[1]&lt;/p&gt;&#xA;&lt;p&gt;一本《时代》杂志售价5美元，共58页，每页8.6美分。《经济学人》售价7美元，共86页，每页8.1美分。更好的新闻实际上反而更便宜。&lt;/p&gt;&#xA;&lt;p&gt;几乎所有的出版形式都组织得好像他们销售的是媒介，而内容是无关紧要的。例如，图书出版商根据生产和分销书籍的成本来定价。他们对待书中印刷的文字的方式，就像纺织制造商对待其织物上印刷的图案一样。&lt;/p&gt;&#xA;&lt;p&gt;从经济上讲，纸质媒体从事的是纸张加价的业务。我们都能想象一个老式编辑得到独家新闻时说&amp;quot;这会卖很多报纸！&amp;ldquo;划掉最后的那个S，你就是在描述他们的商业模式。他们现在赚钱较少的原因是人们不再需要那么多纸张。&lt;/p&gt;&#xA;&lt;p&gt;几个月前，我在一家咖啡馆遇到一个朋友。我有一份《纽约时报》，我仍然偶尔在周末购买。当我离开时，我把它给了他，就像我以前无数次在同样情况下做的那样。但这次发生了新的情况。我感到那种当你给别人无价值的东西时的尴尬感觉。&amp;ldquo;呃，你想要一份昨天的新闻打印件吗？&amp;ldquo;我问道。（他不要。）&lt;/p&gt;&#xA;&lt;p&gt;既然媒介正在消失，出版商就没有什么东西可以销售了。有些人认为他们要销售内容——他们实际上一直从事内容业务。但他们不是，而且也不清楚是否有人能做得到。&lt;/p&gt;&#xA;&lt;h2 id=&#34;销售&#34;&gt;销售&lt;/h2&gt;&#xA;&lt;p&gt;一直有人从事销售信息的业务，但这在历史上一直是与出版不同的业务。而向消费者销售信息的业务一直是一个边缘业务。当我还是个孩子的时候，有人过去常常出售包含股票投资建议的通讯，印刷在彩色纸上，使得当时的复印机难以复制。无论是文化上还是经济上，这都是与出版商目前所处的世界不同的世界。&lt;/p&gt;&#xA;&lt;p&gt;人们会为他们认为可以从中赚钱的信息付费。这就是他们为那些股票投资建议通讯付费的原因，也是为什么公司现在为彭博终端和经济学人情报社报告付费的原因。但人们会为其他信息付费吗？历史提供不了多少鼓励。&lt;/p&gt;&#xA;&lt;p&gt;如果观众愿意为更好的内容支付更多费用，为什么没有人已经在向他们销售呢？在物理媒体时代，你没有理由不能这样做。那么，纸质媒体和唱片公司只是忽略了这个机会吗？还是说，它根本不存在？&lt;/p&gt;&#xA;&lt;p&gt;iTunes呢？这不是说明人们会为内容付费吗？嗯，不是真的。iTunes更像是一个收费站而不是商店。苹果控制了进入iPod的默认路径。他们提供一个方便的歌曲列表，每当你选择一首歌时，他们就会向你的信用卡收取一笔小额费用，刚好低于注意力的门槛。基本上，iTunes通过向人们征税而不是向他们出售东西来赚钱。只有当你拥有渠道时才能做到这一点，即使如此，你也从中赚不了多少钱，因为为了有效，收费站必须是可以忽略的。一旦收费站变得令人痛苦，人们开始寻找绕过它的方法，而对于数字内容来说这很容易。&lt;/p&gt;&#xA;&lt;p&gt;数字书籍的情况大致相同。谁控制了设备，谁就制定了条款。让内容尽可能便宜符合他们的利益，而且由于他们拥有渠道，他们可以做很多事情来压低价格。一旦作家意识到他们不需要出版商，价格将进一步下降。对于作家来说，让一本书印刷和分发是一个令人望而生畏的前景，但大多数人可以上传一个文件。&lt;/p&gt;&#xA;&lt;p&gt;软件是一个反例吗？人们为桌面软件支付很多钱，那只是信息。是的，但我认为出版商从软件中学不到多少东西。软件公司可以收取很多费用，因为（a）许多客户是企业，如果他们使用盗版版本会遇到麻烦，（b）尽管在形式上只是信息，但软件被制作者和购买者都视为与歌曲或文章不同类型的东西。Photoshop用户需要Photoshop，就像没有人需要特定的歌曲或文章一样。&lt;/p&gt;&#xA;&lt;p&gt;这就是为什么对于不是软件的信息有一个单独的词&amp;quot;内容&amp;rdquo;。软件是不同的业务。在一些最轻量级的软件中，软件和内容会融合在一起，比如休闲游戏。但那些通常是免费的。要以软件公司的方式赚钱，出版商必须成为软件公司，而作为出版商并不能让他们在这个领域有特别的优势。[2]&lt;/p&gt;&#xA;&lt;p&gt;最有希望的反趋势是付费有线电视频道。人们仍然为那些付费。但广播不是出版：你不是在销售某个东西的副本。这就是电影业没有像新闻和音乐业那样看到收入下降的原因之一。他们只有一只脚踏入出版业。&lt;/p&gt;&#xA;&lt;p&gt;只要电影业能够避免成为出版商，他们就可以避免出版业的问题。但他们能在这方面做得好的程度是有限的。一旦出版——给人们副本——成为分发内容的最自然方式，仅仅因为你赚得更多就坚持旧的分发方式可能就行不通了。如果你的内容的免费副本在网上可以找到，那么你就在与出版的分发形式竞争，这和作为出版商一样糟糕。&lt;/p&gt;&#xA;&lt;p&gt;显然，音乐行业中的一些人希望通过让听众支付订阅费用来事后将其转变为非出版业务。如果他们只是流式传输你可以作为mp3获得的相同文件，这似乎不太可能奏效。&lt;/p&gt;&#xA;&lt;h2 id=&#34;下一步&#34;&gt;下一步&lt;/h2&gt;&#xA;&lt;p&gt;如果你不能销售内容，出版业会怎样？你有两个选择：免费赠送并间接从中赚钱，或者找到方法将其体现在人们愿意为之付费的东西中。&lt;/p&gt;&#xA;&lt;p&gt;第一个可能是大多数当前媒体的未来。免费赠送音乐，通过音乐会和T恤赚钱。免费发表文章，通过广告的十几种变化形式中的一种赚钱。出版商和投资者目前都对广告不看好，但它比他们意识到的潜力更大。&lt;/p&gt;&#xA;&lt;p&gt;我并不是说这个潜力会由现有的参与者实现。从书面文字中赚钱的最佳方式可能需要由不同的人写出不同的文字。&lt;/p&gt;&#xA;&lt;p&gt;很难说电影会发生什么。它们可能演变成广告。或者它们可能回归本源，让去电影院成为一种享受。如果他们让体验足够好，观众可能开始更喜欢它，而不是在家里看盗版电影。[3] 或者电影业可能会枯萎，在其中工作的人将去为游戏开发商工作。&lt;/p&gt;&#xA;&lt;p&gt;我不知道将信息体现在物理形式中会有多大。它可能会出人意料地大；人们高估了物理的东西。至少应该还保留一些印刷书籍的市场。&lt;/p&gt;&#xA;&lt;p&gt;我可以从书架上的书籍看到图书出版的演变。显然在1960年代的某个时候，大型出版公司开始问：我们能把书做得多么便宜，直到人们拒绝购买它们？结果证明是比电话簿差一步。只要不是软的，消费者仍然认为它是一本书。&lt;/p&gt;&#xA;&lt;p&gt;只要购买印刷书籍是阅读它们的唯一方式，这种方式就一直有效。如果印刷书籍是可选的，出版商将不得不更加努力地吸引人们购买它们。应该会有一些市场，但很难预见会有多大，因为它的大小不取决于人们阅读量等宏观趋势，而是取决于个别出版商的独创性。[4]&lt;/p&gt;&#xA;&lt;p&gt;一些杂志可能会通过专注于杂志作为物理对象而蓬勃发展。时尚杂志可以制作得奢华到在数字上难以匹配的程度，至少在一段时间内是这样。但这可能对大多数杂志来说不是一个选择。&lt;/p&gt;&#xA;&lt;p&gt;我不知道未来会是什么样子，但我并不太担心。这种变化往往会创造与它摧毁的一样多的好东西。实际上，真正有趣的问题不是现有形式会发生什么，而是会出现什么新形式。&lt;/p&gt;&#xA;&lt;p&gt;我一直在写现有形式的原因是我不知道会出现什么新形式。虽然我无法预测具体的赢家，但我可以提供一个识别它们的秘诀。当你看到某些东西正在利用新技术给人们一些他们以前无法拥有的东西时，你可能正在看一个赢家。当你看到某些东西只是对新科技做出反应，试图保护某些现有的收入来源时，你可能正在看一个输家。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 我不喜欢&amp;quot;内容&amp;quot;这个词，并试图一段时间内避免使用它，但我必须承认没有其他词能表达正确的意思。&amp;ldquo;信息&amp;quot;太笼统了。&lt;/p&gt;&#xA;&lt;p&gt;具有讽刺意味的是，我不喜欢&amp;quot;内容&amp;quot;的主要原因是这篇论文的论点。这个词暗示着一种未分化的浆状物，但在经济上，出版商和观众都是这样对待它的。内容是你不需要的信息。&lt;/p&gt;&#xA;&lt;p&gt;[2] 某些类型的出版商在尝试进入软件业务时会处于不利地位。例如，唱片公司可能会发现扩展到赌场比扩展到软件更自然，因为经营他们的人会在业务频谱的黑手党一端比不作恶一端更自在。&lt;/p&gt;&#xA;&lt;p&gt;[3] 我再也不在电影院看电影了。对我来说的转折点是他们首先展示的广告。&lt;/p&gt;&#xA;&lt;p&gt;[4] 不幸的是，制作物理上精美的书籍只会是小众中的小众。出版商更可能采取像出售签名副本或封面上有买家照片的版本等权宜之计。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;感谢Michael Arrington、Trevor Blackwell、Steven Levy、Robert Morris和Geoff Ralston阅读本文草稿。&lt;/p&gt;</description>
    </item>
    <item>
      <title>分心</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/distraction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/distraction/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/distraction.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;分心&#34;&gt;分心&lt;/h1&gt;&#xA;&lt;p&gt;2008年5月&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;断开分心说明：本文结尾描述的策略没有奏效。它会工作一段时间，然后我会逐渐发现自己在工作电脑上使用互联网。我现在正在尝试其他策略，但我想这次我会等到确定它们有效之后再写。&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;拖延症依赖分心而存在。大多数人发现只是坐着什么都不做很不舒服；你通过做其他事情来避免工作。&lt;/p&gt;&#xA;&lt;p&gt;因此，克服拖延症的一种方法是让它缺少分心。但这并不像听起来那么简单，因为有人努力让你分心。分心不是你避免的静态障碍，就像你可能避免路上的岩石一样。分心会主动找到你。&lt;/p&gt;&#xA;&lt;p&gt;切斯特菲尔德将污垢描述为错位的物质。同样，分心是在错误时间出现的有吸引力的事物。技术不断被改进以产生越来越多有吸引力的事物。这意味着当我们学会避免一类分心时，新的分心会不断出现，就像耐药细菌一样。&lt;/p&gt;&#xA;&lt;p&gt;例如，电视经过50年的改进，已经达到了视觉鸦片的程度。我13岁时就意识到电视会上瘾，所以我停止观看。但我最近读到，美国人平均每天看4小时电视。他们生命的四分之一。&lt;/p&gt;&#xA;&lt;p&gt;现在电视正在衰落，但只是因为人们找到了更令人上瘾的浪费时间方式。特别危险的是，许多发生在你的电脑上。这并非偶然。越来越多的办公室职员坐在连接到互联网的电脑前，而分心总是向拖延者进化。&lt;/p&gt;&#xA;&lt;p&gt;我记得当电脑至少对我来说 exclusively 用于工作时。我偶尔会拨号服务器获取邮件或ftp文件，但大部分时间我都是离线的。我只能做的是写作和编程。现在我感觉好像有人偷偷把电视放到了我的桌子上。非常令人上瘾的东西只需点击一下即可。在工作中遇到障碍？嗯，我想知道网上有什么新鲜事。最好检查一下。&lt;/p&gt;&#xA;&lt;p&gt;在多年仔细避免像电视、游戏和Usenet这样的经典时间消耗者之后，我仍然成为分心的牺牲品，因为我没有意识到它会进化。曾经安全的东西，使用互联网，逐渐变得越来越危险。有些天我醒来，喝杯茶，查看新闻，然后检查邮件，然后再次查看新闻，然后回复几封邮件，然后突然发现快到午饭时间了，我还没有完成任何真正的工作。而且这种情况开始越来越多地发生。&lt;/p&gt;&#xA;&lt;p&gt;我花了很长的时间才意识到互联网变得多么令人分心，因为问题是间歇性的。我忽略了它，就像你让自己忽略一个只间歇性出现的错误一样。当我在项目中间时，分心并不是真正的问题。当我完成一个项目并决定下一步做什么时，它们总是会咬我。&lt;/p&gt;&#xA;&lt;p&gt;很难注意到这种新型分心的危险的另一个原因是社会习俗还没有赶上它。如果我在沙发上坐了一整个上午看电视，我会很快注意到。这是一个已知的危险信号，就像独自喝酒一样。但使用互联网看起来和感觉上仍然很像工作。&lt;/p&gt;&#xA;&lt;p&gt;然而，最终很明显互联网变得如此令人分心，以至于我必须开始以不同的方式对待它。基本上，我必须在我的已知时间消耗者列表中添加一个新应用程序：Firefox。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;这个问题很难解决，因为大多数人仍然需要互联网来做一些事情。如果你喝得太多，你可以通过完全停止来解决这个问题。但你不能通过停止进食来解决暴饮暴食的问题。我不能完全避免互联网，就像我对以前的时间消耗者所做的那样。&lt;/p&gt;&#xA;&lt;p&gt;起初我尝试规则。例如，我告诉自己每天只会使用互联网两次。但这些方案从来没有长期有效。最终会出现一些事情，需要我更多地使用它。然后我会逐渐滑回我的老路。&lt;/p&gt;&#xA;&lt;p&gt;令人上瘾的东西必须被当作有知觉的对手来对待——就好像你脑子里有个小人总是为你想要停止做的事情编造最合理的论据。如果你给它的留一条路，他会找到它。&lt;/p&gt;&#xA;&lt;p&gt;关键似乎是可见性。大多数坏习惯的最大成分是否认。所以你必须确保你不会仅仅滑入你试图避免的事情中。它必须触发警报。&lt;/p&gt;&#xA;&lt;p&gt;也许从长远来看，处理互联网分心的正确答案将是监视和控制它们的软件。但与此同时，我找到了一个更激烈的解决方案，确实有效：设置一台单独的电脑来使用互联网。&lt;/p&gt;&#xA;&lt;p&gt;我现在在主电脑上保持wifi关闭，除非我需要传输文件或编辑网页，我在房间的另一边有一台单独的笔记本电脑，用来检查邮件或浏览网页。（具有讽刺意味的是，这是Steve Huffman编写Reddit的电脑。当Steve和Alexis为了慈善拍卖他们的旧笔记本电脑时，我为Y Combinator博物馆购买了它们。）&lt;/p&gt;&#xA;&lt;p&gt;我的规则是，我可以花尽可能多的时间上网，只要我在那台电脑上做。事实证明这已经足够了。当我必须坐在房间的另一边检查邮件或浏览网页时，我会更加意识到它。至少在我的情况下，足够意识到每天很难花超过大约一小时上网。&lt;/p&gt;&#xA;&lt;p&gt;而我的主电脑现在 freed 用于工作。如果你尝试这个技巧，当你的电脑断开互联网连接时，你可能会对它的不同感觉感到震惊。对我来说，坐在一台只能用于工作的电脑前是多么陌生，这让我警醒，因为它显示了我一定浪费了多少时间。&lt;/p&gt;&#xA;&lt;p&gt;哇。我在这台电脑上能做的只是工作。好吧，那我最好工作。&lt;/p&gt;&#xA;&lt;p&gt;这是好的部分。你旧有的坏习惯现在帮助你工作。你已经习惯了一连几个小时坐在那台电脑前。但现在你不能浏览网页或检查邮件。你打算怎么办？你不能只是坐在那里。所以你开始工作。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;好的和坏的拖延&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;相关链接：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.aoky.net/articles/paul_graham/distraction_spanish.htm&#34;&gt;西班牙语翻译&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.aoky.net/articles/paul_graham/distraction_arabic.htm&#34;&gt;阿拉伯语翻译&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.aoky.net/articles/paul_graham/distraction_catalan.htm&#34;&gt;加泰罗尼亚语翻译&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.aoky.net/articles/paul_graham/distraction_russian.htm&#34;&gt;俄语翻译&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>分歧</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/divergence/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/divergence/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/divergence.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;分歧&#34;&gt;分歧&lt;/h1&gt;&#xA;&lt;h2 id=&#34;风险投资会成为经济衰退的受害者吗&#34;&gt;风险投资会成为经济衰退的受害者吗？&lt;/h2&gt;&#xA;&lt;p&gt;2008年12月&lt;/p&gt;&#xA;&lt;p&gt;（我最初是应一家制作创业报告的公司的要求写的这篇文章。不幸的是，他们在阅读后认为它太有争议性而决定不包含在内。）&lt;/p&gt;&#xA;&lt;p&gt;在当前的经济衰退期间，风险投资资金可能会像通常在困难时期一样有所减少。但这次的结果可能会有所不同。这次新创公司的数量可能不会减少。这对风险投资来说可能是危险的。&lt;/p&gt;&#xA;&lt;p&gt;当互联网泡沫后风险投资资金枯竭时，新创公司也消失了。2003年成立的新创公司并不多。但新创公司不再像10年前那样依赖风险投资。现在风险投资和新创公司有可能出现分歧。如果他们这样做了，一旦经济好转，他们可能不会重新融合。&lt;/p&gt;&#xA;&lt;p&gt;新创公司不再那么依赖风险投资的原因，是创业行业现在人人都知道的：创办新创公司的成本变得低得多。主要有四个原因：摩尔定律使硬件变得便宜；开源使软件免费；网络使营销和分销免费；更强大的编程语言意味着开发团队可以更小。这些变化将创办新创公司的成本推到了噪音水平。在许多新创公司中——可能是Y Combinator资助的大多数新创公司——最大的支出只是创始人的生活费用。我们有过月收入3000美元就能盈利的新创公司。&lt;/p&gt;&#xA;&lt;p&gt;3000美元作为收入来说是微不足道的。为什么会有人在意一个月收入3000美元的新创公司？因为，虽然作为收入微不足道，但这笔钱可以完全改变新创公司的融资状况。&lt;/p&gt;&#xA;&lt;p&gt;经营新创公司的人总是在心里计算他们有多少&amp;quot;跑道&amp;quot;——银行里的钱用完之前他们还有多长时间，他们要么必须盈利，要么筹集更多资金，要么倒闭。一旦你跨过盈利的门槛，无论多低，你的跑道就变得无限了。这是一种质的变化，就像企业号加速到曲速时星星变成线条并消失一样。一旦你盈利，你就不需要投资者的钱。而且因为互联网新创公司的运营成本变得如此之低，盈利的门槛可能非常低。这意味着许多互联网新创公司不再需要风险投资规模的资金。对许多新创公司来说，风险投资在风险投资的术语中已经从必备品变成了锦上添花。&lt;/p&gt;&#xA;&lt;p&gt;这种变化是在没有人注意的情况下发生的，其影响在很大程度上被掩盖了。正是在互联网泡沫后的低谷期间，创办新创公司变得非常便宜，但很少有人意识到这一点，因为新创公司已经过时了。当新创公司在2005年左右重新流行时，投资者又开始写支票了。虽然创始人可能不再像过去那样需要风险投资的钱，但如果提供，他们愿意接受——部分原因是新创公司接受风险投资资金的传统，部分原因是新创公司，像狗一样，有机会时倾向于进食。只要风险投资家在写支票，创始人就从未被迫探索他们对风险投资的需求有多小的极限。有少数新创公司因为其特殊环境而意外达到这些极限——最著名的是37signals，他们达到极限是因为他们从另一个方向进入新创公司领域：他们从咨询公司开始，所以他们在有产品之前就有收入。&lt;/p&gt;&#xA;&lt;p&gt;风险投资家和创始人就像曾经用螺栓连接在一起的两个组件。大约在2000年，螺栓被移除了。因为到目前为止，这些组件一直受到相同力的作用，它们似乎仍然连接在一起，但实际上一个只是放在另一个上面。剧烈的冲击会使它们飞散。而当前的经济衰退可能是那种冲击。&lt;/p&gt;&#xA;&lt;p&gt;由于Y Combinator在谱系极端端的位置，我们会是第一个看到创始人和投资者分离迹象的，而我们确实看到了。例如，虽然股市崩盘似乎确实使投资者更加谨慎，但它似乎并没有对想要创办新创公司的人数产生任何影响。我们每6个月接受一次资金申请。当前资金周期的申请在10月17日截止，那是在市场暴跌之后，即使如此，我们收到的申请数量创纪录，比一年前的同一周期增长了40%。&lt;/p&gt;&#xA;&lt;p&gt;如果经济继续恶化，一年后情况可能会有所不同，但到目前为止，潜在创始人的兴趣丝毫没有减弱。这与2001年的情况不同。那时潜在创始人中有一种普遍的感觉，认为新创公司时代已经结束，应该去读研究生。这次没有发生这种情况，部分原因是即使在糟糕的经济中，建立一个月收入3000美元的东西也不是那么难。如果投资者停止写支票，谁会在乎呢？&lt;/p&gt;&#xA;&lt;p&gt;在我们资助的现有新创公司的态度中，我们也看到了创始人和投资者之间分歧的迹象。我最近和一家公司交谈，他们在最后一刻因为投资者认为占上风时破坏交易的琐事而导致一轮融资失败——关于创始人是否正确提交了83(b)表格的不确定性，如果你能相信的话。然而，这家新创公司显然会成功：他们的流量和收入图表看起来就像一架起飞的喷气式飞机。所以我问他们是否希望我介绍他们给更多投资者。令我惊讶的是，他们说不用——他们刚刚花了四个月时间与投资者打交道，现在他们不必这样，实际上快乐得多。他们有一个朋友想用投资者的钱雇用，现在他们不得不推迟。但除此之外，他们觉得银行里有足够的资金可以支撑到盈利。为了确保，他们正在搬到一个更便宜的公寓。在这样的经济中，我敢打赌他们得到了不错的交易。&lt;/p&gt;&#xA;&lt;p&gt;我从最近交谈过的几位YC创始人那里检测到了这种&amp;quot;投资者不值得麻烦&amp;quot;的氛围。最近（夏季）周期的至少一家新创公司可能甚至不会筹集天使资金，更不用说风险投资。Ticketstumbler凭借Y Combinator的15,000美元投资实现了盈利，他们希望不需要更多。这甚至让我们都感到惊讶。虽然YC基于创办新创公司成本低的理念，但我们从未预料到创始人会仅凭YC资金就能成功发展新创公司。&lt;/p&gt;&#xA;&lt;p&gt;如果创始人认为风险投资不值得麻烦，这对风险投资家来说可能是坏事。当经济在几年后反弹，他们准备好再次写支票时，他们可能会发现创始人已经转向其他方向了。&lt;/p&gt;&#xA;&lt;p&gt;有一个创始人社区，就像有一个风险投资社区一样。他们都相互认识，技术在他们之间迅速传播。如果一个尝试新的编程语言或新的托管提供商并获得良好结果，6个月后一半的人都在使用它。融资也是如此。现在的创始人一代想从风险投资家那里筹集资金，特别是红杉资本，因为拉里和谢尔盖从风险投资家那里拿钱，特别是红杉资本。想象一下，如果下一个热门公司完全不接受风险投资，这会对风险投资业务造成什么影响。&lt;/p&gt;&#xA;&lt;p&gt;风险投资家认为他们在玩零和游戏。事实上，甚至不是那样。如果你把一笔交易输给了Benchmark，你就输了那笔交易，但风险投资作为一个行业仍然赢。如果你把一笔交易输给了None，所有风险投资家都输了。&lt;/p&gt;&#xA;&lt;p&gt;这次经济衰退可能与互联网泡沫后的那次不同。这次创始人可能会继续创办新创公司。如果他们这样做了，风险投资家将不得不继续写支票，否则他们可能变得无关紧要。&lt;/p&gt;&#xA;&lt;p&gt;感谢Sam Altman、Trevor Blackwell、David Hornik、Jessica Livingston、Robert Morris和Fred Wilson阅读本文草稿。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;相关链接：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.aoky.net/articles/paul_graham/divergence_russian.htm&#34;&gt;俄语翻译&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>创业之前</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/before/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/before/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/before.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;创业之前&#34;&gt;创业之前&lt;/h1&gt;&#xA;&lt;p&gt;想要创业吗？获得Y Combinator的资助。&lt;/p&gt;&#xA;&lt;p&gt;2014年10月&lt;/p&gt;&#xA;&lt;p&gt;（本文改编自Sam Altman在斯坦福大学创业课程中的客座讲座。主要面向大学生，但其中大部分内容也适用于其他年龄的潜在创始人。）&lt;/p&gt;&#xA;&lt;p&gt;有孩子的一个好处是，当你需要给出建议时，你可以问自己&amp;quot;我会告诉我的孩子什么？&amp;ldquo;我的孩子还小，但我可以想象如果他们在上大学，我会告诉他们关于创业的事情，这就是我现在要告诉你们的。&lt;/p&gt;&#xA;&lt;p&gt;创业公司非常违反直觉。我不确定为什么。也许只是因为关于它们的知识还没有渗透到我们的文化中。但无论出于什么原因，创办创业公司是一项你不能总是相信直觉的任务。&lt;/p&gt;&#xA;&lt;p&gt;在这方面就像滑雪。当你第一次尝试滑雪时，如果你想减速，你的本能是向后倾斜。但如果你在滑雪板上向后倾斜，你会失去控制地向山下滑去。所以学习滑雪的一部分就是学会抑制这种冲动。最终你会养成新的习惯，但一开始需要有意识的努力。一开始当你开始下山时，有一堆事情你试图记住。&lt;/p&gt;&#xA;&lt;p&gt;创业公司像滑雪一样不自然，所以创业公司也有类似的清单。在这里我将给你第一部分——如果你想为创业做准备，需要记住的事情。&lt;/p&gt;&#xA;&lt;h2 id=&#34;违反直觉&#34;&gt;违反直觉&lt;/h2&gt;&#xA;&lt;p&gt;清单上的第一点是我已经提到的事实：创业公司如此奇怪，如果你相信直觉，你会犯很多错误。如果你只知道这一点，你至少在犯错误之前会停下来。&lt;/p&gt;&#xA;&lt;p&gt;当我运行Y Combinator时，我经常开玩笑说我们的功能是告诉创始人他们会忽略的事情。这是真的。一批又一批，YC合伙人警告创始人他们即将犯的错误，创始人忽略它们，然后一年后回来说&amp;quot;我希望我们听了。&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;为什么创始人忽略合伙人的建议？嗯，这就是违反直觉想法的问题：它们与你的直觉相矛盾。它们看起来是错的。所以你的第一反应当然是忽视它们。事实上，我开玩笑的描述不仅仅是Y Combinator的诅咒，也是其存在理由的一部分。如果创始人的直觉已经给了他们正确的答案，他们就不需要我们了。你只需要别人给你让你惊讶的建议。这就是为什么有很多滑雪教练而没有多少跑步教练。&lt;/p&gt;&#xA;&lt;p&gt;然而，你可以相信你对他人的直觉。事实上，年轻创始人最常见的错误之一就是不够相信这一点。他们与看起来令人印象深刻的人交往，但对他们个人感觉有些不安。后来当事情爆发时他们说&amp;quot;我知道他有什么不对劲，但我忽略了，因为他看起来如此令人印象深刻。&amp;quot;&lt;/p&gt;&#xA;&lt;p&gt;如果你正在考虑与某人合作——作为联合创始人、员工、投资者或收购者——而你对他们有不祥的预感，相信你的直觉。如果某人看起来滑头、虚假或是个混蛋，不要忽视。&lt;/p&gt;&#xA;&lt;p&gt;这是一个放纵自己有益处的情况。与你真正喜欢的人一起工作，而且你已经认识足够长的时间以确保。&lt;/p&gt;&#xA;&lt;h2 id=&#34;专业知识&#34;&gt;专业知识&lt;/h2&gt;&#xA;&lt;p&gt;第二个违反直觉的观点是，了解很多关于创业公司的知识并不那么重要。在创业公司中成功的方法不是成为创业公司的专家，而是成为你的用户和为他们解决的问题的专家。马克·扎克伯格成功不是因为他是一位创业公司专家。尽管他完全是个创业新手，他还是成功了，因为他非常了解他的用户。&lt;/p&gt;&#xA;&lt;p&gt;如果你对如何进行天使轮融资一无所知，不要为此感到难过。那种事情你需要时可以学习，做完后就忘记。&lt;/p&gt;&#xA;&lt;p&gt;事实上，我担心不仅没有必要详细学习创业公司的机制，甚至可能有些危险。如果我遇到一个本科生，他对可转换票据、员工协议和（天哪）FF级股票了如指掌，我不会认为&amp;quot;这是一个远远领先于同龄人的人&amp;quot;。这会敲响警钟。因为年轻创始人的另一个特征性错误是走过场，假装创办创业公司。他们编造一些听起来合理的想法，以高估值筹集资金，租一个很酷的办公室，雇佣一群人。从外面看起来，这似乎就是创业公司所做的。但在租一个很酷的办公室和雇佣一群人之后的下一步是：逐渐意识到他们完蛋了，因为在模仿创业公司的所有外在形式时，他们忽略了唯一真正重要的事情：制造人们想要的东西。&lt;/p&gt;&#xA;&lt;h2 id=&#34;游戏&#34;&gt;游戏&lt;/h2&gt;&#xA;&lt;p&gt;我们看到这种情况经常发生，以至于我们给它起了个名字：过家家。最终我意识到为什么会这样。年轻创始人走过场创办创业公司的原因是因为这是他们到目前为止一生中被训练要做的事情。想想你必须做什么才能进入大学，例如。课外活动，检查。即使在大学课程中，大部分工作也像跑步圈一样人为。&lt;/p&gt;&#xA;&lt;p&gt;我不是因为教育系统这样而攻击它。当你被教导某些东西时，你做的事情总会有一定程度的虚假性，如果你衡量他们的表现，人们不可避免地会利用这种差异，以至于你衡量的大部分东西都是虚假性的产物。&lt;/p&gt;&#xA;&lt;p&gt;我承认我在大学时自己也这样做过。我发现很多课程中可能只有20或30个想法是适合作为好考试题的形状。我在这些课程中准备考试的方法不是（顺便说）掌握课程中教授的材料，而是列出潜在的考试题并提前想出答案。当我走进期末考试时，我主要会感到好奇我的哪些问题会出现在考试中。这就像一场游戏。&lt;/p&gt;&#xA;&lt;p&gt;在一生中被训练玩这样的游戏后，年轻创始人创办创业公司的第一反应是试图找出赢得这个新游戏的技巧，这并不奇怪。由于筹资似乎是创业公司成功的衡量标准（另一个经典的新手错误），他们总是想知道说服投资者的技巧是什么。我们告诉他们说服投资者的最好方法是创办一个真正做得好的创业公司，意思是快速增长，然后简单地告诉投资者。然后他们想知道快速增长的技巧是什么。我们必须告诉他们说最好的方法就是制造人们想要的东西。&lt;/p&gt;&#xA;&lt;p&gt;YC合伙人与年轻创始人的许多对话都以创始人问&amp;quot;我们如何&amp;hellip;&amp;ldquo;开始，合伙人回答&amp;quot;只要&amp;hellip;&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;为什么创始人总是把事情搞得这么复杂？我意识到，原因是他们在寻找技巧。&lt;/p&gt;&#xA;&lt;p&gt;所以这是关于创业公司要记住的第三个违反直觉的事情：创办创业公司是钻营系统停止工作的地方。如果你去大公司工作，钻营系统可能继续有效。取决于公司的糟糕程度，你可以通过讨好合适的人，给人留下生产力印象等方式成功。但这在创业公司中不起作用。没有老板可以欺骗，只有用户，而用户关心的只是你的产品是否做他们想要的事情。创业公司像物理一样非个人化。你必须制造人们想要的东西，你只有在做到这一点的情况下才能繁荣。&lt;/p&gt;&#xA;&lt;p&gt;危险的是，在一定程度上伪装对投资者确实有效。如果你非常擅长听起来像你知道自己在说什么，你至少可以欺骗投资者进行一轮甚至可能是两轮融资。但这不符合你的利益。公司最终注定要失败。你做的只是在下跌的过程中浪费自己的时间。&lt;/p&gt;&#xA;&lt;p&gt;所以停止寻找技巧。创业公司中确实有技巧，就像任何领域一样，但它们比解决真正问题的重要性低一个数量级。一个对筹资一无所知但制造了用户喜爱的产品的创始人，会比一个知道书中所有技巧但使用量图表平坦的创始人更容易筹集资金。更重要的是，制造了用户喜爱产品的创始人是在筹集资金后能够继续成功的人。&lt;/p&gt;&#xA;&lt;p&gt;虽然在某种意义上这是个坏消息，因为你被剥夺了最强大的武器之一，但我觉得当你开始创业公司时，钻营系统停止工作是令人兴奋的。令人兴奋的是，世界上确实存在通过做好工作获胜的地方。想象一下，如果世界都像学校和大公司那样，你要么不得不在虚假的事情上花费大量时间，要么输给这样做的人，那会多么令人沮丧。&lt;/p&gt;&#xA;&lt;p&gt;如果我在大学时意识到现实世界中有些地方钻营系统比其他地方重要性低，有些地方几乎不重要，我会很高兴。但确实存在，这种差异是你在思考未来时要考虑的最重要事情之一。你在每种类型的工作中如何获胜，你希望通过做什么获胜？&lt;/p&gt;&#xA;&lt;h2 id=&#34;全部消耗&#34;&gt;全部消耗&lt;/h2&gt;&#xA;&lt;p&gt;这带给我们第四个违反直觉的观点：创业公司会消耗你的一切。如果你创办一家创业公司，它会在你无法想象的程度上掌控你的生活。如果你的创业公司成功，它会在很长一段时间内掌控你的生活：至少几年，也许是十年，也许是你整个工作生涯。所以这里确实有机会成本。&lt;/p&gt;&#xA;&lt;p&gt;拉里·佩奇可能看起来过着令人羡慕的生活，但其中有些方面并不令人羡慕。基本上他在25岁时开始尽可能快地奔跑，在他看来，从那时起他就一直没有停下来喘口气。谷歌帝国每天都会发生只有CEO才能处理的新问题，他作为CEO必须处理它。即使他只休假一周，也会积累整整一周的问题积压。他必须毫无怨言地忍受这一点，部分原因是作为公司的父亲，他永远不能表现出恐惧或软弱，部分原因是亿万富翁如果谈论生活困难，得到的同情少于零。这有一个奇怪的副作用，即成功创业公司创始人的难度几乎被所有人隐藏，除了那些经历过的人。&lt;/p&gt;&#xA;&lt;p&gt;Y Combinator现在已经资助了几家可以称为巨大成功的公司，在每一种情况下，创始人说的话都一样。它永远不会变得更容易。问题的性质发生了变化。你在担心伦敦办公室的建设延误，而不是工作室公寓里坏的空调。但担忧的总量永远不会减少；如果有的话，它增加了。&lt;/p&gt;&#xA;&lt;p&gt;创办成功的创业公司类似于生孩子，就像你按下的一个按钮，会不可逆转地改变你的生活。虽然生孩子真的很美好，但有很多事情在你有孩子之前做比之后做更容易。其中许多事情会让你在你有孩子时成为更好的父母。由于你可以推迟按按钮一段时间，大多数富裕国家的人都会这样做。&lt;/p&gt;&#xA;&lt;p&gt;然而当涉及到创业公司时，很多人似乎认为他们应该在大学时创办它们。你疯了吗？大学在想什么？他们不遗余力地确保学生避孕用品供应充足，但却在左右设置创业项目和创业孵化器。&lt;/p&gt;&#xA;&lt;p&gt;公平地说，大学在这里别无选择。很多新生对创业公司感兴趣。大学，至少事实上，被期望为他们准备职业生涯。所以想创办创业公司的学生希望大学能教他们关于创业公司的知识。无论大学能否做到这一点，都有一些压力声称他们可以，以免他们失去申请者到其他确实这样做的大学。&lt;/p&gt;&#xA;&lt;p&gt;大学能教学生关于创业公司的知识吗？是的，也不是。他们可以教学生关于创业公司的知识，但正如我之前解释的，这不是你需要知道的知识。你需要学习的是你自己用户的需求，而你直到真正创办公司才能做到这一点。所以创办创业公司本质上是一件只有通过做才能真正学会的事情。而在大学里不可能做到这一点，原因我刚才解释过：创业公司会消耗你的一切。作为学生，你不能真正地创办创业公司，因为如果你真正地创办创业公司，你就不再是学生了。你可能名义上还是学生一段时间，但你甚至也不会是那样很久。&lt;/p&gt;&#xA;&lt;p&gt;考虑到这种二分法，你应该走哪条路？做一个真正的学生，不创办创业公司，还是创办一个真正的创业公司，不做学生？我可以为你回答这个问题。不要在大学创办创业公司。如何创办创业公司只是你试图解决的更大问题的一个子集：如何过上美好的生活。虽然创办创业公司对很多雄心勃勃的人来说可以成为美好生活的一部分，但20岁不是最佳时间。创办创业公司就像 brutally fast depth-first search（一种非常快速的深度优先搜索）。大多数人在20岁时应该仍然在进行广度搜索。&lt;/p&gt;&#xA;&lt;p&gt;你在20出头时可以做一些在之前或之后都不能做得好的事情，比如一时冲动深入项目，没有截止日期感地超级便宜旅行。对于没有雄心的人来说，这种事情是可怕的&amp;quot;发射失败&amp;quot;，但对于有雄心的人来说，它可以是一种无与伦比的宝贵探索。如果你在20岁时创办创业公司并且足够成功，你永远不会再有机会做这些事情。&lt;/p&gt;&#xA;&lt;p&gt;马克·扎克伯格永远不会有机会在国外闲逛。他可以做大多数人不能做的事情，比如包租飞机飞到国外。但成功从他生活中带走了很多偶然性。Facebook在操控他就像他在操控Facebook一样。虽然被一个你认为是你终生工作的项目所控制可以很酷，但偶然性也有优势，尤其是在生活早期。除其他外，它给你更多选择你终生工作的选项。&lt;/p&gt;&#xA;&lt;p&gt;这里甚至没有权衡。如果你放弃在20岁时创办创业公司，你不会牺牲任何东西，因为如果你等待，你更有可能成功。在不太可能的情况下，如果你20岁时你的一个副项目像Facebook一样起飞，你将面临选择是否继续运行它，这可能合理。但创业公司起飞的通常方式是创始人让它们起飞，而在20岁时这样做是 gratuitously stupid（毫无意义的愚蠢）。&lt;/p&gt;&#xA;&lt;h2 id=&#34;尝试&#34;&gt;尝试&lt;/h2&gt;&#xA;&lt;p&gt;你应该在任何年龄都这样做吗？我意识到我把创业公司描述得相当难。如果我没有，让我再试一次：创办创业公司真的很难。如果太难怎么办？你怎么知道你是否能应对这个挑战？&lt;/p&gt;&#xA;&lt;p&gt;答案是第五个违反直觉的观点：你无法判断。到目前为止，你的生活可能给了你一些关于如果你试图成为数学家或职业足球运动员你的前景如何的想法。但除非你过着非常奇怪的生活，否则你没有做过太多像创业创始人的事情。创办创业公司会改变你很多。所以你试图估计的不仅仅是你现在是什么，而是你能成长为什么，谁能做到这一点？&lt;/p&gt;&#xA;&lt;p&gt;在过去的9年里，我的工作是预测人们是否有能力创办成功的创业公司。很容易看出他们有多聪明，大多数读这篇文章的人都会超过那个门槛。困难的部分是预测他们会变得多么坚韧和雄心勃勃。可能没有人有更多经验试图预测这一点，所以我可以告诉你专家能对它了解多少，答案是：不多。我学会对每批创业公司中哪些会成为明星保持完全开放的心态。&lt;/p&gt;&#xA;&lt;p&gt;创始人有时认为他们知道。有些人到达时确信他们会像迄今为止他们生活中面对过的所有（少数、人为、简单的）测试一样轻松通过YC。其他人到达时想知道他们是如何进入的，希望YC不会发现导致接受他们的任何错误。但创始人的初始态度与他们公司的表现之间几乎没有相关性。&lt;/p&gt;&#xA;&lt;p&gt;我读到军队中也是如此—— swaggering recruits（神气活现的新兵）并不比安静的新兵更有可能变得真正坚韧。可能出于同样的原因：所涉及的测试与他们之前生活中的测试如此不同。&lt;/p&gt;&#xA;&lt;p&gt;如果你对创办创业公司绝对恐惧，你可能不应该这样做。但如果你只是不确定你是否能胜任，唯一的发现方法就是尝试。只是不是现在。&lt;/p&gt;&#xA;&lt;h2 id=&#34;想法&#34;&gt;想法&lt;/h2&gt;&#xA;&lt;p&gt;所以如果你想有一天创办创业公司，你在大学应该做什么？你最初只需要两样东西：一个想法和联合创始人。获得两者的方法是一样的。这带给我们第六个也是最后一个违反直觉的观点：获得创业想法的方法不是试图思考创业想法。&lt;/p&gt;&#xA;&lt;p&gt;我为此写了一整篇文章，所以我不在这里重复所有内容。但简短的版本是，如果你有意识地努力思考创业想法，你想出的想法不仅会很糟糕，而且听起来合理，这意味着你在意识到它们很糟糕之前会在它们身上浪费大量时间。&lt;/p&gt;&#xA;&lt;p&gt;想出好的创业想法的方法是退后一步。不要有意识地努力思考创业想法，而是将你的思想变成那种在没有有意识努力的情况下创业想法会在其中形成的类型。事实上，如此无意识地，你一开始甚至没有意识到它们是创业想法。&lt;/p&gt;&#xA;&lt;p&gt;这不仅是可能的，而且正是苹果、雅虎、谷歌和Facebook的起步方式。这些公司最初甚至都不是打算成为公司。它们都只是副项目。最好的创业公司几乎必须作为副项目开始，因为伟大的想法往往是如此异常，以至于你的有意识思维会拒绝它们作为公司的想法。&lt;/p&gt;</description>
    </item>
    <item>
      <title>创业公司真实情况</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/really/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/really/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/really.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;创业公司真实情况&#34;&gt;创业公司真实情况&lt;/h1&gt;&#xA;&lt;p&gt;2009年10月&lt;/p&gt;&#xA;&lt;p&gt;（本文源于2009年创业学校的演讲。）&lt;/p&gt;&#xA;&lt;p&gt;我不确定在创业学校上该讲什么，所以我决定问问我们资助的创业公司的创始人。我还没有写过什么？&lt;/p&gt;&#xA;&lt;p&gt;我处于一个不寻常的位置，能够测试我写的关于创业公司的文章。我希望关于其他主题的文章是正确的，但我没有办法测试它们。关于创业公司的文章每6个月由大约70人测试。&lt;/p&gt;&#xA;&lt;p&gt;所以我给所有创始人发了一封电子邮件，询问他们在创业过程中让他们感到惊讶的事情。这相当于问我哪里错了，因为如果我解释得足够好，任何事都不应该让他们感到惊讶。&lt;/p&gt;&#xA;&lt;p&gt;我很自豪地报告，我收到一个回应说：最让我惊讶的是，一切都相当可预测！坏消息是，我收到了100多个其他回应，列出了他们遇到的惊讶。&lt;/p&gt;&#xA;&lt;p&gt;回应中有非常清晰的模式；令人惊讶的是，多个人经常因为完全相同的事情而感到惊讶。以下是最大的几个：&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-谨慎选择联合创始人&#34;&gt;1. 谨慎选择联合创始人&lt;/h2&gt;&#xA;&lt;p&gt;这是最多创始人提到的惊讶。有两种回应：你必须小心选择谁作为你的联合创始人，而且你必须努力维护你们的关系。&lt;/p&gt;&#xA;&lt;p&gt;人们在选择联合创始人时希望自己更关注的是品格和承诺，而不是能力。这对于失败的创业公司尤其如此。教训是：不要选择会退缩的联合创始人。&lt;/p&gt;&#xA;&lt;p&gt;一个典型的回应是：除非你与某人在创业公司一起工作过，否则你没有看到过他们的真实面目。品格如此重要的原因是它在大多数情况下受到更严峻的考验。一个创始人明确表示创始人之间的关系比能力更重要：我宁愿与朋友一起创办创业公司，也不愿与产出更高的陌生人一起。创业公司如此艰难和情感化，以至于友谊带来的情感和社会支持超过了失去的额外产出。我们很早就学到了这个教训。如果你看YC申请表，关于创始人的承诺和关系的问题比他们能力的问题多。&lt;/p&gt;&#xA;&lt;p&gt;成功的创业公司创始人较少谈论选择联合创始人，更多谈论他们如何努力维护他们的关系。让我感到惊讶的一件事是创业公司创始人之间的关系如何从友谊变成婚姻。我与我的联合创始人的关系从仅仅是朋友变成整天见面，为财务烦恼和清理烂摊子。而创业公司是我们的孩子。我曾经这样总结：&amp;ldquo;就像我们结婚了，但我们没有性关系。&amp;ldquo;好几个人用了&amp;quot;结婚&amp;quot;这个词。这是一种比你通常在同事之间看到的更强烈的关系——部分是因为压力大得多，部分是因为最初创始人就是整个公司。所以这种关系必须用优质材料建造并仔细维护。这是一切的基础。&lt;/p&gt;&#xA;&lt;h2 id=&#34;2-创业公司占据你的生活&#34;&gt;2. 创业公司占据你的生活&lt;/h2&gt;&#xA;&lt;p&gt;正如联合创始人之间的关系比通常同事之间的关系更强烈一样，创始人和公司之间的关系也是如此。经营创业公司不像有工作或当学生，因为它永远不会停止。这对大多数人的经验来说是如此陌生，以至于他们直到发生才理解。[1]&lt;/p&gt;&#xA;&lt;p&gt;我没有意识到我会几乎每一刻醒着的时间都在工作或思考我们的创业公司。当这是你的公司而不是为别人的公司工作时，你进入了一种完全不同的生活方式。创业公司的快节奏加剧了这一点，这使得时间似乎变慢了：让我感到最惊讶的是一个人对时间的看法如何转变。在我们的创业公司工作时，我记得时间似乎拉长了，以至于一个月是一个巨大的间隔。在最好的情况下，完全沉浸可能令人兴奋：令人惊讶的是你被创业公司消耗了多少，你日夜思考它，但一次都不觉得像&amp;quot;工作&amp;rdquo;。不过我必须说，这句话是我们今年夏天资助的一个人说的。几年后他可能不会听起来那么精神。&lt;/p&gt;&#xA;&lt;h2 id=&#34;3-这是情感过山车&#34;&gt;3. 这是情感过山车&lt;/h2&gt;&#xA;&lt;p&gt;这是另一个人感到惊讶的事情。起伏比他们准备的更极端。&lt;/p&gt;&#xA;&lt;p&gt;在创业公司，事情在某一刻看起来很棒，下一刻就无望了。我说下一刻，是指几小时后。情感的起伏对我来说是最大的惊讶。有一天，我们会把自己想象成下一个谷歌，梦想购买岛屿；第二天，我们会思考如何让我们所爱的人知道我们的彻底失败；如此反复。显然，困难的部分是低谷。对于许多创始人来说，这是大的惊讶：在困难的日子或周里保持每个人的积极性是多么困难，即低谷可以有多低。过了一段时间，如果你没有显著的成功来让你振作，它会让你筋疲力尽：你对创始人的最基本建议是&amp;quot;只是不要死&amp;rdquo;，但在缺乏令人解脱的成功的情况下保持公司运转的能量不是免费的；它是从创始人自身抽取的。你能承受的是有限度的。如果你到了不能再工作的地步，这不是世界末日。许多著名创始人在路上也有一些失败。&lt;/p&gt;&#xA;&lt;h2 id=&#34;4-它可以是有趣的&#34;&gt;4. 它可以是有趣的&lt;/h2&gt;&#xA;&lt;p&gt;好消息是，高潮也非常高。几个创始人说，做创业公司最让他们惊讶的是它多么有趣：我认为你遗漏了做创业公司是多么有趣。我在工作中比我几乎所有没有开公司的朋友都更有成就感。他们最喜欢的是自由：令我惊讶的是，做一些具有挑战性和创造性的事情，一些我相信的事情，感觉比以前做的雇佣枪手式工作好多少。我知道它会感觉更好；令人惊讶的是好多少。坦率地说，如果我在这里误导了人们，我不急于纠正。我宁愿让每个人都认为创业公司是严峻和艰难的，也不愿创始人期望它有趣，几个月后说&amp;quot;这应该是有趣的？你在开玩笑吗？&amp;quot;&lt;/p&gt;&#xA;&lt;p&gt;事实是，对大多数人来说不会有趣。我们在申请过程中试图做的大部分事情是筛选出不会喜欢它的人，既为我们自己也为他们。&lt;/p&gt;&#xA;&lt;p&gt;最好的说法可能是，创业公司有趣的方式就像生存训练课程如果你是那种人会那样有趣。也就是说，如果你不是那种人，就一点也不有趣。&lt;/p&gt;&#xA;&lt;h2 id=&#34;5-毅力是关键&#34;&gt;5. 毅力是关键&lt;/h2&gt;&#xA;&lt;p&gt;许多创始人对毅力在创业公司中的重要性感到惊讶。这既是负面也是正面的惊讶：他们对所需的毅力程度感到惊讶，每个人都说你必须多么坚定和有韧性，但经历它让我意识到所需的坚定仍然被低估了。也对毅力单独能够消除障碍的程度感到惊讶：如果你有毅力，即使是看起来超出你控制的问题（即移民）似乎也能自行解决。几个创始人特别提到毅力比智力重要多少。我一再惊讶于毅力比原始智力重要多少。这不仅适用于智力，也适用于一般能力，这就是为什么那么多人在选择联合创始人时说品格更重要。&lt;/p&gt;&#xA;&lt;h2 id=&#34;6-长期思考&#34;&gt;6. 长期思考&lt;/h2&gt;&#xA;&lt;p&gt;你需要毅力，因为一切都比你预期的需要更长时间。许多人对此感到惊讶。我一直对一切可能需要多长时间感到惊讶。假设你的产品没有经历很少有产品经历的爆炸性增长，从开发到交易（尤其是交易）的一切似乎总是比我想象的要长2-3倍。&lt;/p&gt;&#xA;&lt;p&gt;创始人感到惊讶的一个原因是，因为他们工作得快，他们期望其他人也这样。在创业公司触及更官僚的组织，如大公司或风险投资基金的每一点，都有令人震惊的剪切应力。这就是为什么融资和企业市场杀死和伤害这么多创业公司的原因。[2]&lt;/p&gt;&#xA;&lt;p&gt;但我认为大多数创始人对所需时间感到惊讶的原因是他们过于自信。他们认为他们会立即成功，像YouTube或Facebook一样。你告诉他们只有100个成功的创业公司中有1个有这样的轨迹，他们都认为&amp;quot;我们将是那1个&amp;quot;。&lt;/p&gt;&#xA;&lt;p&gt;也许他们会听一个更成功的创始人：进入创业公司之前我没有理解的最重要的事情是毅力是游戏的名称。对于绝大多数变得成功的创业公司，这将是一个非常漫长的旅程，至少3年，可能5年以上。&lt;/p&gt;&#xA;&lt;p&gt;长期思考有积极的一面。不仅仅是你必须屈从于一切都比应该的要花更长时间的事实。如果你耐心地工作，压力更小，你可以做得更好：因为我们放松，做我们做的事情有趣得多。消失的是由不要失败的迫切需求驱动的尴尬紧张能量指导我们的行动。我们可以专注于做对我们公司、产品、员工和客户最好的事情。这就是为什么当你达到拉面盈利时事情变得好得多。你可以转换到不同的工作模式。&lt;/p&gt;&#xA;&lt;h2 id=&#34;7-许多小事&#34;&gt;7. 许多小事&lt;/h2&gt;&#xA;&lt;p&gt;我们经常强调创业公司很少仅仅因为碰上某种神奇的想法而获胜。我认为创始人现在把这个记在脑子里了。但许多人惊讶地发现这也适用于创业公司内部。你必须做许多不同的事情：它更像苦差事而不是光鲜。随机选择的时间片段更可能发现我在瑞典Windows上追踪奇怪的DLL加载错误，或在董事会会议前一天晚上在财务模型Excel电子表格中追踪错误，而不是拥有战略洞察力的辉煌闪光。大多数黑客创始人喜欢把所有时间花在编程上。你不会，除非你失败了。这可以转化为：如果你把所有时间花在编程上，你将会失败。&lt;/p&gt;&#xA;&lt;p&gt;这个原则甚至延伸到编程中。很少有单一的聪明技巧能确保成功：我学会永远不要赌任何一个功能或交易或任何东西能给你带来成功。从来不是单一的东西。一切都只是渐进的，你只需继续做许多这样的事情，直到你碰到什么。即使在聪明的技巧让你发财的罕见情况下，你可能后来才知道：没有所谓的杀手功能。或者至少你不知道它是什么。所以最好的策略是尝试许多不同的事情。不要把所有鸡蛋放在一个篮子里的原因不是通常的原因，即使当你知道哪个篮子最好时也适用。在创业公司中，你甚至不知道那个。&lt;/p&gt;&#xA;&lt;h2 id=&#34;8-从最小化的东西开始&#34;&gt;8. 从最小化的东西开始&lt;/h2&gt;&#xA;&lt;p&gt;许多创始人提到用最简单可能的东西启动是多么重要。此时每个人都知道你应该快速发布和迭代。这在YC几乎是一种口头禅。但即使如此，许多人似乎因为不这样做而受到伤害：构建可以被视为完整应用程序的绝对最小化东西并发布它。&lt;/p&gt;&#xA;&lt;p&gt;为什么人们在第一个版本上花太长时间？主要是骄傲。他们讨厌发布可以更好的东西。他们担心人们会说什么。但你必须克服这个：乍一看做&amp;quot;简单&amp;quot;的事情并不意味着你没有在做有意义、可防御或有价值的事情。不要担心人们会说什么。如果你的第一个版本如此令人印象深刻以至于巨魔不开玩笑，你发布太晚了。[3]&lt;/p&gt;&#xA;&lt;p&gt;一个创始人说这应该是你所有编程的方法，不仅仅是创业公司，我倾向于同意。现在，当编程时，我试图思考&amp;quot;我如何写这个，如果人们看到我的代码，他们会惊讶于代码如此之少和做的事情如此之少？&amp;ldquo;过度工程化是有毒的。不像为了额外学分做额外工作。它更像说一个谎言，然后你必须记住它，以便你不会自相矛盾。&lt;/p&gt;&#xA;&lt;h2 id=&#34;9-吸引用户&#34;&gt;9. 吸引用户&lt;/h2&gt;&#xA;&lt;p&gt;产品开发是与用户的对话，直到你发布才真正开始。在你发布之前，你就像一个警察艺术家在他向证人展示第一版素描之前。&lt;/p&gt;&#xA;&lt;p&gt;快速发布如此重要，以至于最好将你的初始版本视为让用户开始与你交谈的技巧，而不是产品。我学会将创业公司的初始阶段视为一个巨大的实验。所有产品都应被视为实验，那些有市场的产品会极其迅速地显示出有希望的结果。一旦你开始与用户交谈，我保证你会对他们告诉你的事情感到惊讶。当你让客户告诉你他们在追求什么时，他们经常会揭示惊人的细节，关于他们发现什么有价值以及他们愿意为什么付钱。惊讶通常是积极的也是消极的。他们不会喜欢你构建的东西，但会有其他他们喜欢的东西，实现起来会非常容易。直到你通过发布错误的东西开始对话，他们才能表达（或甚至意识到）他们在寻找什么。&lt;/p&gt;&#xA;&lt;h2 id=&#34;10-改变你的想法&#34;&gt;10. 改变你的想法&lt;/h2&gt;&#xA;&lt;p&gt;要从与用户互动中受益，你必须愿意改变你的想法。我们总是鼓励创始人将创业公司想法视为假设而不是蓝图。然而，他们仍然惊讶于改变想法的效果有多好。通常如果你抱怨某事很难，一般建议是更努力工作。对于创业公司，我认为你应该找到一个对你来说容易解决的问题。在解决方案空间中优化是熟悉和直接的，但你可以在问题空间中玩耍获得巨大的收益。而仅仅是决心，没有灵活性，是一个贪婪的算法，可能不会给你带来比平庸的局部最大值更多的东西：当一个人坚定时，仍然有危险他们会遵循一条漫长而艰难的道路，最终无处可去。你想向前推进，但同时扭动和转向以找到最有希望的道路。一个创始人非常简洁地表达：快速迭代是成功的关键。&lt;/p&gt;&#xA;&lt;p&gt;这个建议如此难遵循的一个原因是人们没有意识到判断创业公司想法有多难，特别是他们自己的想法。有经验的创始人学会保持开放的心态：现在我不嘲笑想法了，因为我意识到我在知道它们是否好方面多么糟糕。你永远不知道什么会有效。你只需在每个点做似乎最好的事情。我们对YC本身也这样做。我们仍然不知道它是否会工作，但它似乎像一个不错的假设。&lt;/p&gt;&#xA;&lt;h2 id=&#34;11-不要担心竞争对手&#34;&gt;11. 不要担心竞争对手&lt;/h2&gt;&#xA;&lt;p&gt;当你认为你有一个伟大的想法时，这有点像对某事有负罪感。某人只需要对你好笑，你就想&amp;quot;哦天哪，他们知道了。&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;这些警报几乎总是错误的：乍看似乎像竞争对手和威胁的公司，当你真正看时通常从来都不是。即使他们在同一领域运作，他们也有不同的目标。人们对竞争对手过度反应的一个原因是他们高估想法。如果想法真的是关键，有相同想法的竞争对手将是真正的威胁。但通常是执行最重要：看到新竞争对手出现引起的所有恐慌几周后都被忘记了。总是归结为你自己的产品和市场方法。即使竞争对手获得很多关注，这通常也是真的。骑在许多好的博客感知上的竞争对手并不是真正的赢家，可以很快从地图上消失。你毕竟需要消费者。炒作不会制造满意的用户，至少对于像技术这样复杂的东西不会。&lt;/p&gt;&#xA;&lt;h2 id=&#34;12-获得用户很难&#34;&gt;12. 获得用户很难&lt;/h2&gt;&#xA;&lt;p&gt;不过，许多创始人抱怨获得用户有多难。我不知道需要多少时间和精力去获得用户。这是一个复杂的话题。当你不能获得用户时，很难说问题是缺乏曝光，还是产品简单就是坏的。即使是好产品也可能被切换或集成成本阻挡：让人们使用新服务是极其困难的。对于其他公司可以使用的产品尤其如此，因为它需要他们的开发者做工作。如果你很小，他们认为这不紧急。[4] 对YC最尖锐的批评来自一个创始人，说我们没有足够关注客户获取：YC宣扬&amp;quot;做人们想要的东西&amp;quot;作为一项工程任务，一个永不结束的功能流，直到足够的人满意并且应用程序起飞。对客户获取成本的关注很少。这可能是真的；这可能是我需要修复的东西，特别是对于像游戏这样的应用程序。如果你做的东西挑战主要是技术性的，你可以依靠口碑，就像Google那样。一个创始人惊讶于那对他有多有效：有一种非理性的恐惧，没有人会买你的产品。但如果你努力并逐步使其更好，就没有必要担心。但对于其他类型的创业公司，你可能通过功能和交易和营销赢得更少。&lt;/p&gt;&#xA;&lt;h2 id=&#34;13-对交易期望最坏&#34;&gt;13. 对交易期望最坏&lt;/h2&gt;&#xA;&lt;p&gt;交易失败。这是创业世界的常数。创业公司是无力的，好的创业公司想法通常似乎是错误的。所以每个人都对与你关闭交易感到紧张，你没有办法让他们这样做。&lt;/p&gt;&#xA;&lt;p&gt;对于投资者尤其如此：回想起来，如果我们假设我们永远不会得到任何额外的外部投资运作，那会好得多。那会让我们专注于早期找到收入流。我的建议一般是悲观的。假设你不会得到钱，如果有人确实提供给你任何，假设你永远不会得到任何更多。如果有人提供给你钱，接受它。你经常这么说，但我认为它需要更多强调。我们有机会比去年筹集更多的钱，我希望我们这样做了。&lt;/p&gt;&#xA;&lt;p&gt;为什么创始人忽视我？主要是因为他们天生乐观。错误是对你无法控制的事情乐观。无论如何对你能够做出伟大的东西的能力要乐观。但如果你对大公司或投资者乐观，你就是在自找麻烦。&lt;/p&gt;&#xA;&lt;h2 id=&#34;14-投资者一无所知&#34;&gt;14. 投资者一无所知&lt;/h2&gt;&#xA;&lt;p&gt;许多创始人提到他们对投资者的一无所知感到惊讶：他们甚至不知道他们投资的东西。我遇到了一些投资了硬件设备的投资者，当我要求他们演示设备时，他们很难打开它。天使投资者比风险投资家好一点，因为他们通常自己有创业经验：风险投资家不知道他们在谈论什么的一半时间，他们的思想落后几年。几个是伟大的，但我们处理的95%的投资者不专业，似乎不是很擅长商业或有任何创意愿景。天使投资者通常好谈得多。&lt;/p&gt;</description>
    </item>
    <item>
      <title>创业公司融资的未来</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/future/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/future/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/future.md&#34;&gt;English version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;创业公司融资的未来&#34;&gt;创业公司融资的未来&lt;/h1&gt;&#xA;&lt;p&gt;想创办创业公司？获得 Y Combinator 的资助。&lt;/p&gt;&#xA;&lt;p&gt;2010年8月&lt;/p&gt;&#xA;&lt;p&gt;两年前我写到了我称之为&amp;quot;创业公司融资中一个巨大的、未开发的机会&amp;quot;：风险投资者与他们当前商业模式要求他们投资大笔资金，以及一类需要比以前更少资金的大型创业公司之间日益增长的不匹配。越来越多的创业公司想要几十万美元，而不是几百万。[1]&lt;/p&gt;&#xA;&lt;p&gt;这个机会现在未开发的程度要小得多。投资者从两个方向涌入这个领域。风险投资者比一年前更可能进行天使规模的投资。与此同时，过去一年看到了新型投资者的急剧增加：超级天使，他们像天使一样运作，但使用其他人的钱，像风险投资者一样。&lt;/p&gt;&#xA;&lt;p&gt;虽然许多投资者正在进入这个领域，但仍有更多空间。投资者的分布应该反映创业公司的分布，这具有通常的幂律下降。所以投资几十万或几十万的人应该比投资几百万的人多得多。[2]&lt;/p&gt;&#xA;&lt;p&gt;事实上，有更多人进行天使规模的交易对天使投资者可能是好事，因为如果天使轮变得更合法，那么即使创业公司可以，如果他们愿意，从风险投资者那里筹集 A 轮融资，他们也可能开始选择天使轮。创业公司偏爱 A 轮融资的原因之一是它们更有声望。但如果天使投资者变得更加活跃和知名，他们将越来越多地能够在品牌上与风险投资者竞争。&lt;/p&gt;&#xA;&lt;p&gt;当然，声望不是偏爱 A 轮融资的主要原因。创业公司在 A 轮融资中可能会比在天使轮中得到投资者更多的关注。所以如果一个创业公司在天使轮和好的风险投资基金的 A 轮之间选择，我通常建议他们选择 A 轮。[3]&lt;/p&gt;&#xA;&lt;p&gt;但是，虽然 A 轮融资不会消失，我认为风险投资者应该比超级天使更担心，而不是相反。尽管他们的名字，超级天使实际上是迷你风险投资基金，他们显然把现有的风险投资者作为目标。&lt;/p&gt;&#xA;&lt;p&gt;他们似乎有历史站在他们这边。这里的模式似乎与创业公司和成熟公司进入新市场时我们看到的相同。在线视频成为可能，YouTube 直接冲进去，而现有媒体公司只是半心半意地接受它，更多的是由恐惧而不是希望驱动，更多的是为了保护自己的地盘而不是为用户做伟大的事情。PayPal 也是如此。这个模式重复了一遍又一遍，通常是入侵者获胜。在这种情况下，超级天使是入侵者。天使轮是他们的整个业务，就像在线视频对 YouTube 一样。而进行天使投资的风险投资者主要这样做是为了为 A 轮融资产生交易流。[4]&lt;/p&gt;&#xA;&lt;p&gt;另一方面，创业投资是一个非常奇怪的生意。几乎所有的回报都集中在几个大赢家身上。如果超级天使仅仅未能投资于（并在某种程度上产生）大赢家，即使他们投资于所有其他公司，他们也会倒闭。&lt;/p&gt;&#xA;&lt;h3 id=&#34;风险投资者&#34;&gt;风险投资者&lt;/h3&gt;&#xA;&lt;p&gt;为什么风险投资者不开始进行更小的 A 轮融资？症结在于董事会席位。在传统的 A 轮融资中，负责交易的合伙人会在创业公司的董事会中占有一席之地。如果我们假设平均创业公司运行6年，一个合伙人可以同时承受12个董事会席位，那么一个风险投资基金可以每年每个合伙人进行2笔 A 轮交易。&lt;/p&gt;&#xA;&lt;p&gt;在我看来，解决方案一直是担任更少的董事会席位。你不必在董事会中帮助创业公司。也许风险投资者觉得他们需要董事会成员带来的权力来确保他们的钱不被浪费。但他们检验过那个理论吗？除非他们尝试不担任董事会席位并发现他们的回报更低，否则他们没有解决这个问题。&lt;/p&gt;&#xA;&lt;p&gt;我不是说风险投资者不帮助创业公司。好的那些帮助他们很多。我所说的是，那种重要的帮助，你可能不必是董事会成员才能给予。[5]&lt;/p&gt;&#xA;&lt;p&gt;这一切将如何展开？一些风险投资者可能会适应，进行更多、更小的交易。如果他们简化选择过程并担任更少的董事会席位，风险投资基金可以进行2到3倍的 A 轮交易而不会质量下降，我不会感到惊讶。&lt;/p&gt;&#xA;&lt;p&gt;但其他风险投资者将不会做出超过表面性的改变。风险投资者是保守的，对他们的威胁不是致命的。不适应的风险投资基金不会被暴力取代。他们会不知不觉地逐渐进入不同的业务。他们仍会做他们称之为 A 轮融资的事情，但这些将 increasingly 成为事实上的 B 轮融资。[6]&lt;/p&gt;&#xA;&lt;p&gt;在这样的轮次中，他们不会得到他们现在做的公司25%到40%的股份。在后来的轮次中你不会放弃那么多的公司股份，除非出现严重问题。由于不适应的风险投资者将在 later 投资，他们从赢家那里获得的回报可能更小。但 later 投资也应该意味着他们有更少的输家。所以他们的风险回报比可能是相同的甚至更好。他们只是变成了一种不同的、更保守的投资类型。&lt;/p&gt;&#xA;&lt;h3 id=&#34;天使投资者&#34;&gt;天使投资者&lt;/h3&gt;&#xA;&lt;p&gt;在 increasingly 与 A 轮竞争的大型天使轮中，投资者不会像风险投资者现在那样拿走那么多的股权。试图通过进行更多、更小的交易与天使投资者竞争的风险投资者可能会发现他们必须接受更少的股权才能做到这一点。这对创始人来说是个好消息：他们将能够保留更多公司股份。&lt;/p&gt;&#xA;&lt;p&gt;天使轮的交易条款也将变得不那么严格——不仅比 A 轮条款不那么严格，而且比传统的天使条款也不那么严格。&lt;/p&gt;</description>
    </item>
    <item>
      <title>创业想法</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/ideas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/ideas/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/ideas.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;创业想法&#34;&gt;创业想法&lt;/h1&gt;&#xA;&lt;p&gt;2005年10月&lt;/p&gt;&#xA;&lt;p&gt;Y Combinator的创始合伙人之一保罗·格雷厄姆撰写的关于如何为创业公司产生好想法的指南。&lt;/p&gt;&#xA;&lt;p&gt;想要创业？获得Y Combinator的投资。&lt;/p&gt;&#xA;&lt;p&gt;对于想要创办创业公司的人来说，最重要的问题之一是如何获得想法。Y Combinator申请表格中问的第一个问题是&amp;quot;你在做什么？&amp;ldquo;这实际上是问：你有什么想法？&lt;/p&gt;&#xA;&lt;p&gt;令人惊讶的是，申请表中的问题不是&amp;quot;你有什么想法？&amp;ldquo;而是&amp;quot;你在做什么？&amp;ldquo;这是因为我们意识到，大多数申请者实际上并没有想法。他们只是想创办创业公司。这就像想当作家但没有想到要写什么。&lt;/p&gt;&#xA;&lt;p&gt;但是没有想法，你如何创办创业公司？你可能会认为这是不可能的，但事实并非如此。我们资助的大多数初创公司在申请时并没有完全成形的想法。他们只是有一些想法，这些想法在Y Combinator的三个月中逐渐成形。&lt;/p&gt;&#xA;&lt;p&gt;这怎么可能？因为好想法不像大多数人认为的那样来自灵光一现。好想法来自于对问题的观察和解决。&lt;/p&gt;&#xA;&lt;h2 id=&#34;如何获得创业想法&#34;&gt;如何获得创业想法&lt;/h2&gt;&#xA;&lt;p&gt;创业想法不是凭空产生的。它们来自于解决你自己的问题。最好的创业想法是解决你自己遇到的问题。&lt;/p&gt;&#xA;&lt;p&gt;如果你和其他程序员一样，你每天都会遇到一些烦人的问题。大多数时候，你只是容忍它们。但是如果你开始把它们记下来，你会发现它们实际上是创业想法的金矿。&lt;/p&gt;&#xA;&lt;p&gt;当你解决自己的问题时，你就有了优势。你确切地知道问题是什么，因为你亲身经历过。你也知道解决方案是否有效，因为你就是用户。&lt;/p&gt;&#xA;&lt;h2 id=&#34;创业想法的特征&#34;&gt;创业想法的特征&lt;/h2&gt;&#xA;&lt;p&gt;好的创业想法通常具有以下特征：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;它们解决了一个真实的问题&lt;/strong&gt;：不是虚构的问题，而是人们真正遇到的问题。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;它们看起来不像好主意&lt;/strong&gt;：最好的创业想法通常看起来很愚蠢。如果它们看起来像好主意，可能已经有人在做它们了。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;它们是利基市场&lt;/strong&gt;：不要试图为所有人构建产品。从一个小的、特定的市场开始。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;它们可以从小开始&lt;/strong&gt;：你不需要在第一天就构建一个庞大的系统。从最小可行产品开始。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;它们具有可扩展性&lt;/strong&gt;：虽然它们从小开始，但它们有潜力变得很大。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;何时寻找想法&#34;&gt;何时寻找想法&lt;/h2&gt;&#xA;&lt;p&gt;很多人犯的错误是试图坐在那里产生想法。这很少有效。相反，你应该过你的生活，但保持敏锐的观察力。&lt;/p&gt;&#xA;&lt;p&gt;当你注意到有什么事情让你感到沮丧或烦恼时，把它记下来。当你发现自己在思考&amp;quot;应该有更好的方法来做这件事&amp;quot;时，把它写下来。&lt;/p&gt;&#xA;&lt;p&gt;想法往往在你忙于其他事情时出现。保持一个想法列表，定期回顾它。&lt;/p&gt;&#xA;&lt;h2 id=&#34;如何测试想法&#34;&gt;如何测试想法&lt;/h2&gt;&#xA;&lt;p&gt;一旦你有了一个想法，如何测试它是否好？以下是一些方法：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;构建它&lt;/strong&gt;：最好的测试是实际构建它并看看人们是否使用它。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;谈论它&lt;/strong&gt;：与他人讨论你的想法。但不要过度依赖他们的意见。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;研究竞争对手&lt;/strong&gt;：看看是否有人在解决类似的问题。他们的方法如何？&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;问自己一些关键问题&lt;/strong&gt;：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;这个问题有多普遍？&lt;/li&gt;&#xA;&lt;li&gt;人们愿意为解决方案付钱吗？&lt;/li&gt;&#xA;&lt;li&gt;市场有多大？&lt;/li&gt;&#xA;&lt;li&gt;你能否在竞争对手之前进入市场？&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;常见错误&#34;&gt;常见错误&lt;/h2&gt;&#xA;&lt;p&gt;在寻找创业想法时，人们经常犯以下错误：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;试图追随潮流&lt;/strong&gt;：不要试图追逐最新的热潮。解决真实的问题。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;构建你自己的工具&lt;/strong&gt;：不要构建只有你想使用的东西。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;忽视小问题&lt;/strong&gt;：小问题可能看起来不重要，但它们往往是最好的起点。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;过早放弃&lt;/strong&gt;：好想法需要时间来发展。不要期望立即成功。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;结论&#34;&gt;结论&lt;/h2&gt;&#xA;&lt;p&gt;创业想法不是凭空产生的。它们来自于解决真实的问题。通过保持敏锐的观察力并解决你自己的问题，你可以发现伟大的创业机会。&lt;/p&gt;&#xA;&lt;p&gt;记住，最好的想法往往看起来很愚蠢。如果它们看起来像好主意，可能已经有人在做它们了。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;&lt;em&gt;注：这是Paul Graham关于创业想法的经典文章的中文翻译。原文发布于2005年10月，至今仍然是创业者的重要指南。&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>创业投资趋势</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/invtrend/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/invtrend/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/invtrend.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;创业投资趋势&#34;&gt;创业投资趋势&lt;/h1&gt;&#xA;&lt;p&gt;2013年6月&lt;/p&gt;&#xA;&lt;p&gt;（本文为投资者听众而作。）&lt;/p&gt;&#xA;&lt;p&gt;Y Combinator现已资助了564家创业公司，包括当前的53家批次。拥有估值（通过融资轮、被收购或倒闭）的287家公司的总估值约为117亿美元，当前批次之前的511家公司总共筹集了约17亿美元。[1]&lt;/p&gt;&#xA;&lt;p&gt;和往常一样，这些数字由少数几个大赢家主导。前10名创业公司占117亿中的86亿。但后面还有一批年轻的创业公司。大约还有40家有潜力成为真正的大公司。&lt;/p&gt;&#xA;&lt;p&gt;去年夏天当我们有84家公司时，情况有点失控，所以我们收紧了筛选标准以减少批次规模。[2] 一些记者试图将其解读为他们正在讲述的宏观故事的证据，但原因与任何外部趋势无关。原因是我们发现我们使用的是n²算法，我们需要购买时间来修复它。幸运的是，我们提出了几种分片YCombinator的技术，现在问题似乎已经解决。有了新的更具可扩展性的模型，只有53家公司，当前的批次感觉就像在公园散步。我猜我们还可以再增长2-3倍才会遇到下一个瓶颈。[3]&lt;/p&gt;&#xA;&lt;p&gt;资助如此大量的创业公司的一个后果是我们能够及早看到趋势。由于融资是我们帮助创业公司的主要事项之一，我们处于很好的位置来发现投资趋势。&lt;/p&gt;&#xA;&lt;p&gt;我将尝试描述这些趋势的发展方向。让我们从最基本的问题开始：未来会比过去更好还是更糟？投资者总体上会赚更多钱还是更少？&lt;/p&gt;&#xA;&lt;p&gt;我认为会更多。有多种力量在起作用，其中一些会降低回报，一些会增加回报。我无法确定哪种力量会占上风，但我会描述它们，你可以自己判断。&lt;/p&gt;&#xA;&lt;p&gt;推动创业公司融资变化的两大力量是：创业公司的启动成本正在降低，创业公司正在成为更正常的事情。&lt;/p&gt;&#xA;&lt;p&gt;当我1986年大学毕业时，基本上有两个选择：找工作或读研究生。现在有第三个选择：创办自己的公司。这是一个很大的变化。原则上，1986年也可以创办自己的公司，但这似乎不是一个真正的可能性。似乎可以创办咨询公司或利基产品公司，但似乎不可能创办会变得很大的公司。[4]&lt;/p&gt;&#xA;&lt;p&gt;这种从2个路径到3个路径的变化是几代人才会发生一次的那种大社会转变。我认为我们仍处于这个转变的开始阶段。很难预测这会有多大的影响。会和工业革命一样大吗？也许。可能不会。但这将是一件大事，几乎让所有人感到惊讶，因为那些大的社会转变总是如此。&lt;/p&gt;&#xA;&lt;p&gt;我们可以肯定的是会有更多的创业公司。20世纪中期庞大的层级公司正在被较小公司的网络所取代。这个过程不仅仅是现在硅谷正在发生的事情。它在几十年前就开始了，甚至发生在汽车行业。它还有很长的路要走。[5]&lt;/p&gt;&#xA;&lt;p&gt;推动变化的另一个大因素是创业公司的启动成本正在降低。事实上，这两个力量是相关的：创业公司启动成本的降低是创业公司变得更正常的事情的原因之一。&lt;/p&gt;&#xA;&lt;p&gt;创业公司需要更少钱这一事实意味着创始人将在投资者面前占据上风。你仍然需要他们同样多的精力和想象力，但他们不需要你那么多钱。由于创始人占据上风，他们将保留公司中越来越大的股份和控制权。这意味着投资者将获得更少的股份和更少的控制权。&lt;/p&gt;&#xA;&lt;p&gt;这是否意味着投资者会赚更少的钱？不一定，因为会有更多的好创业公司。投资者可获得的有价值创业公司股份总量可能会增加，因为有价值创业公司的数量增长速度可能会快于他们出售给投资者的比例下降速度。&lt;/p&gt;&#xA;&lt;p&gt;风险投资业务中有一个经验法则，即每年大约有15家公司会非常成功。尽管许多投资者下意识地将这个数字视为某种宇宙常数，但我确定它不是。技术发展的速度可能有极限，但现在这不是限制因素。如果是的话，每个成功的创业公司都会在可能成立的那个月成立，但事实并非如此。现在限制大公司数量的因素是足够好的创始人创办公司的数量，这个数量可以而且将会增加。仍然有很多人会成为优秀的创始人但最终没有创办公司。你可以从一些最成功的创业公司是多么偶然地开始看到这一点。许多最大的创业公司几乎都没有发生，这意味着肯定有同样多实际上没有发生的优秀创业公司。&lt;/p&gt;&#xA;&lt;p&gt;可能有10倍甚至50倍更多的优秀创始人。随着其中更多人开始创办创业公司，每年15个大赢家很容易变成50甚至100个。[6]&lt;/p&gt;&#xA;&lt;p&gt;那么回报呢？我们是否正走向回报因越来越高的估值而被挤压的世界？我认为顶级公司实际上会比过去赚更多钱。高回报不是来自低估值投资。它们来自投资那些真正做得好的公司。所以如果每年有更多这样的公司，最好的挑选者应该会有更多的成功。&lt;/p&gt;&#xA;&lt;p&gt;这意味着风险投资业务会有更多的可变性。能够识别和吸引最好创业公司的公司会做得更好，因为会有更多这样的公司需要识别和吸引。而糟糕的公司会像现在一样得到剩菜，但为此支付更高的价格。&lt;/p&gt;&#xA;&lt;p&gt;我也不认为创始人长期控制他们的公司会是一个问题。这方面的经验证据已经很清楚：投资者作为创始人的跟班比作为他们的老板赚更多钱。虽然有些羞辱，但这对投资者来说实际上是个好消息，因为服务创始人比微观管理他们花的时间更少。&lt;/p&gt;&#xA;&lt;p&gt;天使投资人呢？我认为那里有很多机会。过去做天使投资人很糟糕。除非你像AndyBechtolsheim那样幸运，否则你无法获得最好的交易，当你投资创业公司时，风险投资家可能会在后来到达时剥夺你的股份。现在天使可以去像DemoDay或AngelList这样的地方，获得和风险投资家一样的交易。风险投资家可以从股权表中洗掉天使投资人的日子早已一去不复返。&lt;/p&gt;&#xA;&lt;p&gt;我认为创业投资中最大的未开发机会之一是快速进行天使规模的投资。很少有投资者理解向他们筹集资金对创业公司造成的成本。当公司只有创始人时，一切在融资期间都会停止，这很容易需要6周时间。当前融资的高成本意味着低成本投资者有空间来削减其余部分。在这种情况下，低成本意味着快速决定。如果有一个信誉良好的投资者以良好条件投资10万美元并承诺在24小时内决定是或否，他们会获得几乎所有最好的交易，因为每个好的创业公司都会首先接近他们。由他们来挑选，因为每个糟糕的创业公司也会首先接近他们，但至少他们会看到一切。而如果一个投资者以思维时间长或就估值进行大量谈判而闻名，创始人会把他们留到最后。而对于最有前途的创业公司来说，它们往往容易筹集资金，最后很容易变成永远不会。&lt;/p&gt;&#xA;&lt;p&gt;大公司的数量会随着新创业公司总数线性增长吗？可能不会，有两个原因。一个是在过去创业的可怕性是一个相当有效的过滤器。既然失败的成本正在降低，我们应该期望创始人更多地这样做。这不是坏事。在技术中，降低失败成本的创新会增加失败数量，但最终让你净前进，这是常见的。&lt;/p&gt;&#xA;&lt;p&gt;大公司数量不会与创业公司数量成比例增长的另一个原因是，将会开始出现越来越多的创意冲突。虽然好想法数量的有限性不是每年只有15个大公司的原因，但数量必须是有限的，创业公司越多，我们会看到多家公司在同一时间做同样的事情。如果创意冲突变得更加普遍，那将会很有趣，但从坏的方面来说。[7]&lt;/p&gt;&#xA;&lt;p&gt;主要是因为早期失败的数量增加，未来的创业公司将不仅仅是相同形状的放大。以前是方尖碑的将变成金字塔。顶部会宽一点，但底部会宽得多。&lt;/p&gt;&#xA;&lt;p&gt;这对投资者意味着什么？这意味着在最早阶段会有更多投资机会，因为这是我们想象固体的体积增长最快的地方。想象对应于创业公司方尖碑的投资者方尖碑。当它扩展成金字塔以匹配创业公司金字塔时，所有内容都附着在顶部，在底部留下真空。&lt;/p&gt;&#xA;&lt;p&gt;投资者的机会主要意味着新投资者的机会，因为现有投资者或公司愿意承担的风险程度是他们最难改变的事情之一。不同类型的投资者适应不同程度的风险，但每种类型都有其特定的风险深度烙印，不仅在他们遵循的程序中，而且在工作人员的个性中。&lt;/p&gt;&#xA;&lt;p&gt;我认为风险投资家最大的危险也是最大的机会是在A轮阶段。或者更确切地说，在A轮变成事实上的B轮之前的A轮阶段。&lt;/p&gt;&#xA;&lt;p&gt;现在，风险投资家经常明知故犯地在A轮投资太多钱。他们这样做是因为他们觉得需要获得每个A轮公司的一大块股份来补偿董事会席位所消耗的机会成本。这意味着当交易有很多竞争时，变化的数字是估值（以及投资金额）而不是出售的公司百分比。这意味着，特别是对于更有前途的创业公司，A轮投资者经常让公司接受比他们想要的更多钱。&lt;/p&gt;&#xA;&lt;p&gt;一些风险投资家撒谎并声称公司真的需要那么多钱。其他人更坦率，承认他们的财务模型要求他们拥有每家公司的一定百分比。但我们都知道A轮筹集的金额不是通过问什么对公司最好来决定的。它们是由风险投资家从他们想要拥有的公司数量开始，市场设定估值从而确定投资金额决定的。&lt;/p&gt;&#xA;&lt;p&gt;和许多坏事一样，这不是故意发生的。风险投资业务随着他们的初始假设逐渐过时而陷入其中。风险投资业务的传统和财务模型是在创始人更需要投资者时建立的。在那些日子里，创始人在A轮向风险投资家出售一大块公司股份是很自然的。现在创始人宁愿出售更少，风险投资家正在坚持立场，因为他们不确定是否能够通过购买每家A轮公司不到20%的股份来赚钱。&lt;/p&gt;&#xA;&lt;p&gt;我将此描述为危险的原因是，A轮投资者与他们声称服务的创业公司越来越不一致，这最终会回来咬你。我将此描述为机会的原因是，现在已经建立了很多潜在能量，因为市场已经远离了风险投资家传统的商业模式。这意味着第一个打破常规并开始做A轮交易的风险投资公司，只要创始人想出售多少股份就做多少股份（并且没有&amp;quot;期权池&amp;quot;仅来自创始人的股份），将获得巨大收益。&lt;/p&gt;&#xA;&lt;p&gt;当这种情况发生时，风险投资业务会发生什么？鬼才知道。但我打赌那家特定的公司最终会领先。如果一家顶级风险投资公司开始做从公司需要筹集的金额开始并让获得的百分比随市场变化的A轮交易，而不是相反，他们会立即获得几乎所有最好的创业公司。这就是钱所在的地方。&lt;/p&gt;&#xA;&lt;p&gt;你无法永远对抗市场力量。在过去十年中，我们看到A轮出售的公司百分比稳步下降。40%曾经很常见。现在风险投资家正在努力将底线保持在20%。但我每天都在等待这条线的崩溃。它会发生的。你不妨预料到它，看起来大胆。&lt;/p&gt;&#xA;&lt;p&gt;谁知道，也许风险投资家通过做正确的事情会赚更多钱。这不是第一次发生这种情况。风险投资是一个偶尔的大成功产生百倍回报的业务。你对此类事情有多少信心真的可以用财务模型来表达？大成功只需要变得稍微不那么频繁就可以补偿A轮股份出售减少2倍。&lt;/p&gt;&#xA;&lt;p&gt;如果你想找到新的投资机会，寻找创始人抱怨的事情。创始人是你的客户，他们抱怨的事情是未满足的需求。我给出了两个创始人最常抱怨的例子——花太长时间做决定的投资者，以及A轮融资中的过度稀释——所以现在是寻找这些的好地方。但更一般的处方是：做创始人想要的事情。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 我意识到收入而不是融资是创业公司成功的真正考验。我们引用融资统计的原因是因为这些是我们有的数字。我们不能有意义地讨论收入而不包括最成功创业公司的数字，我们没有这些数字。我们经常与早期阶段的创业公司讨论收入增长，因为这是我们衡量他们进展的方式，但当公司达到一定规模时，种子投资者这样做变得自以为是。&lt;/p&gt;&#xA;&lt;p&gt;无论如何，公司的市值最终确实成为收入的函数，融资轮的投后估值至少是专业人士对这些市值最终位置的猜测。&lt;/p&gt;&#xA;&lt;p&gt;只有287家有估值的原因是其余的大多通过可转换票据筹集资金，虽然可转换票据通常有估值上限，但估值上限只是估值的上限。&lt;/p&gt;&#xA;&lt;p&gt;[2] 我们没有尝试接受特定数量。即使我们想要，我们也没有办法做到。我们只是试图变得更加挑剔。&lt;/p&gt;&#xA;&lt;p&gt;[3] 虽然你永远不知道瓶颈，我猜下一个将是协调合作伙伴之间的努力。&lt;/p&gt;&#xA;&lt;p&gt;[4] 我意识到创办公司不一定意味着创办创业公司。也会有很多创办正常公司的人。但这与投资者受众无关。&lt;/p&gt;&#xA;&lt;p&gt;Geoff Ralston报告说，在硅谷，在20世纪80年代中期创办创业公司似乎是可想的。它会从那里开始。但我知道对东海岸的本科生来说不是这样。&lt;/p&gt;&#xA;&lt;p&gt;[5] 这一趋势是自二十世纪中叶以来美国经济不平等加剧的主要原因之一。在1950年可能成为Megacorp x部门总经理的人现在是x公司的创始人，并拥有其中的重要股权。&lt;/p&gt;&#xA;&lt;p&gt;[6] 如果国会以非破碎形式通过创始人签证，仅此一项原则上就可以让我们达到20倍，因为95%的世界人口生活在美国以外。&lt;/p&gt;&#xA;&lt;p&gt;[7] 如果创意冲突变得足够糟糕，它可能会改变成为创业公司的意义。我们目前建议创业公司主要忽略竞争对手。我们告诉他们创业公司的竞争像跑步而不是足球；你不必去从另一队那里抢球。但如果创意冲突变得足够普遍，也许你必须开始那样做。那将是不幸的。&lt;/p&gt;&#xA;&lt;p&gt;感谢Sam Altman、Paul Buchheit、Dalton Caldwell、Patrick Collison、Jessica Livingston、Andrew Mason、Geoff Ralston和Garry Tan阅读本文草稿。&lt;/p&gt;</description>
    </item>
    <item>
      <title>创始人模式</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/foundermode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/foundermode/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/foundermode.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;创始人模式&#34;&gt;创始人模式&lt;/h1&gt;&#xA;&lt;p&gt;2024年9月&lt;/p&gt;&#xA;&lt;p&gt;在上周的YC活动上，Brian Chesky发表了一个让所有在场者都难忘的演讲。之后我交谈的大多数创始人都说这是他们听过的最好的演讲。Ron Conway有生以来第一次忘记记笔记。我不打算在这里重现他的演讲，而是想讨论它提出的一个问题。&lt;/p&gt;&#xA;&lt;p&gt;Brian演讲的主题是关于如何运营大公司的传统智慧是错误的。随着Airbnb的发展，善意的人们建议他必须以某种方式运营公司才能实现规模化。他们的建议可以乐观地概括为&amp;quot;雇用优秀的人才，给他们空间去完成工作&amp;quot;。他遵循了这个建议，结果却是灾难性的。因此他必须自己找出更好的方法，部分是通过研究Steve Jobs如何运营苹果公司。到目前为止，这似乎是有效的。Airbnb的自由现金流利润率现在是硅谷最好的之一。&lt;/p&gt;&#xA;&lt;p&gt;这个活动的观众包括许多我们资助的最成功的创始人，一个接一个地说，同样的事情也发生在他们身上。他们也得到了关于如何随着公司发展而运营公司的相同建议，但这些建议不但没有帮助他们的公司，反而损害了他们。&lt;/p&gt;&#xA;&lt;p&gt;为什么每个人都告诉这些创始人错误的事情？这对我来说是个很大的谜团。经过一番思考后，我找到了答案：他们被告知的是如何运营一个你没有创立的公司——如果你只是一个职业经理人，如何运营公司。但这种运营方式对创始人来说效果要差得多，以至于感觉是错误的。创始人可以做经理人做不到的事情，而不做这些事情对创始人来说感觉是错误的，因为它确实是错误的。&lt;/p&gt;&#xA;&lt;p&gt;实际上，有两种不同的运营公司的方式：创始人模式和经理人模式。直到现在，即使是硅谷的大多数人也隐含地假设扩大创业公司的规模意味着切换到经理人模式。但我们可以从尝试过这种模式的创始人的沮丧中，以及他们试图摆脱它的成功中，推断出另一种模式的存在。&lt;/p&gt;&#xA;&lt;p&gt;据我所知，没有专门关于创始人模式的书籍。商学院不知道它的存在。到目前为止，我们只有个别创始人为自己摸索的实验。但现在我们知道我们要寻找什么，我们可以搜索它。我希望几年后创始人模式会和经理人模式一样被很好地理解。我们已经可以猜测它会有所不同的一些方式。&lt;/p&gt;&#xA;&lt;p&gt;经理人被教导运营公司的方式似乎类似于模块化设计，在这种意义上，你将组织架构图的子树视为黑盒子。你告诉你的直接下属该做什么，而由他们来找出如何做的方法。但你不会介入他们工作的细节。那将是微观管理他们，这是不好的。&lt;/p&gt;&#xA;&lt;p&gt;雇用优秀的人才，给他们空间去完成工作。这样描述时听起来很棒，不是吗？但实际上，从创始人的报告中判断，这通常意味着：雇用职业伪装者，让他们把公司搞垮。&lt;/p&gt;&#xA;&lt;p&gt;我在Brian的演讲中和之后与创始人交谈时注意到的一个主题是被煤气灯效应操纵的想法。创始人感觉他们从两边都被煤气灯效应操纵——那些告诉他们必须像经理人一样运营公司的人，以及当他们这样做时为他们工作的人。通常当你周围的每个人都不同意你时，你的默认假设应该是你错了。但这是一个罕见的例外。没有做过创始人的风险投资人不知道创始人应该如何运营公司，而C级高管作为一个阶层，包括一些世界上最有技巧的说谎者。[1]&lt;/p&gt;&#xA;&lt;p&gt;无论创始人模式包含什么，很明显它会打破CEO应该只通过他或她的直接下属与公司接触的原则。&amp;ldquo;跳级&amp;quot;会议将成为常态，而不是一个如此不寻常以至于有特定名称的做法。一旦你放弃这个约束，就有大量的排列组合可供选择。&lt;/p&gt;&#xA;&lt;p&gt;例如，Steve Jobs过去每年为他认为的苹果公司最重要的100人举办一次静修活动，而这100人并不是组织架构图上最高的100人。你能想象在普通公司要做到这一点需要多大的意志力吗？然而想象一下这样的事情会有多有用。它可以让大公司感觉像创业公司。Steve如果这些静修活动不起作用，大概就不会继续举办它们了。但我从未听说过另一家公司这样做。那么这是一个好主意，还是一个坏主意？我们仍然不知道。这就是我们对创始人模式了解得如此之少的原因。[2]&lt;/p&gt;&#xA;&lt;p&gt;显然，创始人不能像运营20人公司那样继续运营2000人的公司。必须有某种程度的授权。自主权的边界在哪里，以及它们有多清晰，可能会因公司而异。它们甚至会随着经理人在同一公司内赢得信任而随时间变化。因此创始人模式比经理人模式更复杂。但它也会更有效。我们已经从个别创始人摸索着朝这个方向发展的例子中知道了这一点。&lt;/p&gt;&#xA;&lt;p&gt;实际上，我要对创始人模式做出的另一个预测是，一旦我们弄清楚它是什么，我们会发现许多个别创始人已经几乎到达了那里——除了他们所做的事情被许多人视为古怪或更糟。[3]&lt;/p&gt;&#xA;&lt;p&gt;奇怪的是，我们仍然对创始人模式知之甚少，这是一个令人鼓舞的想法。看看创始人已经取得的成就，然而他们是在逆着不良建议的逆风中取得这些成就的。想象一下，一旦我们能告诉他们如何像Steve Jobs而不是John Sculley那样运营公司，他们会取得什么成就。&lt;/p&gt;&#xA;&lt;h3 id=&#34;注释&#34;&gt;注释&lt;/h3&gt;&#xA;&lt;p&gt;[1] 表达这个陈述更外交的方式是说，经验丰富的C级高管通常非常擅长向上管理。而且我认为任何了解这个世界的人都不会对此有异议。&lt;/p&gt;&#xA;&lt;p&gt;[2] 如果举办这种静修活动的做法变得如此普遍，以至于即使是政治主导的成熟公司也开始这样做，我们可以通过被邀请者在组织架构图上的平均深度来量化公司的衰老程度。&lt;/p&gt;&#xA;&lt;p&gt;[3] 我还有一个不太乐观的预测：一旦创始人模式的概念确立，人们就会开始滥用它。无法委派他们应该委派的事情的创始人会以创始人模式为借口。或者不是创始人的经理人会决定他们应该试图表现得像创始人。这在某种程度上可能有效，但当它不起作用时，结果会很混乱；模块化方法至少可以限制糟糕CEO所能造成的损害。&lt;/p&gt;&#xA;&lt;p&gt;感谢Brian Chesky、Patrick Collison、Ron Conway、Jessica Livingston、Elon Musk、Ryan Petersen、Harj Taggar和Garry Tan阅读本文的草稿。&lt;/p&gt;</description>
    </item>
    <item>
      <title>创始人签证</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/foundervisa/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/foundervisa/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/foundervisa.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;创始人签证&#34;&gt;创始人签证&lt;/h1&gt;&#xA;&lt;p&gt;2009年4月&lt;/p&gt;&#xA;&lt;p&gt;我通常避免政治，但既然我们现在似乎有一个愿意接受建议的政府，我冒险提一个建议。政府能做的增加这个国家创业公司数量的最大事情是一项零成本政策：为创业创始人建立一个新的签证类别。&lt;/p&gt;&#xA;&lt;p&gt;在美国创造的新创业公司数量的最大限制不是税收政策或就业法，甚至不是萨班斯-奥克斯利法。而是我们不让那些想要创办创业公司的人进入这个国家。&lt;/p&gt;&#xA;&lt;p&gt;每年只让10,000名创业创始人进入这个国家可能对经济产生可见的影响。如果我们假设每个创业公司4个人，这可能是高估，那就是2500家新公司。每年。它们不会都成长为谷歌那么大，但在2500家中，有些会接近。&lt;/p&gt;&#xA;&lt;p&gt;根据定义，这10,000名创始人不会抢走美国人的工作：这可以是签证条款的一部分，他们不能为现有公司工作，只能为他们创立的新公司工作。事实上，他们会为美国人创造更多就业机会，因为他们创立的公司随着成长会雇佣更多员工。&lt;/p&gt;&#xA;&lt;p&gt;棘手的部分可能似乎是如何定义创业公司。但这可以很容易地解决：让市场决定。创业投资者努力寻找最好的创业公司。政府无法比利用他们的专业知识做得更好，使用公认的创业投资者的投资作为检验公司是否是真实创业公司的标准。&lt;/p&gt;&#xA;&lt;p&gt;政府如何决定谁是创业投资者？就像他们决定什么算作学生签证的大学一样。我们将建立自己的认证程序。我们彼此认识。&lt;/p&gt;&#xA;&lt;p&gt;从移民标准来看，10,000人是沧海一粟，但会代表创业创始人池子的巨大增加。我认为这会对经济产生如此可见的影响，以至于会使提出该法案的立法者闻名。唯一确定的方法是尝试它，而这几乎不需要成本。&lt;/p&gt;&#xA;&lt;p&gt;感谢Trevor Blackwell、Paul Buchheit、Jeff Clavier、David Hornik、Jessica Livingston、Greg Mcadoo、Aydin Senkut和Fred Wilson阅读本文的草稿。&lt;/p&gt;&#xA;&lt;p&gt;相关：&lt;/p&gt;&#xA;&lt;p&gt;企业家之国&lt;/p&gt;&#xA;&lt;p&gt;约一半的风投支持公司创始人是移民&lt;/p&gt;</description>
    </item>
    <item>
      <title>创造新事物的六个原则</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/newthings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/newthings/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/newthings.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;创造新事物的六个原则&#34;&gt;创造新事物的六个原则&lt;/h1&gt;&#xA;&lt;p&gt;2008年2月&lt;/p&gt;&#xA;&lt;p&gt;Arc 发布引发的激烈反应有一个意想不到的后果：它让我意识到我有一种设计哲学。那些更有条理的批评者主要抱怨的是 Arc 看起来太脆弱了。经过多年的工作，我所能展示的只有几千行宏？为什么我没有从事更实质性的问题？&lt;/p&gt;&#xA;&lt;p&gt;当我思考这些评论时，突然意识到它们看起来多么熟悉。这正是人们一开始对 Viaweb、Y Combinator 和我大多数文章所说的那种话。&lt;/p&gt;&#xA;&lt;p&gt;当我们推出 Viaweb 时，在风险投资家和电子商务&amp;quot;专家&amp;quot;看来这似乎很可笑。我们只是公寓里的几个人，这在1995年并不像现在那样酷。而我们所构建的东西，在他们看来，甚至不是软件。对他们来说，软件等于大型的 Windows 应用程序。由于 Viaweb 是他们见到的第一个基于网络的应用程序，它似乎仅仅是一个网站。当他们发现 Viaweb 不处理信用卡交易时（我们第一年确实没有处理），他们更加轻视。交易处理在他们看来就是电子商务的全部。这听起来严肃且困难。&lt;/p&gt;&#xA;&lt;p&gt;然而，神秘的是，Viaweb 最终碾压了所有竞争对手。&lt;/p&gt;&#xA;&lt;p&gt;对 Y Combinator 的最初反应几乎完全相同。它看起来轻得可笑。创业融资意味着 A 轮融资：在数月的严肃、商业化的会议后，给予少数由有资历的人创立的初创公司数百万美元，条件在一英尺厚的文件中描述。Y Combinator 似乎微不足道。现在说 Y Combinator 是否会像 Viaweb 那样成功还为时过早，但从模仿的数量来看，很多人似乎认为我们抓住了重点。&lt;/p&gt;&#xA;&lt;p&gt;我无法衡量我的文章是否成功，除了页面浏览量，但对它们的反应至少与我开始时不同。起初，Slashdot 上的巨魔的默认反应是（翻译成有条理的话）：&amp;ldquo;这家伙是谁，他有什么权威写这些话题？我还没读过这篇文章，但这么短、以如此非正式风格写的东西，在相关学科的专家已经写了很多厚书的情况下，不可能对某个话题有任何有用的见解。&amp;ldquo;现在在新一代网站上有新一代的巨魔，但他们至少已经开始省略最初的&amp;quot;这家伙是谁？&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;现在人们对 Arc 说着与一开始对 Viaweb、Y Combinator 和我大多数文章相同的话。为什么会有这种模式？答案，我意识到，是我对这四者的操作方式都是相同的。&lt;/p&gt;&#xA;&lt;p&gt;这就是：我喜欢找到（a）简单的解决方案（b）来解决被忽视的问题（c）这些问题确实需要解决，并且（d）尽可能非正式地交付它们，（e）从一个非常粗糙的第1版开始，然后（f）快速迭代。&lt;/p&gt;&#xA;&lt;p&gt;当我第一次明确列出这些原则时，我注意到一些引人注目的事情：这几乎是产生轻蔑初始反应的配方。虽然简单的解决方案更好，但它们看起来不像复杂的解决方案那样令人印象深刻。被忽视的问题按定义就是大多数人认为不重要的问题。非正式地交付解决方案意味着人们不能通过呈现方式来判断某些东西，而必须实际理解它，这需要更多工作。而从一个粗糙的第1版开始意味着你的初始努力总是小而不完整的。&lt;/p&gt;&#xA;&lt;p&gt;我当然注意到，人们似乎从来没有在第一时间掌握新想法。我以为这只是因为大多数人都很愚蠢。现在我看到了更多的原因。像一个逆向投资基金，遵循这种策略的人几乎总是在做普通人看来错误的事情。&lt;/p&gt;&#xA;&lt;p&gt;与逆向投资策略一样，这正是重点。这种技术是成功的（长期来看），因为它给了你所有其他人为了显得合法而放弃的优势。如果你处理被忽视的问题，你更有可能发现新事物，因为你的竞争更少。如果你非正式地交付解决方案，你（a）节省了所有本要花费让它们看起来令人印象深刻的努力，（b）避免了欺骗自己以及观众的危险。如果你发布一个粗糙的第1版然后迭代，你的解决方案可以从自然的想象力中受益，正如费曼指出的，这比你自己的更强大。&lt;/p&gt;&#xA;&lt;p&gt;以 Viaweb 为例，简单的解决方案是让软件在服务器上运行。被忽视的问题是自动生成网站；1995年，在线商店都是人工设计师手工制作的，但我们知道这无法扩展。真正重要的是图形设计，而不是交易处理。非正式的交付机制是我，穿着牛仔裤和T恤出现在某个零售商的办公室。而粗糙的第1版，如果我没记错的话，我们发布时不到一万行代码。&lt;/p&gt;&#xA;&lt;p&gt;这种技术的力量超出了初创公司、编程语言和文章的范围。它可能扩展到任何类型的创造性工作。当然它可以用于绘画：这正是塞尚和克利所做的。&lt;/p&gt;&#xA;&lt;p&gt;在 Y Combinator，我们把钱押在上面，从这个意义上说，我们鼓励我们资助的初创公司以这种方式工作。好想法总是在你的眼皮底下。所以要寻找其他人忽视的简单事物——人们后来会声称&amp;quot;显而易见&amp;quot;的事物——特别是当他们被过时的惯例误导，或者试图做表面上令人印象深刻的事情时。弄清楚真正的问题是什么，并确保你解决了这个问题。不要担心试图看起来像公司；产品才是长期获胜的关键。尽可能快地发布，这样你就开始从用户那里学习你应该制作什么。&lt;/p&gt;&#xA;&lt;p&gt;Reddit 是这种方法的一个经典例子。当 Reddit 首次发布时，似乎没什么内容。对那些图形设计不成熟的人来说，它故意极简的设计似乎根本不像设计。但 Reddit 解决了真正的问题，即告诉人们什么是新的，其他方面不要干扰。结果它变得非常成功。现在传统观念赶上了它，这似乎是显而易见的。人们看着 Reddit 认为创始人是幸运的。像所有这样的事情，它比看起来更难。Reddit 们如此用力地逆流而上以至于扭转了它；现在看起来他们只是在顺流而下。&lt;/p&gt;&#xA;&lt;p&gt;所以当你看着像 Reddit 这样的东西并想&amp;quot;我希望我能想到这样的想法&amp;quot;时，记住：这样的想法都在你周围。但你忽略了它们，因为它们看起来是错误的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>创造者的日程表，管理者的日程表</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/makersschedule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/makersschedule/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/makersschedule.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;创造者的日程表管理者的日程表&#34;&gt;创造者的日程表，管理者的日程表&lt;/h1&gt;&#xA;&lt;p&gt;2009年7月&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;&amp;hellip;仅仅意识到有约会，有时就会困扰一整天。&amp;rdquo;&#xA;– 查尔斯·狄更斯&lt;/p&gt;&#xA;&lt;p&gt;程序员如此讨厌会议的一个原因是，他们与其他人的日程表类型不同。会议对他们来说成本更高。&lt;/p&gt;&#xA;&lt;p&gt;有两种类型的日程表，我称之为管理者的日程表和创造者的日程表。管理者的日程表是为老板设计的。它体现在传统的约会簿中，每天被划分为一小时的时间段。如果需要，你可以为单个任务屏蔽几个小时，但默认情况下你每小时都会改变正在做的事情。&lt;/p&gt;&#xA;&lt;p&gt;当你这样使用时间时，与某人会面只是一个实际问题。在你的日程表中找一个空闲的时间段，预约他们，就完成了。&lt;/p&gt;&#xA;&lt;p&gt;大多数有权力的人都在管理者的日程表上。这是指挥的日程表。但还有一种使用时间的方式在创造事物的人中很常见，比如程序员和作家。他们通常更喜欢至少以半天为单位使用时间。你无法在一小时的时间内很好地写作或编程。那 barely 是足够开始的时间。&lt;/p&gt;&#xA;&lt;p&gt;当你按照创造者的日程表工作时，会议是灾难性的。一个会议可以毁掉整个下午，因为它把下午分成两部分，每部分都太小，无法做任何困难的事情。而且你必须记得去参加会议。这对于管理者的日程表上的人来说不是问题。下一个小时总是有事情；唯一的问题是什么。但当创造者的日程表上的人有会议时，他们必须考虑它。&lt;/p&gt;&#xA;&lt;p&gt;对于创造者日程表上的人来说，开会就像抛出异常。它不仅让你从一个任务切换到另一个任务；它改变了你工作的模式。&lt;/p&gt;&#xA;&lt;p&gt;我发现一个会议有时会影响一整天。一个会议通常会破坏至少半天，通过打乱上午或下午。此外，有时还有连锁效应。如果我知道下午会被打断，我在上午开始一些雄心勃勃的事情的可能性就会稍微降低。我知道这听起来可能过于敏感，但如果你是创造者，想想你自己的情况。当想到有一整天的时间可以工作，没有任何约会时，你的精神不会振奋吗？嗯，这意味着当你没有这样的时间时，你的精神会相应地低落。而雄心勃勃的项目按定义接近你能力的极限。士气的小幅下降就足以扼杀它们。&lt;/p&gt;&#xA;&lt;p&gt;每种类型的日程表本身都运作良好。当它们相遇时，问题就出现了。由于大多数有权力的人都在管理者的日程表上，他们有能力让每个人都按照他们的频率共振，如果他们想的话。但更聪明的人会克制自己，如果他们知道为他们工作的一些人需要大块的时间来工作。&lt;/p&gt;&#xA;&lt;p&gt;我们的情况是不寻常的。几乎所有的投资者，包括我认识的所有风险投资家，都在管理者的日程表上。但Y Combinator按照创造者的日程表运行。Rtm、Trevor和我这样做是因为我们一直如此，Jessica也主要是如此，因为她与我们同步。&lt;/p&gt;&#xA;&lt;p&gt;如果开始有更多像我们这样的公司，我不会感到惊讶。我怀疑创始人可能越来越能够抵抗，或至少推迟，转变为管理者，就像几十年前他们开始能够抵抗从牛仔裤换成西装一样。&lt;/p&gt;&#xA;&lt;p&gt;我们如何在创造者的日程表上为这么多创业公司提供建议？通过使用在创造者的日程表中模拟管理者日程表的经典设备：办公时间。我每周几次留出一大块时间来见我们资助的创始人。这些时间块是在我工作日的末尾，我写了一个注册程序，确保给定办公时间内的所有预约都集中在末尾。因为它们在我的一天结束时到来，这些会议从来不会中断。（除非他们的工作日与我的同时结束，会议可能会中断他们的，但既然他们预约了，对他们来说一定是值得的。）在繁忙时期，办公时间有时会变得足够长，以至于压缩了一天，但它们从不中断它。&lt;/p&gt;&#xA;&lt;p&gt;当我们在90年代为自己的创业公司工作时，我发展出了另一个划分一天的技巧。我每天从晚餐编程到大约凌晨3点，因为在晚上没有人能打断我。然后我会睡到大约上午11点，进来工作直到晚餐，我称之为&amp;quot;业务事情&amp;quot;。我从来没有用这些术语思考过，但实际上我每天都有两个工作日，一个在管理者的日程表上，一个在创造者的日程表上。&lt;/p&gt;&#xA;&lt;p&gt;当你按照管理者的日程表工作时，你可以做一些在创造者的日程表上永远不想做的事情：你可以进行试探性会议。你可以见某人只是为了互相认识。如果你的日程表有空闲的时间段，为什么不呢？也许结果你们可以在某种程度上互相帮助。&lt;/p&gt;&#xA;&lt;p&gt;硅谷的商界人士（实际上是整个世界）一直在进行试探性会议。如果你在管理者的日程表上，它们实际上是免费的。它们如此普遍，以至于有独特的语言来提议它们：例如，说你想要&amp;quot;喝杯咖啡&amp;quot;。&lt;/p&gt;&#xA;&lt;p&gt;但是，如果你在创造者的日程表上，试探性会议的成本非常可怕。这使我们陷入某种困境。每个人都认为，像其他投资者一样，我们在管理者的日程表上运行。所以他们向我们介绍他们认为我们应该见面的人，或者给我们发邮件提议我们喝杯咖啡。在这一点上，我们有两个选择，都不好：我们可以与他们见面，失去半天的工作；或者我们可以尝试避免与他们见面，可能会冒犯他们。&lt;/p&gt;&#xA;&lt;p&gt;直到最近，我们自己对问题的根源还不清楚。我们只是想当然地认为我们必须要么破坏我们的日程表，要么冒犯人。但现在我意识到发生了什么，也许有第三种选择：写一些解释两种类型日程表的东西。也许最终，如果管理者的日程表和创造者的日程表之间的冲突开始被更广泛地理解，它会变得不那么成问题。&lt;/p&gt;&#xA;&lt;p&gt;我们这些在创造者日程表上的人愿意妥协。我们知道我们必须有一定数量的会议。我们只要求那些在管理者日程表上的人理解成本。&lt;/p&gt;&#xA;&lt;p&gt;感谢 Sam Altman、Trevor Blackwell、Paul Buchheit、Jessica Livingston 和 Robert Morris 阅读本文的草稿。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;相关：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;如何做你喜欢的事&lt;/li&gt;&#xA;&lt;li&gt;好的和坏的拖延&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>刻薄</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/mean/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/mean/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/mean.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;刻薄&#34;&gt;刻薄&lt;/h1&gt;&#xA;&lt;p&gt;2014年11月&lt;/p&gt;&#xA;&lt;p&gt;最近我注意到，我认识的最成功的人中很少有刻薄的。有例外，但非常少。&lt;/p&gt;&#xA;&lt;p&gt;刻薄并不罕见。事实上，互联网向我们展示的一件事就是人们可以多么刻薄。几十年前，只有名人和专业作家才能发表他们的意见。现在每个人都可以，我们都能看到以前隐藏的刻薄的长尾。&lt;/p&gt;&#xA;&lt;p&gt;然而，虽然外面显然有很多刻薄的人，但在我认为最成功的人中几乎没有。这是怎么回事？刻薄和成功成反比吗？&lt;/p&gt;&#xA;&lt;p&gt;当然，部分原因是选择偏见。我只认识在某些领域工作的人：创业公司创始人、程序员、教授。我愿意相信其他领域的成功人士是刻薄的。也许成功的对冲基金经理是刻薄的；我不够了解，无法确定。似乎大多数成功的毒枭都很可能是刻薄的。但至少世界上有刻薄人不统治的大块区域，而且这个区域似乎正在增长。&lt;/p&gt;&#xA;&lt;p&gt;我的妻子和Y Combinator联合创始人杰西卡是那些具有品格X光视觉的罕见人物之一。和她结婚就像站在机场行李扫描仪旁边。她从投资银行业来到创业世界，她一直对成功的创业公司创始人如何一致地证明是好人，以及坏人如何一致地在创业公司创始人中失败感到惊讶。&lt;/p&gt;&#xA;&lt;p&gt;为什么？我认为有几个原因。一个是刻薄会让你变笨。这就是我讨厌争吵的原因。在争吵中你永远不会做到最好，因为争吵不够普遍。胜利总是取决于情况和涉及的人。你赢得争吵不是通过思考大创意，而是通过思考在特定情况下有效的技巧。然而，争吵和思考真正的问题一样耗费精力。对于一个关心如何使用自己大脑的人来说，这尤其痛苦：你的大脑转得很快，但你却寸步难行，就像车轮空转的汽车。&lt;/p&gt;&#xA;&lt;p&gt;创业公司不是通过攻击获胜的。他们通过超越获胜。当然有例外，但通常获胜的方法是领先，而不是停下来战斗。&lt;/p&gt;&#xA;&lt;p&gt;刻薄的创始人失败的另一个原因是他们无法让最优秀的人为他们工作。他们可以雇佣那些因为需要工作而忍受他们的人。但最优秀的人有其他选择。刻薄的人无法说服最优秀的人为他工作，除非他非常有说服力。虽然拥有最优秀的人对任何组织都有帮助，但对创业公司来说至关重要。&lt;/p&gt;&#xA;&lt;p&gt;还有一种互补的力量在起作用：如果你想建造伟大的东西，被仁慈精神驱动会有帮助。最终变得最富有的创业公司创始人不是那些被金钱驱动的人。被金钱驱动的人接受几乎每个成功创业公司在途中都会收到的大额收购要约。[1] 那些继续前进的人被其他东西驱动。他们可能不会明确这么说，但他们通常试图改善世界。这意味着有改善世界愿望的人具有天然优势。[2]&lt;/p&gt;&#xA;&lt;p&gt;令人兴奋的是，创业公司不仅仅是刻薄和成功成反比的一种随机工作类型。这种工作是未来。&lt;/p&gt;&#xA;&lt;p&gt;在历史的大部分时间里，成功意味着控制稀缺资源。人们通过战斗获得这种资源，无论是游牧民族将狩猎采集者驱赶到边缘土地的字面战斗，还是镀金时代金融家相互竞争组装铁路垄断的比喻性战斗。在历史的大部分时间里，成功意味着在零和游戏中成功。在大多数零和游戏中，刻薄不是障碍，反而可能是优势。&lt;/p&gt;&#xA;&lt;p&gt;这种情况正在改变。越来越重要的是，重要的游戏不是零和的。越来越多的你不是通过战斗来获得对稀缺资源的控制而获胜，而是通过拥有新想法和建造新东西。[3]&lt;/p&gt;&#xA;&lt;p&gt;长期以来，有些游戏是通过拥有新想法获胜的。在公元前3世纪，阿基米德就是这样获胜的。至少直到入侵的罗马军队杀了他。这说明了为什么这种变化正在发生：为了让新想法变得重要，你需要一定程度的文明秩序。不仅仅是不在战争状态。你还需要防止19世纪大亨相互之间和共产主义国家对公民实施的那种经济暴力。人们需要感觉到他们创造的东西不会被偷走。[4]&lt;/p&gt;&#xA;&lt;p&gt;对于思想家来说，情况一直如此，这就是为什么这种趋势始于他们。当你想到历史上那些无情的成功人士时，你会想到数学家、作家和艺术家。令人兴奋的是，他们的运作方式似乎正在传播。知识分子玩的游戏正在泄漏到现实世界，这正在逆转刻薄与成功之间关系的历史极性。&lt;/p&gt;&#xA;&lt;p&gt;所以我真的很高兴我停下来思考这个问题。杰西卡和我一直努力教导我们的孩子不要刻薄。我们容忍噪音、混乱和垃圾食品，但不容忍刻薄。现在我既有额外的理由来打击它，也有额外的论据来使用：刻薄会让你失败。&lt;/p&gt;&#xA;&lt;p&gt;注释&lt;/p&gt;&#xA;&lt;p&gt;[1] 我并不是说所有接受大额收购要约的创始人都是只被金钱驱动，而是说那些不接受的人不是。而且，被金钱驱动可能有慈善的动机——例如，照顾家庭，或者能够自由从事改善世界的项目。&lt;/p&gt;&#xA;&lt;p&gt;[2] 不可能每个成功的创业公司都改善世界。但它们的创始人，像父母一样，真的相信它们做到了。成功的创始人爱着他们的公司。虽然这种爱像人们之间的爱一样盲目，但它是真实的。&lt;/p&gt;&#xA;&lt;p&gt;[3] 彼得·蒂尔会指出，成功的创始人仍然通过控制垄断致富，只是他们创造的垄断而不是他们捕获的垄断。虽然这基本正确，但这意味着获胜者的类型发生了很大变化。&lt;/p&gt;&#xA;&lt;p&gt;[4] 公平地说，罗马人并不是故意杀死阿基米德的。罗马指挥官特别命令饶他一命。但他在混乱中还是被杀了。&lt;/p&gt;&#xA;&lt;p&gt;在足够混乱的时代，甚至思考都需要控制稀缺资源，因为活着本身就是稀缺资源。&lt;/p&gt;&#xA;&lt;p&gt;感谢Sam Altman、Ron Conway、Daniel Gackle、Jessica Livingston、Robert Morris、Geoff Ralston和Fred Wilson阅读本文草稿。&lt;/p&gt;&#xA;&lt;p&gt;葡萄牙语翻译&lt;/p&gt;&#xA;&lt;p&gt;日语翻译&lt;/p&gt;&#xA;&lt;p&gt;阿拉伯语翻译&lt;/p&gt;</description>
    </item>
    <item>
      <title>发现的风险</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/disc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/disc/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/disc.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;发现的风险&#34;&gt;发现的风险&lt;/h1&gt;&#xA;&lt;p&gt;2017年1月&lt;/p&gt;&#xA;&lt;p&gt;因为著名科学家的传记往往删去他们的错误，我们低估了他们愿意承担的风险程度。而且因为著名科学家所做的任何不是错误的事情现在可能已经成为传统智慧，这些选择似乎也不具风险。&lt;/p&gt;&#xA;&lt;p&gt;例如，牛顿的传记 understandably 更关注物理学而不是炼金术或神学。我们得到的印象是他无误的判断力直接引导他走向了别人没有注意到的真理。如何解释他在炼金术和神学上花费的所有时间？嗯，聪明人往往有点疯狂。&lt;/p&gt;&#xA;&lt;p&gt;但也许有一个更简单的解释。也许聪明和疯狂并不像我们想象的那么分离。物理学对我们来说似乎是一个有前途的工作领域，而炼金术和神学明显是浪费时间。但那是因为我们知道事情的结果。在牛顿的时代，这三个问题似乎大致同样有前途。还没有人知道发明我们现在称之为物理学的东西会有什么回报；如果他们知道，就会有更多的人在做它。而炼金术和神学在当时仍然属于Marc Andreessen所描述的&amp;quot;巨大，如果为真&amp;quot;的范畴。&lt;/p&gt;&#xA;&lt;p&gt;牛顿下了三个赌注。其中一个成功了。但它们都是有风险的。&lt;/p&gt;&#xA;&lt;p&gt;相关链接：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.aoky.net/articles/paul_graham/the_risk_of_discovery_japanese.htm&#34;&gt;日语翻译&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>另一条道路</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/road/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/road/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/road.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;另一条道路&#34;&gt;另一条道路&lt;/h1&gt;&#xA;&lt;p&gt;2001年9月&lt;/p&gt;&#xA;&lt;p&gt;（本文解释了为什么下一代软件的大部分可能是基于服务器的，这对程序员意味着什么，以及这种新型软件为什么是创业公司的绝佳机会。本文源自在BBN实验室的一次演讲。）&lt;/p&gt;&#xA;&lt;p&gt;1995年夏天，我的朋友Robert Morris和我决定创办一家创业公司。当时，围绕Netscape IPO的公关活动正如火如荼地进行，媒体上有很多关于电子商务的讨论。那时网络上可能只有三十家实际的商店，都是手工制作的。如果将来会有很多在线商店，就需要制作它们的软件，所以我们决定写一些这样的软件。&lt;/p&gt;&#xA;&lt;p&gt;在最初的一周左右，我们打算将其制作成一个普通的桌面应用程序。然后有一天我们想到让软件在我们的Web服务器上运行，使用浏览器作为界面。我们尝试重写软件使其在Web上工作，很明显这是正确的方法。如果我们编写的软件在服务器上运行，对用户和我们自己都会容易得多。&lt;/p&gt;&#xA;&lt;p&gt;结果证明这是一个好计划。现在，作为Yahoo Store，这个软件是最受欢迎的在线商店构建器，拥有约14,000个用户。&lt;/p&gt;&#xA;&lt;p&gt;当我们开始Viaweb时，几乎没有人理解我们说软件在服务器上运行是什么意思。直到一年后Hotmail推出，人们才开始理解。现在每个人都知道这是一个有效的方法。我们现在所做的事情有了一个名字：应用服务提供商，或ASP。&lt;/p&gt;&#xA;&lt;p&gt;我认为下一代软件的大部分都将按照这个模型编写。即使是损失最大的微软，似乎也看到将一些东西移出桌面是不可避免的。如果软件从桌面移到服务器上，对开发者来说将意味着一个完全不同的世界。本文描述了我们作为这个新世界的首批访客所看到的令人惊讶的事情。就软件确实转移到服务器上的程度而言，我在这里描述的就是未来。&lt;/p&gt;&#xA;&lt;h2 id=&#34;下一件大事&#34;&gt;下一件大事？&lt;/h2&gt;&#xA;&lt;p&gt;当我们回顾桌面软件时代时，我想我们会惊叹于人们忍受的不便，就像我们现在惊叹于早期车主忍受的不便一样。在最初的二三十年里，你必须是一个汽车专家才能拥有汽车。但汽车是一个如此巨大的进步，以至于很多不是汽车专家的人也想拥有它们。&lt;/p&gt;&#xA;&lt;p&gt;计算机现在正处于这个阶段。当你拥有桌面计算机时，你最终会学到比你想要知道的更多关于其内部情况的知识。但超过一半的美国家庭都拥有一台。我母亲有一台计算机，她用它来收发邮件和记账。大约一年前，她收到Apple的一封信，为她提供新操作系统的折扣，这让她感到担忧。当一个65岁的女性只想用计算机来收发邮件和记账时，却不得不考虑安装新的操作系统，这就有问题了。普通用户甚至不应该知道&amp;quot;操作系统&amp;quot;这个词，更不用说&amp;quot;设备驱动程序&amp;quot;或&amp;quot;补丁&amp;quot;了。&lt;/p&gt;&#xA;&lt;p&gt;现在有另一种交付软件的方式可以拯救用户免于成为系统管理员。基于Web的应用程序是在Web服务器上运行并使用Web页面作为用户界面的程序。对于普通用户来说，这种新型软件将比桌面软件更容易、更便宜、更便携、更可靠，而且通常更强大。&lt;/p&gt;&#xA;&lt;p&gt;有了基于Web的软件，大多数用户除了他们使用的应用程序外，不必考虑任何其他事情。所有混乱、变化的东西都将位于某处的服务器上，由擅长这种事情的人维护。因此，你通常不需要特定的计算机来使用软件。你只需要一个带有键盘、屏幕和Web浏览器的东西。也许它会有无线互联网接入。也许它也会是你的手机。无论它是什么，都将是消费电子产品：价格约200美元，人们主要根据外观选择的东西。你将在互联网服务上花费比硬件更多的钱，就像你现在对电话所做的那样。[1]&lt;/p&gt;&#xA;&lt;p&gt;点击到达服务器并返回需要大约十分之一秒，所以重度交互软件的用户，如Photoshop，仍然希望计算在桌面上进行。但如果你看大多数人使用计算机做的那种事情，十分之一秒的延迟不会成为问题。我母亲真的不需要桌面计算机，有很多像她这样的人。&lt;/p&gt;&#xA;&lt;h2 id=&#34;用户的胜利&#34;&gt;用户的胜利&lt;/h2&gt;&#xA;&lt;p&gt;我家附近有一辆车，保险杠上贴着&amp;quot;死也不愿不便&amp;quot;。大多数人，在大多数时候，会选择需要最少工作的选择。如果基于Web的软件获胜，那将是因为它更方便。对于用户和开发者来说，它似乎都会更方便。&lt;/p&gt;&#xA;&lt;p&gt;使用纯基于Web的应用程序，你只需要一个连接到互联网的浏览器。所以你可以在任何地方使用基于Web的应用程序。当你在桌面计算机上安装软件时，你只能在该计算机上使用它。更糟糕的是，你的文件被困在那台计算机上。随着人们习惯网络，这种模式的不便越来越明显。&lt;/p&gt;&#xA;&lt;p&gt;这里的开端是基于Web的电子邮件。现在数百万人意识到，无论你在哪里，都应该能够访问电子邮件。如果你能看到你的邮件，为什么不能看到你的日历？如果你能和同事讨论文档，为什么不能编辑它？为什么你的任何数据都应该被困在某个远处桌子的计算机上？&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;你的计算机&amp;quot;的整个概念正在消失，被&amp;quot;你的数据&amp;quot;所取代。你应该能够从任何计算机访问你的数据。或者更确切地说，任何客户端，而客户端不一定是计算机。&lt;/p&gt;&#xA;&lt;p&gt;客户端不应该存储数据；它们应该像电话一样。事实上，它们可能会变成电话，或者反之亦然。随着客户端变小，你有另一个理由不在它们上保存数据：随身携带的东西可能会丢失或被盗。把PDA留在出租车里就像磁盘崩溃，只是你的数据交给了别人而不是被蒸发掉了。&lt;/p&gt;&#xA;&lt;p&gt;使用纯基于Web的软件，你的数据和应用程序都不会保存在客户端上。所以你不需要安装任何东西来使用它。当没有安装时，你不必担心安装出错。应用程序和你的操作系统之间不可能存在不兼容性，因为软件不在你的操作系统上运行。&lt;/p&gt;&#xA;&lt;p&gt;因为它不需要安装，所以在你&amp;quot;购买&amp;quot;之前尝试基于Web的软件将是容易且常见的。你应该期望能够免费试用任何基于Web的应用程序，只需访问提供它的网站即可。在Viaweb，我们的整个网站就像一个大箭头，指向用户试驾。&lt;/p&gt;&#xA;&lt;p&gt;试驾后，注册服务只需要填写一个简短的表格（越简短越好）。这应该是用户必须做的最后工作。有了基于Web的软件，你应该无需额外付费、做任何工作，甚至可能无需知道就能获得新版本。&lt;/p&gt;&#xA;&lt;p&gt;升级不会像现在那样令人震惊。随着时间的推移，应用程序将悄然变得更强大。这需要开发者付出一些努力。他们必须设计软件，使其能够在不使用户困惑的情况下更新。这是一个新问题，但有解决方法。&lt;/p&gt;&#xA;&lt;p&gt;有了基于Web的应用程序，每个人都使用相同的版本，错误一旦发现就可以修复。所以基于Web的软件应该比桌面软件的错误少得多。在Viaweb，我怀疑我们任何时候有过十个已知的错误。这比桌面软件好几个数量级。&lt;/p&gt;&#xA;&lt;p&gt;基于Web的应用程序可以同时被多个人使用。这对于协作应用程序来说显然是一个优势，但我敢打赌，一旦用户意识到这是可能的，他们会开始在大多数应用程序中想要这个功能。例如，让两个人编辑同一个文档通常是有用的。Viaweb允许多个用户同时编辑一个站点，更多是因为这是编写软件的正确方式，而不是因为我们期望用户想要这样做，但结果证明很多人确实这样做了。&lt;/p&gt;&#xA;&lt;p&gt;当你使用基于Web的应用程序时，你的数据会更安全。磁盘崩溃不会成为过去的事情，但用户不会再听到它们。它们将发生在服务器集群中。提供基于Web应用程序的公司实际上会进行备份——不仅因为他们会有真正的系统管理员担心这些事情，而且因为丢失用户数据的ASP将陷入巨大的麻烦。当人们在自己的磁盘崩溃中丢失数据时，他们不会太生气，因为他们只能生自己的气。当公司为他们丢失数据时，他们会更生气。&lt;/p&gt;&#xA;&lt;p&gt;最后，基于Web的软件应该对病毒不那么脆弱。如果客户端除了浏览器外不运行任何东西，运行病毒的机会就更少，本地也没有数据可以损坏。攻击服务器本身的程序会发现它们防御得很好。[2]&lt;/p&gt;&#xA;&lt;p&gt;对于用户来说，基于Web的软件压力会更小。我认为如果你查看普通Windows用户的内心，你会发现对符合这种描述的软件有着巨大且基本未被利用的渴望。释放出来，它可能是一股强大的力量。&lt;/p&gt;&#xA;&lt;h2 id=&#34;代码之城&#34;&gt;代码之城&lt;/h2&gt;&#xA;&lt;p&gt;对于开发者来说，基于Web和桌面软件之间最显著的区别是，基于Web的应用程序不是单一的代码片段。它将是不同类型程序的集合，而不是单一的大二进制文件。因此设计基于Web的软件更像设计城市而不是建筑：除了建筑物，你还需要道路、路标、公用设施、警察和消防部门，以及增长和各种灾难的计划。&lt;/p&gt;&#xA;&lt;p&gt;在Viaweb，软件包括相当大的应用程序，用户直接与之对话；这些程序使用的程序；在后台持续运行寻找问题的程序；如果出现问题尝试重新启动事物的程序；偶尔运行以编译统计信息或构建搜索索引的程序；我们明确运行以垃圾收集资源或移动或恢复数据的程序；假装是用户的程序（以测量性能或暴露错误）；诊断网络问题的程序；进行备份的程序；外部服务的接口；驱动令人印象深刻的表盘集合显示实时服务器统计的软件（对访客来说很受欢迎，但对我们来说也是不可或缺的）；对开源软件的修改（包括错误修复）；以及大量的配置文件和设置。在我们被Yahoo收购后，Trevor Blackwell编写了一个精彩的程序，可以在不关闭商店的情况下将商店迁移到全国的新服务器。程序通过传呼机呼叫我们，向用户发送传真和电子邮件，与信用卡处理商进行交易，并通过套接字、管道、http请求、ssh、udp数据包、共享内存和文件相互交谈。Viaweb的一部分甚至由程序的缺失组成，因为Unix安全的关键之一是不运行人们可能用来闯入服务器的不必要实用程序。&lt;/p&gt;&#xA;&lt;p&gt;这并不以软件结束。我们花了很多时间思考服务器配置。我们自己从组件构建服务器——部分是为了省钱，部分是为了得到我们想要的东西。我们必须考虑我们的上游ISP是否与所有骨干网有足够快的连接。我们与RAID供应商连续约会。&lt;/p&gt;&#xA;&lt;p&gt;但硬件不仅仅是要担心的事情。当你控制它时，你可以为用户做更多。对于桌面应用程序，你可以指定某些最低硬件要求，但你不能添加更多。如果你管理服务器，你可以一步让所有用户能够传呼别人，或发送传真，或通过电话发送命令，或处理信用卡等，只需安装相关硬件即可。我们总是寻找用硬件添加功能的新方法，不仅因为它让用户高兴，而且作为将自己与竞争对手区分开来的方式——竞争对手要么因为他们销售桌面软件，要么通过ISP转售基于Web的应用程序，不能直接控制硬件。&lt;/p&gt;&#xA;&lt;p&gt;因为基于Web应用程序中的软件将是程序的集合而不是单一的二进制文件，它可以用多种不同的语言编写。当你编写桌面软件时，你实际上被迫用与底层操作系统相同的语言编写应用程序——即C和C++。因此，这些语言（尤其是在非技术人员如经理和风险投资家中）被认为是&amp;quot;严肃&amp;quot;软件开发的语言。但这只是桌面软件必须交付方式的人工产物。对于基于服务器的软件，你可以使用任何你想要的语言。[3] 今天，许多顶级黑客使用远离C和C++的语言：Perl、Python，甚至Lisp。&lt;/p&gt;&#xA;&lt;p&gt;有了基于服务器的软件，没有人能告诉你使用什么语言，因为你控制整个系统，一直到硬件。不同的语言适合不同的任务。你可以为每个任务使用最适合的语言。当你有竞争对手时，&amp;ldquo;你可以&amp;quot;意味着&amp;quot;你必须&amp;rdquo;（我们稍后会回到这一点），因为如果你不利用这种可能性，你的竞争对手会。&lt;/p&gt;&#xA;&lt;p&gt;我们的大多数竞争对手使用C和C++，这使得他们的软件明显 inferior，因为（除其他外），他们无法解决CGI脚本的无状态性问题。如果你要改变什么，所有的改变都必须在一个页面上发生，底部有一个更新按钮。正如我在其他地方写过的，通过使用许多人仍然认为是研究语言的Lisp，我们能够让Viaweb编辑器的行为更像桌面软件。&lt;/p&gt;&#xA;&lt;h2 id=&#34;发布&#34;&gt;发布&lt;/h2&gt;&#xA;&lt;p&gt;在这个新世界中最重要的变化之一是你进行发布的方式。在桌面软件业务中，进行发布是一个巨大的创伤，整个公司都在努力推出一个单一的、巨大的代码片段。明显的比较会让人联想到这个过程和最终产品。&lt;/p&gt;&#xA;&lt;p&gt;有了基于服务器的软件，你可以像为自己编写的程序那样几乎实时地进行更改。你以一系列增量更改而不是偶尔的大爆炸形式发布软件。一个典型的桌面软件公司可能一年进行一两次发布。在Viaweb，我们通常一天进行三到五次发布。&lt;/p&gt;&#xA;&lt;p&gt;当你切换到这个新模式时，你会意识到软件开发受到发布方式的影响有多大。你在桌面软件业务中看到的一些最令人讨厌的问题是由于发布的灾难性性质造成的。&lt;/p&gt;&#xA;&lt;p&gt;当你每年只发布一个新版本时，你倾向于批量处理错误。在发布日期之前的某个时间，你组装一个新版本，其中一半的代码被撕掉并替换，引入了无数错误。然后一队QA人员介入并开始计算它们，程序员们处理这个列表，修复它们。他们通常不会到达列表的末尾，事实上，没有人确定末尾在哪里。这就像从池塘里捞碎石。你永远不知道软件内部发生了什么。充其量你最终得到一种统计上的正确性。&lt;/p&gt;&#xA;&lt;p&gt;有了基于服务器的软件，大多数更改都是小而增量的。这本身就不太可能引入错误。这也意味着当你准备发布软件时，你知道最需要仔细测试什么：你最后改变的东西。你对代码的控制要牢固得多。作为一个一般规则，你确实知道它内部发生了什么。当然你没有记住源代码，但当你阅读源代码时，你这样做就像飞行员扫描仪表盘，而不是像侦探试图解开一些谜团。&lt;/p&gt;&#xA;&lt;p&gt;桌面软件培养了对错误的某种宿命论。你知道你正在发布充满错误的东西，你甚至建立了补偿机制（例如补丁发布）。那么为什么还要担心几个更多的错误呢？很快你就会发布你知道有问题的整个功能。苹果今年早些时候就这样做了。他们感到压力要发布他们的新操作系统，其发布日期已经四次推迟，但一些软件（对CD和DVD的支持）还没有准备好。解决方案？他们在没有完成部分的情况下发布了操作系统，用户将不得不稍后安装它们。&lt;/p&gt;&#xA;&lt;p&gt;有了基于Web的软件，你永远不必在软件能够工作之前发布它，你可以一旦它能够工作就发布它。&lt;/p&gt;&#xA;&lt;p&gt;行业资深人士可能会想，说你在软件能够工作之前永远不必发布软件听起来是个好主意，但当你承诺在某个日期之前交付软件的新版本时会发生什么？有了基于Web的软件，你不会做出这样的承诺，因为没有版本。你的软件逐渐而持续地变化。一些变化可能比其他变化更大，但版本的概念自然不适合基于Web的软件。&lt;/p&gt;&#xA;&lt;p&gt;如果有人记得Viaweb，这可能听起来很奇怪，因为我们总是在宣布新版本。这完全是为了公关目的。我们了解到，行业媒体是以版本号思考的。他们会为主要版本提供主要报道，意思是版本号的新第一位数字，而对于点版本，通常最多只有一个段落，意思是小数点后的新数字。&lt;/p&gt;&#xA;&lt;p&gt;我们的一些竞争对手提供桌面软件，实际上有版本号。对于这些发布，仅仅这个事实在我们看来就是他们落后的证据，他们会获得各种宣传。我们不想错过，所以我们也开始给我们的软件版本号。当我们想要一些宣传时，我们会列出自上次&amp;quot;发布&amp;quot;以来我们添加的所有功能，在软件上贴上一个新版本号，并发布新闻稿说新版本立即可用。令人惊讶的是，从来没有人指责我们这样做。&lt;/p&gt;&#xA;&lt;p&gt;到我们被收购时，我们已经这样做了三次，所以我们处于版本4。如果我没记错的话，是版本4.1。在Viaweb成为Yahoo Store后，不再如此迫切需要宣传，所以尽管软件继续发展，版本号的整个概念被悄然放弃了。&lt;/p&gt;&#xA;&lt;h2 id=&#34;错误&#34;&gt;错误&lt;/h2&gt;&#xA;&lt;p&gt;基于Web软件的另一个主要技术优势是你可以重现大多数错误。用户的数据就在你的磁盘上。如果有人破坏了你的软件，你不必像桌面软件那样猜测发生了什么：你应该能够在他们在电话上与你交谈时重现错误。如果你在应用程序中内置了注意错误的代码，你甚至可能已经知道它。&lt;/p&gt;&#xA;&lt;p&gt;基于Web的软件全天候使用，所以你所做的一切都会立即受到考验。错误很快就会出现。&lt;/p&gt;&#xA;&lt;p&gt;软件公司有时被指控让用户调试他们的软件。而这正是我所倡导的。对于基于Web的软件，这实际上是一个好计划，因为错误更少且短暂。当你逐渐发布软件时，一开始你得到的错误会少得多。当你能够重现错误并立即发布更改时，你可以在大多数错误出现时找到并修复它们。我们任何时候都没有足够的错误需要正式的错误跟踪系统。&lt;/p&gt;&#xA;&lt;p&gt;当然，你应该在发布之前测试更改，所以不应该发布主要错误。那些不可避免地漏掉的少数错误将涉及边界情况，并且只会在有人打电话抱怨之前影响少数遇到它们的用户。只要你立即修复错误，对于普通用户来说，净效果是错误少得多。我怀疑普通Viaweb用户曾经看到过错误。&lt;/p&gt;&#xA;&lt;p&gt;修复新错误比修复旧错误更容易。在你刚刚编写的代码中找到错误通常相当快。当它出现时，你往往在查看源代码之前就知道哪里错了，因为你已经在潜意识中担心它了。修复六个月前编写的代码中的错误（如果你一年发布一次，这是平均情况）要多花很多工作。而且由于你对代码的理解不够，你更有可能以丑陋的方式修复它，甚至引入更多错误。[4]&lt;/p&gt;&#xA;&lt;p&gt;当你及早发现错误时，你也会得到更少的复合错误。复合错误是两个相互作用的独立错误：你下楼时绊倒，当你伸手抓住栏杆时，它从你手中脱落。在软件中，这种错误是最难发现的，而且往往具有最严重的后果。[5] 传统的&amp;quot;打破一切然后过滤错误&amp;quot;方法本质上会产生很多复合错误。而以一系列小更改发布的软件本质上不会这样。地板不断被清扫干净，任何可能后来卡在什么东西里的松散物体。&lt;/p&gt;&#xA;&lt;p&gt;如果你使用一种称为函数式编程的技术，这会有所帮助。函数式编程意味着避免副作用。你更可能在研究论文中看到它，而不是商业软件，但对于基于Web的应用程序，它结果非常有用。将整个程序写成纯函数式代码很难，但你可以用这种方式编写实质性的部分。它使你软件的这些部分更容易测试，因为它们没有状态，在你不断制作和测试小修改的情况下，这非常方便。我用这种风格编写了Viaweb编辑器的大部分，我们使我们的脚本语言RTML成为一种纯函数式语言。&lt;/p&gt;&#xA;&lt;p&gt;来自桌面软件业务的人会发现这难以置信，但在Viaweb，错误几乎成了一种游戏。由于大多数发布的错误都涉及边界情况，遇到它们的用户可能是高级用户，他们在测试极限。高级用户对错误更宽容，特别是因为你可能是在添加他们要求的功能时引入了它们的。事实上，因为错误很少，你必须做复杂的事情才能看到它们，高级用户常常为抓住一个而感到自豪。他们会怀着更多是胜利而不是愤怒的精神致电支持，好像他们从我们这里得分了。&lt;/p&gt;&#xA;&lt;h2 id=&#34;支持&#34;&gt;支持&lt;/h2&gt;&#xA;&lt;p&gt;当你能够重现错误时，它改变了你处理客户支持的方法。在大多数软件公司，支持作为让客户感觉更好的方式提供。他们要么是关于一个已知错误打电话给你，要么是他们做错了什么，你必须弄清楚是什么。在任何一种情况下，你都从他们那里学不到太多东西。所以你倾向于将支持电话视为一个令人讨厌的事情，你希望尽可能将其与开发者隔离。&lt;/p&gt;</description>
    </item>
    <item>
      <title>向创始人学习</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/foundersatwork/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/foundersatwork/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/foundersatwork.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;向创始人学习&#34;&gt;向创始人学习&lt;/h1&gt;&#xA;&lt;p&gt;2007年1月&lt;/p&gt;&#xA;&lt;p&gt;（Jessica Livingston的《创业者访谈录》前言）&lt;/p&gt;&#xA;&lt;p&gt;显然，短跑运动员在起跑后就达到最高速度，然后其余时间都在减速。赢家减速最少。大多数创业公司也是如此。最早的阶段通常是最多产的。那是他们真正有大创意的时候。想象一下当苹果公司100%的员工都是Steve Jobs或Steve Wozniak时的样子。&lt;/p&gt;&#xA;&lt;p&gt;这个阶段的显著特点是，它与大多数人对商业的看法完全不同。如果你在人们的头脑（或图片库）中寻找代表&amp;quot;商业&amp;quot;的图像，你会得到人们穿着西装、坐在会议桌周围表情严肃的群体、Powerpoint演示文稿、人们为彼此阅读制作厚厚报告的图像。早期创业公司与此完全相反。然而，它们可能是整个经济中最有生产力的部分。&lt;/p&gt;&#xA;&lt;p&gt;为什么会有这种脱节？我认为这里有一个普遍原则在起作用：人们在表现上花费的精力越少，他们在外表上花费的精力就越多以补偿。通常，他们花在看起来令人印象深刻上的精力实际上使他们的表现更差。几年前我读了一篇文章，其中一家汽车杂志改装了某款量产车的&amp;quot;运动&amp;quot;型号，以获得最快可能的静止四分之一英里速度。你知道他们是怎么做的吗？他们切掉了制造商为了使车看起来快而安装在车上所有垃圾。&lt;/p&gt;&#xA;&lt;p&gt;商业就像那辆车一样被破坏了。花在看起来有生产力上的努力不仅是浪费的，而且实际上使组织的生产力降低。例如，西装。西装无助于人们更好地思考。我敢打赌，大多数大公司的高管在周日早上醒来，穿着浴袍下楼喝咖啡时思考得最好。那时你才有创意。想象一下，如果人们能在工作中思考得那么好，公司会是什么样子。在创业公司中人们确实能做到，至少有时如此。（一半时间你处于恐慌状态，因为你的服务器着火了，但另一半时间你的思考深度是大多数人在周日早上独自坐着时才能达到的。）&lt;/p&gt;&#xA;&lt;p&gt;创业公司与在大公司中被视为生产力的大多数其他差异也是如此。然而，传统的专业主义观念对我们的思想有如此强烈的控制，甚至创业创始人都受到影响。在我们的创业公司中，当外人来访时，我们努力显得&amp;quot;专业&amp;quot;。我们会清理办公室，穿更好的衣服，试着安排很多人在正常办公时间在那里。事实上，编程不是由穿着得体的人在干净办公桌前在办公时间内完成的。它是由穿着不得体的人（我因只穿着毛巾编程而臭名昭著）在凌晨2点在堆满垃圾的办公室里完成的。但没有一个访客会理解这一点。即使是投资者，他们应该能够在看到真正的生产力时认出它。甚至我们也受到了传统智慧的影响。我们把自己视为冒名顶替者，尽管完全不专业却成功了。就好像我们创造了一辆一级方程式赛车，但因为看起来不像汽车应该的样子而感到尴尬。&lt;/p&gt;&#xA;&lt;p&gt;在汽车界，至少有一些人知道高性能汽车看起来像一级方程式赛车，而不是带有巨大轮毂和假尾翼固定在行李箱上的轿车。为什么在商业界不是这样？可能是因为创业公司太小了。真正的戏剧性增长发生在创业公司只有三四个人时，所以只有三四个人看到这一点，而成千上万的人看到的是像波音或菲利普莫里斯那样的商业运作方式。&lt;/p&gt;&#xA;&lt;p&gt;这本书可以帮助解决这个问题，向每个人展示到目前为止只有少数人能看到的东西：创业公司第一年发生的事情。这就是真正生产力的样子。这是一级方程式赛车。它看起来很奇怪，但跑得很快。&lt;/p&gt;&#xA;&lt;p&gt;当然，大公司无法做到这些创业公司所做的一切。在大公司中，总会有更多的政治，个人决策的空间更少。但看到创业公司的真实情况至少会向其他组织展示目标是什么。很快的时候可能会到来，不是创业公司试图显得更像企业，而是企业试图显得更像创业公司。那将是一件好事。&lt;/p&gt;&#xA;&lt;p&gt;日文版《创业者访谈录》&lt;/p&gt;&#xA;&lt;p&gt;能够亲身体验成功创业公司第一个月发生的事情的人不会超过几千人。Jessica Livingston让他们告诉我们。所以尽管是访谈格式，但这真的是一本操作指南。它可能是创业创始人能读到的最有价值的单本书籍。&lt;/p&gt;</description>
    </item>
    <item>
      <title>商业可以从开源中学到什么</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/opensource/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/opensource/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/opensource.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;商业可以从开源中学到什么&#34;&gt;商业可以从开源中学到什么&lt;/h1&gt;&#xA;&lt;p&gt;2005年8月&lt;/p&gt;&#xA;&lt;p&gt;（本文源自2005年Oscon大会的演讲。）&lt;/p&gt;&#xA;&lt;p&gt;最近，公司对开源的关注越来越多。十年前，微软似乎真的有可能将其垄断扩展到服务器领域。现在可以肯定地说，开源已经阻止了这种情况的发生。最近的一项调查发现，52%的公司正在用Linux服务器替换Windows服务器。[1]&lt;/p&gt;&#xA;&lt;p&gt;我认为，更重要的是这52%是哪些公司。在这一点上，任何提议在服务器上运行Windows的人都应该准备好解释他们对服务器的了解比Google、Yahoo和Amazon多什么。&lt;/p&gt;&#xA;&lt;p&gt;但商业可以从开源中学到的最重要的东西不是关于Linux或Firefox，而是关于产生它们的力量。最终，这些力量将影响的远不止你使用什么软件。&lt;/p&gt;&#xA;&lt;p&gt;我们或许可以通过开源和博客的三角定位来把握这些潜在力量。你可能已经注意到，它们有很多共同之处。&lt;/p&gt;&#xA;&lt;p&gt;像开源一样，博客是人们自己做、免费做、因为他们喜欢而做的事情。像开源黑客一样，博客作者与为钱工作的人竞争，而且经常获胜。确保质量的方法也是一样的：达尔文式的。公司通过防止员工搞砸的规则来确保质量。但当受众可以相互交流时，你就不需要那种规则了。人们只是生产他们想要的任何东西；好的东西传播开来，坏的则被忽视。在这两种情况下，受众的反馈都改进了最好的作品。&lt;/p&gt;&#xA;&lt;p&gt;博客和开源的另一个共同点是Web。人们总是愿意免费做伟大的工作，但在Web之前，接触受众或在项目上合作更加困难。&lt;/p&gt;&#xA;&lt;h2 id=&#34;业余爱好者&#34;&gt;业余爱好者&lt;/h2&gt;&#xA;&lt;p&gt;我认为商业必须学习的最重要新原则是，人们对自己喜欢的东西会工作得更努力。嗯，这对任何人来说都不是新闻。那么我怎么能说商业必须学习它呢？当我说商业不知道这一点时，我的意思是商业结构没有反映这一点。&lt;/p&gt;&#xA;&lt;p&gt;商业仍然反映了一个更古老的模式，以法语工作的词travailleur为例。它有一个英语表亲travail，它的意思是折磨。[2]&lt;/p&gt;&#xA;&lt;p&gt;然而，事实证明这不是关于工作的最后定论。随着社会变得越来越富裕，他们学到的一些关于工作的事情很像他们学到的一些关于饮食的事情。我们现在知道，最健康的饮食是我们的农民祖先因为贫穷而被迫吃的饮食。像丰富的食物一样，只有当你得不到足够的懒惰时，它才似乎令人向往。我认为我们被设计来工作，就像我们被设计吃一定量的纤维一样，如果我们不这样做，我们会感到不舒服。&lt;/p&gt;&#xA;&lt;p&gt;为爱而工作的人有一个名字：业余爱好者。这个词现在有如此坏的内涵，以至于我们忘记了它的词源，尽管它就在我们眼前。&amp;ldquo;Amateur&amp;quot;最初是一个相当恭维的词。但在二十世纪，要成为专业人士，而业余爱好者，根据定义，不是专业人士。&lt;/p&gt;&#xA;&lt;p&gt;这就是为什么商业界对开源的一个教训如此惊讶：为爱而工作的人经常超过为钱而工作的人。用户从Explorer切换到Firefox不是因为想要修改源代码。他们切换是因为它是更好的浏览器。&lt;/p&gt;&#xA;&lt;p&gt;不是微软不努力。他们知道控制浏览器是保持垄断的关键之一。他们面临的问题与他们在操作系统领域面临的问题相同：他们无法支付足够的钱让人们建造比一群有灵感的黑客免费建造的更好的东西。&lt;/p&gt;&#xA;&lt;p&gt;我怀疑专业化一直被高估了——不仅是从为钱工作的字面意义上，还包括形式和超然等内涵。不可思议的是，比如在1970年，我认为专业化主要是一种时尚，是由二十世纪存在的条件驱动的。&lt;/p&gt;&#xA;&lt;p&gt;其中最强大的是&amp;quot;渠道&amp;quot;的存在。引人注目的是，同样的术语用于产品和信息：有分销渠道，以及电视和广播频道。&lt;/p&gt;&#xA;&lt;p&gt;正是这种渠道的狭窄性使专业人士似乎比业余爱好者优越得多。例如，专业记者的工作职位很少，所以竞争确保了普通记者都相当不错。而任何人都可以在酒吧里表达对当前事件的看法。因此，在酒吧里表达意见的普通人与撰写这个主题的记者相比听起来像个白痴。&lt;/p&gt;&#xA;&lt;p&gt;在Web上，发布你想法的门槛甚至更低。你不需要买饮料，他们甚至让孩子进入。数百万人在线发布，他们写作的平均水平，正如你可能预期的，不是很好。这导致媒体中的一些人得出结论，博客不构成太大威胁——博客只是一种时尚。&lt;/p&gt;&#xA;&lt;p&gt;实际上，时尚的是&amp;quot;博客&amp;quot;这个词，至少是印刷媒体现在使用它的方式。他们所说的&amp;quot;博主&amp;quot;不是以网络日志格式发布的人，而是在线发布的任何人。随着Web成为默认的发布媒介，这将变成一个问题。所以我想为在线发布的人建议一个替代词。怎么样用&amp;quot;作家&amp;rdquo;？&lt;/p&gt;&#xA;&lt;p&gt;那些因为在线写作的平均质量低而忽视它的印刷媒体人士忽略了一个重要观点：没有人读普通的博客。在渠道的旧世界里，谈论平均质量是有意义的，因为不管你喜欢与否，你得到的就是那个。但现在你可以阅读任何你想要的作家。所以在线写作的平均质量不是印刷媒体竞争的对象。他们竞争的是在线最好的写作。而且，像微软一样，他们正在输。&lt;/p&gt;&#xA;&lt;p&gt;我从自己作为读者的经历知道这一点。虽然大多数印刷出版物都在线，但我可能在个人网站上读两三篇文章，才会在报纸或杂志的网站上读一篇。&lt;/p&gt;&#xA;&lt;p&gt;当我读，比如说，《纽约时报》的故事时，我从不通过《纽约时报》首页到达它们。我大多通过聚合器如Google News、Slashdot或Delicious找到它们。聚合器显示了你可以比渠道做得好多少。《纽约时报》首页是为《纽约时报》工作的人写的文章列表。Delicious是有趣的文章列表。只有现在你可以并排看到两者，你才注意到重叠是多么少。&lt;/p&gt;&#xA;&lt;p&gt;印刷媒体中的大多数文章都很无聊。例如，总统注意到大多数选民现在认为入侵伊拉克是个错误，所以他向全国发表演讲以争取支持。那有什么咬人的呢？我没有听演讲，但我可能可以准确告诉你他说了什么。像这样的演讲，从最字面的意义上说，不是新闻：里面没有什么新东西。[3]&lt;/p&gt;&#xA;&lt;p&gt;在大多数关于出错的&amp;quot;新闻&amp;quot;中，除了名字和地点，也没有什么新东西。一个孩子被绑架；有龙卷风；渡轮沉没；有人被鲨鱼咬伤；小型飞机坠毁。你从这些故事中学到了什么关于世界的事情？绝对没有。它们是离群的数据点；使它们引人入胜的东西也使它们变得无关紧要。&lt;/p&gt;&#xA;&lt;p&gt;就像在软件中一样，当专业人士生产这样的垃圾时，如果业余爱好者能做得更好，也就不足为奇了。成也渠道，败也渠道：如果你依赖寡头垄断，你会陷入难以克服的坏习惯，当你突然遇到竞争时。[4]&lt;/p&gt;&#xA;&lt;h2 id=&#34;工作场所&#34;&gt;工作场所&lt;/h2&gt;&#xA;&lt;p&gt;博客和开源软件的另一个共同点是它们通常是在家工作的人制作的。这可能看起来并不令人惊讶。但应该是。这相当于一架自制飞机击落F-18的建筑上的等价物。公司花费数百万建造办公楼，只为一个目的：作为工作场所。然而，在自己家里工作的人，他们的家甚至不是设计为工作场所的，最终却更有生产力。&lt;/p&gt;&#xA;&lt;p&gt;这证明了许多人怀疑的事情。普通办公室是完成工作的糟糕地方。使办公室变坏的很多东西恰恰是我们与专业化相关的品质。办公室的无菌性应该是为了暗示效率。但暗示效率和实际上有效率是不同的事情。&lt;/p&gt;&#xA;&lt;p&gt;普通工作场所的氛围对生产力来说就像画在汽车侧面的火焰对速度一样。而且不仅仅是办公室看起来很 bleak。人们的行为方式也同样糟糕。&lt;/p&gt;&#xA;&lt;p&gt;在初创公司中情况不同。初创公司通常从公寓开始。他们没有匹配的米色小隔间，而是有各种他们买来的二手家具。他们工作时间不规律，穿着最随意的衣服。他们看任何他们想在线看的东西，而不担心是否&amp;quot;工作安全&amp;quot;。办公室愉快、平淡的语言被邪恶的幽默所取代。你知道吗？公司在这个阶段可能是有史以来最有生产力的。&lt;/p&gt;&#xA;&lt;p&gt;也许这不是巧合。也许专业化的某些方面实际上是一个净损失。&lt;/p&gt;&#xA;&lt;p&gt;对我来说，传统办公室最令人沮丧的方面是你应该在特定时间在那里。公司里通常有几个人真的必须这样，但大多数员工工作时间固定是因为公司无法衡量他们的生产力。&lt;/p&gt;&#xA;&lt;p&gt;办公时间背后的基本想法是，如果你不能让人们工作，你至少可以防止他们玩乐。如果员工每天必须在建筑物里待一定数量的小时，并且在那里被禁止做非工作的事情，那么他们一定是在工作。理论上。在实践中，他们花费大量时间在无人地带，在那里他们既不工作也不玩乐。&lt;/p&gt;&#xA;&lt;p&gt;如果你能衡量人们做了多少工作，许多公司不需要任何固定的工作日。你可以说：这是你必须做的。无论何时何地，只要你喜欢就做。如果你的工作需要与公司里的其他人交谈，那么你可能需要在这里一定时间。否则我们不关心。&lt;/p&gt;&#xA;&lt;p&gt;这可能看起来乌托邦，但这就是我们告诉来为我们公司工作的人的话。没有固定的办公时间。我从不早于上午11点出现。但我们说这个不是为了仁慈。我们说：如果你在这里工作，我们期望你完成很多事情。不要试图仅仅通过多在这里来欺骗我们。&lt;/p&gt;&#xA;&lt;p&gt;面子时间模式的问题不仅令人沮丧，而且假装工作的人打断了实际工作的人。我确信面子时间模式是大型组织有这么多会议的主要原因。人均而言，大型组织完成的很少。然而所有这些人每天必须在现场至少八小时。当这么多时间进入一端而如此少的成就从另一端出来时，总会有所让步。而会议是填补松懈的主要机制。&lt;/p&gt;&#xA;&lt;p&gt;我曾经做了一份朝九晚五的常规工作，我记得很清楚会议期间 strange, cozy的感觉。因为新奇，我很清楚地意识到我正在为编程获得报酬。这似乎令人惊讶，好像我桌上有一台机器，无论我做什么，每两分钟吐出一美元纸币。即使我在浴室里！但因为想象中的机器一直在运行，我觉得我应该总是在工作。所以会议感觉令人愉快地放松。它们算作工作，就像编程一样，但它们容易得多。你只需要坐着看起来注意力集中。&lt;/p&gt;&#xA;&lt;p&gt;会议就像有网络效应的鸦片。电子邮件在较小程度上也是如此。除了时间的直接成本外，还有碎片化的成本——把人们的一天分解成太小而无法利用的碎片。&lt;/p&gt;&#xA;&lt;p&gt;你可以通过突然移除某些东西来看你对它有多依赖。所以对于大公司，我提议以下实验。留出一天禁止会议——每个人都必须整天坐在办公桌前，在没有中断的情况下工作，做他们可以在不与任何人交谈的情况下做的事情。大多数工作需要一定量的沟通，但我确信许多员工可以找到八小时的自己可以做的事情。你可以称之为&amp;quot;工作日&amp;quot;。&lt;/p&gt;&#xA;&lt;p&gt;假装工作的另一个问题是它通常看起来比真实工作更好。当我写作或编程时，我花在思考上的时间和实际打字的时间一样多。一半的时间我坐着喝茶，或在附近散步。这是一个关键阶段——这是想法来源的地方——然而在大多数办公室里，我会感到内疚，因为其他人看起来都很忙。&lt;/p&gt;&#xA;&lt;p&gt;在你有可以比较的东西之前，很难看出一些做法有多糟糕。这就是开源，甚至在某些情况下的博客如此重要的原因之一。它们向我们展示了真实工作的样子。&lt;/p&gt;&#xA;&lt;p&gt;我们目前正在资助八家新的初创公司。一个朋友问他们在办公空间方面做什么，当我说我们期望他们在他们找到居住的任何公寓里工作时，他似乎感到惊讶。但我们提出这个不是为了省钱。我们这样做是因为我们希望他们的软件是好的。在糟糕的非正式空间工作是初创公司在没有意识到的情况下做对的事情之一。一旦你进入办公室，工作和生活就开始分离。&lt;/p&gt;&#xA;&lt;p&gt;这就是专业化的关键信条之一。工作和生活应该分开。但那部分，我确信，是一个错误。&lt;/p&gt;&#xA;&lt;h2 id=&#34;自下而上&#34;&gt;自下而上&lt;/h2&gt;&#xA;&lt;p&gt;我们可以从开源和博客中学到的第三个大教训是，想法可以从底部冒出来，而不是从顶部流下来。开源和博客都是自下而上工作的：人们制作他们想要的东西，最好的东西胜出。&lt;/p&gt;&#xA;&lt;p&gt;这听起来熟悉吗？这是市场经济的原则。具有讽刺意味的是，虽然开源和博客是免费做的，但那些世界类似于市场经济，而大多数公司，尽管他们谈论自由市场的价值，内部却像共产主义国家一样运作。&lt;/p&gt;&#xA;&lt;p&gt;有两个力量一起引导设计：关于接下来做什么的想法，以及质量的执行。在渠道时代，两者都从顶部流下来。例如，报纸编辑给记者分配故事，然后编辑他们写的东西。&lt;/p&gt;&#xA;&lt;p&gt;开源和博客向我们展示了事情不必那样运作。想法甚至质量的执行都可以自下而上地流动。在这两种情况下，结果不仅是可接受的，而且是更好的。例如，开源软件更可靠正是因为它是开源的；任何人都可以发现错误。&lt;/p&gt;&#xA;&lt;p&gt;写作也是如此。当我们接近出版时，我发现我非常担心《黑客与画家》中没有在线的文章。一旦一篇文章有了几千次浏览，我对它就相当有信心了。但这些文章受到的审查 literally 少了数量级。感觉就像发布没有测试过的软件。&lt;/p&gt;&#xA;&lt;p&gt;这就是所有出版过去的样子。如果你能让十个人阅读手稿，你就很幸运了。但我已经变得如此习惯在线发布，以至于旧的方法现在看起来令人担忧地不可靠，就像在你习惯了GPS之后通过航位推法导航。&lt;/p&gt;&#xA;&lt;p&gt;我喜欢在线出版的另一个事情是你可以写你想写的，随时发布。今年早些时候我写了一些似乎适合杂志的东西，所以我把它发给我认识的一个编辑。在等待回音时，我惊讶地发现自己希望他们拒绝它。然后我可以立即把它放上网。如果他们接受了，几个月内不会有人读到它，在此期间我必须逐字斗争以拯救它不被某个二十五岁的文字编辑破坏。[5]&lt;/p&gt;&#xA;&lt;p&gt;许多员工想为他们工作的公司建造伟大的东西，但管理层往往不让他们。我们中有多少人听过员工去管理层说，请让我们建造这个东西为你赚钱——而公司说不的故事？最著名的例子可能是Steve Wozniak，他最初想为他当时的雇主HP建造微型计算机。他们拒绝了他。在失误测量仪上，这一事件与IBM接受DOS的非排他性许可证相当。但我认为这种情况一直发生。我们通常没有听说，因为要证明自己是对的，你必须辞职并创办自己的公司，就像Wozniak那样。&lt;/p&gt;&#xA;&lt;h2 id=&#34;初创公司&#34;&gt;初创公司&lt;/h2&gt;&#xA;&lt;p&gt;所以这些，我认为，是开源和博客可以教给商业的三个大教训：(1) 人们对自己喜欢的东西工作得更努力，(2) 标准的办公环境非常没有生产力，(3) 自下而上往往比自上而下效果更好。&lt;/p&gt;&#xA;&lt;p&gt;我可以想象经理们现在会说：这家伙在说什么？知道我的程序员在家自己的项目上工作会更有效率对我有什么好处？我需要他们的屁股在这里为我们的软件3.2版本工作，否则我们永远无法赶上发布日期。&lt;/p&gt;&#xA;&lt;p&gt;确实，我描述的力量给那个特定经理能带来的好处接近于零。当我说商业可以从开源中学习时，我不是说任何特定的商业可以。我的意思是商业可以像基因池一样学习新条件。我不是声称公司可以变得更聪明，只是说愚蠢的公司会死掉。&lt;/p&gt;</description>
    </item>
    <item>
      <title>城市</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/cities/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/cities/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/cities.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;城市与雄心&#34;&gt;城市与雄心&lt;/h1&gt;&#xA;&lt;p&gt;2008年5月&lt;/p&gt;&#xA;&lt;p&gt;伟大的城市吸引有雄心的人。当你在一个城市里走动时，你能感觉到这一点。在一百种微妙的方式中，城市向你传递一个信息：你可以做得更多；你应该更加努力。&lt;/p&gt;&#xA;&lt;p&gt;令人惊讶的是这些信息有多么不同。纽约首先告诉你：你应该赚更多的钱。当然，还有其他信息。你应该更时髦。你应该更好看。但最清晰的信息是你应该更富有。&lt;/p&gt;&#xA;&lt;p&gt;我喜欢波士顿（或者更确切地说是剑桥）的原因是，那里的信息是：你应该更聪明。你真的应该开始读那些你一直打算读的书了。&lt;/p&gt;&#xA;&lt;p&gt;当你问一个城市传递什么信息时，有时你会得到令人惊讶的答案。尽管硅谷很尊重聪明才智，但硅谷传递的信息是：你应该更强大。&lt;/p&gt;&#xA;&lt;p&gt;这与纽约传递的信息并不完全相同。当然，权力在纽约也很重要，但纽约对即使是继承来的十亿美元也相当印象深刻。在硅谷，除了几个房地产经纪人外，没有人会在意。在硅谷重要的是你对世界有多大的影响力。人们关心拉里和谢尔盖的原因不是他们的财富，而是他们控制着谷歌，这几乎影响了每个人。&lt;/p&gt;&#xA;&lt;h2 id=&#34;_____&#34;&gt;_____&lt;/h2&gt;&#xA;&lt;p&gt;城市传递的信息有多重要？从经验来看，答案似乎是：非常重要。你可能认为，如果你有足够强大的意志力去做伟大的事情，你就能够超越你的环境。你住的地方最多只能造成百分之几的差别。但如果你看看历史证据，似乎事情比这更重要。大多数做出伟大成就的人都聚集在几个地方，那些地方在当时就是做这类事情的地方。&lt;/p&gt;&#xA;&lt;p&gt;从我之前写过的内容中你可以看到城市有多强大：米兰人达芬奇的例子。你听说过的几乎所有15世纪意大利画家都来自佛罗伦萨，尽管米兰也一样大。佛罗伦萨的人在基因上并没有什么不同，所以你必须假设米兰也有一个与达芬奇天赋相当的人。他怎么样了？&lt;/p&gt;&#xA;&lt;p&gt;如果即使一个与达芬奇天赋相当的人也无法战胜环境的力量，你认为你能吗？&lt;/p&gt;&#xA;&lt;p&gt;我不能。我相当固执，但我不会试图对抗这种力量。我宁愿利用它。所以我花了很多时间思考住在哪里。&lt;/p&gt;&#xA;&lt;p&gt;我一直想象伯克利会是一个理想的地方——基本上就是剑桥加上好天气。但几年前我终于尝试住在那里时，结果并不是。伯克利传递的信息是：你应该生活得更好。伯克利的生活非常文明。这可能是北欧人在美国感到最自在的地方。但它并不充满雄心。&lt;/p&gt;&#xA;&lt;p&gt;回想起来，一个如此宜人的地方吸引那些首先关心生活质量的人并不令人惊讶。有好天气的剑桥，结果并不是剑桥。你在剑桥找到的人并不是偶然在那里生活的。你必须做出牺牲才能住在那里。那里昂贵且有些肮脏，天气经常不好。所以你在剑桥找到的那种人是想要和最聪明的人住在一起的人，即使这意味着生活在一个昂贵、肮脏、天气不好的地方。&lt;/p&gt;&#xA;&lt;p&gt;在写这篇文章的时候，剑桥似乎是世界的知识之都。我意识到这似乎是一个荒谬的说法。使之真实的是，在其他地方声称这一点更加荒谬。从雄心勃勃的学生的流动来看，美国大学目前似乎是最好的。哪个美国城市有更强的主张？纽约？有相当多的聪明人，但被更多穿着西装的尼安德特人稀释了。湾区也有很多的聪明人，但同样被稀释了；那里有两所伟大的大学，但它们相距甚远。哈佛和麻省理工按照西海岸的标准实际上是相邻的，周围还有大约20所其他学院和大学。&lt;/p&gt;&#xA;&lt;p&gt;因此，剑桥给人的感觉是一个主要产业是思想的小镇，而纽约的是金融，硅谷的是创业公司。&lt;/p&gt;&#xA;&lt;h2 id=&#34;_____-1&#34;&gt;_____&lt;/h2&gt;&#xA;&lt;p&gt;当我们谈论城市时，我们真正谈论的是人的集合。长期以来，城市是唯一的大型人口集合，所以你可以互换使用这两个概念。但从我提到的例子中我们可以看到事情发生了多大的变化。纽约是一个典型的伟大城市。但剑桥只是城市的一部分，而硅谷甚至都不是。（圣何塞并不像它有时声称的那样是硅谷的首都。它只是硅谷一端的178平方英里。）&lt;/p&gt;&#xA;&lt;p&gt;也许互联网会进一步改变事情。也许有一天你所属的最重要的社区将是一个虚拟社区，你住在哪里就不重要了。但我不会打赌。物理世界带宽很高，城市向你传递信息的一些方式相当微妙。&lt;/p&gt;&#xA;&lt;p&gt;每年春天回到剑桥最令人兴奋的事情之一是在黄昏时走在街道上，那时你可以看到房子里面。当你在晚上走过帕洛阿尔托时，你只看到电视的蓝色光芒。在剑桥，你看到的是装满了有希望的书架。帕洛阿尔托在1960年可能很像剑桥，但现在你永远不会猜到附近有一所大学。现在它只是硅谷较富裕的街区之一。&lt;/p&gt;&#xA;&lt;p&gt;城市主要通过偶然的方式与你对话——通过窗户看到的东西，通过无意中听到的对话。这不是你必须寻找的东西，而是你无法关闭的东西。住在剑桥的职业危害之一是听到那些在陈述句中使用疑问语调的人的对话。但平均而言，我选择剑桥的对话而不是纽约或硅谷的对话。&lt;/p&gt;&#xA;&lt;p&gt;一个90年代末搬到硅谷的朋友说，住在那里最糟糕的是偷听质量低下。当时我以为她是在故意标新立异。当然，偷听别人很有趣，但高质量的偷听真的重要到会影响你选择住在哪里吗？现在我明白她的意思了。你无意中听到的对话告诉你你周围是哪种人。&lt;/p&gt;&#xA;&lt;h2 id=&#34;_____-2&#34;&gt;_____&lt;/h2&gt;&#xA;&lt;p&gt;无论你多么坚定，你很难不受周围人的影响。问题不在于你做城市期望你做的事，而在于当你周围没有人关心和你同样的事情时，你会感到气馁。&lt;/p&gt;&#xA;&lt;p&gt;鼓励和气馁之间存在着像赚钱和亏钱一样的不平衡。大多数人高估负数金额的钱：他们会更努力地工作以避免损失一美元，而不是赚一美元。同样，尽管有足够强大的人可以抵抗仅仅因为在那里人们应该做的事情就去做，但很少有人足够强大，可以在周围没有人关心的事情上继续工作。&lt;/p&gt;&#xA;&lt;p&gt;因为野心在某种程度上是不相容的，而钦佩是一个零和游戏，每个城市倾向于专注于一种类型的野心。剑桥是知识之都的原因不仅是因为那里有聪明人的集中，而是因为那里的人们没有更关心的事情。纽约和湾区的教授是二等公民——直到他们分别开始对冲基金或创业公司。&lt;/p&gt;&#xA;&lt;p&gt;这回答了自泡沫以来纽约人一直在思考的一个问题：纽约能否发展成与硅谷匹敌的创业中心。一个不太可能的原因是，在纽约创业的人会感觉像个二等公民。纽约人已经更钦佩别的东西了。&lt;/p&gt;&#xA;&lt;p&gt;从长远来看，这对纽约可能是一件坏事。一项重要的新技术的力量最终确实会转化为金钱。因此，比硅谷更关心金钱而不是权力，纽约认识到了同样的事情，但更慢。事实上，它在自己的游戏中一直在输给硅谷：《福布斯》400中纽约与加州居民的比例从1982年首次发布时的1.45（81:56）下降到2007年的0.83（73:88）。&lt;/p&gt;&#xA;&lt;h2 id=&#34;_____-3&#34;&gt;_____&lt;/h2&gt;&#xA;&lt;p&gt;并非所有城市都传递信息。只有那些是某种雄心中心的城市才传递。而且如果不生活在那里，很难准确说出一个城市传递什么信息。我理解纽约、剑桥和硅谷的信息，因为我在这三个地方都生活了几年。华盛顿特区和洛杉矶似乎也传递信息，但我在任何一个地方都没有待足够长的时间来确定它们是什么。&lt;/p&gt;&#xA;&lt;p&gt;洛杉矶的重要事情似乎是名声。有一个当前最受欢迎的人的A名单，最受钦佩的是在名单上，或者是与名单上的人交朋友。在这之下，信息很像纽约的，尽管可能更强调外表吸引力。&lt;/p&gt;&#xA;&lt;p&gt;在华盛顿特区，信息似乎是最重要的是你认识谁。你想成为内部人士。在实践中，这似乎与洛杉矶很像。有一个A名单，你想在名单上或接近名单上的人。唯一的区别是A名单如何选择。即使这一点也没有太大不同。&lt;/p&gt;&#xA;&lt;p&gt;目前，旧金山的信息似乎与伯克利的相同：你应该生活得更好。但如果足够多的创业公司选择旧金山而不是硅谷，这将会改变。在泡沫时期，这是失败的预测——一个自我放纵的选择，比如购买昂贵的办公家具。即使现在，当创业公司选择旧金山时我还是很怀疑。但如果足够多的好公司这样做，它就不再是自我放纵的选择，因为硅谷的重心将转移到那里。&lt;/p&gt;&#xA;&lt;p&gt;我没有找到像剑桥这样的知识雄心中心。牛津和剑桥（英国）感觉像伊萨卡或汉诺威：信息在那里，但不够强大。&lt;/p&gt;&#xA;&lt;p&gt;巴黎曾经是伟大的知识中心。如果你在1300年去那里，它可能传递了剑桥现在的信息。但我去年尝试在那里住了一段时间，居民的抱负不是知识方面的。巴黎现在传递的信息是：有风格地做事。实际上，我喜欢这一点。巴黎是我住过的唯一一个人们真正关心艺术的城市。在美国只有少数富人购买原创艺术，即使那些更老练的人也很少超越以艺术家的品牌名来判断艺术。但在黄昏时透过窗户看，你可以看到那里的人们实际上关心画的外观。视觉上，巴黎有我所知道的最好的偷听。&lt;/p&gt;&#xA;&lt;p&gt;我从城市中听到的还有一个信息：在伦敦，你仍然（勉强）能听到一个人应该更高贵的信息。如果你注意听，你也可以在巴黎、纽约和波士顿听到。但这个信息在任何地方都非常微弱。100年前它会很强大，但现在如果我没有故意调到那个波长看看是否还有信号，我可能根本不会注意到。&lt;/p&gt;&#xA;&lt;h2 id=&#34;_____-4&#34;&gt;_____&lt;/h2&gt;&#xA;&lt;p&gt;到目前为止，我从城市收集到的完整信息列表是：财富、风格、时髦、外表吸引力、名声、政治权力、经济权力、智力、社会阶层和生活质量。&lt;/p&gt;&#xA;&lt;p&gt;我对这个清单的直接反应是它让我有点不舒服。我一直认为雄心是件好事，但我现在意识到那是因为我一直隐含地理解它是指在我关心的领域的雄心。当你列出有雄心的人有雄心的一切事情时，它并不那么漂亮。&lt;/p&gt;&#xA;&lt;p&gt;仔细观察，我看到清单上有几件在历史背景下令人惊讶的事情。例如，外表吸引力100年前不会在那里（尽管2400年前可能在）。对女性来说它一直很重要，但在20世纪后期，它似乎对男性也开始重要了。我不确定为什么——可能是女性力量增加、演员作为模特影响力增加，以及现在太多人在办公室工作的某种组合：你不能通过穿太华丽不适合在工厂穿的衣服来炫耀，所以你必须用你的身体来炫耀。&lt;/p&gt;&#xA;&lt;p&gt;时髦是100年前你不会在清单上看到的另一件事。或者不会？它的意思是知道什么是什么。所以也许它只是简单地取代了社会阶层中由&amp;quot;精通&amp;quot;组成的部分。这可以解释为什么时髦在伦敦似乎特别受钦佩：它是传统的英国人对只有内部人士才能理解的神秘代码喜爱的第二版。&lt;/p&gt;&#xA;&lt;p&gt;经济权力100年前会在清单上，但我们对它的理解正在改变。它过去意味着控制庞大的人力物力资源。但现在它越来越多的意味着指导技术进程的能力，而一些能够做到这一点的人甚至并不富有——例如，重要开源项目的领导者。过去的工业巨头有实验室，里面充满了聪明人为他们开发新技术。新一代的人就是那些人本身。&lt;/p&gt;&#xA;&lt;p&gt;随着这种力量获得更多关注，另一个正在从清单上消失：社会阶层。我认为这两种变化是相关的。经济权力、财富和社会阶级只是同一事物在不同生命阶段的不同名称：经济权力转化为财富，财富转化为社会阶级。所以钦佩的焦点只是向上游转移。&lt;/p&gt;&#xA;&lt;h2 id=&#34;_____-5&#34;&gt;_____&lt;/h2&gt;&#xA;&lt;p&gt;任何想做伟大工作的人都必须住在伟大的城市吗？不；所有伟大的城市都激发某种雄心，但它们并不是唯一这样做的地方。对于某些类型的工作，你所需要的只是一些有才华的同事。&lt;/p&gt;&#xA;&lt;p&gt;城市提供的是观众，和同行的渠道。在数学或物理等领域，这些并不那么重要，因为除了你的同行，没有观众重要，而且判断能力足够直接，招聘和录取委员会可以可靠地做到。在数学或物理这样的领域，你所需要的只是一个有合适同事的部门。它可以在任何地方——例如，新墨西哥州的洛斯阿拉莫斯。&lt;/p&gt;&#xA;&lt;p&gt;在艺术、写作或技术等领域，更大的环境很重要。在这些领域中，最好的从业者并没有方便地集中在几个顶尖的大学部门和研究实验室中——部分是因为才能更难判断，部分是因为人们为这些东西付钱，所以一个人不需要依靠教学或研究资金来支持自己。正是在这些更混乱的领域中，身处伟大城市最有帮助：你需要鼓励，感觉周围的人关心你所做的工作，而且因为你必须自己寻找同行，你需要伟大城市更大的吸收机制。&lt;/p&gt;&#xA;&lt;p&gt;你不必一生都住在伟大的城市才能从中受益。关键年份似乎是你职业生涯的早期和中期。显然，你不必在伟大的城市长大。你在一个城市上大学似乎也不重要。对大多数大学生来说，几千人的世界似乎足够大了。另外，在大学里你还没有面对最困难的工作——发现要解决的新问题。&lt;/p&gt;&#xA;&lt;p&gt;当你进入下一个更困难的阶段时，身处一个你能找到同行和鼓励的地方最有帮助。一旦你找到了两者，你似乎就可以离开，如果你想的话。印象派展示了典型的模式：他们出生在法国各地（毕沙罗出生在加勒比海），死在法国各地，但定义他们的是他们在巴黎一起度过的岁月。&lt;/p&gt;&#xA;&lt;h2 id=&#34;_____-6&#34;&gt;_____&lt;/h2&gt;&#xA;&lt;p&gt;除非你确定你想做什么以及哪里是领先中心，否则你最好的选择可能是在年轻时尝试生活在几个地方。你永远不知道一个城市传递什么信息，直到你住在那里，或者它是否仍然传递信息。通常你的信息会是错误的：我25岁时尝试住在佛罗伦萨，认为它会是艺术中心，但结果我晚了450年。&lt;/p&gt;&#xA;&lt;p&gt;即使一个城市仍然是雄心的活跃中心，在你听到它的信息之前，你也不会确定它是否会与你产生共鸣。当我搬到纽约时，起初我非常兴奋。那是个令人兴奋的地方。所以我花了相当长的时间才意识到我只是不像那里的人。我一直在寻找纽约的剑桥。结果它远远地在上城区：乘飞机一小时的上城区。&lt;/p&gt;&#xA;&lt;p&gt;有些人在16岁时就知道他们要做什么工作，但在大多数有雄心的孩子中，雄心似乎先于任何具体要雄心的事物。他们知道他们想做伟大的事情。他们只是还没有决定是要成为摇滚明星还是脑外科医生。这没什么错。但这意味着如果你有这种最常见的雄心类型，你可能必须通过反复试验来弄清楚住在哪里。你可能必须找到让你感觉像家的城市，才能知道你有什么样的雄心。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 这是大学不受政府控制的好处之一。当政府决定如何分配资源时，政治交易导致事物在地理上分散。没有中央政府会把其最好的两所大学放在同一个城镇，除非它是首都（这会引起其他问题）。但学者似乎和其他领域的人一样喜欢聚集在一起，当给予自由时，他们从中获得同样的好处。&lt;/p&gt;&#xA;&lt;p&gt;[2] 帕洛阿尔托还有一些老教授，但他们一个接一个地去世，他们的房子被开发商变成豪宅并出售给业务发展副总裁。&lt;/p&gt;&#xA;&lt;p&gt;[3] 你读过多少次关于创业创始人在公司起飞后继续过简朴生活的文章？他们继续穿牛仔裤和T恤，开研究生时的旧车，等等？如果你在纽约这样做，人们会把你当垃圾对待。如果你穿着牛仔裤和T恤走进旧金山的一家高档餐厅，他们会对你很好；谁知道你可能是什么人？在纽约不会。&lt;/p&gt;&#xA;&lt;p&gt;一个城市作为技术中心的潜力的一个标志是仍然要求男士穿西装的餐厅数量。根据Zagat&amp;rsquo;s的调查，旧金山、洛杉矶、波士顿或西雅图没有，华盛顿特区有4家，芝加哥有6家，伦敦有8家，纽约有13家，巴黎有20家。&lt;/p&gt;&#xA;&lt;p&gt;（Zagat&amp;rsquo;s将旧金山的丽思卡尔顿餐厅列为要求穿西装，但我无法相信，所以我打电话检查，事实上他们不要求。显然整个西海岸只剩下一家餐厅仍然要求穿西装：纳帕谷的法国洗衣店。）&lt;/p&gt;&#xA;&lt;p&gt;[4] 想法比经济权力上游一步，所以可以想象，像剑桥这样的知识中心有一天会拥有对硅谷的优势，就像硅谷对纽约的优势一样。&lt;/p&gt;&#xA;&lt;p&gt;目前这似乎不太可能；如果说有什么的话，波士顿正在越来越落后。我甚至提到这种可能性的唯一原因是，从想法到创业公司的路径最近变得越来越顺畅。现在对几个没有商业经验的黑客来说，创办一家创业公司比10年前容易得多。如果再推算20年，也许权力的平衡会开始转移。我不会打赌它会，但我也不会打赌它不会。&lt;/p&gt;&#xA;&lt;p&gt;[5] 如果巴黎是人们最关心艺术的地方，为什么纽约是艺术业的重心？因为在20世纪，艺术作为品牌与艺术作为物品分开了。纽约是最富有的买家所在的地方，但他们从艺术中要求的只是品牌，而既然你可以基于任何具有足够可识别风格的东西来建立品牌，你也可以使用当地的东西。&lt;/p&gt;&#xA;&lt;p&gt;感谢Trevor Blackwell、Sarah Harlin、Jessica Livingston、Jackie McDonough、Robert Morris和David Sloo阅读本文的草稿。&lt;/p&gt;</description>
    </item>
    <item>
      <title>基于Web应用的Lisp</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/lwba/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/lwba/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/lwba.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;基于web应用的lisp&#34;&gt;基于Web应用的Lisp&lt;/h1&gt;&#xA;&lt;p&gt;在《击败平均值》的链接被发布在slashdot上之后，一些读者希望更详细地了解我们在Viaweb中使用Lisp获得的具体技术优势。对于那些感兴趣的人，以下是我2001年4月在剑桥BBN实验室的演讲节选。&lt;/p&gt;&#xA;&lt;p&gt;BBN演讲节选（ASCII）&lt;/p&gt;</description>
    </item>
    <item>
      <title>增长</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/growth/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/growth/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/growth.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;增长&#34;&gt;增长&lt;/h1&gt;&#xA;&lt;p&gt;创业公司 = 增长&lt;/p&gt;&#xA;&lt;p&gt;想创业吗？获得Y Combinator的资助。&lt;/p&gt;&#xA;&lt;p&gt;2012年9月&lt;/p&gt;&#xA;&lt;p&gt;创业公司就是为快速增长而设计的公司。新成立本身并不能使一家公司成为创业公司。创业公司也不一定必须从事技术工作，或者接受风险投资，或者有某种&amp;quot;退出&amp;quot;方式。唯一重要的是增长。我们与创业公司相关的一切都源于增长。&lt;/p&gt;&#xA;&lt;p&gt;如果你想创立一家创业公司，理解这一点很重要。创业公司很难，你不能偏离目标却希望成功。你必须知道你追求的是增长。好消息是，如果你获得了增长，其他一切往往都会水到渠成。这意味着你可以用增长作为指南针来做出几乎每一个决定。&lt;/p&gt;&#xA;&lt;h2 id=&#34;红杉木&#34;&gt;红杉木&lt;/h2&gt;&#xA;&lt;p&gt;让我们从一个应该显而易见但经常被忽视的区别开始：并非每家新成立的公司都是创业公司。美国每年有数百万家公司成立。只有极少数是创业公司。大多数是服务型企业——餐厅、理发店、管道工等等。这些都不是创业公司，除了一些特殊情况。理发店不是为了快速增长而设计的。而搜索引擎，例如，就是。&lt;/p&gt;&#xA;&lt;p&gt;当我说创业公司是为快速增长而设计时，我在两个意义上使用这个词。部分上我指的是预期意义上的设计，因为大多数创业公司都会失败。但我也指的是创业公司在本质上与其他公司不同，就像红杉树苗与豆芽有不同的命运一样。&lt;/p&gt;&#xA;&lt;p&gt;正是这种区别使得&amp;quot;创业公司&amp;quot;这个词成为了为快速增长而设计的公司的独特称谓。如果所有公司本质上都相似，但有些公司由于运气或创始人的努力而最终增长非常快，我们就不需要一个单独的词。我们可以只谈论超级成功的公司和不太成功的公司。但实际上，创业公司确实拥有与其他企业不同的DNA。谷歌不仅仅是一家由异常幸运和勤奋的创始人经营的理发店。谷歌从一开始就与众不同。&lt;/p&gt;&#xA;&lt;p&gt;要快速增长，你需要制造可以卖给大市场的东西。这就是谷歌和理发店之间的区别。理发店无法规模化。&lt;/p&gt;&#xA;&lt;p&gt;要让一家公司真正变得庞大，它必须（a）制造许多人都想要的东西，并且（b）能够接触并服务于所有这些人。理发店在（a）方面做得很好。几乎每个人都需要理发。但理发店的问题，和任何零售企业一样，是（b）。理发店亲自为顾客服务，很少有人会为了理发而长途跋涉。即使他们愿意，理发店也无法容纳他们。[1]&lt;/p&gt;&#xA;&lt;p&gt;编写软件是解决（b）的好方法，但你仍然可能在（a）方面受到限制。如果你编写软件教匈牙利人说藏语，你将能够接触大多数想要这种软件的人，但这样的人不会很多。然而，如果你制作软件教中国人说英语，你就进入了创业公司领域。&lt;/p&gt;&#xA;&lt;p&gt;大多数企业在（a）或（b）方面都受到严格限制。成功创业公司的显著特点是它们没有受到这种限制。&lt;/p&gt;&#xA;&lt;h2 id=&#34;想法&#34;&gt;想法&lt;/h2&gt;&#xA;&lt;p&gt;似乎创业总是比创立普通企业更好。如果你要创立一家公司，为什么不创立最有潜力的那种类型？问题在于这是一个（相对）高效的市场。如果你编写软件教匈牙利人说藏语，你不会有太多竞争。如果你编写软件教中国人说英语，你将面临激烈的竞争，正是因为后者是更大的奖项。[2]&lt;/p&gt;&#xA;&lt;p&gt;限制普通公司的约束也保护了它们。这就是权衡。如果你开一家理发店，你只需要与其他本地理发师竞争。如果你创立搜索引擎，你必须与全世界竞争。&lt;/p&gt;&#xA;&lt;p&gt;正常企业的约束所保护的最重要的东西不是竞争，而是想出新想法的困难。如果你在特定街区开一家酒吧，地理限制既限制了你的潜力，也保护了你免受竞争对手的影响，这个地理约束也有助于定义你的公司。酒吧+街区对小企业来说是一个足够的概念。同样，对于在（a）方面受限的公司也是如此。你的细分市场既保护你也定义了你。&lt;/p&gt;&#xA;&lt;p&gt;而如果你想创立一家创业公司，你可能必须想出一些相当新颖的东西。创业公司必须制造能够交付给大市场的东西，而这种类型的想法非常宝贵，所有显而易见的想法都已经被采用了。&lt;/p&gt;&#xA;&lt;p&gt;想法空间已经被彻底筛选过，以至于创业公司通常必须从事其他人都忽视的事情。我本想写必须要有意识地努力找到其他人都忽视的想法。但这并不是大多数创业公司的开始方式。通常成功的创业公司之所以成功，是因为创始人与其他人足够不同，以至于其他人很少能看到的想法对他们来说似乎显而易见。也许后来他们会退后一步，注意到他们找到了一个在其他人盲点中的想法，从那时起，他们会有意努力留在那里。[3] 但在成功的创业公司开始时，大部分创新都是无意识的。&lt;/p&gt;&#xA;&lt;p&gt;成功创始人的不同之处在于他们能看到不同的问题。既擅长技术又面临可以用技术解决的问题是一个特别好的组合，因为技术变化如此迅速，以前糟糕的想法往往在没有人注意到的情况下变成好主意。史蒂夫·沃兹尼亚克的问题是想要自己的计算机。在1975年，这是一个不寻常的问题。但技术变革即将使其成为一个更普遍的问题。因为他不仅想要一台计算机，而且知道如何制造它们，沃兹尼亚克能够为自己制造一台。他为自己解决的问题成为了苹果在未来几年为数百万人解决的问题。但到普通人明显这是一个大市场时，苹果已经建立了。&lt;/p&gt;&#xA;&lt;p&gt;谷歌有相似的起源。拉里·佩奇和谢尔盖·布林想要搜索网络。但与大多数人不同，他们既有技术专业知识能够注意到现有搜索引擎并不如它们可能的那样好，也知道如何改进它们。在接下来的几年里，他们的问题成为了每个人的问题，因为网络发展到一定程度，你不必是挑剔的搜索专家就能注意到旧算法不够好。但就像苹果的情况一样，到其他人意识到搜索有多重要时，谷歌已经确立了地位。&lt;/p&gt;&#xA;&lt;p&gt;这就是创业想法与技术之间的一个联系。一个领域的快速变化在其他领域揭示了大量可解决的问题。有时这些变化是进步，它们改变的是可解性。那种产生苹果的变化就是这种类型；芯片技术的进步最终让史蒂夫·沃兹尼亚克能够设计出一台他负担得起的计算机。但在谷歌的情况下，最重要的变化是网络的成长。那里改变的不是可解性而是规模。&lt;/p&gt;&#xA;&lt;p&gt;创业公司与技术之间的另一个联系是，创业公司创造新的做事方式，而新的做事方式，在更广泛的意义上，就是新技术。当创业公司既以技术变革暴露的想法开始，又制造由技术（在更狭窄意义上，过去被称为&amp;quot;高技术&amp;quot;）组成的产品时，很容易将两者混为一谈。但这两种联系是不同的，原则上，一个人可以创立一家既不是由技术变革驱动，其产品也不是由技术组成的创业公司，除了在更广泛的意义上。[4]&lt;/p&gt;&#xA;&lt;h2 id=&#34;速度&#34;&gt;速度&lt;/h2&gt;&#xA;&lt;p&gt;一家公司必须增长多快才能被视为创业公司？对此没有精确的答案。&amp;ldquo;创业公司&amp;quot;是一个极点，而不是阈值。创立一个起初不过是对自己雄心的宣言。你不仅承诺要创立一家公司，还要创立一家快速增长的公司，因此你承诺寻找那种罕见的想法。但起初你只有承诺。创立创业公司在这一点上很像当演员。&amp;ldquo;演员&amp;quot;也是一个极点，而不是阈值。在职业生涯开始时，演员是去试镜的服务员。找到工作使他成为成功的演员，但他并不是在成功时才成为演员。&lt;/p&gt;&#xA;&lt;p&gt;所以真正的问题不是什么增长率使公司成为创业公司，而是成功创业公司往往有什么样的增长率。对创始人来说，这不仅仅是一个理论问题，因为它相当于询问他们是否在正确的道路上。&lt;/p&gt;&#xA;&lt;p&gt;成功创业公司的增长通常有三个阶段：在创业公司试图弄清楚自己在做什么时，有一个初始的缓慢或无增长时期。随着创业公司弄清楚如何制造许多人都想要的东西以及如何接触这些人，有一个快速增长时期。最终，成功的创业公司将成长为一家大公司。增长将放缓，部分是由于内部限制，部分是因为公司开始遇到其所服务市场的限制。[5] 这三个阶段一起产生S形曲线。定义创业公司的增长阶段是第二个阶段，上升阶段。其长度和斜率决定了公司将有多大规模。&lt;/p&gt;&#xA;&lt;p&gt;斜率是公司的增长率。如果有一个数字每个创始人应该始终知道，那就是公司的增长率。这就是创业公司的衡量标准。如果你不知道这个数字，你甚至不知道自己做得好坏。&lt;/p&gt;&#xA;&lt;p&gt;当我第一次见到创始人并问他们的增长率是多少时，有时他们告诉我&amp;quot;我们每月获得大约100个新客户。&amp;ldquo;这不是增长率。重要的不是新客户的绝对数量，而是新客户与现有客户的比率。如果你真的每月获得恒定数量的新客户，你就有麻烦了，因为这意味着你的增长率在下降。&lt;/p&gt;&#xA;&lt;p&gt;在Y Combinator期间，我们按周测量增长率，部分是因为在演示日之前时间很少，部分是因为创业公司早期需要用户的频繁反馈来调整他们正在做的事情。[6]&lt;/p&gt;&#xA;&lt;p&gt;在YC期间的良好增长率是每周5-7%。如果你能达到每周10%，你做得非常好。如果你只能做到1%，这表明你还没有弄清楚自己在做什么。&lt;/p&gt;&#xA;&lt;p&gt;衡量增长率的最好东西是收入。对于最初不收费的创业公司，第二好的选择是活跃用户。这是收入增长的合理代理，因为每当创业公司确实开始试图赚钱时，他们的收入可能是活跃用户的恒定倍数。[7]&lt;/p&gt;&#xA;&lt;h2 id=&#34;指南针&#34;&gt;指南针&lt;/h2&gt;&#xA;&lt;p&gt;我们通常建议创业公司选择他们认为能够达到的增长率，然后每周努力达到它。这里的关键词是&amp;quot;只是&amp;rdquo;。如果他们决定以每周7%的速度增长，并且达到了这个数字，那么那一周他们就是成功的。他们不需要做任何其他事情。但如果他们没有达到，他们在唯一重要的事情上失败了，因此应该相应地警惕。&lt;/p&gt;&#xA;&lt;p&gt;程序员会认出我们在这里做什么。我们正在把创立创业公司变成一个优化问题。任何尝试过优化代码的人都知道这种狭窄的专注是多么奇妙的有效。优化代码意味着获取现有程序并改变它以使用更少的东西，通常是时间或内存。你不必思考程序应该做什么，只是让它更快。对大多数程序员来说，这是非常令人满意的工作。狭窄的专注使它成为一种谜题，你通常对自己能多快解决它感到惊讶。&lt;/p&gt;&#xA;&lt;p&gt;专注于达到增长率将开始创业公司的原本令人困惑的多方面问题减少到单一问题。你可以使用那个目标增长率来为你做出所有决定；任何能让你获得所需增长的东西都是正确的。你应该在会议上花两天时间吗？你应该再雇佣一个程序员吗？你应该更专注于营销吗？你应该花时间追求某个大客户吗？你应该添加x功能吗？任何能让你达到目标增长率的事情。[8]&lt;/p&gt;&#xA;&lt;p&gt;按周增长来评判自己并不意味着你只能向前看一周。一旦你经历了某一周错过目标的痛苦（这是唯一重要的事情，而你在那件事上失败了），你就会对任何能在未来避免这种痛苦的事情感兴趣。所以你会愿意，例如，雇佣另一个程序员，他不会为本周的增长做出贡献，但也许一个月后会实现一些能给你带来更多用户的新功能。但前提是（a）雇佣某人的分心不会让你在短期内错过你的数字，并且（b）你足够担心是否能够在不雇佣新人的情况下保持达到你的数字。&lt;/p&gt;&#xA;&lt;p&gt;不是你不考虑未来，只是你考虑的不超过必要的程度。&lt;/p&gt;&#xA;&lt;p&gt;理论上这种爬山可能会让创业公司陷入困境。它们可能最终达到局部最大值。但在实践中，这种情况从未发生。每周必须达到一个增长数字迫使创始人采取行动，行动与不行动是成功的高位。十次中有九次，坐在那里制定战略只是一种拖延的形式。而创始人关于爬哪座山的直觉通常比他们意识到的要好。此外，创业公司想法空间中的最大值不是尖峰和孤立的。大多数相当好的想法都与更好的想法相邻。&lt;/p&gt;&#xA;&lt;p&gt;优化增长的迷人之处在于它实际上可以发现创业公司的想法。你可以将增长需求作为一种进化压力来使用。如果你从一些初始计划开始，并为了保持达到，比如说，每周10%的增长而必要时修改它，你最终可能会得到一家与你打算创立的完全不同的公司。但任何以每周10%一致增长的东西几乎肯定比你开始时的想法更好。&lt;/p&gt;&#xA;&lt;p&gt;这与小企业有相似之处。正如位于特定街区的约束有助于定义酒吧一样，以特定速率增长的约束有助于定义创业公司。&lt;/p&gt;&#xA;&lt;p&gt;你通常会最好地遵循那个约束，无论它引向何方，而不是受到一些最初愿景的影响，就像科学家最好追随真理，无论它引向何方，而不是受到他希望情况怎样的影响。当理查德·费曼说自然的想象力比人的想象力更伟大时，他的意思是如果你只是追随真理，你会发现比你所能编造的更酷的东西。对创业公司来说，增长是一个类似于真理的约束。每家成功的创业公司至少部分是增长想象力的产物。[9]&lt;/p&gt;&#xA;&lt;h2 id=&#34;价值&#34;&gt;价值&lt;/h2&gt;&#xA;&lt;p&gt;很难找到每周持续增长几个百分点的任何东西，但如果你找到了，你可能发现了出人意料地有价值的东西。如果我们向前看，我们就知道为什么。&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;每周&lt;/th&gt;&#xA;          &lt;th&gt;每年&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;1%&lt;/td&gt;&#xA;          &lt;td&gt;1.7x&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;2%&lt;/td&gt;&#xA;          &lt;td&gt;2.8x&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;5%&lt;/td&gt;&#xA;          &lt;td&gt;12.6x&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;7%&lt;/td&gt;&#xA;          &lt;td&gt;33.7x&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;10%&lt;/td&gt;&#xA;          &lt;td&gt;142.0x&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;一家每周增长1%的公司将每年增长1.7倍，而一家每周增长5%的公司将增长12.6倍。一家每月赚取1000美元（YC早期的典型数字）并以每周1%增长的公司4年后将每月赚取7900美元，这比硅谷一个好的程序员的工资还少。一家以每周5%增长的创业公司4年后将每月赚取2500万美元。[10]&lt;/p&gt;&#xA;&lt;p&gt;我们的祖先很少遇到指数增长的情况，因为我们的直觉在这里无法指导我们。快速增长创业公司发生的事情往往会令创始人都感到惊讶。&lt;/p&gt;&#xA;&lt;p&gt;增长率的微小变化产生质的不同结果。这就是为什么创业公司有一个单独的词，为什么创业公司做普通公司不做的事情，比如筹集资金和被收购。而且，奇怪的是，这也是它们经常失败的原因。&lt;/p&gt;&#xA;&lt;p&gt;考虑到成功的创业公司可以变得多么有价值，任何熟悉期望价值概念的人都会对失败率不高感到惊讶。如果一家成功的创业公司能让创始人赚取1亿美元，那么即使成功的概率只有1%，创立一家的期望价值也是100万美元。一组足够聪明和坚定的创始人在这个规模上成功的概率可能显著超过1%。对于合适的人来说——比如年轻的比尔·盖茨——概率可能是20%甚至50%。所以这么多人想要尝试并不奇怪。在一个高效的市场中，失败的创业公司数量应该与成功的规模成比例。既然后者巨大，前者也应该如此。[11]&lt;/p&gt;&#xA;&lt;p&gt;这意味着在任何给定时间，绝大多数创业公司都在从事永远不会有所作为的事情，然而却用&amp;quot;创业公司&amp;quot;这个宏伟的标题来美化他们注定要失败的努力。&lt;/p&gt;</description>
    </item>
    <item>
      <title>外星真理</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/alien/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/alien/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/alien.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;外星真理&#34;&gt;外星真理&lt;/h1&gt;&#xA;&lt;p&gt;2022年10月&lt;/p&gt;&#xA;&lt;p&gt;如果宇宙中其他地方存在智能生物，他们会与我们共享某些真理。数学真理将是相同的，因为它们根据定义为真。物理真理也是如此；碳原子的质量在他们的星球上将是相同的。但我认为除了数学和物理的真理之外，我们还会与外星人分享其他真理，思考这些可能是什么是值得的。&lt;/p&gt;&#xA;&lt;p&gt;例如，我认为我们会分享这样的原则：测试某个假设的受控实验使我们有理由按比例增加对它的信念。对外星人来说，通过练习可以变得更擅长某事，这似乎也是相当可能的。我们可能会分享奥卡姆剃刀。这些想法中似乎没有任何特定于人类的东西。&lt;/p&gt;&#xA;&lt;p&gt;当然，我们只能猜测。我们不能确定智能生命可能采取什么形式。我在这里的目标也不是探索这个问题，尽管它很有趣。外星真理概念的重点不是它给我们一种推测智能生命可能采取什么形式的方式，而是它为真理提供了一个门槛，或者更精确地说是一个目标。如果你试图找到除了数学或物理之外的最普遍的真理，那么大概它们就是我们与其他形式的智能生命共享的那些。&lt;/p&gt;&#xA;&lt;p&gt;如果我们倾向于慷慨，外星真理将最好地作为一种启发式方法。如果一个想法可能合理地与外星人相关，那就足够了。例如，正义。我不想打赌所有智能生物都会理解正义的概念，但我也不会打赌反对它。&lt;/p&gt;&#xA;&lt;p&gt;外星真理的概念与Erdos的上帝之书的概念有关。他过去常描述一个特别好的证明是在上帝之书中，这意味着（a）足够好的证明更多是被发现而不是被发明，（b）它的优点会被普遍认可。如果有外星真理这样的东西，那么上帝之书中除了数学还有更多内容。&lt;/p&gt;&#xA;&lt;p&gt;我们应该称什么为寻找外星真理？显而易见的选择是&amp;quot;哲学&amp;quot;。无论哲学还包括什么，它可能都应该包括这个。我相当确定亚里士多德会这么认为。人们甚至可以说，寻找外星真理如果不是对哲学的准确描述，也是对它的一个很好的定义。也就是说，这是自称哲学家的人应该做的事情，无论他们现在是否在这样做。但我并不执着于此；做这件事才是重要的，而不是我们称它为什么。&lt;/p&gt;&#xA;&lt;p&gt;有一天，我们可能会以人工智能的形式在我们中间拥有类似外星生命的东西。而这反过来可能让我们能够精确地确定智能生物必须与我们分享什么真理。例如，我们可能会发现，不可能创造出我们不认为智能却不使用奥卡姆剃刀的东西。有一天我们甚至可能能够证明这一点。但是，虽然这种研究会非常有趣，但这对我们的目的不是必要的，甚至不是同一领域；哲学的目标，如果我们要这么称呼的话，将是看看我们使用外星真理作为目标能想出什么想法，而不是说它的门槛确切在哪里。这两个问题有一天可能会趋同，但它们会从相当不同的方向趋同，在它们趋同之前，限制自己只思考我们确定会是外星真理的事情会过于约束。特别是因为这可能是那些最佳猜测结果证明出奇接近最优的领域之一。（让我们看看这个是否如此。）&lt;/p&gt;&#xA;&lt;p&gt;无论我们称它为什么，发现外星真理的尝试都将是一项值得的努力。而且奇怪的是，这本身可能就是一个外星真理。&lt;/p&gt;&#xA;&lt;p&gt;感谢Trevor Blackwell、Greg Brockman、Patrick Collison、Robert Morris和Michael Nielsen阅读本文草稿。&lt;/p&gt;</description>
    </item>
    <item>
      <title>大学</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/college/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/college/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/college.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;大学&#34;&gt;大学&lt;/h1&gt;&#xA;&lt;h2 id=&#34;本科教育&#34;&gt;本科教育&lt;/h2&gt;&#xA;&lt;p&gt;想要创业吗？获得Y Combinator的资助。2005年3月&lt;/p&gt;&#xA;&lt;p&gt;（本文的部分内容始于对给我写信提问的学生的回复。）&lt;/p&gt;&#xA;&lt;p&gt;最近我收到了几封计算机科学本科生的邮件，询问在大学应该做什么。我可能不是最好的建议来源，因为我在大学主修的是哲学。但我上了很多计算机科学的课程，以至于大多数计算机科学专业的学生都以为我是其中一员。我当然是个黑客，至少如此。&lt;/p&gt;&#xA;&lt;h2 id=&#34;黑客技术&#34;&gt;黑客技术&lt;/h2&gt;&#xA;&lt;p&gt;在大学里应该做什么才能成为一个优秀的黑客？你可以做两件主要的事情：在编程方面变得非常出色，并学习很多关于特定、酷炫问题的知识。这两件事被证明是等价的，因为每一件都会推动你去做另一件。&lt;/p&gt;&#xA;&lt;p&gt;在编程方面变得出色的方法是（a）大量地（b）解决难题。而让你自己解决难题的方法是从事一些非常引人入胜的项目。这个项目很可能不是课堂作业。我的朋友罗伯特在本科时通过编写网络软件学到了很多。他的一个项目是将哈佛连接到阿帕网；它曾经是最初的节点之一，但到1984年连接已经断开了。这项工作不仅不是为了课堂，而且因为他把所有时间都花在上面而忽视了学业，他被学校开除了一年。最终一切都平衡了，现在他是麻省理工学院的教授。但如果你不走那个极端，你可能会更快乐；这当时给他带来了很多担忧。&lt;/p&gt;&#xA;&lt;p&gt;在编程方面变得出色的另一种方法是找到其他擅长编程的人，学习他们的知识。程序员倾向于根据他们做的工作类型和他们使用的工具将自己分成部落，有些部落比其他部落更聪明。看看你周围，看看聪明的人似乎在做什么；通常都有原因。&lt;/p&gt;&#xA;&lt;p&gt;你周围一些最聪明的人是教授。所以找到有趣工作的一个方法是自愿担任研究助理。教授对那些能为他们解决繁琐的系统管理类型问题的人特别感兴趣，所以这是进门的一种方式。他们害怕的是那些不可靠和为了简历而工作的人。助理往往导致工作量净增加，这太常见了。所以你必须明确你会带来净减少。&lt;/p&gt;&#xA;&lt;p&gt;如果他们说不要，不要气馁。拒绝几乎总是比被拒绝者想象的要少个人色彩。继续下一个。（这也适用于约会。）&lt;/p&gt;&#xA;&lt;p&gt;小心，因为虽然大多数教授都很聪明，但并不是所有人都从事有趣的工作。教授必须发表新颖的结果才能推进他们的职业生涯，但在更有趣的研究领域竞争更激烈。所以那些不那么有抱负的教授所做的是发表一系列论文，这些论文的结论之所以新颖，是因为没有其他人关心它们。你最好避免这些。&lt;/p&gt;&#xA;&lt;p&gt;我从来没有当过研究助理，所以推荐那条路线我觉得有点不诚实。我通过写自己的东西学会了编程，特别是通过尝试逆向工程Winograd的SHRDLU。我对那个程序的痴迷就像母亲对新生婴儿一样。&lt;/p&gt;&#xA;&lt;p&gt;无论独自工作有什么缺点，优点是这个项目完全是你自己的。你永远不必妥协或询问任何人的许可，如果你有新的想法，你可以坐下来开始实现它。&lt;/p&gt;&#xA;&lt;p&gt;在你自己的项目中，你不必担心新颖性（像教授那样）或盈利能力（像企业那样）。唯一重要的是项目在技术上的难度，这与应用的性质没有相关性。像数据库这样的&amp;quot;严肃&amp;quot;应用在技术上往往是琐碎和枯燥的（如果你曾遭受失眠之苦，试试阅读关于数据库的技术文献），而像游戏这样的&amp;quot;琐碎&amp;quot;应用往往非常复杂。我确信有一些游戏公司正在开发的产品，其智力内容比大学计算机科学系底部十分之九的研究还要多。&lt;/p&gt;&#xA;&lt;p&gt;如果我现在在大学，我可能会从事图形学工作：例如，一个网络游戏，或者一个3D动画工具。当我是本科生时，没有足够的周期让图形学变得有趣，但现在很难想象有什么更有趣的工作。&lt;/p&gt;&#xA;&lt;h2 id=&#34;数学&#34;&gt;数学&lt;/h2&gt;&#xA;&lt;p&gt;当我在大学时，很多教授相信（或至少希望）计算机科学是数学的一个分支。这种想法在哈佛最强烈，那里直到1980年代甚至没有计算机科学专业；在此之前，人们必须主修应用数学。但在康奈尔大学也几乎一样糟糕。当我告诉可怕的康威教授我对人工智能感兴趣（那时是个热门话题）时，他告诉我应该主修数学。我仍然不确定他认为人工智能需要数学，还是他认为人工智能是无稽之谈，主修一些严谨的学科会治愈我这种愚蠢的抱负。&lt;/p&gt;&#xA;&lt;p&gt;事实上，作为黑客，你需要的数学比大多数大学系愿意承认的要少得多。我认为你需要的除了高中数学加上计算理论的一些概念外，不需要太多。如果你想避免编写n²算法，你必须知道什么是n²算法。当然，除非你计划编写数学应用。例如，机器人技术全是数学。&lt;/p&gt;&#xA;&lt;p&gt;虽然对于大多数类型的黑客技术，你从字面上不需要数学，在知道1001个微分公式技巧的意义上，数学本身非常值得学习。它几乎是任何类型工作的宝贵隐喻来源。出于这个原因，我希望我在大学时学了更多数学。&lt;/p&gt;&#xA;&lt;p&gt;像许多人一样，我在童年时被数学虐待过。我学会将数学视为公式的集合，这些公式既不美丽，与我的生活也没有任何关系（尽管试图将它们翻译成&amp;quot;文字问题&amp;quot;），但必须记住以便在考试中取得好成绩。&lt;/p&gt;&#xA;&lt;p&gt;你在大学能做的最有价值的事情之一可能是了解数学的真正含义。这可能不容易，因为许多优秀的数学家都是糟糕的老师。虽然有许多关于数学的通俗书籍，但似乎很少有好的。我能想到的最好的是W.W.索耶的。当然还有欧几里得。&lt;/p&gt;&#xA;&lt;h2 id=&#34;一切&#34;&gt;一切&lt;/h2&gt;&#xA;&lt;p&gt;托马斯·赫胥黎说&amp;quot;尝试了解一切的一些事情和一件事的一切。&amp;ldquo;大多数大学都以这个理想为目标。&lt;/p&gt;&#xA;&lt;p&gt;但什么是&amp;quot;一切&amp;rdquo;？对我来说，它意味着人们在诚实解决难题的过程中学到的一切。所有这样的工作往往是相关的，因为一个领域的想法和技术通常可以成功移植到其他领域。即使是那些看起来相当遥远的领域。例如，我写文章的方式和写软件的方式一样：我坐下来尽可能快地敲出一个蹩脚的版本1，然后花几周时间重写它。&lt;/p&gt;&#xA;&lt;p&gt;解决难题本身并不足够。中世纪的炼金术士在解决一个难题，但他们的方法是如此虚假，以至于研究它几乎学不到什么，除了可能关于人们欺骗自己的能力。不幸的是，我在大学尝试学习的那种人工智能有同样的缺陷：一个非常困难的问题，轻率地使用完全不足的技术来解决。大胆？更接近欺诈。社会科学也相当虚假，因为它们受到知识时尚的太大影响。如果一个物理学家遇到100年前的同事，他可以教他一些新东西；如果一个心理学家遇到100年前的同事，他们只会陷入意识形态争论。是的，当然，通过上心理学课你会学到一些东西。重点是，通过上另一个系的课，你会学到更多。&lt;/p&gt;&#xA;&lt;p&gt;在我看来，值得学习的系是数学、硬科学、工程、历史（特别是经济和社会历史，以及科学史）、建筑学和古典文学。艺术史概论课程可能是值得的。现代文学很重要，但了解它的方法就是阅读。我对音乐了解不够，无法发表意见。&lt;/p&gt;&#xA;&lt;p&gt;你可以跳过社会科学、哲学和最近为应对政治压力而创建的各个系。这些领域当然谈论重要问题。但它们谈论问题的方式是无用的。例如，哲学谈论我们对彼此的义务等；但你可以从一位明智的祖母或E.B.怀特那里学到更多关于这方面的知识，而不是从一位学术哲学家。&lt;/p&gt;&#xA;&lt;p&gt;我在这里是从经验出发说话。当人们嘲笑克林顿说&amp;quot;这取决于&amp;rsquo;是&amp;rsquo;这个词的含义是什么&amp;quot;时，我可能应该感到被冒犯。我在大学上了大约五门关于&amp;quot;是&amp;quot;这个词的含义的课。&lt;/p&gt;&#xA;&lt;p&gt;找出哪些领域值得学习的另一种方法是创建辍学图表。例如，我知道许多人从数学转向计算机科学，因为他们发现数学太难了，没有人做相反的事情。人们不会无缘无故地做困难的事情；除非一个问题相应地（或至少log(n)）更有回报，否则没有人会去解决更难的问题。所以可能数学比计算机科学更值得学习。通过类似的比较，你可以为大学中的所有系制作一个图表。在底部你会发现智力内容最少的科目。&lt;/p&gt;&#xA;&lt;p&gt;如果你使用这种方法，你会得到与我刚才给出的大致相同的答案。&lt;/p&gt;&#xA;&lt;p&gt;语言课程是一个异常。我认为它们更好地被视为课外活动，就像陶艺课程一样。当结合在讲这种语言的国家生活一段时间时，它们会更有用。我一时兴起在大一时学习了阿拉伯语。这是很多工作，唯一持久的好处是一种奇怪的能力来识别闪米特语词根，以及对人们如何识别单词的一些见解。&lt;/p&gt;&#xA;&lt;p&gt;工作室艺术和创意写作课程是变数。通常你不会被教太多：你只是在老师模糊的监督下做（或不做）你想做的任何事情，然后坐在一起为彼此的创作提供&amp;quot;批评&amp;quot;。但写作和艺术都是人们诚实解决的非常困难的问题，所以它们值得做，特别是如果你能找到一位好老师。&lt;/p&gt;&#xA;&lt;h2 id=&#34;工作&#34;&gt;工作&lt;/h2&gt;&#xA;&lt;p&gt;当然，大学生必须考虑的不仅仅是学习。还有两个实际问题需要考虑：工作和研究生院。&lt;/p&gt;&#xA;&lt;p&gt;理论上，通识教育不应该提供职业培训。但每个人都知道这有点谎言。每所大学的黑客都学习实用技能，而且不是偶然的。&lt;/p&gt;&#xA;&lt;p&gt;为找工作而学习的内容取决于你想要的工作类型。如果你想在大公司工作，学习如何在Windows上编写Blub程序。如果你想在一家酷的小公司或研究实验室工作，学习在Linux上使用Ruby会更好。如果你想创办自己的公司，我认为这会越来越普遍，掌握你能找到的最强大的工具，因为你将要与竞争对手比赛，他们将是你的马。&lt;/p&gt;&#xA;&lt;p&gt;你应该在大学学习的技能和工作中使用的技能之间没有直接的相关性。在大学里你应该目标稍微高一些。&lt;/p&gt;&#xA;&lt;p&gt;在锻炼中，足球运动员可能卧推300磅，尽管在比赛过程中他可能永远不必施加类似的力量。同样，如果你的教授试图让你学习比工作中需要的更先进的东西，可能不仅仅是因为他们是学者，脱离现实世界。他们可能在试图用你的大脑举重。&lt;/p&gt;&#xA;&lt;p&gt;你在课堂上写的程序与你将在现实世界中写的程序在三个关键方面不同：它们很小；你可以从头开始；问题通常是人为的和预定的。在现实世界中，程序更大，往往涉及现有代码，通常需要你在解决问题之前弄清楚问题是什么。&lt;/p&gt;&#xA;&lt;p&gt;你不必等到离开（甚至进入）大学才学习这些技能。例如，如果你想学习如何处理现有代码，你可以为开源项目做贡献。你想要为之工作的雇主会对此印象深刻，就像课堂作业的好成绩一样。&lt;/p&gt;&#xA;&lt;p&gt;在现有的开源项目中，你在第三种技能上没有太多练习，即决定要解决什么问题。但没有什么能阻止你开始自己的新项目。好雇主会对这更印象深刻。&lt;/p&gt;&#xA;&lt;p&gt;你应该尝试解决什么类型的问题？回答这个问题的一种方法是询问你作为用户需要什么。例如，我偶然发现了一个很好的垃圾邮件过滤算法，因为我想停止接收垃圾邮件。现在我希望我有一个邮件阅读器，能以某种方式防止我的收件箱填满。我倾向于使用我的收件箱作为待办事项列表。但这就像用螺丝刀开瓶子；人们真正想要的是一个开瓶器。&lt;/p&gt;&#xA;&lt;h2 id=&#34;研究生院&#34;&gt;研究生院&lt;/h2&gt;&#xA;&lt;p&gt;研究生院怎么样？你应该去吗？你如何进入一所好的研究生院？&lt;/p&gt;&#xA;&lt;p&gt;原则上，研究生院是研究的专业培训，除非你想把研究作为职业，否则你不应该去。然而，获得计算机科学博士学位的人中有一半没有进入研究界。我去研究生院不是为了成为教授。我去是因为我想学到更多。&lt;/p&gt;&#xA;&lt;p&gt;所以如果你主要对黑客技术感兴趣并且你去研究生院，你会发现很多其他人在同样地不在他们的元素中。如果你周围有一半的人以同样的方式不在他们的元素中，你真的不在你的元素中吗？&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;计算机科学&amp;quot;中有一个根本问题，在这种情况下就显现出来了。没有人确定&amp;quot;研究&amp;quot;应该是什么。很多研究是黑客技术，不得不被塞进学术论文的形式以产生又一个出版量。&lt;/p&gt;&#xA;&lt;p&gt;所以问你是否会在研究生院如鱼得水有点误导性，因为很少有人真正在计算机科学中如鱼得水。整个领域在自己的皮肤中感到不舒服。所以你主要对黑客技术感兴趣这一事实不应该阻止你去研究生院。只是要警告你，你将不得不做很多你不喜欢的事情。&lt;/p&gt;&#xA;&lt;p&gt;第一将是你的论文。几乎每个人在完成时都讨厌他们的论文。这个过程往往会产生令人不快的结果，就像用全麦面粉制作并烘烤十二小时的蛋糕。很少有论文是被愉快地阅读的，尤其是它们的作者。&lt;/p&gt;&#xA;&lt;p&gt;但在你之前有成千上万的人忍受了写论文的痛苦。除此之外，研究生院接近天堂。许多人记得这是他们一生中最快乐的时光。几乎所有其余的人，包括我，记得如果他们不必写论文，这本来会是一段美好的时期。&lt;/p&gt;&#xA;&lt;p&gt;研究生院的危险在于你 upfront 看不到可怕的部分。博士计划开始作为大学第2部分，有几年的课程。所以当你面对写论文的恐怖时，你已经进入几年了。如果你现在退出，你将成为研究生院辍学生，你可能不会喜欢这个想法。当罗伯特因为编写1988年的互联网蠕虫而被研究生院开除时，我非常羡慕他找到了一种没有失败耻辱的退出方式。&lt;/p&gt;&#xA;&lt;p&gt;总体而言，研究生院可能比大多数选择更好。你会遇到很多聪明人，你忧郁的拖延至少会是一个强大的共同纽带。当然，最后你有一个博士学位。我忘记了那一点。我想那是值得的。&lt;/p&gt;&#xA;&lt;p&gt;博士学位的最大优势（当然，除了是学术界的工会卡）可能是它给你一些基线信心。例如，我家的霍尼韦尔恒温器有着最糟糕的用户界面。我的母亲有相同的型号，勤奋地花了一天时间阅读用户手册来学习如何操作它。她认为问题出在她身上。但我可以对自己说&amp;quot;如果拥有计算机科学博士学位的人都无法理解这个恒温器，那它一定是设计得很糟糕。&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;在这个不温不火的推荐之后，如果你仍然想去研究生院，我可以给你关于如何进入的可靠建议。我的很多朋友现在是计算机科学教授，所以我有关于招生的内幕。这与大学完全不同。在大多数大学，招生官员决定谁被录取。对于博士计划，教授决定。他们努力做好这件事，因为他们录取的人将要为他们工作。&lt;/p&gt;&#xA;&lt;p&gt;显然，在最好的学校，只有推荐信真正重要。标准化测试毫无价值，成绩也很少价值。文章主要是通过说愚蠢的话来取消自己资格的机会。教授唯一信任的是推荐信，最好来自他们认识的人。&lt;/p&gt;&#xA;&lt;p&gt;所以如果你想进入博士计划，关键是给教授留下印象。从我当教授的朋友那里，我知道什么给他们留下印象：不仅仅是试图给他们留下印象。他们对取得好成绩的学生或想成为他们的研究助理以便进入研究生院的学生不感兴趣。他们对取得好成绩并且想成为他们的研究助理的学生印象深刻，因为他们真正对这个话题感兴趣。&lt;/p&gt;&#xA;&lt;p&gt;所以你在大学能做的最好的事情，无论你想进入研究生院还是只想擅长黑客技术，是找出你真正喜欢的东西。很难欺骗教授让你进入研究生院，也不可能欺骗问题让你解决它们。大学是伪装停止工作的地方。从这一点开始，除非你想去大公司工作，这就像回到高中，前进的唯一方法是通过做你喜欢的事情。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 似乎没有人介意，这表明阿帕网（后来成为互联网）在1984年是多么不重要。&lt;/p&gt;&#xA;&lt;p&gt;[2] 这就是为什么当我成为雇主时，我不关心GPA。事实上，我们积极寻找从学校辍学的人。我们曾经在哈佛周围张贴海报说&amp;quot;你是否因为把所有时间花在某个自己的项目上而在课堂上表现不佳而被踢出学校？来为我们工作吧！&amp;ldquo;我们设法找到了一个这样的人，他是个优秀的黑客。&lt;/p&gt;&#xA;&lt;p&gt;当哈佛将本科生开除一年时，他们必须找工作。想法是向他们展示现实世界是多么糟糕，这样他们会明白他们在大学里是多么幸运。这个计划在我们来找工作的那个家伙身上适得其反，因为他比在学校时更有趣，那年从股票期权中赚的钱比他任何教授的薪水都多。所以他没有在年底悔改地爬回来，而是又请了一年假去了欧洲。他最终大约在26岁毕业。&lt;/p&gt;&#xA;&lt;p&gt;[3] 埃里克·雷蒙德说，对黑客来说最好的隐喻在集合论、组合学和图论中。&lt;/p&gt;</description>
    </item>
    <item>
      <title>大学</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/colleges/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/colleges/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/colleges.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;大学&#34;&gt;大学&lt;/h1&gt;&#xA;&lt;h2 id=&#34;前线消息&#34;&gt;前线消息&lt;/h2&gt;&#xA;&lt;p&gt;2007年9月&lt;/p&gt;&#xA;&lt;p&gt;几周前，我有一个如此异端的想法，连我自己都感到惊讶。你上哪所大学可能并不那么重要。&lt;/p&gt;&#xA;&lt;p&gt;对于我和许多中产阶级的孩子来说，考上好大学在我成长过程中或多或少就是生命的意义。我是什么？一个学生。要做好这个，意味着要取得好成绩。为什么要取得好成绩？为了考上好大学。为什么要这样做？似乎有几个原因：你会学到更多，找到更好的工作，赚更多的钱。但具体的好处是什么并不重要。大学是你所有未来前景必须通过的瓶颈；如果你上了更好的大学，一切都会更好。&lt;/p&gt;&#xA;&lt;p&gt;几周前我意识到，在这个过程中某个时候，我已经不再相信这个了。&lt;/p&gt;&#xA;&lt;p&gt;是什么让我开始思考这个问题的是现在这种过分担心孩子上什么幼儿园的新趋势。在我看来，这根本不可能重要。要么它不会帮助孩子进入哈佛，要么如果确实有帮助，进入哈佛也不会再有太大意义了。然后我想：那么现在它有多重要呢？&lt;/p&gt;&#xA;&lt;p&gt;结果我有很多关于这方面的数据。我和我的三个合伙人经营着一家名为Y Combinator的种子期投资公司。我们在公司只有几个人和一个想法时进行投资。想法并不重要；它反正会改变。我们的大部分决策基于创始人。创始人平均大学毕业三年。许多人刚刚毕业；少数还在上学。所以我们与研究生项目或刚从大学毕业就招聘员工的公司处境非常相似。只是我们的选择会立即受到可见的检验。创业公司只有两种可能的结果：成功或失败——通常一年内你就会知道会是哪种。&lt;/p&gt;&#xA;&lt;p&gt;应用于创业公司的测试是现实世界中最纯粹的测试之一。创业公司的成功或失败几乎完全取决于创始人的努力。成功由市场决定：只有用户喜欢你构建的东西，你才会成功。而用户不在乎你上过哪所大学。&lt;/p&gt;&#xA;&lt;p&gt;除了有精确可测量的结果，我们还有很多结果。不像传统风险投资基金做少量大交易，我们做大量小交易。我们目前每年资助约40家公司，从约900份申请中选出，代表约2000人。[1]&lt;/p&gt;&#xA;&lt;p&gt;考虑到我们评估的人数之众以及应用于我们选择的快速、明确的测试，Y Combinator一直是学习如何挑选赢家的前所未有的机会。我们学到的最令人惊讶的事情之一就是人们上过的大学有多不重要。&lt;/p&gt;&#xA;&lt;p&gt;我以为自己已经不再关心这个了。没有什么比在哈佛读研究生更能治愈你对普通哈佛本科生的任何幻想了。然而Y Combinator向我们表明，我们仍然高估了上过精英大学的人。我们会面试来自麻省理工、哈佛或斯坦福的人，有时会想：他们一定比看起来更聪明。我们花了几次迭代才学会相信自己的直觉。&lt;/p&gt;&#xA;&lt;p&gt;实际上，每个人都认为上过麻省理工、哈佛或斯坦福的人一定很聪明。即使为此讨厌你的人也相信这一点。&lt;/p&gt;&#xA;&lt;p&gt;但当你想想上精英大学意味着什么时，这怎么可能呢？我们谈论的是由招生官员——基本上是人力资源人员——做出的决定，基于对十七岁青少年提交的大量令人沮丧地相似的申请的粗略检查。他们有什么依据？一个容易被游戏化的标准化测试；一篇短文告诉你孩子认为你想听什么；与随机校友的面试；基本上是服从性指标的高中记录。谁会依赖这样的测试？&lt;/p&gt;&#xA;&lt;p&gt;然而很多公司确实这样做。很多公司在很大程度上受到申请人上过的大学的影响。怎么会这样呢？我想我知道答案。&lt;/p&gt;&#xA;&lt;p&gt;企业界曾经有句说法：&amp;ldquo;没有人会因为购买IBM而被解雇。&amp;ldquo;你不再专门听到关于IBM的说法，但这个想法非常活跃；有一整类&amp;quot;企业&amp;quot;软件公司存在就是为了利用这一点。为大型组织购买技术的人不在乎为平庸软件支付巨额费用。那不是他们的钱。他们只想从一个看起来安全的供应商那里购买——一家有成熟名称、自信的销售人员、令人印象深刻的办公室以及符合所有当前潮流的软件的公司。不一定是会交付的公司，而是如果他们让你失望，仍然看起来是谨慎选择的公司。所以公司已经演变成填补这个利基市场。&lt;/p&gt;&#xA;&lt;p&gt;大公司的招聘人员与为组织购买技术的人处境非常相似。如果有人上过斯坦福且明显不疯狂，他们可能是个安全的选择。而安全的选择就足够了。没有人会根据招聘人员拒绝的人后来的表现来衡量他们。[2]&lt;/p&gt;&#xA;&lt;p&gt;我当然不是说，精英大学已经像企业软件公司那样演变成利用大型组织的弱点。但它们工作起来好像已经这样了。除了品牌名的力量，精英大学的毕业生有两个关键品质，正好适合大型组织的工作方式。他们擅长做被要求做的事情，因为这是取悦十七岁评判你的成年人所需要的。而上过精英大学让他们更加自信。&lt;/p&gt;&#xA;&lt;p&gt;在人们可能一辈子在一家大公司工作的日子里，这些品质一定非常有价值。精英大学的毕业生既能干，又服从权威。由于在大型组织中个人表现如此难以衡量，他们自己的自信将成为他们声誉的起点。&lt;/p&gt;&#xA;&lt;p&gt;在创业公司的新世界中，情况非常不同。即使我们想，我们也无法将某人从市场的判断中拯救出来。而魅力和自信对用户来说一文不值。用户关心的只是你是否制作了他们喜欢的东西。如果不，你就死定了。&lt;/p&gt;&#xA;&lt;p&gt;知道这个测试即将到来，我们比那些仅仅招聘的人更努力地寻找正确答案。我们不能对成功的预测因素有任何幻想。我们发现的是学校之间的差异比个人之间的差异小得多，相比之下可以忽略不计。在与某人交谈的第一分钟，我们比知道他们上过什么学校能了解更多。&lt;/p&gt;&#xA;&lt;p&gt;这样说是显而易见的。看个人，而不是他们上过什么大学。但这比我开始时的想法要弱，即个人上哪所大学并不那么重要。你在最好的学校学不到在较差学校学不到的东西吗？&lt;/p&gt;&#xA;&lt;p&gt;显然不是。显然，对于个人情况你无法证明这一点，但你可以从综合证据看出：如果不问他们，你无法区分上过一所学校的人与上过另一所在美国新闻列表上排名低三倍的学校的人。[3] 试试看。&lt;/p&gt;&#xA;&lt;p&gt;怎么会这样？因为你在大学学到多少更多地取决于你自己，而不是大学。一个坚定的派对动物可以在最好的学校度过而不学任何东西。而对知识有真正渴望的人将能够在一所根本不著名的学校找到一些聪明的人学习。其他学生是上精英大学的最大优势；你从他们身上学到比教授更多的东西。但如果你有意识地寻找聪明朋友，你应该能够在大多数大学重现这一点。在大多数大学，你至少能找到少数其他聪明学生，而且大多数人在大学也只有少数亲密朋友。[4] 找到聪明教授的几率甚至更好。教授的曲线比学生平坦得多，特别是在数学和硬科学方面；在数学系找不到聪明教授之前，你必须把大学列表排得很靠后。&lt;/p&gt;&#xA;&lt;p&gt;所以，我们发现不同大学的相对声望在判断个人时是无用的，这并不奇怪。大学如何选择人有很多随机性，而他们在那里学到什么更多地取决于他们自己，而不是大学。在这两个变化来源之间，某个人上过的大学并不意味着什么。它在某种程度上是能力的预测因素，但太弱了，我们主要将其视为错误来源，并努力有意识地忽略它。&lt;/p&gt;&#xA;&lt;p&gt;我怀疑我们的发现是创业公司特有的异常现象。可能人们一直高估了上大学地点的重要性。我们只是终于能够衡量它了。&lt;/p&gt;&#xA;&lt;p&gt;不幸的事情不仅是人们受到如此肤浅的测试的判断，而且这么多的人也这样判断自己。很多人，可能是美国大多数的人，对上过或没上过大学都有些不安全感。这种情况的悲剧性在于，没上过你喜欢的大学的最大 liability 是你自己感觉因此缺少了什么。大学在这方面有点像专属俱乐部。成为大多数专属俱乐部会员的唯一真正优势是：你知道如果不是会员，你不会错过太多。当你被排除在外时，你只能想象成为内部人士的优势。但它们在你的想象中总是比现实更大。&lt;/p&gt;&#xA;&lt;p&gt;大学也是如此。大学有所不同，但它们完全不像许多人想象的那样是命运的印记。人们不是十七岁时招生官员决定的样子。他们是自己塑造的样子。&lt;/p&gt;&#xA;&lt;p&gt;确实，不关心人们上过哪所大学的最大优势不仅是你可以停止用肤浅的标准判断他们（和你自己），而是你可以专注于真正重要的事情。重要的是你把自己塑造成什么样。我认为这是我们应该告诉孩子们的。他们的工作不是取得好成绩以便进入好大学，而是学习和行动。不仅因为这比世俗成功更有回报。那将越来越成为通往世俗成功的道路。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 我们衡量的东西值得衡量吗？我认为是的。你可以仅仅通过精力充沛和不择手段而致富，但从科技创业公司致富需要一定量的智慧。这正是中产阶级重视的那种工作；它与当医生的智力成分大致相同。&lt;/p&gt;&#xA;&lt;p&gt;[2] 实际上，有人做过一次。米奇·卡波尔的妻子弗雷达在莲花公司早期负责人力资源。（正如他痛苦地指出的，他们后来才发展浪漫关系。）有一次他们担心莲花公司正在失去创业优势，变成一家大公司。所以作为实验，她向招聘人员发送了前40名员工的简历，识别细节已更改。这些正是让莲花公司成为明星的人。没有一个得到面试机会。&lt;/p&gt;&#xA;&lt;p&gt;[3] 美国新闻列表？当然没有人相信那个。即使他们考虑的统计数字有用，他们如何决定相对权重？美国新闻列表有意义的原因恰恰是因为他们在这方面如此不诚实。他们没有外部来源可以用来校准他们使用的统计数字的权重；如果有，我们就可以直接使用那个了。他们必须做的是调整权重，直到顶尖学校以大致正确的顺序成为通常的怀疑对象。所以实际上美国新闻列表告诉我们的是编辑认为顶尖学校是什么，这可能与此事的普遍看法相差不远。有趣的是，因为一些学校努力游戏系统，编辑们必须不断调整算法以获得他们想要的排名。&lt;/p&gt;&#xA;&lt;p&gt;[4] 当然，可能并不意味着容易。派对学校的聪明学生不可避免地会成为某种局外人，就像他们在大多数高中一样。&lt;/p&gt;&#xA;&lt;p&gt;感谢特雷弗·布莱克威尔、莎拉·哈林、杰西卡·利文斯顿、杰基·麦克唐纳、彼得·诺维格和罗伯特·莫里斯阅读本文的草稿。&lt;/p&gt;&#xA;&lt;h2 id=&#34;相关&#34;&gt;相关&lt;/h2&gt;&#xA;&lt;p&gt;法语翻译&lt;/p&gt;</description>
    </item>
    <item>
      <title>天才的公交车票理论</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/genius/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/genius/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/genius.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;天才的公交车票理论&#34;&gt;天才的公交车票理论&lt;/h1&gt;&#xA;&lt;p&gt;2019年11月&lt;/p&gt;&#xA;&lt;p&gt;每个人都知道，要做伟大的工作，你需要天赋和决心。但还有一个不太为人理解的第三种成分：对特定话题的痴迷兴趣。&lt;/p&gt;&#xA;&lt;p&gt;为了解释这一点，我需要冒犯某群人的声誉，我选择公交车票收藏者。有人收集旧公交车票。像许多收藏家一样，他们对所收集物品的细节有着痴迷的兴趣。他们能够记住不同类型公交车票之间的区别，这对我们其他人来说很难记住。因为我们不够在乎。花这么多时间思考旧公交车票有什么意义？&lt;/p&gt;&#xA;&lt;p&gt;这引出了这种痴迷的第二特征：没有意义。公交车票收藏者的爱是无私的。他们这样做不是为了给我们留下印象，也不是为了让自己富有，而是为了它本身。&lt;/p&gt;&#xA;&lt;p&gt;当你观察那些做过伟大工作的人的生活时，你会看到一个一致的模式。他们往往从对某个东西的公交车票收藏者式的痴迷开始，这对他们同时代的大多数人来说似乎毫无意义。达尔文关于贝格尔号航行的书籍最显著的特征之一是他对自然史的兴趣深度。他的好奇心似乎无穷无尽。拉马努金也是如此，他一小时一小时地坐在石板上计算级数会发生什么。&lt;/p&gt;&#xA;&lt;p&gt;认为他们是在为后来的发现&amp;quot;奠定基础&amp;quot;是错误的。这个隐喻中有太多的意图。像公交车票收藏者一样，他们这样做是因为他们喜欢。&lt;/p&gt;&#xA;&lt;p&gt;但拉马努金和公交车票收藏者有区别。级数很重要，公交车票不重要。&lt;/p&gt;&#xA;&lt;p&gt;如果我用一句话概括天才的秘诀，可能就是这样：对重要的事情有无私的痴迷。&lt;/p&gt;&#xA;&lt;p&gt;我不是忘记了其他两种成分吗？比你可能想的少。对某个话题的痴迷兴趣既是能力的代理，也是决心的替代品。除非你有足够的数学才能，否则你不会觉得级数有趣。当你对某事痴迷时，你不需要那么多决心：当好奇心拉着你时，你不需要那么努力地推动自己。&lt;/p&gt;&#xA;&lt;p&gt;痴迷兴趣甚至会给你带来好运，在某种程度上任何事情都可以。正如巴斯德所说，机会眷顾有准备的头脑，如果说痴迷的头脑有一个特点的话，那就是它是有准备的。&lt;/p&gt;&#xA;&lt;p&gt;这种痴迷的无私性是其最重要的特征。不仅因为它是真诚的过滤器，而且因为它帮助你发现新想法。&lt;/p&gt;&#xA;&lt;p&gt;导致新想法的路径往往看起来没有希望。如果它们看起来有希望，其他人早就已经探索过了。那些做伟大工作的人如何发现这些被他人忽视的路径？流行的说法是他们只是有更好的视野：因为他们如此有才华，他们看到别人错过的路径。但如果你观察伟大发现是如何做出的，事情并非如此。达尔文并不比其他人更关注个别物种，因为他看到这会导致伟大的发现，而他们没有。他只是对这类事情真的、真的感兴趣。&lt;/p&gt;&#xA;&lt;p&gt;达尔文无法关闭这种兴趣。拉马努金也是如此。他们没有发现那些隐藏的路径是因为它们看起来有希望，而是因为他们情不自禁。正是这让他们能够遵循那些仅仅有野心的人会忽视的路径。&lt;/p&gt;&#xA;&lt;p&gt;什么理性的人会决定写伟大小说的方式是先花几年创造一个虚构的精灵语，像托尔金那样，或者访问英国西南部的每个家庭，像特罗洛普那样？没有人，包括托尔金和特罗洛普。&lt;/p&gt;&#xA;&lt;p&gt;公交车票理论类似于卡莱尔对天才的著名定义：承受痛苦的无限能力。但有两个区别。公交车票理论明确指出，这种无限承受痛苦能力的来源不是无限的勤奋，正如卡莱尔似乎意味的那样，而是收藏家拥有的那种无限兴趣。它还添加了一个重要的限定：对重要事情承受痛苦的无限能力。&lt;/p&gt;&#xA;&lt;p&gt;那么什么重要？你永远无法确定。正因为没有人能预先知道哪些路径有希望，你才能通过做你感兴趣的工作来发现新想法。&lt;/p&gt;&#xA;&lt;p&gt;但你可以使用一些启发式方法来猜测某种痴迷是否可能是重要的。例如，如果你在创造东西，而不仅仅是消费别人创造的东西，它就更有希望。如果你感兴趣的东西很困难，特别是如果它对其他人来说比对你更困难，那就更有希望。而有才华的人的痴迷更可能有希望。当有才华的人对随机事情感兴趣时，它们并不是真正随机的。&lt;/p&gt;&#xA;&lt;p&gt;但你永远无法确定。事实上，这里有一个有趣的想法，如果它是真的，也相当令人不安：可能要做伟大的工作，你还必须浪费大量时间。&lt;/p&gt;&#xA;&lt;p&gt;在许多不同领域，回报与风险成正比。如果这个规则在这里成立，那么找到导致真正伟大工作的路径的方法就是愿意在那些结果证明完全没有希望的事情上花费大量精力。&lt;/p&gt;&#xA;&lt;p&gt;我不确定这是否是真的。一方面，只要你努力做有趣的事情，似乎很难浪费时间。你所做的很多事情最终都是有用的。但另一方面，风险与回报关系的规则如此强大，以至于它似乎在风险发生的任何地方都成立。至少牛顿的案例表明，风险/回报规则在这里成立。他以一个特定的痴迷而闻名，这个痴迷结果证明是前所未有的成果：用数学描述世界。但他还有另外两个痴迷，炼金术和神学，似乎完全是浪费时间。他最终净 ahead。他对我们现在称为物理学的赌注如此成功，以至于超过了其他两个的补偿。但其他两个是否必要，从这个意义上说他必须承担大风险才能做出如此大的发现？我不知道。&lt;/p&gt;&#xA;&lt;p&gt;这是一个更令人不安的想法：一个人可能会做出所有错误的赌注？这可能经常发生。但我们不知道频率，因为这些人没有出名。&lt;/p&gt;&#xA;&lt;p&gt;不仅仅是遵循某个路径的回报难以预测。它们随时间变化很大。1830年是对自然史痴迷的好时机。如果达尔文出生在1709年而不是1809年，我们可能永远不会听说过他。&lt;/p&gt;&#xA;&lt;p&gt;面对这种不确定性，一个人能做什么？一个解决方案是对冲你的赌注，在这种情况下，这意味着遵循明显有希望的路径，而不是你自己的私人痴迷。但就像任何对冲一样，当你降低风险时，你也在降低回报。如果你放弃做你喜欢的工作，而遵循一些更传统雄心勃勃的路径，你可能会错过一些你本来会发现的美妙事情。这也一定经常发生，可能甚至比那些赌注都失败的天才更频繁。&lt;/p&gt;&#xA;&lt;p&gt;另一个解决方案是让自己对许多不同的事情感兴趣。如果你基于哪个似乎迄今为止有效而在同样真实的兴趣之间切换，你不会降低你的上限。但这里也有危险：如果你工作在太多不同的项目上，你可能无法足够深入地进入其中任何一个。&lt;/p&gt;&#xA;&lt;p&gt;公交车票理论的一个有趣之处是，它可能有助于解释为什么不同类型的人在不同类型的工作中表现出色。兴趣的分布比能力不均匀得多。如果做伟大工作只需要天赋，而天赋是均匀分布的，你必须发明复杂的理论来解释我们在各个领域中实际做伟大工作的人中看到的偏斜分布。但可能大部分偏斜有一个更简单的解释：不同的人对不同的东西感兴趣。&lt;/p&gt;&#xA;&lt;p&gt;公交车票理论也解释了为什么人们有了孩子后不太可能做伟大的工作。在这里，兴趣不仅要与外部障碍竞争，还要与另一个兴趣竞争，而这个兴趣对大多数人来说是极其强大的。有了孩子后更难找到工作时间，但这是容易的部分。真正的变化是你不想了。&lt;/p&gt;&#xA;&lt;p&gt;但公交车票理论最令人兴奋的含义是，它提出了鼓励伟大工作的方法。如果天才的秘诀只是天赋加努力，我们能做的就是希望我们有大量能力，并尽可能努力地工作。但如果兴趣是天才的关键成分，我们可能能够通过培养兴趣来培养天才。&lt;/p&gt;&#xA;&lt;p&gt;例如，对非常有野心的人来说，公交车票理论表明，做伟大工作的方式是放松一点。不要咬牙切齿地勤奋追求所有同龄人都同意的最有希望的研究路线，也许你应该尝试只是为了好玩而做一些事情。如果你被困住了，那可能是突破的方向。&lt;/p&gt;&#xA;&lt;p&gt;我一直喜欢汉明的著名双管问题：你领域中最重要的问题是什么，你为什么没有在其中之一上工作？这是一个很好的让自己震惊的方式。但它可能有点过度拟合。问自己可能至少同样有用：如果你能休假一年去做一件可能不重要但会非常有趣的事情，那会是什么？&lt;/p&gt;&#xA;&lt;p&gt;公交车票理论还提出了一种避免随着年龄增长而放缓的方法。也许人们随着年龄增长新想法变少的原因不仅仅是因为他们失去了锋芒。也可能是因为一旦你确立地位，你就不能再像年轻时那样不负责任地搞副项目，那时没有人关心你做什么。&lt;/p&gt;&#xA;&lt;p&gt;解决方案很明显：保持不负责任。但这会很困难，因为你为了防止衰退而承担的看似随机的项目，在外人看来会证明衰退的证据。你自己也不会确定他们是错的。但至少做你想做的工作会更有趣。&lt;/p&gt;&#xA;&lt;p&gt;我们甚至可以在孩子中培养智力公交车票收集的习惯。教育中的通常计划是从广泛、浅显的关注开始，然后逐渐变得更专业化。但我对我的孩子做了相反的事情。我知道我可以依靠他们的学校来处理广泛、浅显的部分，所以我带他们深入。&lt;/p&gt;&#xA;&lt;p&gt;当他们对某事感兴趣时，无论多么随机，我都鼓励他们达到荒谬的、公交车票收藏者式的深度。我这样做不是因为公交车票理论。我这样做是因为我想让他们感受到学习的乐趣，他们永远不会对我让他们学习的东西有这种感觉。必须是他们感兴趣的东西。我只是遵循阻力最小的路径；深度是副产品。但如果在试图向他们展示学习乐趣的同时，我最终训练他们深入，那就更好了。&lt;/p&gt;&#xA;&lt;p&gt;会有任何效果吗？我不知道。但这种不确定性可能是最有趣的一点。关于如何做伟大工作还有很多要学习的。人类文明感觉如此古老，如果我们还没有掌握如此基本的东西，它实际上仍然非常年轻。想到关于发现还有发现要做，这是令人兴奋的。如果那是你感兴趣的那种事情。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 还有其他类型的收集比公交车票更好地说明这一点，但它们也更受欢迎。使用一个较差的例子似乎更好，而不是通过告诉他们他们的爱好不重要来冒犯更多人。&lt;/p&gt;&#xA;&lt;p&gt;[2] 我有点担心使用&amp;quot;无私&amp;quot;这个词，因为有些人错误地相信它意味着不感兴趣。但任何期望成为天才的人都必须知道这样一个基本词的含义，所以我想他们不妨现在就开始。&lt;/p&gt;&#xA;&lt;p&gt;[3] 想想天才一定经常被告知，或告诉自己，停止胡闹并负责任而在萌芽中被扼杀。拉马努金的母亲是一个巨大的促成者。想象一下，如果她不是。想象一下，如果他的父母让他出去找工作，而不是坐在家里做数学。&lt;/p&gt;&#xA;&lt;p&gt;另一方面，任何引用前一段来证明不找工作的人可能是错误的。&lt;/p&gt;&#xA;&lt;p&gt;[4] 1709年的达尔文在时间上相当于空间上的米兰达芬奇。&lt;/p&gt;&#xA;&lt;p&gt;[5] &amp;ldquo;承受痛苦的无限能力&amp;quot;是对卡莱尔所写内容的意译。他在《腓特烈大帝史》中写道的是&amp;hellip;&amp;hellip;它是&amp;rsquo;天才&amp;rsquo;的果实（首先意味着承受烦恼的卓越能力）&amp;hellip;&amp;hellip;&amp;ldquo;由于意译在此时似乎是这个想法的名称，我保留了它。&lt;/p&gt;&#xA;&lt;p&gt;卡莱尔的《历史》于1858年出版。1785年，埃罗·德·塞谢勒引用布丰说&amp;quot;Le génie n&amp;rsquo;est qu&amp;rsquo;une plus grande aptitude à la patience.&amp;quot;（天才只是对耐心更大的适应能力。）&lt;/p&gt;&#xA;&lt;p&gt;[6] 特罗洛普正在建立邮政路线系统。他自己意识到他追求这个目标的痴迷程度。看着激情如何在一个人身上增长是很有趣的。在这两年里，用乡村邮递员覆盖全国是我人生的雄心。即使是牛顿偶尔也意识到他痴迷的程度。在将pi计算到15位数后，他在给朋友的信中写道：我羞于告诉你我把这些计算进行了多少位数字，当时没有其他事情要做。顺便说一句，拉马努金也是一个强迫性的计算者。正如卡尼格尔在他优秀的传记中所写的那样：一位拉马努金学者，B.M.威尔逊，后来告诉拉马努金对数论的研究通常是&amp;quot;以数值结果表为前提的，通常延伸到我们大多数人会退缩的长度。&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;[7] 努力理解自然世界算作创造而不是消费。&lt;/p&gt;&#xA;&lt;p&gt;牛顿在选择研究神学时在这个区别上绊倒了。他的信念不允许他看到这一点，但追寻自然中的悖论是有成果的，而追寻神圣文本中的悖论则不是。&lt;/p&gt;&#xA;&lt;p&gt;[8] 人们对某个话题产生兴趣的倾向有多少是天生的？我到目前为止的经验表明答案是：大部分。不同的孩子对不同的事情感兴趣，很难让孩子对他们本来不会感兴趣的事情感兴趣。不是以一种持久的方式。你能为一个话题做的最多的事情是确保它得到公平的展示——例如，向他们明确说明，数学不仅仅是他们在学校做的乏味练习。之后就取决于孩子了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>好写作</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/goodwriting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/goodwriting/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/goodwriting.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;好写作&#34;&gt;好写作&lt;/h1&gt;&#xA;&lt;p&gt;2025年5月&lt;/p&gt;&#xA;&lt;p&gt;写作可以在两个意义上是好的：它可以听起来很好，而且思想可以是正确的。它可以有优美流畅的句子，而且可以就重要的事情得出正确的结论。这两种好似乎可能是无关的，就像汽车的速度和它的颜色一样。然而我不认为它们是无关的。我认为听起来好的写作更可能是正确的。&lt;/p&gt;&#xA;&lt;p&gt;所以我们就有了最令人兴奋的那种想法：一个看起来既荒谬又真实的想法。让我们来检验它。这怎么可能是真的？&lt;/p&gt;&#xA;&lt;p&gt;我从写作中知道这是真的。你不可能同时优化两个无关的东西；当你把一个推得足够远时，你最终总是要牺牲另一个。然而无论我多么努力，我从未发现自己不得不在听起来最好的句子和表达思想最好的句子之间做选择。如果我必须这样做，那么关心句子的声音就是轻浮的。但在实践中，感觉恰恰相反。修复听起来不好的句子似乎有助于把思想弄对。[1]&lt;/p&gt;&#xA;&lt;p&gt;我说的对不仅仅是真实。把思想弄对意味着很好地发展它们——得出最重要的结论，并以适当的细节程度探索每一个结论。所以把思想弄对不仅仅是说真实的事情，而是说正确的真实事情。&lt;/p&gt;&#xA;&lt;p&gt;试图让句子听起来好怎么会有助于做到这一点呢？答案的线索是我在30年前为我的第一本书做版面设计时注意到的事情。有时候你在排文时会遇到坏运气。例如，你有一个部分比页面长一行。我不知道普通的排版工在这种情况下会做什么，但我做的是重写这个部分，让它少一行。你可能会期望这样一个任意的约束会让写作变得更糟。但我发现，令我惊讶的是，它从来没有。我总是得到我更喜欢的东西。&lt;/p&gt;&#xA;&lt;p&gt;我不认为这是因为我的写作特别粗心。我认为如果你指向任何人写的任何东西中的随机段落，告诉他们让它稍微短一点（或长一点），他们可能能够想出更好的东西。&lt;/p&gt;&#xA;&lt;p&gt;这种现象最好的类比是当你摇动一个装满不同物体的箱子时。摇晃是任意的运动。或者更确切地说，它们不是为了让任何两个特定的物体更紧密地结合在一起而计算的。然而，反复的摇晃不可避免地使物体发现聪明绝顶的包装方式。重力不会让它们变得不那么紧密，所以任何变化都必须是变得更好。[2]&lt;/p&gt;&#xA;&lt;p&gt;写作也是如此。如果你必须重写一个笨拙的段落，你永远不会以一种让它变得不那么真实的方式来这样做。你无法忍受，就像重力无法忍受东西向上漂浮一样。所以思想的任何变化都必须是变得更好。&lt;/p&gt;&#xA;&lt;p&gt;一旦你想到这一点，就显而易见了。听起来好的写作更可能是正确的，原因与摇晃好的箱子更可能是紧密包装的原因相同。但还有其他事情也在发生。听起来好不仅仅是一个随机的、让文章中的思想变得更好的外部力量。它实际上有助于你把它们弄对。&lt;/p&gt;&#xA;&lt;p&gt;原因是它让文章更容易阅读。阅读流畅的写作工作量更少。这对写作者有什么帮助？因为写作者是第一个读者。当我在写一篇文章时，我花在阅读上的时间远比写作多。有些部分我会重读50或100次，重放其中的思想，并问自己，就像有人在打磨一块木头，有什么东西卡住吗？有什么感觉不对吗？而且文章越容易读，就越容易注意到是否有东西卡住。&lt;/p&gt;&#xA;&lt;p&gt;所以是的，好写作的两种意义至少以两种方式连接。试图让写作听起来好会让你无意识地修正错误，也有助于你有意识地修正它们；它摇晃思想的箱子，也让错误更容易看到。但现在我们已经消解了一层荒谬，我忍不住要再添一层。听起来好是否不仅仅是帮助你把思想弄对？听起来好的写作本质上更可能是正确的吗？虽然看起来很疯狂，但我也认为这是真的。&lt;/p&gt;&#xA;&lt;p&gt;显然，在单个单词的层面上有联系。英语中有很多词听起来就像它们的意思，通常以奇妙而微妙的方式。闪烁。圆形。刮擦。一本正经。骑兵队。但好写作的声音更取决于你把词放在一起的方式，在那个层面上也有联系。&lt;/p&gt;&#xA;&lt;p&gt;当写作听起来好时，主要是因为它有好的节奏。但好写作的节奏不是音乐的节奏，也不是诗歌的韵律。它不那么规律。如果是的话，它就不会是好的，因为好写作的节奏必须匹配其中的思想，而思想有各种不同的形状。有时候它们很简单，你只是陈述它们。但其他时候它们更微妙，你需要更长、更复杂的句子来梳理出所有的含义。&lt;/p&gt;&#xA;&lt;p&gt;文章是整理过的思路，就像对话是整理过的交谈一样，思路有自然的节奏。所以当文章听起来好时，不仅仅是因为它有令人愉悦的节奏，而是因为它有自然的节奏。这意味着你可以把把节奏弄对作为把思想弄对的启发式方法。而且不仅仅是在原则上：好的作家通常会同时做这两件事。我经常甚至不区分这两个问题。我只是想，呃，这听起来不对；我在这里想说什么？[3]&lt;/p&gt;&#xA;&lt;p&gt;写作的声音原来更像飞机的形状，而不是汽车的颜色。如果它看起来好，就像凯利·约翰逊过去常说的，它会飞得好。&lt;/p&gt;&#xA;&lt;p&gt;然而，这只适用于用来发展思想的写作。当你在其他方面有了思想然后写作时，它就不适用了——例如，如果你建造了什么东西，或者进行了实验，然后写一篇关于它的论文。在这种情况下，思想更多地存在于作品中而不是写作中，所以即使思想是好的，写作也可能是坏的。教科书和流行调查中的写作可能很糟糕也是同样的原因：作者不是在发展思想，仅仅是在描述别人的思想。只有当你写作是为了发展思想时，做好这件事的两种意义之间才有如此密切的联系。&lt;/p&gt;&#xA;&lt;p&gt;好的，许多人会想，到目前为止这似乎是合理的，但骗子呢？一个能说会道的骗子写一些完全错误但美丽的东西，这不是臭名昭著的可能吗？&lt;/p&gt;&#xA;&lt;p&gt;当然是可能的。但没有方法表演是做不到的。写一些美丽而虚假的东西的方法是开始让自己几乎相信它。所以就像写一些美丽而真实东西的人一样，你呈现的是一个完美形成的思路。不同的是它附着在世界上的点。你在说如果某些错误前提成立，那就会是真的东西。如果出于某种奇怪的原因，一个国家的工作岗位数量是固定的，那么移民确实会抢走我们的工作。&lt;/p&gt;&#xA;&lt;p&gt;所以说听起来更好的写作更可能是正确的，这不太对。听起来更好的写作更可能是内在一致的。如果作者是诚实的，内在一致和真理就会趋同。&lt;/p&gt;&#xA;&lt;p&gt;虽然我们不能安全地得出结论说美丽的写作是真实的，但通常可以安全地得出相反的结论：看起来笨拙地写作的东西通常也会把思想弄错。&lt;/p&gt;&#xA;&lt;p&gt;实际上，好写作的两种意义更像同一件事的两端。它们之间的联系不是刚性的；好写作的美好不是一根杆子，而是一根绳子，有多个重叠的联系贯穿其中。但很难移动一端而不移动另一端。很难正确而不听起来正确。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 最接近例外的情况是当你必须回到你已经写的东西的中间插入一个新的观点。这常常会破坏流畅性，有时是你永远无法完全修复的方式。但我认为这个问题的最终根源是思想是树状的，而文章是线性的。当你试图把前者塞进后者时，你不可避免地会遇到困难。坦率地说，你能侥幸逃脱的程度令人惊讶。但即使如此，有时你不得不诉诸尾注。&lt;/p&gt;&#xA;&lt;p&gt;[2] 显然，如果你摇晃箱子够用力，里面的物体可能变得不那么紧密。同样，如果你对你的写作施加一些巨大的外部约束，比如使用交替的一个和两个音节的词，思想就会开始受到影响。&lt;/p&gt;&#xA;&lt;p&gt;[3] 奇怪的是，在这一段的写作中发生了这种情况。早期版本与前一段有几个共同的短语，每次我重读时，这种重复都让我烦恼。当我烦到足够修复它时，我发现这种重复反映了潜在思想中的问题，我同时修复了两者。&lt;/p&gt;&#xA;&lt;p&gt;感谢杰西卡·利文斯顿和考特尼·皮普金阅读本文的草稿。&lt;/p&gt;</description>
    </item>
    <item>
      <title>好坏拖延症</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/procrastination/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/procrastination/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/procrastination.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;好坏拖延症&#34;&gt;好坏拖延症&lt;/h1&gt;&#xA;&lt;p&gt;2005年12月&lt;/p&gt;&#xA;&lt;p&gt;我认识的最令人印象深刻的人都是糟糕的拖延症患者。那么拖延症难道不总是坏事吗？&lt;/p&gt;&#xA;&lt;p&gt;大多数写拖延症的人写的是如何治愈它。但严格来说，这是不可能的。你可以做无限多的事情。无论你在做什么，你都没有在做其他事情。所以问题不是如何避免拖延，而是如何拖延得好。&lt;/p&gt;&#xA;&lt;p&gt;拖延症有三种变体，取决于你做什么而不是工作：你可以做（a）什么也不做，（b）不太重要的事情，或（c）更重要的事情。我认为最后一种是好的拖延症。&lt;/p&gt;&#xA;&lt;p&gt;那就是&amp;quot;心不在焉的教授&amp;quot;，他在思考一些有趣问题时忘记刮胡子，忘记吃饭，甚至忘记看自己要去哪里。他的心不在日常世界，因为在另一个世界里努力工作。&lt;/p&gt;&#xA;&lt;p&gt;这就是为什么我认识的最令人印象深刻的人都是拖延症患者。他们是C型拖延症患者：他们推迟做小事情来做大事情。&lt;/p&gt;&#xA;&lt;p&gt;什么是&amp;quot;小事情？&amp;ldquo;大致来说，就是没有任何机会在你讣告中提到的工作。当时很难说什么最终会成为你最好的工作（会是你的关于苏美尔神庙建筑的杰作，还是你用笔名写的侦探小说？），但有一整类任务你可以安全地排除：刮胡子、洗衣服、打扫房子、写感谢信——任何可能被称为杂事的事情。&lt;/p&gt;&#xA;&lt;p&gt;好的拖延是避免杂事来做真正的工作。&lt;/p&gt;&#xA;&lt;p&gt;至少在某种意义上是好的。想要你做杂事的人不会认为这是好的。但如果你想做成任何事，你可能必须惹恼他们。看起来最温和的人，如果他们想做真正的工作，在避免杂事方面都有某种程度的无情。&lt;/p&gt;&#xA;&lt;p&gt;有些杂事，比如回信，如果你忽略它们就会消失（也许连朋友一起消失）。其他的，比如修剪草坪或提交纳税申报单，如果你推迟只会变得更糟。原则上推迟第二种杂事应该不起作用。你最终必须做任何事情。为什么不（如逾期通知总是说的）现在就做？&lt;/p&gt;&#xA;&lt;p&gt;即使推迟那些杂事也是有回报的，因为真正的工作需要两样杂事不需要的东西：大块的时间和正确的心情。如果你被某个项目所启发，把接下来几天应该做的一切都抛在一边去做它，可能是一个净胜利。是的，当你最终去做那些杂事时，它们可能会花费你更多时间。但如果你在那几天里完成了很多工作，你的净生产力会更高。&lt;/p&gt;&#xA;&lt;p&gt;事实上，这可能不是程度上的差异，而是种类上的差异。可能有些类型的工作只能在长期不间断的时间段内完成，当灵感来临时，而不是尽职地在安排好的小块时间里完成。经验上似乎是这样。当我想到我认识的做成伟大事情的人时，我不想象他们尽职地在待办事项清单上划掉项目。我想象他们偷偷溜去做一些新想法。&lt;/p&gt;&#xA;&lt;p&gt;相反，强迫某人同步执行杂事必然会限制他们的生产力。中断的成本不仅仅是它花费的时间，还在于它把两边的时间都切成两半。你可能一天只需要打断某人几次，他们就完全无法处理难题了。&lt;/p&gt;&#xA;&lt;p&gt;我一直在想为什么创业公司在最开始时最有效率，那时他们只是一对在公寓里的人。主要原因可能是还没有人打断他们。理论上，当创始人最终有足够的钱雇人帮他们做一些工作时是好的。但过度工作可能比被打断更好。一旦你用普通办公室员工稀释了创业公司——用B型拖延症患者——整个公司开始以他们的频率共振。他们是中断驱动的，很快你也是了。&lt;/p&gt;&#xA;&lt;p&gt;杂事在扼杀伟大项目方面如此有效，以至于很多人为此目的使用它们。例如，决定写小说的人会突然发现房子需要打扫。没能写出小说的人不是整天坐在白纸前什么都不写。他们通过喂猫、出去买公寓需要的东西、见朋友喝咖啡、检查电子邮件来做到这一点。&amp;ldquo;我没有时间工作，&amp;ldquo;他们说。他们确实没有；他们确保了这一点。&lt;/p&gt;&#xA;&lt;p&gt;（还有一种变体是没有人可以工作。解决方法是参观名人工作的地方，看看它们多么不合适。）&lt;/p&gt;&#xA;&lt;p&gt;我在某个时候或另一个时候都使用过这两个借口。在过去的20年里，我学到了很多让自己工作的技巧，但即使现在我也不能一直赢。有些天我做真正的工作。其他天被杂事吃掉。而且我知道这通常是我的错：我让杂事吃掉了一天，以避免面对一些难题。&lt;/p&gt;&#xA;&lt;p&gt;最危险的拖延形式是未被承认的B型拖延，因为它感觉不像拖延。你&amp;quot;在把事情做完。&amp;ldquo;只是错误的事情。&lt;/p&gt;&#xA;&lt;p&gt;任何关于拖延的建议，如果专注于在待办事项清单上划掉项目，而没有考虑待办事项清单本身可能是B型拖延的一种形式，那么它不仅不完整，而且是 positively 误导的。事实上，可能性这个词太弱了。几乎每个人的都是。除非你在做你能做的最大的事情，否则你就是在B型拖延，无论你完成了多少。&lt;/p&gt;&#xA;&lt;p&gt;在他著名的论文《你和你的研究》（我推荐给任何有抱负的人，无论他们在做什么）中，Richard Hamming 建议你问自己三个问题：你领域中最重要的问题是什么？你在做其中之一吗？为什么不？Hamming 在贝尔实验室时开始问这样的问题。原则上那里的任何人都应该能够在他们领域中最重要的问题上工作。也许不是每个人都能对世界产生同样显著的影响；我不知道；但无论你的能力如何，都有项目能扩展它们。所以Hamming的练习可以概括为：你能做的最好的事情是什么，你为什么不做？大多数人会回避这个问题。我自己也回避；我看到它在页面上，迅速移到下一句。Hamming 曾经四处真正问人们这个问题，这并没有让他受欢迎。但这是任何有抱负的人都应该面对的问题。&lt;/p&gt;&#xA;&lt;p&gt;问题是，你最终可能会用这个饵钩上一条非常大的鱼。要做好工作，你需要做的不仅仅是找到好项目。一旦你找到了它们，你必须让自己去工作，这可能很难。问题越大，越难让自己去工作。&lt;/p&gt;&#xA;&lt;p&gt;当然，人们发现很难在特定问题上工作的主要原因是他们不喜欢它。当你年轻的时候，特别是，你经常发现自己做的工作不是真正喜欢的——例如，因为它看起来令人印象深刻，或者因为你被分配去做它。大多数研究生被卡在他们不喜欢的大问题上工作，因此研究生院与拖延症同义。&lt;/p&gt;&#xA;&lt;p&gt;但即使你喜欢你所做的工作，让自己在小问题上工作也比在大问题上工作更容易。为什么？为什么在大问题上工作如此困难？一个原因是你在可预见的未来可能得不到任何回报。如果你做一些一两天就能完成的工作，你可以期望很快就有很好的成就感。如果回报在无限远的未来，它似乎不那么真实。&lt;/p&gt;&#xA;&lt;p&gt;人们不在大项目上工作的另一个原因是，具有讽刺意味的，害怕浪费时间。如果他们失败了怎么办？那么他们花在上面的所有时间都浪费了。（事实上可能不会，因为在困难项目上的工作几乎总会通向某个地方。）&lt;/p&gt;&#xA;&lt;p&gt;但大问题的麻烦不能只是它们承诺没有立即的回报，可能会让你浪费大量时间。如果只是那样，它们不会比去看姻亲更糟糕。比那更多。大问题是可怕的。面对它们有几乎身体的痛苦。就像把真空吸尘器接到你的想象力上。你所有的初始想法立即被吸走，你不再有更多了，然而真空吸尘器仍然在吸。&lt;/p&gt;&#xA;&lt;p&gt;你不能太直接地看大问题的眼睛。你必须有点斜向地接近它。但你必须把角度调整得正好：你必须足够直接地面对大问题，捕捉到从它辐射出的一些兴奋，但不能太多以至于它使你瘫痪。一旦你开始，就可以收紧角度，就像帆船一旦开始航行就可以更靠近风航行。&lt;/p&gt;&#xA;&lt;p&gt;如果你想做大事，你似乎必须欺骗自己去做。你必须做可能长成大事的小事情，或者做越来越大的事情，或者与合作者分担道德负担。依赖这样的技巧不是软弱的标志。最好的工作就是以这种方式完成的。&lt;/p&gt;&#xA;&lt;p&gt;当我谈到那些设法让自己在大问题上工作的人时，我发现他们都抛开杂事，都为此感到内疚。我不认为他们应该感到内疚。要做的事情比任何人能做的都多。所以做他们能做的最好工作的人必然会留下很多未完成的杂事。为此感到难过似乎是个错误。&lt;/p&gt;&#xA;&lt;p&gt;我认为&amp;quot;解决&amp;quot;拖延症问题的方法是让快乐拉着你，而不是让待办事项清单推着你。做一个你真正喜欢的有抱负的项目，尽可能靠近风航行，你会留下正确的事情未完成。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;&lt;em&gt;感谢 Trevor Blackwell、Jessica Livingston 和 Robert Morris 阅读本文草稿。&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;罗马尼亚语翻译&lt;/strong&gt; | &lt;strong&gt;俄语翻译&lt;/strong&gt; | &lt;strong&gt;希伯来语翻译&lt;/strong&gt; | &lt;strong&gt;德语翻译&lt;/strong&gt; | &lt;strong&gt;葡萄牙语翻译&lt;/strong&gt; | &lt;strong&gt;意大利语翻译&lt;/strong&gt; | &lt;strong&gt;日语翻译&lt;/strong&gt; | &lt;strong&gt;西班牙语翻译&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>如何不同意</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/disagree/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/disagree/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/disagree.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;如何不同意&#34;&gt;如何不同意&lt;/h1&gt;&#xA;&lt;p&gt;2008年3月&lt;/p&gt;&#xA;&lt;p&gt;网络正在将写作变成对话。二十年前，作家写作，读者阅读。网络让读者能够回应，而且他们确实越来越多地这样做——在评论串中、论坛上，以及他们自己的博客文章中。&lt;/p&gt;&#xA;&lt;p&gt;许多回应某事的人对此持不同意见。这是意料之中的。同意往往比不同意更能激发人的积极性。而且当你同意时，能说的话就更少了。你可以扩展作者所说的某些内容，但他可能已经探索了最有趣的含义。当你不同意时，你正在进入他可能没有探索过的领域。&lt;/p&gt;&#xA;&lt;p&gt;结果是有更多不同意见在进行，特别是按字数衡量。这并不意味着人们变得越来越愤怒。我们沟通方式的结构性变化足以解释这一点。但虽然驱动不同意见增加的不是愤怒，但不同意见的增加会使人们更愤怒存在危险。特别是在线时，在那里很容易说出你永远不会面对面说的话。&lt;/p&gt;&#xA;&lt;p&gt;如果我们都要更多地表达不同意见，我们应该小心地做好它。什么是做好不同意见？大多数读者能够分辨出纯粹的辱骂和仔细推理的驳斥之间的区别，但我认为给中间阶段命名会有帮助。所以这里尝试建立一个不同意见的层次结构：&lt;/p&gt;&#xA;&lt;h2 id=&#34;dh0-辱骂&#34;&gt;DH0. 辱骂。&lt;/h2&gt;&#xA;&lt;p&gt;这是最低形式的不同意见，可能也是最常见的。我们都见过这样的评论：u r a fag!!!!!!!!!!但重要的是要认识到，更有表达力的辱骂同样没有分量。像&amp;quot;作者是一个自命不凡的半吊子&amp;quot;这样的评论实际上只是&amp;quot;u r a fag&amp;quot;的做作版本。&lt;/p&gt;&#xA;&lt;h2 id=&#34;dh1-人身攻击&#34;&gt;DH1. 人身攻击。&lt;/h2&gt;&#xA;&lt;p&gt;人身攻击不如纯粹的辱骂那么弱。它实际上可能有一些分量。例如，如果一位参议员写文章说参议员的薪水应该增加，有人可以回应：他当然会这么说。他是参议员。这不会驳斥作者的论点，但至少可能与案件相关。不过，这仍然是非常弱的不同意见形式。如果参议员的论点有问题，你应该说出来；如果没有，他是参议员又有什么区别？&lt;/p&gt;&#xA;&lt;p&gt;说作者缺乏写某个话题的权威性是人身攻击的一种变体——而且是特别无用的一种，因为好想法往往来自外人。问题是作者是否正确。如果他缺乏权威导致他犯了错误，指出那些错误。如果没有，那就不是问题。&lt;/p&gt;&#xA;&lt;h2 id=&#34;dh2-回应语气&#34;&gt;DH2. 回应语气。&lt;/h2&gt;&#xA;&lt;p&gt;再往上一层，我们开始看到对写作的回应，而不是对作者。这些中最低级的形式是不同意作者的语气。例如：我不敢相信作者如此轻率地否定智能设计。虽然比攻击作者好，但这仍然是弱的不同意见形式。作者是对是错比他的语气重要得多。特别是因为语气很难判断。对某个话题有芥蒂的人可能会被其他读者看起来中性的语气冒犯。&lt;/p&gt;&#xA;&lt;p&gt;所以如果你能对某件事说的最坏的话是批评它的语气，那你就没说什么。作者轻率，但是正确的？那比严肃但错误好。如果作者在某处不正确，说出来。&lt;/p&gt;&#xA;&lt;h2 id=&#34;dh3-矛盾&#34;&gt;DH3. 矛盾。&lt;/h2&gt;&#xA;&lt;p&gt;在这个阶段，我们终于得到对所说内容的回应，而不是如何说或谁说的。对论点的最低级回应形式只是陈述对立的情况，很少或没有支持证据。&lt;/p&gt;&#xA;&lt;p&gt;这通常与DH2陈述结合，如：我不敢相信作者如此轻率地否定智能设计。智能设计是合法的科学理论。矛盾有时可能有一些分量。有时仅仅看到对立情况明确陈述就足以看出它是正确的。但通常证据会有帮助。&lt;/p&gt;&#xA;&lt;h2 id=&#34;dh4-反论证&#34;&gt;DH4. 反论证。&lt;/h2&gt;&#xA;&lt;p&gt;在第4级，我们达到第一种令人信服的不同意见形式：反论证。到此为止的形式通常可以忽略，因为证明不了什么。反论证可能证明一些东西。问题是，很难准确地说出是什么。&lt;/p&gt;&#xA;&lt;p&gt;反论证是矛盾加上推理和/或证据。当直接针对原始论点时，它可能是令人信服的。但不幸的是，反论证通常针对的是稍微不同的东西。两个热衷于争论某事的人实际上经常在争论两个不同的东西，这种情况比比皆是。有时他们甚至彼此同意，但如此沉迷于争吵以至于没有意识到。&lt;/p&gt;&#xA;&lt;p&gt;可能有正当理由反驳与原作者说的稍微不同的东西：当你觉得他们错过了问题的核心时。但当你这样做时，你应该明确说你在这样做。&lt;/p&gt;&#xA;&lt;h2 id=&#34;dh5-驳斥&#34;&gt;DH5. 驳斥。&lt;/h2&gt;&#xA;&lt;p&gt;最有说服力的不同意见形式是驳斥。它也是最罕见的，因为它是最费力的。确实，不同意见层次结构形成了一种金字塔，意义是越高你找到的实例越少。&lt;/p&gt;&#xA;&lt;p&gt;要驳斥某人，你可能必须引用他们。你必须找到一个&amp;quot;确凿的证据&amp;quot;，在你不同意的东西中的一个你认为错误的段落，然后解释为什么它是错误的。如果你找不到一个实际的引用来不同意，你可能在与一个稻草人争论。&lt;/p&gt;&#xA;&lt;p&gt;虽然驳斥通常需要引用，但引用并不一定意味着驳斥。一些作者引用他们不同意的东西的部分，以给予合法驳斥的外观，然后跟随低至DH3甚至DH0的回应。&lt;/p&gt;&#xA;&lt;h2 id=&#34;dh6-驳斥中心论点&#34;&gt;DH6. 驳斥中心论点。&lt;/h2&gt;&#xA;&lt;p&gt;驳斥的力量取决于你驳斥什么。最有力的不同意见形式是驳斥某人的中心论点。&lt;/p&gt;&#xA;&lt;p&gt;即使在DH5这样高的级别，我们有时仍然看到刻意的不诚实，比如当某人挑选出论点的次要点并驳斥那些。有时这样做的精神使它更像一种复杂形式的人身攻击，而不是实际的驳斥。例如，纠正某人的语法，或纠缠名称或数字的小错误。除非对立的论点实际上依赖这些东西，纠正它们的唯一目的是抹黑对手。&lt;/p&gt;&#xA;&lt;p&gt;真正驳斥某事需要一个人驳斥其中心论点，或至少其中之一。这意味着一个人必须明确承诺中心论点是什么。所以一个真正有效的驳斥看起来像这样：作者的主要论点似乎是x。正如他所说：&amp;lt;引用&amp;gt;但以下是错误的&amp;hellip;&amp;hellip;&lt;/p&gt;&#xA;&lt;p&gt;你指出错误的引用不需要是作者主要论点的实际陈述。驳斥它依赖的东西就足够了。&lt;/p&gt;&#xA;&lt;h2 id=&#34;意义是什么&#34;&gt;意义是什么&lt;/h2&gt;&#xA;&lt;p&gt;现在我们有了一种分类不同意见形式的方法。这有什么好处？不同意见层次结构没有给我们提供的一种方法是选择赢家的方式。DH级别仅仅描述陈述的形式，而不是它是否正确。DH6回应仍然可能完全错误。&lt;/p&gt;&#xA;&lt;p&gt;但是虽然DH级别不设置_reply说服力的下限，但它们确实设置了上限。DH6回应可能没有说服力，但DH2或更低的回应总是没有说服力。&lt;/p&gt;&#xA;&lt;p&gt;分类不同意见形式的最明显优势是它将帮助人们评估他们所读的内容。特别是，它将帮助他们看穿智力不诚实的论证。雄辩的演讲者或作家可以仅仅通过使用有力的词语给予战胜对手的印象。实际上，这可能是煽动者的定义品质。通过给不同形式的不同意见命名，我们给批判性读者一根针来刺破这样的气球。&lt;/p&gt;&#xA;&lt;p&gt;这样的标签也可能帮助作家。大多数智力不诚实是无意的。反对他不同意的东西的语气的人可能相信他真的在说什么。缩小并看到他在不同意见层次结构上的当前位置可能激发他尝试提升到反论证或驳斥。&lt;/p&gt;&#xA;&lt;p&gt;但良好不同意见的最大好处不仅仅是它会使对话更好，而是它会使进行对话的人更快乐。如果你研究对话，你会发现DH1级别比DH6级别有更多的刻薄。当你有真正的观点要表达时，你不必刻薄。事实上，你不想刻薄。如果你有真实的话要说，刻薄只会妨碍。&lt;/p&gt;&#xA;&lt;p&gt;如果在不同意见层次结构上提升使人们不那么刻薄，那会使他们中的大多数更快乐。大多数人真的不喜欢刻薄；他们这样做是因为他们忍不住。&lt;/p&gt;&#xA;&lt;p&gt;感谢Trevor Blackwell和Jessica Livingston阅读本文的草稿。&lt;/p&gt;&#xA;&lt;p&gt;相关链接：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;../essays_zh/say.html&#34;&gt;不能说的话&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;../essays_zh/essay.html&#34;&gt;散文的时代&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.aoky.net/articles/paul_graham/how_to_disagree_italian.htm&#34;&gt;意大利语翻译&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.aoky.net/articles/paul_graham/how_to_disagree_russian.htm&#34;&gt;俄语翻译&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.aoky.net/articles/paul_graham/how_to_disagree_swedish.htm&#34;&gt;瑞典语翻译&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.aoky.net/articles/paul_graham/how_to_disagree_spanish.htm&#34;&gt;西班牙语翻译&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.aoky.net/articles/paul_graham/how_to_disagree_german.htm&#34;&gt;德语翻译&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.aoky.net/articles/paul_graham/how_to_disagree_french.htm&#34;&gt;法语翻译&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.aoky.net/articles/paul_graham/how_to_disagree_arabic.htm&#34;&gt;阿拉伯语翻译&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.aoky.net/articles/paul_graham/how_to_disagree_finnish.htm&#34;&gt;芬兰语翻译&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.aoky.net/articles/paul_graham/how_to_disagree_turkish.htm&#34;&gt;土耳其语翻译&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>如何不死</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/die/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/die/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/die.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;如何不死&#34;&gt;如何不死&lt;/h1&gt;&#xA;&lt;p&gt;2007年8月&lt;/p&gt;&#xA;&lt;p&gt;（这是我在Y Combinator夏季最后一次晚餐上的演讲。通常我们最后一次晚餐没有演讲者；这更像是一个聚会。但如果我能挽救一些创业公司免于可预防的死亡，破坏气氛似乎值得。所以在最后一刻我准备了这个相当严峻的演讲。我并不是要把它作为一篇散文；我写下来是因为晚餐前只有两个小时，而我写作时思考最快。）&lt;/p&gt;&#xA;&lt;p&gt;几天前我告诉一位记者，我们预计资助的公司中约有三分之一会成功。实际上我是在保守估计。我希望可能高达一半。如果我们能实现50%的成功率，那不是很棒吗？&lt;/p&gt;&#xA;&lt;p&gt;另一种说法是你们中有一半会死。这样说的话，听起来一点都不好。事实上，当你思考这个问题时有点奇怪，因为我们对成功的定义是创始人变得富有。如果我们资助的创业公司中有一半成功，那么你们中有一半会变得富有，另一半将一无所获。&lt;/p&gt;&#xA;&lt;p&gt;如果你能避免死亡，你就会变得富有。这听起来像是个笑话，但实际上是对典型创业公司中发生的事情的相当好的描述。它确实描述了Viaweb发生的事情。我们避免了死亡直到变得富有。&lt;/p&gt;&#xA;&lt;p&gt;那也是非常接近的。当我们访问雅虎谈论被收购时，我们不得不中断一切，借用他们的一个会议室来安抚一个投资者，他正要退出我们需要维持生存的新一轮融资。所以即使在变得富有的过程中，我们也在与死神搏斗。&lt;/p&gt;&#xA;&lt;p&gt;你可能听说过运气是机会遇上准备的那句名言。现在你已经做好了准备。你到目前为止所做的工作，实际上让你处于一个幸运的位置：你现在可以通过不让你的公司死亡而变得富有。这比大多数人拥有的要多。那么让我们谈谈如何不死。&lt;/p&gt;&#xA;&lt;p&gt;我们现在已经做了五次，我们看到了一群创业公司死亡。到目前为止大约有10家。我们不太清楚它们死亡时发生了什么，因为它们通常不会大声而英勇地死亡。它们大多爬到某个地方然后死亡。&lt;/p&gt;&#xA;&lt;p&gt;对我们来说，即将到来的毁灭的主要迹象是当我们没有收到你的消息时。当我们几个月没有收到来自或关于某个创业公司的消息时，这是个坏迹象。如果我们发送电子邮件询问情况，而他们不回复，那是个非常糟糕的迹象。到目前为止，这是死亡的100%准确预测因素。&lt;/p&gt;&#xA;&lt;p&gt;而如果一个创业公司定期做新交易和发布，并且要么给我们发邮件要么出现在YC活动中，他们可能会生存下来。&lt;/p&gt;&#xA;&lt;p&gt;我意识到这听起来很天真，但这种联系可能双向起作用。也许如果你能安排让我们继续听到你的消息，你就不会死。&lt;/p&gt;&#xA;&lt;p&gt;这听起来可能并不那么天真。你可能已经注意到，每周二与我们和其他创始人一起晚餐让你比其他情况下完成更多工作，因为每次晚餐都是一个小型演示日。每次晚餐都是一种截止日期。所以仅仅保持与我们定期联系的限制就会推动你让事情发生，否则你会不好意思地告诉我们自从上次谈话以来你还没有做任何新事情。&lt;/p&gt;&#xA;&lt;p&gt;如果这有效，那将是一个惊人的技巧。如果仅仅通过与我们保持定期联系你就能变得富有，那将相当酷。这听起来很疯狂，但这很可能会有效。&lt;/p&gt;&#xA;&lt;p&gt;一个变体是与其他YC资助的创业公司保持联系。现在旧金山有一个完整的社区。如果你搬到那里，让你整个夏天更努力工作的同辈压力将继续发挥作用。&lt;/p&gt;&#xA;&lt;p&gt;当创业公司死亡时，官方的死因总是要么资金耗尽，要么关键创始人退出。通常两者同时发生。但我认为根本原因通常是他们变得士气低落。你很少听说一个创业公司夜以继日地工作做交易和推出新功能，却因为他们无法支付账单而ISP拔掉他们的服务器而死亡。&lt;/p&gt;&#xA;&lt;p&gt;创业公司很少在击键中途死亡。所以继续打字！&lt;/p&gt;&#xA;&lt;p&gt;如果这么多创业公司变得士气低落并失败，而仅仅坚持下去就能变得富有，你必须假设经营创业公司可能会让人士气低落。这当然是真实的。我曾经经历过，这就是为什么我再也没有做过另一个创业公司。创业公司的低点简直令人难以置信地低。我敢打赌即使是谷歌也有看起来毫无希望的时刻。&lt;/p&gt;&#xA;&lt;p&gt;知道这一点应该会有帮助。如果你知道有时会感觉很糟糕，那么当感觉糟糕时你不会想&amp;quot;哎呀，这感觉太糟糕了，我放弃了&amp;quot;。每个人都会有这种感觉。如果你坚持下去，事情可能会好转。人们用来描述创业公司感觉的比喻至少是过山车而不是溺水。你不会一直下沉；低谷后有高潮。&lt;/p&gt;&#xA;&lt;p&gt;创业公司中另一种看起来令人担忧但实际上正常的感觉是你正在做的事情不起作用的感觉。你可以预期会有这种感觉的原因是你做的事情可能不会起作用。创业公司几乎第一次就做对的情况很少见。更常见的是你推出一些东西，而没有人关心。当这种情况发生时，不要假设你失败了。这对创业公司来说是正常的。但不要无所事事地坐着。迭代。&lt;/p&gt;&#xA;&lt;p&gt;我喜欢Paul Buchheit的建议，尝试制作至少有人真正热爱的东西。只要你制作了一些用户为之狂热的东西，你就走在正确的轨道上。即使有一小群真正爱你的人对你的士气也有好处，而创业公司靠士气运行。而且它会告诉你应该关注什么。他们喜欢你什么？你能在这方面做得更多吗？你在哪里能找到更多喜欢那种事情的人？只要你有一群爱你的核心用户，你所要做的就是扩大它。可能需要一段时间，但只要你不断努力，最终你会成功。Blogger和Delicious都做到了这一点。两者都花了数年才成功。但两者都从一个狂热忠诚的用户核心开始，Evan和Joshua所要做的就是逐步扩大这个核心。Wufoo现在也在同样的轨迹上。&lt;/p&gt;&#xA;&lt;p&gt;所以当你发布一些东西而似乎没有人关心时，更仔细地看。是否有零个用户真正爱你，或者至少有一些小组这样？很有可能会是零。在这种情况下，调整你的产品再试一次。你们每个人都在一个包含至少一个成功排列的空间中工作。如果你不断尝试，你会找到它的。&lt;/p&gt;&#xA;&lt;p&gt;让我提一些不该做的事情。最不该做的事情是做其他事情。如果你发现自己说一句以&amp;quot;但我们要继续为创业公司工作&amp;quot;结尾的句子，你就大麻烦了。Bob要去读研究生了，但我们要继续为创业公司工作。我们要搬回明尼苏达州，但我们要继续为创业公司工作。我们要接一些咨询项目，但我们要继续为创业公司工作。你不妨直接把这些翻译成&amp;quot;我们放弃了创业公司，但我们不愿意对自己承认&amp;quot;，因为大多数时候这就是它的意思。创业公司是如此困难，以至于做它不能以&amp;quot;但&amp;quot;开头。&lt;/p&gt;&#xA;&lt;p&gt;特别是，不要去读研究生，也不要开始其他项目。分心对创业公司是致命的。去（或回）学校是死亡的巨大预测因素，因为除了分心，它还给了你一些说你正在做的事情。如果你只在做创业公司，那么如果创业公司失败了，你就失败了。如果你在读研究生而你的创业公司失败了，你以后可以说&amp;quot;哦，是的，我在读研究生时有个创业公司，但没有起色。&amp;quot;&lt;/p&gt;&#xA;&lt;p&gt;你不能对你唯一的工作使用诸如&amp;quot;没有起色&amp;quot;这样的委婉语。人们不会让你这么做。&lt;/p&gt;&#xA;&lt;p&gt;我们在Y Combinator工作过程中发现的最有趣的事情之一是，创始人更害怕看起来不好，而不是希望获得数百万美元。所以如果你想获得数百万美元，把自己置于失败将是公开和羞辱的境地。&lt;/p&gt;&#xA;&lt;p&gt;当我们第一次见到Octopart的创始人时，他们看起来非常聪明，但不是成功的很好赌注，因为他们似乎不是特别投入。两位创始人中有一位还在读研究生。这是通常的情况：如果创业公司看起来有起色，他就会退学。从那时起，他不仅退学了，还全身出现在《新闻周刊》上，胸前印着&amp;quot;亿万富翁&amp;quot;这个词。他现在不能失败了。他认识的每个人都看到了那张照片。高中时拒绝过他的女孩们都看到了。他妈妈可能把它贴在冰箱上。现在失败将是难以想象的羞辱。此时他承诺要战斗到底。&lt;/p&gt;&#xA;&lt;p&gt;我希望我们资助的每个创业公司都能出现在一篇描述他们为下一代亿万富翁的《新闻周刊》文章中，因为那样他们中没有人能够放弃。成功率将是90%。我不是在开玩笑。&lt;/p&gt;&#xA;&lt;p&gt;当我们第一次认识Octoparts时，他们是轻松愉快的人。现在当我们与他们交谈时，他们看起来严峻而坚定。电子零件分销商试图挤压他们以保持垄断定价。（如果你觉得2007年人们还从厚厚的纸质目录中订购电子零件很奇怪，那是有原因的。分销商希望防止在线定价带来的透明度。）我感觉有点不好，我们把这些人从轻松愉快转变为严峻而坚定。但这是伴随而来的。如果创业公司成功，你会获得数百万美元，而你不会仅仅通过要求就得到那种钱。你必须假设它需要一定程度的痛苦。&lt;/p&gt;&#xA;&lt;p&gt;无论Octoparts的情况变得多么艰难，我预测他们会成功。他们可能必须把自己变成完全不同的东西，但他们不会只是爬走然后死亡。他们聪明；他们在一个有前途的领域工作；他们只是不能放弃。&lt;/p&gt;&#xA;&lt;p&gt;你们大家已经具备了前两个条件。你们都聪明，都在为有前途的想法工作。你最终是归于生者还是死者取决于第三个因素，不放弃。&lt;/p&gt;&#xA;&lt;p&gt;所以我现在告诉你：糟糕的事情要来了。创业公司总是如此。从发布到流动性没有发生某种灾难而幸存的几率是千分之一。所以不要士气低落。当灾难袭来时，只要对自己说，好的，这就是Paul谈论的事情。他说要做什么？哦，是的。不要放弃。&lt;/p&gt;&#xA;&lt;p&gt;相关链接：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.aoky.net/articles/paul_graham/how_not_to_die_japanese.htm&#34;&gt;日语翻译&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.aoky.net/articles/paul_graham/how_not_to_die_arabic.htm&#34;&gt;阿拉伯语翻译&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>如何做你热爱的事情</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/love/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/love/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/love.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;如何做你热爱的事情&#34;&gt;如何做你热爱的事情&lt;/h1&gt;&#xA;&lt;p&gt;2006年1月&lt;/p&gt;&#xA;&lt;p&gt;要把事情做好，你必须喜欢它。这个想法并不新颖。我们把它总结成四个词：&amp;ldquo;做你热爱的事情。&amp;ldquo;但仅仅告诉人们这是不够的。做你热爱的事情是复杂的。&lt;/p&gt;&#xA;&lt;p&gt;这个想法对我们大多数人在童年时学到的东西来说是陌生的。当我还是个孩子的时候，工作和乐趣似乎按定义是对立的。生活有两种状态：有时候成年人让你做事情，那被称为工作；其余时间你可以做你想做的事情，那被称为玩耍。偶尔成年人让你做的事情是有趣的，就像偶尔玩耍也不是——比如，如果你摔倒受伤了。但除了这些异常情况，工作基本上被定义为非乐趣。&lt;/p&gt;&#xA;&lt;p&gt;这似乎不是偶然的。学校，暗示着，是乏味的，因为它是为成人工作做准备的。&lt;/p&gt;&#xA;&lt;p&gt;那时世界分为两组，成年人和孩子。成年人，像某种被诅咒的种族，必须工作。孩子不必，但他们必须上学，这是工作的稀释版本，旨在为我们为真实的事情做准备。尽管我们不喜欢学校，成年人都同意成人工作更糟糕，而我们很容易。&lt;/p&gt;&#xA;&lt;p&gt;特别是老师，似乎都相信工作不是有趣的。这并不奇怪：对大多数他们来说工作不是有趣的。为什么我们必须记住州首府而不是玩躲避球？出于同样的原因，他们必须看管一群孩子而不是躺在海滩上。你不能做你想做的事情。&lt;/p&gt;&#xA;&lt;p&gt;我不是说我们应该让孩子做任何他们想做的事情。他们可能必须被强迫做某些事情。但如果我们让孩子做乏味的事情，告诉他们乏味不是工作的决定性质量可能是明智的，而且事实上他们现在必须做乏味事情的原因是他们以后可以做更有趣的事情。[1]&lt;/p&gt;&#xA;&lt;p&gt;有一次，当我大约9或10岁时，我父亲告诉我长大后我可以成为任何我想成为的人，只要我享受它。我清楚地记得这个，因为它似乎如此异常。就像被告知使用干水一样。无论我认为他是什么意思，我都不认为他的意思是工作实际上可以是有趣的——像玩耍一样的有趣。我花了很多年才理解这一点。&lt;/p&gt;&#xA;&lt;h2 id=&#34;工作&#34;&gt;工作&lt;/h2&gt;&#xA;&lt;p&gt;到了高中，实际工作的前景就在眼前。成年人有时会来和我们谈论他们的工作，或者我们会去看他们工作。总是理解为他们享受他们所做的事情。回想起来，我认为可能有一个人这样：私人飞机飞行员。但我不认为银行经理真的这样。&lt;/p&gt;&#xA;&lt;p&gt;他们所有人都表现得好像享受他们的工作的主要原因可能是中上阶层的惯例，认为你应该这样。说你对你的工作感到厌恶不仅对你的职业生涯不利，而且是社交失礼。&lt;/p&gt;&#xA;&lt;p&gt;为什么假装喜欢你所做的事情是常规的？这篇文章的第一句解释了这一点。如果你必须喜欢某件事才能把它做好，那么最成功的人都会喜欢他们所做的事情。这就是中上阶层传统的来源。就像全美国各地的房子都充满了椅子，没有主人甚至知道，是250年前为法国国王设计的椅子的n度模仿一样，关于工作的传统态度，没有主人甚至知道，是做了伟大事情的人的态度的n度模仿。&lt;/p&gt;&#xA;&lt;p&gt;这是疏离的配方。到他们到达考虑他们想做什么的年龄时，大多数孩子已经被严重误导了对热爱工作的想法。学校训练他们将工作视为不愉快的义务。有工作据说甚至比学校作业更繁重。然而所有成年人都声称喜欢他们所做的事情。你不能责怪孩子认为&amp;quot;我不像这些人；我不适合这个世界。&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;实际上他们被告知了三个谎言：他们在学校被教导视为工作的东西不是真实的工作；成人工作不一定比学校作业更糟糕；周围的许多成年人在说他们喜欢所做的事情时在撒谎。&lt;/p&gt;&#xA;&lt;p&gt;最危险的撒谎者可能是孩子自己的父母。如果你做一个无聊的工作给你的家庭提供高标准的生活，正如许多人那样，你冒着用工作是乏味的想法感染孩子的风险。[2] 也许在这种情况下，如果父母不那么无私，对孩子会更好。一个树立热爱工作榜样的父母可能比昂贵的房子更多地帮助孩子。[3]&lt;/p&gt;&#xA;&lt;p&gt;直到我上了大学，工作的概念才终于从谋生的概念中解放出来。那么重要的问题不是如何赚钱，而是要做什么工作。理想情况下这些重合，但一些惊人的边界情况（像专利局的爱因斯坦）证明它们不是相同的。&lt;/p&gt;&#xA;&lt;p&gt;工作的定义现在是对世界做出一些原创贡献，在这个过程中不挨饿。但经过这么多年的习惯，我对工作的概念仍然包含大量痛苦的成分。工作似乎仍然需要纪律，因为只有难题才能产生伟大的结果，而难题不可能字面上是有趣的。当然人们必须强迫自己在它们上面工作。&lt;/p&gt;&#xA;&lt;p&gt;如果你认为某件事应该伤害你，你就不太可能注意到你是否做错了。这总结了我研究生院的经历。&lt;/p&gt;&#xA;&lt;h2 id=&#34;界限&#34;&gt;界限&lt;/h2&gt;&#xA;&lt;p&gt;你应该多喜欢你所做的事情？除非你知道这个，否则你不知道何时停止寻找。而且，如果像大多数人一样，你低估了它，你往往会过早停止寻找。你最终会做由你父母、或赚钱的欲望、或声望——或纯粹惯性为你选择的事情。&lt;/p&gt;&#xA;&lt;p&gt;这里有一个上限：做你热爱的事情并不意味着，做你这一秒最想做的事情。即使是爱因斯坦也可能有想要喝杯咖啡的时刻，但他告诉自己应该先完成正在做的事情。&lt;/p&gt;&#xA;&lt;p&gt;当我读到那些如此喜欢他们所做的事情以至于没有他们宁愿做的事情的人时，我曾经感到困惑。似乎没有任何我喜欢的工作达到那种程度。如果我选择(a)下个小时工作在某事上或(b)被传送到罗马并在下个小时闲逛，有任何工作我更喜欢吗？老实说，没有。&lt;/p&gt;&#xA;&lt;p&gt;但事实上，几乎任何人在任何给定的时刻，都宁愿在加勒比海漂浮，或做爱，或吃美味的食物，而不是在难题上工作。做你热爱的事情的规则假设了一定的时间长度。它不是指，做什么会让你在这一秒最快乐，而是会在更长时期内让你最快乐，比如一周或一个月。&lt;/p&gt;&#xA;&lt;p&gt;非生产性的乐趣最终会变得乏味。过了一会儿，你会厌倦躺在海滩上。如果你想保持快乐，你必须做点什么。&lt;/p&gt;&#xA;&lt;p&gt;作为下限，你必须比任何非生产性的乐趣更喜欢你的工作。你必须足够喜欢你做的事情，以至于&amp;quot;业余时间&amp;quot;的概念似乎是错误的。这并不是说你必须把所有时间都花在工作上。你只能工作这么多，然后你会累并开始搞砸。然后你想做别的事情——甚至是无意识的事情。但你不会把这时间视为奖品，把你花在工作上的时间视为你为赚取它而忍受的痛苦。&lt;/p&gt;&#xA;&lt;p&gt;我把下限设在那里是出于实际原因。如果你的工作不是你最喜欢做的事情，你会有严重的拖延症问题。你必须强迫自己工作，当你诉诸此时，结果明显较差。&lt;/p&gt;&#xA;&lt;p&gt;要快乐，我认为你必须做某件你不仅享受而且钦佩的事情。你必须能够在最后说，哇，那很酷。这不意味着你必须制造什么东西。如果你学习悬挂滑翔，或流利地说外语，那将足够让你说，至少一段时间，哇，那很酷。必须有一个测试。&lt;/p&gt;&#xA;&lt;p&gt;所以我认为，差一点达到标准的一件事是读书。除了数学和硬科学中的一些书，没有测试你读得有多好，这就是为什么仅仅读书不感觉像工作。你必须用你读到的内容做些什么才能感觉有生产力。&lt;/p&gt;&#xA;&lt;p&gt;我认为最好的测试是Gino Lee教给我的：尝试做会让你的朋友说哇的事情。但它可能要到22岁左右才能正常工作，因为大多数人之前没有足够大的样本来选择朋友。&lt;/p&gt;&#xA;&lt;h2 id=&#34;海妖&#34;&gt;海妖&lt;/h2&gt;&#xA;&lt;p&gt;我认为你不应该做的是担心朋友以外的人的意见。你不必担心声望。声望是世界其他人的意见。当你能询问你尊重其判断的人的意见时，考虑你甚至不认识的人的意见有什么用？[4]&lt;/p&gt;&#xA;&lt;p&gt;这是容易给出的建议。很难遵循，特别是当你年轻的时候。[5] 声望就像一个强大的磁铁，甚至扭曲你对你喜欢什么的信念。它导致你不在你喜欢的事情上工作，而在你想要喜欢的事情上工作。&lt;/p&gt;&#xA;&lt;p&gt;这就是导致人们尝试写小说的原因，例如。他们喜欢读小说。他们注意到写小说的人赢得诺贝尔奖。他们认为，有什么比成为小说家更美妙的呢？但喜欢成为小说家的想法是不够的；如果你要在小说写作上做得好，你必须喜欢小说写作的实际工作；你必须喜欢编造精心制作的谎言。&lt;/p&gt;&#xA;&lt;p&gt;声望只是化石化的灵感。如果你做得足够好，任何事，你会使它有声望。我们现在认为有声望的许多事情最初根本不是。爵士乐浮现在脑海中——尽管几乎任何已确立的艺术形式都可以。所以只做你喜欢的事情，让声望自己解决。&lt;/p&gt;&#xA;&lt;p&gt;声望对有雄心的人尤其危险。如果你想让有雄心的人在差事上浪费时间，方法是用声望作诱饵。这是让人们做演讲、写序言、在委员会任职、做系主任等等的配方。简单地避免任何有声望的任务可能是一个好规则。如果它不糟糕，他们就不必使它有声望。&lt;/p&gt;&#xA;&lt;p&gt;同样，如果你同样钦佩两种工作，但一种更有声望，你可能应该选择另一种。你对什么值得钦佩的意见总是会被声望轻微影响，所以如果两者对你来说似乎相等，你可能对不太有声望的那种有更真诚的钦佩。&lt;/p&gt;&#xA;&lt;p&gt;另一个导致人们误入歧途的强大力量是金钱。金钱本身并不那么危险。当某事报酬丰厚但被蔑视时，比如电话营销，或卖淫，或人身伤害诉讼，有雄心的人不会被它诱惑。那种工作最终由那些&amp;quot;只是试图谋生&amp;quot;的人做。（提示：避免其从业者说这个的任何领域。）危险的是当金钱与声望结合时，比如，公司法，或医学。一个相对安全和繁荣的职业，具有某种自动基线声望，对年轻人来说是危险的诱惑，他们没有充分考虑他们真正喜欢什么。&lt;/p&gt;&#xA;&lt;p&gt;测试人们是否热爱他们所做的事情的标准是，即使他们没有报酬——即使他们不得不做另一份工作谋生，他们是否还会做。有多少公司律师如果必须免费做，在业余时间，并且做服务员的工作来支持自己，会做他们现在的工作？&lt;/p&gt;&#xA;&lt;p&gt;这个测试在决定不同类型的学术工作时特别有帮助，因为领域在这方面差异很大。大多数好的数学家即使没有数学教授的工作也会研究数学，而在光谱另一端的系，教学工作的可获得性是驱动因素：人们宁愿做英语教授也不愿在广告公司工作，发表论文是竞争这类工作的方式。没有数学系数学也会发生，但正是英语专业的存在，因此教他们的工作，导致了所有那些关于康拉德小说中性别和认同的乏味论文的产生。没有人为了乐趣做那种事情。&lt;/p&gt;&#xA;&lt;p&gt;父母的建议往往会偏向金钱方面。可以肯定地说，更多想成为小说家而父母想他们成为医生的本科生，比想成为医生而父母想他们成为小说家的多。孩子认为他们的父母&amp;quot;物质主义&amp;rdquo;。不一定。所有父母往往对孩子比对自己更保守，仅仅因为，作为父母，他们分享风险多于奖励。如果你八岁的儿子决定爬一棵高树，或你十几岁的女儿决定和当地坏男孩约会，你不会分享兴奋，但如果你儿子摔下来，或你女儿怀孕了，你必须处理后果。&lt;/p&gt;&#xA;&lt;h2 id=&#34;纪律&#34;&gt;纪律&lt;/h2&gt;&#xA;&lt;p&gt;有如此强大的力量导致我们误入歧途，我们发现很难找到我们喜欢在什么上工作也就不足为奇了。大多数人在童年就被注定，接受了工作=痛苦的公理。那些逃脱这个的人几乎全部被声望或金钱引诱到礁石上。有多少人甚至发现他们热爱在什么上工作？也许几十万，从数十亿人中。&lt;/p&gt;&#xA;&lt;p&gt;很难找到你热爱的工作；如果很少人能做到，那一定是这样。所以不要低估这个任务。如果你还没有成功也不要感到难过。事实上，如果你承认自己不满意，你比大多数仍处于否认的人领先一步。如果你被声称享受你认为可鄙的工作的同事包围，很可能他们在对自己撒谎。不一定，但很可能。&lt;/p&gt;&#xA;&lt;p&gt;虽然做伟大的工作需要的纪律比人们认为的少——因为做伟大工作的方法是找到你如此喜欢以至于不必强迫自己做的事情——但找到你热爱的工作通常确实需要纪律。有些人很幸运，12岁时就知道他们想做什么，就像在轨道上一样滑行。但这似乎是例外。更常见的是，做伟大事情的人有着乒乓球弹跳轨迹的职业生涯。他们去学校学习A，退学并做B的工作，然后在业余时间开始做C并因此出名。&lt;/p&gt;&#xA;&lt;p&gt;有时从一种工作跳到另一种是精力的标志，有时是懒惰的标志。你是退出了，还是大胆地开辟新道路？你经常无法告诉自己。许多后来会做伟大事情的人在他们试图找到自己的位置时似乎令人失望。&lt;/p&gt;&#xA;&lt;p&gt;有什么测试你可以用来保持诚实吗？一个是尝试在你所做的任何事情上做好，即使你不喜欢它。那么至少你会知道你不是在用不满意作为懒惰的借口。也许更重要的是，你会养成做好事情的习惯。&lt;/p&gt;&#xA;&lt;p&gt;你可以使用的另一个测试是：始终生产。例如，如果你有一份白天的工作，你不认真对待，因为你计划成为小说家，你在生产吗？你在写小说的页面吗，无论多差？只要你生产，你会知道你不仅仅是在用计划一天写的宏伟小说的模糊愿景作为麻醉剂。它的视角会被你实际写的明显有缺陷的小说所阻碍。&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;始终生产&amp;quot;也是寻找你热爱的工作的启发式方法。如果你使自己受这个约束制约，它会自动将你从你认为你应该工作的事情推向你实际上喜欢的事情。&amp;ldquo;始终生产&amp;quot;会发现你的终身工作，就像水在重力的帮助下发现你屋顶的洞一样。&lt;/p&gt;&#xA;&lt;p&gt;当然，弄清楚你喜欢在什么上工作并不意味着你能在它上面工作。那是一个单独的问题。而且如果你有雄心，你必须保持它们分开：你必须有意识地努力防止你想要什么的想法被看似可能的事情污染。[6]&lt;/p&gt;&#xA;&lt;p&gt;把它们分开是痛苦的，因为观察它们之间的差距是痛苦的。所以大多数人抢先降低他们的期望。例如，如果你问街上的随机人他们是否想能像达芬奇一样画画，你会发现大多数人会说类似&amp;quot;哦，我不会画画。&amp;ldquo;这更多的是意图的陈述而非事实；它的意思是，我不打算尝试。因为事实上，如果你从街上带一个随机的人，并设法让他们在未来二十年里尽可能努力地画画，他们会取得令人惊讶的进步。但这需要巨大的道德努力；它意味着每年每天面对失败。所以为了保护自己，人们说&amp;quot;我不能。&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;你经常听到的另一个相关的说法是，不是每个人都能做他们热爱的工作——有人必须做不愉快的工作。真的吗？你怎么让他们做？在美国，强迫人们做不愉快工作的唯一机制是征兵，而那已经30多年没有使用了。我们所能做的就是用金钱和声望鼓励人们做不愉快的工作。&lt;/p&gt;&#xA;&lt;p&gt;如果有些事人们仍然不愿做，似乎社会只能将就。这就是家庭仆人发生的事情。几千年那是工作&amp;quot;有人必须做&amp;quot;的典型例子。然而在二十世纪中叶，仆人在富国几乎消失了，富人只能将就。&lt;/p&gt;&#xA;&lt;p&gt;所以虽然可能有些事情有人必须做，但任何人说任何特定工作如此很可能是错误的。如果没有人愿意做，大多数不愉快的工作要么自动化，要么不做。&lt;/p&gt;&#xA;&lt;h2 id=&#34;两条路线&#34;&gt;两条路线&lt;/h2&gt;&#xA;&lt;p&gt;还有另一种&amp;quot;不是每个人都能做他们热爱的工作&amp;quot;的意义，然而那是太真实了。一个人必须谋生，很难为你热爱的工作获得报酬。有两条路线通向那个目的地：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;有机路线：随着你变得更杰出，逐渐增加你工作中喜欢的部分，减少你不喜欢的部分。&lt;/li&gt;&#xA;&lt;li&gt;双工作路线：在你不喜欢的事情上工作以赚钱，然后在你喜欢的事情上工作。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;有机路线更常见。它自然发生在任何做好工作的人身上。一个年轻的建筑师必须接受他能得到的任何工作，但如果他做得好，他会逐渐能够在项目中挑选。这条路线的缺点是它缓慢而不确定。即使是终身教职也不是真正的自由。&lt;/p&gt;&#xA;&lt;p&gt;双工作路线有几种变体，取决于你一次为金钱工作多长时间。一个极端是&amp;quot;白天工作&amp;rdquo;，你在一份工作上定期工作赚钱，在业余时间在你热爱的事情上工作。另一个极端是你工作直到赚足够多的钱不必再为金钱工作。&lt;/p&gt;&#xA;&lt;p&gt;双工作路线比有机路线少见，因为它需要深思熟虑的选择。它也更危险。生活随着年龄增长而变得更昂贵，所以很容易被吸金在工作中比预期更长的时间更糟的是，你在任何事情上工作都会改变你。如果你在乏味的事情上工作太久，它会腐蚀你的大脑。而报酬最高的工作最危险，因为它们需要你全神贯注。&lt;/p&gt;&#xA;&lt;p&gt;双工作路线的优势是它能让你跳过障碍。可能工作的景观不是平坦的；不同类型的工作之间有不同高度的墙。[7] 最大化你工作中你喜欢的部分的技巧可以从建筑到产品设计，但可能不能到音乐。如果你做一件事赚钱，然后在另一件事上工作，你有更多的选择自由。&lt;/p&gt;&#xA;&lt;p&gt;你应该走哪条路线？那取决于你对想做什么有多确定，你接受命令有多好，你能承受多少风险，以及有人会（在你有生之年）为你想做的事情付钱的可能性。如果你确定你想工作的总体领域，而且是人们可能付钱给你的事情，那么你可能应该走有机路线。但如果你不知道你想在什么上工作，或不喜欢接受命令，如果你能承受风险，你可能想走双工作路线。&lt;/p&gt;&#xA;&lt;p&gt;不要太早决定。很早就知道他们想做什么的孩子似乎令人印象深刻，好像他们在其他孩子之前得到了某个数学问题的答案。他们确实有一个答案，但很可能是错的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>如何做出伟大的工作</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/greatwork/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/greatwork/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/greatwork.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;如何做出伟大的工作&#34;&gt;如何做出伟大的工作&lt;/h1&gt;&#xA;&lt;p&gt;2023年7月&lt;/p&gt;&#xA;&lt;p&gt;如果你收集了很多不同领域中做出伟大工作的技巧清单，它们的交集会是什么样子？我决定通过制作这样一个清单来找出答案。&lt;/p&gt;&#xA;&lt;p&gt;部分我的目标是创建一个可以被任何领域的人使用的指南。但我也好奇这个交集的形状。而这个练习表明它确实有一个确定的形状；它不仅仅是一个标记着&amp;quot;努力工作&amp;quot;的点。&lt;/p&gt;&#xA;&lt;p&gt;以下这个配方假设你非常有雄心壮志。&lt;/p&gt;&#xA;&lt;p&gt;第一步是决定要做什么工作。你选择的工作需要具备三个品质：它必须是你有天赋的事情，你对此有深厚兴趣，并且它有做出伟大工作的空间。&lt;/p&gt;&#xA;&lt;p&gt;实际上，你不必太担心第三个标准。有雄心壮志的人在这方面往往过于保守。所以你只需要找到你有天赋和浓厚兴趣的事情。[1]&lt;/p&gt;&#xA;&lt;p&gt;这听起来很简单，但通常相当困难。当你年轻的时候，你不知道自己擅长什么，也不知道不同类型的工作是怎样的。你最终可能从事的某些工作甚至可能还不存在。所以虽然有些人在14岁就知道自己想做什么，但大多数人必须弄清楚这一点。&lt;/p&gt;&#xA;&lt;p&gt;弄清楚要做什么工作的方法就是通过工作。如果你不确定要做什么，就猜测。但选择一些事情并开始行动。你可能会经常猜错，但这没关系。了解多种事情是好事；一些最重大的发现来自于注意到不同领域之间的联系。&lt;/p&gt;&#xA;&lt;p&gt;培养一个从事自己项目的习惯。不要让&amp;quot;工作&amp;quot;意味着别人告诉你做的事情。如果你真的有一天做出了伟大的工作，那很可能是在你自己的项目上。它可能是在某个更大的项目之内，但你会推动你自己的那部分。&lt;/p&gt;&#xA;&lt;p&gt;你的项目应该是什么？任何让你觉得兴奋和雄心勃勃的事情。随着你年龄的增长和你在项目上的品味变化，令人兴奋和重要的事情会趋于一致。7岁时，用乐高积木建造巨大的东西可能看起来令人兴奋和雄心勃勃，14岁时自学微积分，到21岁时你开始探索物理学中未解答的问题。但要始终保持令人兴奋的感觉。&lt;/p&gt;&#xA;&lt;p&gt;有一种兴奋的好奇心，它既是伟大工作的引擎，也是舵盘。它不仅会驱动你，如果你让它发挥，它也会告诉你该做什么。&lt;/p&gt;&#xA;&lt;p&gt;你对什么过度好奇——好奇到会让大多数其他人感到无聊的程度？这就是你要寻找的。&lt;/p&gt;&#xA;&lt;p&gt;一旦你找到了你过度感兴趣的事情，下一步就是学习足够的知识，让你到达知识的前沿。知识以分形方式扩展，从远处看它的边缘看起来很平滑，但一旦你学得足够多接近其中一个，就会发现它们充满了空白。&lt;/p&gt;&#xA;&lt;p&gt;下一步是注意到这些空白。这需要一些技巧，因为你为了简化世界模型而忽略这些空白。许多发现来自于提出其他人认为理所当然的问题。[2]&lt;/p&gt;&#xA;&lt;p&gt;如果答案看起来奇怪，那就更好了。伟大的工作常常带有奇怪的色彩。从绘画到数学你都能看到这一点。试图制造这种奇怪感可能会显得做作，但如果它出现了，就拥抱它。&lt;/p&gt;&#xA;&lt;p&gt;大胆追逐异常的想法，即使其他人对它们不感兴趣——事实上，特别是当他们不感兴趣的时候。如果你对一些其他人都忽视的可能性感到兴奋，而且你有足够的专业知识准确说出他们都忽略了什么，这是你能找到的最好赌注。[3]&lt;/p&gt;&#xA;&lt;p&gt;四个步骤：选择一个领域，学习足够的知识到达前沿，注意到空白，探索有希望的那些。这几乎是所有做出伟大工作的人的做法，从画家到物理学家。&lt;/p&gt;&#xA;&lt;p&gt;第二步和第四步需要努力工作。可能无法证明你必须努力工作才能做出伟大的事情，但经验证据的规模相当于关于死亡率的证据。这就是为什么在你非常感兴趣的事情上工作至关重要。兴趣会驱使你比单纯的勤奋更加努力工作。&lt;/p&gt;&#xA;&lt;p&gt;三个最强大的动机是好奇心、愉悦和做出令人印象深刻的事情的愿望。有时它们汇聚在一起，这种组合是最强大的。&lt;/p&gt;&#xA;&lt;p&gt;大奖是发现一个新的分形芽。你注意到知识表面的裂缝，撬开它，里面有一个完整的世界。&lt;/p&gt;&#xA;&lt;p&gt;让我们再谈谈弄清楚要做什么工作的复杂事情。它之所以困难的主要原因是，除了亲自做，你无法说出大多数类型的工作是怎样的。这意味着四个步骤是重叠的：你可能需要在某件事上工作多年才能知道你有多喜欢它或你有多擅长它。与此同时，你没有在做，因此也没有了解大多数其他类型的工作。所以在最坏的情况下，你在信息非常不完整的基础上做出选择。[4]&lt;/p&gt;&#xA;&lt;p&gt;雄心的本质加剧了这个问题。雄心有两种形式，一种先于对主题的兴趣，一种从中产生。大多数做出伟大工作的人都有两者的混合，你拥有前者越多，决定做什么就越困难。&lt;/p&gt;&#xA;&lt;p&gt;大多数国家的教育系统假装这很容易。他们期望你在真正了解某个领域之前就承诺投入该领域。因此，一个处于最佳轨迹上有雄心的人通常会被系统视为故障的例子。&lt;/p&gt;&#xA;&lt;p&gt;如果他们至少承认这一点会更好——如果他们承认系统不仅不能帮助你弄清楚要做什么，而且是建立在假设你会在青少年时期神奇地猜测的基础上的。他们不会告诉你，但我会：当涉及到弄清楚要做什么工作时，你只能靠自己。有些人幸运地猜对了，但其他人会发现自己在假设每个人都做到的轨道上斜向挣扎。&lt;/p&gt;&#xA;&lt;p&gt;如果你年轻有雄心但不知道要做什么工作，该怎么办？你不应该做的是被动地漂泊，假设问题会自行解决。你需要采取行动。但没有你可以遵循的系统程序。当你阅读那些做出伟大工作的人的传记时，令人惊讶的是有多少运气涉及其中。他们通过偶然的相遇，或者通过阅读他们碰巧拿起的书，发现要做什么工作。所以你需要让自己成为运气的大目标，做到这一点的方法就是保持好奇心。尝试很多事情，见很多人，读很多书，问很多问题。[5]&lt;/p&gt;&#xA;&lt;p&gt;有疑问时，优化有趣性。随着你对领域的了解更多，领域会发生变化。例如，数学家所做的与你在高中数学课上所做的非常不同。所以你需要给不同类型的工作一个机会向你展示它们的样子。但随着你对它的了解更多，一个领域应该变得越来越有趣。如果不是，它可能不适合你。&lt;/p&gt;&#xA;&lt;p&gt;不要担心如果你发现自己对与其他人不同的事情感兴趣。你的品味越奇怪越好。奇怪的品味往往是强烈的品味，对工作的强烈品味意味着你会富有成效。如果你在很少有人看过的地方寻找，你更可能找到新东西。&lt;/p&gt;&#xA;&lt;p&gt;你适合某种工作的一个标志是，当你喜欢甚至其他人觉得乏味或可怕的部分。&lt;/p&gt;&#xA;&lt;p&gt;但领域不是人；你不欠它们任何忠诚。如果在做一件事的过程中你发现了另一个更令人兴奋的事情，不要害怕切换。&lt;/p&gt;&#xA;&lt;p&gt;如果你在为人们制作东西，确保它是他们真正想要的东西。做到这一点的最好方法是制作你自己想要的东西。写你想读的故事；构建你想使用的工具。由于你的朋友可能有相似的兴趣，这也会给你带来初始受众。&lt;/p&gt;&#xA;&lt;p&gt;这应该遵循令人兴奋的规则。显然最令人兴奋的故事是写你想读的故事。我明确提到这个情况的原因是太多人搞错了。他们不是制作自己想要的，而是试图制作一些想象的、更复杂的受众想要的东西。一旦你走上那条路，你就迷失了。[6]&lt;/p&gt;&#xA;&lt;p&gt;当你试图弄清楚要做什么工作时，会有很多力量让你误入歧途。做作、时尚、恐惧、金钱、政治、他人的愿望、著名的骗子。但如果你坚持你发现真正有趣的事情，你就能抵御所有这些。如果你感兴趣，你就没有误入歧途。&lt;/p&gt;&#xA;&lt;p&gt;跟随你的兴趣听起来像是一种相当被动的策略，但在实践中，它通常意味着跟随它们越过各种障碍。你通常必须冒被拒绝和失败的风险。所以这确实需要相当大的勇气。&lt;/p&gt;&#xA;&lt;p&gt;但虽然你需要勇气，你通常不需要太多计划。在大多数情况下，做出伟大工作的配方很简单：在令人兴奋的雄心勃勃的项目上努力工作，好事就会发生。你不是制定计划然后执行它，而是试图保持某些不变量。&lt;/p&gt;&#xA;&lt;p&gt;计划的问题在于它只适用于你能预先描述的成就。你可以通过在童年时决定赢得金牌或致富，然后顽强地追求那个目标，但你不能用那种方式发现自然选择。&lt;/p&gt;&#xA;&lt;p&gt;我认为对于大多数想要做出伟大工作的人来说，正确的策略不要计划太多。在每个阶段做任何看起来最有趣的事情，并为未来提供最好的选择。我称这种方法为&amp;quot;保持在上风&amp;quot;。这就是大多数做出伟大工作的人似乎做到的。&lt;/p&gt;&#xA;&lt;p&gt;即使你找到了令人兴奋的工作，工作并不总是直截了当的。有时会有一些新想法让你早上跳出床直接去工作。但也会有很多时候事情不是那样的。&lt;/p&gt;&#xA;&lt;p&gt;你不是简单地扬起帆就被灵感吹向前方。有逆风、暗流和隐藏的浅滩。所以工作有一种技巧，就像航海一样。&lt;/p&gt;&#xA;&lt;p&gt;例如，虽然你必须努力工作，但可能工作得太努力，如果你那样做，你会发现收益递减：疲劳会让你变得愚蠢，最终甚至会损害你的健康。工作产生收益递减的点取决于类型。一些最困难的类型你可能每天只能做四五个小时。&lt;/p&gt;&#xA;&lt;p&gt;理想情况下，这些小时应该是连续的。尽可能安排你的生活，让你有大块的时间来工作。如果你知道可能会被打断，你会回避困难的任务。&lt;/p&gt;&#xA;&lt;p&gt;开始工作可能比保持工作更困难。你经常必须欺骗自己才能越过那个初始门槛。不要担心这个；这是工作的本质，不是你性格的缺陷。工作有一种激活能量，每天和每个项目都有。由于这个门槛在意义上是虚假的——它比继续工作所需的能量更高——可以告诉自己相应程度的谎言来克服它。&lt;/p&gt;&#xA;&lt;p&gt;如果你想要做出伟大的工作，对自己撒谎通常是错误的，但这是极少数不是的案例之一。当我早上不愿开始工作时，我经常通过说&amp;quot;我只是读一遍我已有的东西&amp;quot;来欺骗自己。五分钟后，我发现了一些看起来错误或不完整的东西，我就开始了。&lt;/p&gt;&#xA;&lt;p&gt;类似的技术也适用于开始新项目。例如，对一个项目需要多少工作撒谎是可以的。许多伟大的事情始于有人说&amp;quot;这能有多难？&amp;quot;&lt;/p&gt;&#xA;&lt;p&gt;这是年轻人有优势的一个领域。他们更乐观，即使他们乐观的一个来源是无知，在这种情况下无知有时能战胜知识。&lt;/p&gt;&#xA;&lt;p&gt;不过，要努力完成你开始的事情，即使结果比你预期的更多工作。完成事情不仅仅是整洁或自律的练习。在许多项目中，最好的工作发生在本应是最后阶段的部分。&lt;/p&gt;&#xA;&lt;p&gt;另一个可以接受的谎言是夸大你正在工作的重要性，至少在你自己的头脑中。如果这帮助你发现新东西，结果可能证明它根本不是谎言。[7]&lt;/p&gt;&#xA;&lt;p&gt;由于开始工作有两种感觉——每天和每个项目——所以也有两种形式的拖延。每个项目的拖延要危险得多。你一年又一年地推迟开始那个雄心勃勃的项目，因为时机不太对。当你以年为单位拖延时，你可以让很多事情没有完成。[8]&lt;/p&gt;&#xA;&lt;p&gt;每个项目拖延如此危险的一个原因是它通常伪装成工作。你不只是坐着无所事事；你在勤奋地做其他事情。所以每个项目的拖延不会像每天的拖延那样触发警报。你太忙了，注意不到它。&lt;/p&gt;&#xA;&lt;p&gt;打败它的方法是偶尔停下来问自己：我在做我最想做的工作吗？当你年轻的时候，答案有时是否定的也没关系，但随着年龄的增长，这变得越来越危险。[9]&lt;/p&gt;&#xA;&lt;p&gt;伟大的工作通常意味着在问题上花费大多数人认为不合理的时间。你不能把这段时间视为成本，否则它会显得太高。你必须发现工作在进行时本身就足够吸引人。&lt;/p&gt;&#xA;&lt;p&gt;可能有些工作你必须在你得到好部分之前，在你讨厌的事情上勤奋工作数年，但这不是伟大工作发生的方式。伟大的工作通过持续专注于你真正感兴趣的事情而发生。当你停下来盘点时，你会惊讶于你已经走了多远。&lt;/p&gt;&#xA;&lt;p&gt;我们惊讶的原因是我们低估了工作的累积效应。每天写一页听起来不多，但如果你每天都这样做，一年就能写一本书。这就是关键：一致性。做出伟大事情的人不是每天完成很多事情。他们完成一些事情，而不是无所事事。&lt;/p&gt;&#xA;&lt;p&gt;如果你做复利的工作，你会得到指数增长。大多数这样做的人是无意识地做的，但值得停下来思考一下。例如，学习就是这种现象的一个例子：你对某件事了解得越多，学习更多就越容易。增长受众是另一个：你拥有的粉丝越多，他们会给你带来新粉丝。&lt;/p&gt;&#xA;&lt;p&gt;指数增长的问题在于曲线在开始阶段感觉平坦。它不是；它仍然是一个美妙的指数曲线。但我们无法直观地理解这一点，所以我们在早期阶段低估了指数增长。&lt;/p&gt;&#xA;&lt;p&gt;指数增长的东西可能变得如此有价值，值得付出非凡的努力来启动它。但由于我们在早期低估了指数增长，这也大多是无意识地完成的：人们推动学习新事物的初始无回报阶段，因为他们从经验中知道学习新事物总是需要初始推动，或者他们一次一个粉丝地增长受众，因为他们没有更好的事情可做。如果人们有意识地意识到他们可以投资于指数增长，更多的人会这样做。&lt;/p&gt;&#xA;&lt;p&gt;工作不仅在你试图做的时候发生。有一种当你走路或淋浴或躺在床上时的无定向思维，这可以非常强大。让你的思绪稍微漫游，你经常能解决你无法通过正面攻击解决的问题。&lt;/p&gt;&#xA;&lt;p&gt;不过，你必须以正常方式努力工作才能从这种现象中受益。你不能只是四处闲逛白日做梦。白日梦必须与向它提供问题的刻意工作交错进行。[10]&lt;/p&gt;&#xA;&lt;p&gt;每个人都知道要在工作中避免分心，但在循环的另一半避免它们也很重要。当你让你的思绪漫游时，它会漫游到你当时最关心的事情。所以避免那种将你的工作推出首位的分心，否则你会浪费这种有价值的思维方式在分心上。（例外：不要避免爱情。）&lt;/p&gt;&#xA;&lt;p&gt;有意识地培养对你领域内工作的品味。直到你知道哪个是最好的以及什么使它如此，你才知道你的目标是什么。&lt;/p&gt;&#xA;&lt;p&gt;这就是你的目标，因为如果你不努力成为最好的，你甚至不会是好的。这么多人在这么多不同领域都做出了这个观察，这可能是值得思考为什么是真的。可能是因为雄心是一种几乎所有错误都在一个方向的现象——几乎所有没有击中目标的弹壳都是因为距离不够。或者可能是因为成为最好的雄心与成为好的雄心是质的不同。或者可能成为好只是一个太模糊的标准。可能三个都是真的。[11]&lt;/p&gt;&#xA;&lt;p&gt;幸运的是，这里有某种规模经济。虽然试图成为最好的似乎会给你带来沉重的负担，但实际上你最终往往会净收益。它令人兴奋，而且奇怪地令人解放。它简化了事情。在某些方面，试图成为最好的比试图仅仅成为好更容易。&lt;/p&gt;&#xA;&lt;p&gt;瞄准高点的一个方法是尝试制作一百年后人们会在乎的东西。不是因为他们的意见比你同时代的人更重要，而是因为一百年后仍然看起来好的东西更可能是真正好的。&lt;/p&gt;&#xA;&lt;p&gt;不要试图以独特的风格工作。只是尽力做最好的工作；你会不自觉地以独特的方式做到。&lt;/p&gt;&#xA;&lt;p&gt;风格是以独特的方式做事而不试图这样做。试图这样做是做作。&lt;/p&gt;&#xA;&lt;p&gt;做作实际上是在假装不是你在做这项工作。你采用一个令人印象深刻但虚假的人格，虽然你对令人印象深刻感到满意，但虚假在工作表现出来。[12]&lt;/p&gt;&#xA;&lt;p&gt;成为别人的诱惑对年轻人最大。他们经常觉得自己是无名小卒。但你永远不必担心这个问题，因为如果你在足够雄心勃勃的项目上工作，它会自己解决。如果你在一个雄心勃勃的项目上成功，你不是无名小卒；你是做这件事的人。所以只做工作，你的身份会自己解决。&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;避免做作&amp;quot;就其本身而言是一个有用的规则，但你如何积极表达这个想法？你会说要成为什么，而不是不要成为什么？最好的答案是真诚。如果你真诚，你不仅避免了做作，还避免了一整套类似的恶习。&lt;/p&gt;</description>
    </item>
    <item>
      <title>如何做哲学</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/philosophy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/philosophy/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/philosophy.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;如何做哲学&#34;&gt;如何做哲学&lt;/h1&gt;&#xA;&lt;p&gt;2007年9月&lt;/p&gt;&#xA;&lt;p&gt;高中时我决定大学要学哲学。我有几个动机，有些比其他更体面。其中一个不太体面的动机是为了震惊人们。在我长大的地方，大学被视为职业培训，所以学哲学看起来是一种令人印象深刻的实用主义。就像在你的衣服上划破洞，或在耳朵上戴安全别针一样，这些都是当时刚刚流行的令人印象深刻的实用主义形式。&lt;/p&gt;&#xA;&lt;p&gt;但我也有一些更诚实的动机。我认为学习哲学是通往智慧的捷径。所有主修其他科目的人最终只会获得一堆领域知识。我将学到真正的东西。&lt;/p&gt;&#xA;&lt;p&gt;我尝试过读几本哲学书。不是近代的；在我们的高中图书馆里找不到那些。但我尝试读柏拉图和亚里士多德。我怀疑我是否相信自己理解了他们，但他们听起来像是在谈论重要的事情。我以为我会在大学里学到什么。&lt;/p&gt;&#xA;&lt;p&gt;大四前的那个夏天我修了一些大学课程。我在微积分课上学到了很多，但在哲学101课上学得不多。然而我学习哲学的计划仍然完好无损。没有学到任何东西是我的错。我没有足够仔细地阅读我们被指定的书籍。我会在大学再给贝克莱的人类知识原理一次机会。如此受推崇又难以阅读的东西，如果能弄明白其中奥妙，必定有其价值。&lt;/p&gt;&#xA;&lt;p&gt;二十六年后，我仍然不理解贝克莱。我有一本不错的他的著作集。我会读它吗？似乎不太可能。&lt;/p&gt;&#xA;&lt;p&gt;那时和现在的区别是，现在我知道为什么贝克莱可能不值得努力去理解。我想我现在明白哲学出了什么问题，以及我们如何修复它。&lt;/p&gt;&#xA;&lt;p&gt;词语&lt;/p&gt;&#xA;&lt;p&gt;我大学大部分时间确实主修了哲学。结果并不如我所愿。我没有学到任何神奇真理，相比之下其他一切都只是领域知识。但我至少现在知道为什么没有学到。哲学并不像数学、历史或大多数其他大学学科那样真正有一个主题。没有必须掌握的核心知识。最接近的是了解多年来各个哲学家对不同话题说了什么。很少有人足够正确以至于人们忘记了是谁发现了他们发现的东西。&lt;/p&gt;&#xA;&lt;p&gt;形式逻辑有一些主题。我修了几门逻辑课。我不知道是否从中学到了什么。[1] 在我看来，能够在大脑中翻转想法非常重要：看到什么时候两个想法没有完全覆盖可能性空间，或者什么时候一个想法与另一个相同但有一两处变化。但学习逻辑教会了我这种思维方式的重要性，还是让我在这方面更擅长了吗？我不知道。&lt;/p&gt;&#xA;&lt;p&gt;我知道我从学习哲学中学到了一些东西。最戏剧性的是我在大一年级第一学期立即学到的，在一门由悉尼·舒梅克教授的课程中。我学到我不存在。我（和你）是一组细胞，在各种力量的驱动下蹒跚而行，并称自己为我。但没有一个中心的、不可分割的东西与你的身份同在。你可以想象失去一半大脑还活着。这意味着你的大脑可以被想象分成两半，每半移植到不同的身体里。想象在这样的手术后醒来。你必须想象自己是两个人。&lt;/p&gt;&#xA;&lt;p&gt;这里真正的教训是，我们在日常生活中使用的概念是模糊的，如果过度推敲就会崩溃。即使是我们珍视的我这个概念。我花了一段时间才理解这一点，但当我理解时，这是相当突然的，就像十九世纪有人理解进化论并意识到他们小时候被告知的创造故事完全是错的。[2] 在数学之外，词语的推敲有一个极限；事实上，把数学称为研究具有精确含义的术语的学科并不是一个坏的定义。日常词语本质上是模糊的。它们在日常生活中足够好用，以至于你没有注意到。词语似乎有效，就像牛顿物理学似乎有效一样。但如果你推敲得足够远，你总是能让它们崩溃。&lt;/p&gt;&#xA;&lt;p&gt;我会说，这对哲学来说是不幸的，这是哲学的核心事实。大多数哲学辩论不仅仅是被词语混淆所困扰，而是被词语混淆所驱动。我们有自由意志吗？取决于你所说的&amp;quot;自由&amp;quot;是什么意思。抽象观念存在吗？取决于你所说的&amp;quot;存在&amp;quot;是什么意思。&lt;/p&gt;&#xA;&lt;p&gt;维特根斯坦被普遍认为提出了大多数哲学争议是由于语言混淆造成的观点。我不确定应该给他多少功劳。我怀疑很多人意识到了这一点，但反应只是不学习哲学，而不是成为哲学教授。&lt;/p&gt;&#xA;&lt;p&gt;事情怎么会变成这样？人们花了几千年研究的东西真的可能是浪费时间吗？这些都是有趣的问题。事实上，你可以问关于哲学的最有趣的问题中的一些。接近当前哲学传统的最有价值的方式可能既不是陷入像贝克莱那样的无意义思辨，也不是像维特根斯坦那样关闭它们，而是把它作为理性出错的例子来研究。&lt;/p&gt;&#xA;&lt;p&gt;历史&lt;/p&gt;&#xA;&lt;p&gt;西方哲学真正始于苏格拉底、柏拉图和亚里士多德。我们对他们前人的了解来自后来作品中的片段和引用；他们的学说可以被描述为偶尔涉及分析的思辨宇宙学。推测他们是由促使每个其他社会发明宇宙学的任何东西驱动的。[3]&lt;/p&gt;&#xA;&lt;p&gt;随着苏格拉底、柏拉图，特别是亚里士多德，这个传统发生了转折。开始有更多的分析。我怀疑柏拉图和亚里士多德受到数学进步的鼓励。到那时，数学家已经表明，你可以用比编造动听的故事更结论性的方式弄清楚事情。[4]&lt;/p&gt;&#xA;&lt;p&gt;人们现在谈论这么多抽象概念，以至于我们没有意识到当他们第一次开始时这必须是一个多大的飞跃。从人们第一次开始描述事物为热或冷到有人问&amp;quot;热是什么？&amp;ldquo;之间，大概有数千年。毫无疑问，这是一个非常渐进的过程。我们不知道柏拉图或亚里士多德是否是第一个提出他们所问问题的人。但他们的作品是我们拥有的最早大规模这样做的人，并且有一种新鲜感（不用说天真）表明他们问的一些问题对他们来说是新的，至少。&lt;/p&gt;&#xA;&lt;p&gt;亚里士多德特别让我想起了人们发现新事物时发生的现象，他们对此如此兴奋以至于一生中快速穿越了新发现领域的巨大百分比。如果是这样，那证明这种思维方式是多么新颖。[5]&lt;/p&gt;&#xA;&lt;p&gt;这一切都是为了解释柏拉图和亚里士多德如何能够令人印象深刻却又天真和错误。即使问他们所问的问题也是令人印象深刻的。这并不意味着他们总是想出好答案。说古希腊数学家在某些方面天真，或者至少缺乏一些会让他们的生活更轻松的概念，并不被认为是侮辱性的。所以我希望如果我提出古代哲学家同样天真，人们不会太冒犯。特别是，他们似乎没有完全理解我前面所说的哲学的核心事实：如果你过度推敲词语，它们会崩溃。&lt;/p&gt;&#xA;&lt;p&gt;罗德·布鲁克斯写道：&amp;ldquo;令第一台数字计算机的建造者非常惊讶的是，为它们编写的程序通常不起作用。&amp;quot;[6] 当人们第一次开始谈论抽象概念时发生了类似的事情。令他们惊讶的是，他们没有达成一致的答案。事实上，他们似乎很少得出任何答案。&lt;/p&gt;&#xA;&lt;p&gt;他们实际上是在争论由采样分辨率过低引起的人工制品。&lt;/p&gt;&#xA;&lt;p&gt;他们的一些答案多么无用的证明是它们的影响多么小。没有人读了亚里士多德的形而上学后会因此做任何不同的事情。[7]&lt;/p&gt;&#xA;&lt;p&gt;当然我不是说思想必须有实际应用才有价值？不，它们可能不需要。哈代吹嘘数论没有任何用途也不会使其不合格。但他被证明是错误的。事实上，很难找到一个真正没有实际用途的数学领域。而且亚里士多德在形而上学A书中对哲学终极目标的解释意味着哲学也应该是有用的。&lt;/p&gt;&#xA;&lt;p&gt;理论知识&lt;/p&gt;&#xA;&lt;p&gt;亚里士多德的目标是找到最一般的普遍原则。他给出的例子是有说服力的：普通工人出于习惯以某种方式建造事物；大师工匠能做得更多，因为他们掌握了基本原理。趋势很清楚：知识越普遍，就越令人钦佩。但随后他犯了一个错误——可能是哲学史上最重要的错误。他注意到理论知识通常是为了自身而被获得，出于好奇心，而不是为了任何实际需要。所以他提出有两种理论知识：一种在实际事务中有用，一种没有。因为对后者感兴趣的人是为了它本身而对它感兴趣，所以它必定更高尚。所以他在形而上学中设定探索没有实际用途的知识的目标。这意味着当他承担宏大但模糊理解的问题并最终迷失在词语海洋中时，没有警报响起。&lt;/p&gt;&#xA;&lt;p&gt;他的错误是混淆了动机和结果。当然，想要深入了解事物的人通常是由好奇心驱动的，而不是任何实际需要。但这并不意味着他们最终学到的东西没有用。在实践中深入了解你正在做的事情非常有价值；即使你从未被要求解决高级问题，你也能在简单问题的解决方案中看到捷径，而且你的知识在边缘情况下不会崩溃，就像你依赖不理解的公式那样。知识就是力量。这就是理论知识有声望的原因。这也是聪明人对某些事物好奇而对其他事物不好奇的原因；我们的DNA并不像我们想象的那么无利害关系。&lt;/p&gt;&#xA;&lt;p&gt;所以虽然思想不必有直接的实际应用才有趣，但我们发现有趣的事物种类往往会出人意料地有实际应用。&lt;/p&gt;&#xA;&lt;p&gt;亚里士多德在形而上学中没有取得进展的部分原因是他在矛盾的意图下出发：探索最抽象的想法，受它们无用的假设指导。他就像一个探险家寻找北边的领土，却从假设它位于南边开始。&lt;/p&gt;&#xA;&lt;p&gt;而且由于他的作品成为未来几代探险家使用的地图，他也把他们送错了方向。[8] 也许最糟糕的是，他保护他们免受外界的批评和自己内心指南针的驱使，确立了最高尚的理论知识必须无用的原则。&lt;/p&gt;&#xA;&lt;p&gt;形而上学主要是一个失败的实验。从中产生的一些想法证明值得保留；其大部分根本没有任何影响。形而上学是最少被阅读的著名书籍之一。它不像牛顿的原理那样难以理解，而是像一条混乱的信息。&lt;/p&gt;&#xA;&lt;p&gt;可以说这是一个有趣的失败实验。但不幸的是，亚里士多德的继承者从形而上学等作品中得出的结论并非如此。[9] 不久之后，西方世界陷入智力困难时期。柏拉图和亚里士多德的作品没有被取代的版本1，而是成为需要掌握和讨论的受尊崇文本。而且事情维持了令人震惊的长时间。直到大约1600年（在欧洲，那时重心已经转移）才有人有足够的信心把亚里士多德的作品视为错误目录。但即使如此他们也很少直接这样说。&lt;/p&gt;&#xA;&lt;p&gt;如果这个差距如此之长似乎令人惊讶，考虑一下从希腊时代到文艺复兴时期数学进展如此之少。&lt;/p&gt;&#xA;&lt;p&gt;在 intervening years，一个不幸的想法占据了主导：产生像形而上学这样的作品不仅是可接受的，而且是一种特别有声望的工作，由被称为哲学家的一类人完成。没有人想到回去调试亚里士多德的动机论证。所以他们没有纠正亚里士多德通过陷入其中而发现的问题——如果你对非常抽象的想法谈论得太松散，很容易迷失——他们继续陷入其中。&lt;/p&gt;&#xA;&lt;p&gt;奇点&lt;/p&gt;&#xA;&lt;p&gt;然而，奇怪的是，他们创作的作品继续吸引新读者。传统哲学在这方面占据了一种奇点。如果你以不清晰的方式写关于大想法的东西，你会产生对缺乏经验但智力雄心的学生看似诱人的东西。在知道更好之前，很难区分因为作者头脑不清晰而难以理解的东西和因为所代表的思想难以理解而难以理解的数学证明之类的东西。对于没有学到区别的人来说，传统哲学似乎极具吸引力：像数学一样难（因此令人印象深刻），但范围更广。这就是我在高中时被吸引的原因。&lt;/p&gt;&#xA;&lt;p&gt;这个奇点更奇特的是它有自己的防御机制。当事情难以理解时，怀疑它们是无意义的人通常保持沉默。没有办法证明文本是无意义的。最接近的是显示某类文本的官方法官无法区分它们和安慰剂。[10]&lt;/p&gt;&#xA;&lt;p&gt;所以大多数怀疑哲学是浪费时间的人没有谴责哲学，而是学习了其他东西。仅此一点就是相当有罪的 evidence，考虑到哲学的主张。它应该是关于终极真理的。如果它兑现了承诺，所有聪明人都会对它感兴趣。&lt;/p&gt;&#xA;&lt;p&gt;因为哲学的缺陷赶走了可能纠正它们的那种人，它们倾向于自我延续。伯特兰·罗素在1912年的一封信中写道：迄今为止，被哲学吸引的人大多是那些热爱大概括的人，这些概括都是错的，所以很少有思维精确的人从事这个主题。[11] 他的反应是让维特根斯坦来处理它，结果戏剧性。&lt;/p&gt;&#xA;&lt;p&gt;我认为维特根斯坦之所以出名，不是因为发现大多数以前的哲学是浪费时间，从环境证据来看，每个学了一点哲学但没有继续深入研究的聪明人一定都做出了这个发现，而是因为他的反应方式。[12] 他不是安静地转向另一个领域，而是从内部制造了轰动。他是戈尔巴乔夫。&lt;/p&gt;&#xA;&lt;p&gt;哲学领域仍然被维特根斯坦给它的惊吓所震撼。[13] 后来他花了很多时间谈论词语如何工作。既然这似乎被允许，这就是许多哲学家现在所做的。同时，感觉到形而上学思辨部门有真空，以前做文学批评的人一直在以新的名字向康德方向靠近，如&amp;quot;文学理论&amp;rdquo;、&amp;ldquo;批判理论&amp;rdquo;，当他们有雄心时，干脆就是&amp;quot;理论&amp;rdquo;。写作是熟悉的词语沙拉：性别不像一些其他语法模式，这些模式精确地表达一种概念模式，没有任何与概念模式相对应的现实，因此不精确地表达现实中智力可以以某种方式构想事物的东西，即使那种动机不是事物本身固有的。[14] 我描述的奇点不会消失。有一种市场听起来令人印象深刻且无法被证伪的写作。永远有供求双方。所以如果一个群体放弃这个领域，总有其他人准备占领它。&lt;/p&gt;&#xA;&lt;p&gt;一个建议&lt;/p&gt;&#xA;&lt;p&gt;我们可能做得更好。这里有一个有趣的可能性。也许我们应该做亚里士多德打算做的事，而不是他实际做的事。他在形而上学中宣布的目标似乎值得追求：发现最普遍的真理。这听起来不错。但让我们不要因为它们无用而试图发现它们，让我们因为它们有用而试图发现它们。&lt;/p&gt;&#xA;&lt;p&gt;我建议我们再试一次，但我们使用迄今为止被鄙视的标准，适用性，作为指导，防止我们陷入抽象的沼泽。与其试图回答问题：最普遍的真理是什么？让我们试图回答问题在我们能说的所有有用事物中，哪些是最普遍的？我提出的效用测试是我们是否让阅读我们所写内容的人之后做任何不同的事情。知道我们必须给出明确的（即使是隐含的）建议将防止我们超越所用词语的分辨率。&lt;/p&gt;&#xA;&lt;p&gt;目标与亚里士多德相同；我们只是从不同的方向接近它。&lt;/p&gt;&#xA;&lt;p&gt;作为一个有用的、普遍的想法的例子，考虑控制实验。这是一个证明具有广泛适用性的想法。有些人可能会说它是科学的一部分，但它不是任何特定科学的一部分；它字面上是元物理学（在我们的&amp;quot;元&amp;quot;意义上）。进化的想法是另一个。它证明具有相当广泛的应用——例如，在遗传算法甚至产品设计中。法兰克福关于谎言和胡扯的区别似乎是一个有希望的最新例子。[15]&lt;/p&gt;&#xA;&lt;p&gt;这些在我看来哲学应该是什么样子：相当普遍的观察，理解它们的人会因此做不同的事情。&lt;/p&gt;&#xA;&lt;p&gt;这样的观察必然是关于定义不精确的事物。一旦你开始使用精确含义的词语，你就在做数学了。所以从效用出发不会完全解决我上面描述的问题——它不会清除形而上学奇点。但它应该有帮助。它为有良好意图的人提供了进入抽象的新路线。他们可能因此产生让有不良意图的人的写作相比之下显得糟糕的东西。&lt;/p&gt;&#xA;&lt;p&gt;这种方法的一个缺点是它不会产生能让你获得终身教职的那种写作。不仅仅是因为它目前不是时尚。为了在任何领域获得终身教职，你必须不得出终身教职委员会成员可能不同意结论。在实践中这个问题有两种解决方案。在数学和科学中，你可以证明你所说的，或者至少调整你的结论，使你不会声称任何虚假的东西（&amp;ldquo;8个受试者中有6个在治疗后血压降低&amp;rdquo;）。在人文学科中，你可以避免得出任何明确的结论（例如，得出问题是复杂的），或者得出如此狭隘的结论，以至于没有人足够关心而不同意。&lt;/p&gt;&#xA;&lt;p&gt;我提倡的哲学将无法采取这两种路线。充其量你只能达到散文家的证明标准，而不是数学家或实验者的标准。然而，你将无法在不暗示明确且相当普遍适用的结论的情况下满足效用测试。更糟糕的是，效用测试倾向于产生令人讨厌的结果：告诉人们他们已经相信的事情没有用，而人们经常被告知他们不相信的事情而感到不安。&lt;/p&gt;&#xA;&lt;p&gt;不过，令人兴奋的事情是。任何人都可以这样做。从有用开始并提高普遍性以达到普遍加有用可能不适合试图获得终身教职的初级教授，但对其他人更好，包括已经有终身教职的教授。山的这一边是一个很好的缓坡。你可以从写有用但非常具体的事情开始，然后逐渐使它们更普遍。乔的玉米饼很好。什么造就了好的玉米饼？什么造就了好食物？什么造就任何东西好？你可以想花多长时间就花多长时间。你不必一路走到山顶。你不必告诉任何人你在做哲学。&lt;/p&gt;&#xA;&lt;p&gt;如果做哲学看起来是一项艰巨的任务，这里有一个令人鼓舞的想法。这个领域比看起来年轻得多。虽然西方传统的第一批哲学家生活在大约2500年前，但说这个领域有2500年历史是误导性的，因为在大部分时间里，领先的从业者除了写柏拉图或亚里士多德的评论外没有做得更多，同时提防下一个入侵军队。在他们没有的时候，哲学与宗教无可救药地混合在一起。直到几百年前才摆脱出来，即使如此也受到我上面描述的结构性问题的困扰。如果我说这个，有些人会说这是一个荒谬的过度宽泛和不仁慈的概括，其他人会说这是旧新闻，但不管怎样：从他们的作品判断，迄今为止大多数哲学家都在浪费时间。所以在某种意义上，这个领域仍然在第一步。[16]&lt;/p&gt;&#xA;&lt;p&gt;这听起来是一个荒谬的说法。在10000年后不会显得如此荒谬。文明似乎总是老的，因为它总是有史以来最老的。说某事物是否真正老的唯一方法是看结构性证据，而结构上哲学是年轻的；它仍然在词语意外崩溃中摇摇晃晃。&lt;/p&gt;&#xA;&lt;p&gt;哲学现在就像1500年的数学一样年轻。还有更多要发现的东西。&lt;/p&gt;</description>
    </item>
    <item>
      <title>如何创建Google</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/google/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/google/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/google.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;如何创建google&#34;&gt;如何创建Google&lt;/h1&gt;&#xA;&lt;p&gt;2024年3月&lt;/p&gt;&#xA;&lt;p&gt;（这是我对14岁和15岁的孩子们做的一次演讲，内容是如果他们以后想创业，现在应该做什么。很多学校认为他们应该告诉学生一些关于创业的事情。这就是我认为他们应该告诉学生的。）&lt;/p&gt;&#xA;&lt;p&gt;你们大多数人可能认为，当你们进入所谓的现实世界时，你们最终将不得不找某种工作。这不是真的，今天我要谈论一个你可以用来避免找工作的技巧。&lt;/p&gt;&#xA;&lt;p&gt;这个技巧就是创办自己的公司。所以这不是避免工作的技巧，因为如果你创办自己的公司，你会比有一份普通工作时更努力工作。但是你会避免工作中带来的许多烦人的事情，包括老板告诉你该做什么。&lt;/p&gt;&#xA;&lt;p&gt;从事自己的项目比从事别人的项目更令人兴奋。你也可以变得富有得多。事实上，这是真正致富的标准方法。如果你看看偶尔在媒体上发布的最富有的人名单，几乎所有人都是通过创办自己的公司做到的。&lt;/p&gt;&#xA;&lt;p&gt;创办自己的公司可以意味着从开理发店到创办Google的任何事情。我在这里要谈论的是这个连续体的一个极端端。我要告诉你如何创建Google。&lt;/p&gt;&#xA;&lt;p&gt;连续体的Google端的公司在年轻时被称为初创公司。我了解它们的原因是，我妻子杰西卡和我创办了一个名为Y Combinator的组织，它基本上是一个初创公司工厂。自2005年以来，Y Combinator已经资助了4000多家初创公司。所以我们确切地知道创办初创公司需要什么，因为我们过去19年来一直在帮助人们做这件事。&lt;/p&gt;&#xA;&lt;p&gt;你可能会认为我说要告诉你如何创建Google是在开玩笑。你可能在想&amp;quot;我们怎么能创建Google？&amp;ldquo;但这实际上就是创建Google的人在开始之前所想的。如果你告诉Google的创始人拉里·佩奇和谢尔盖·布林，他们即将创办的公司有一天会价值超过万亿美元，他们的大脑会爆炸。&lt;/p&gt;&#xA;&lt;p&gt;当你开始做初创公司时，你只能知道它似乎值得追求。你不知道它会变成一家价值数十亿美元的公司还是一家倒闭的公司。所以当我说我要告诉你如何创建Google时，我的意思是我要告诉你如何达到可以创办一家公司的程度，这家公司成为Google的机会与Google在开始时成为Google的机会一样多。[1]&lt;/p&gt;&#xA;&lt;p&gt;你如何从现在的位置达到可以创办成功初创公司的程度？你需要三样东西。你需要擅长某种技术，你需要一个关于你要构建什么的主意，你需要联合创始人来一起创办公司。&lt;/p&gt;&#xA;&lt;p&gt;你如何变得擅长技术？你如何选择要擅长哪种技术？这两个问题的答案原来是相同的：做你自己的项目。不要试图猜测基因编辑、大语言模型或火箭是否会成为最有价值的技术。没有人能预测这一点。只要做你最感兴趣的事情。你会对你感兴趣的事情比因为你认为应该做而做的事情更努力工作。&lt;/p&gt;&#xA;&lt;p&gt;如果你不确定要擅长哪种技术，那就擅长编程。这是过去30年普通初创公司的来源，而这在未来10年内可能不会改变。&lt;/p&gt;&#xA;&lt;p&gt;你们中那些在学校上计算机科学课程的人现在可能在想，好吧，我们已经搞定了。我们已经在学习所有关于编程的知识。但是抱歉，这还不够。你必须做你自己的项目，而不仅仅是在课堂上学习东西。你可以在计算机科学课程中取得好成绩，但从来没有真正学会编程。事实上，你可以从顶尖大学毕业，获得计算机科学学位，但仍然不擅长编程。这就是为什么所有科技公司都会让你参加编程测试才会雇佣你，不管你去过什么大学或在那里表现如何。他们知道成绩和考试成绩证明不了什么。&lt;/p&gt;&#xA;&lt;p&gt;如果你真的想学会编程，你必须做你自己的项目。那样你学得快得多。想象一下，你在写一个游戏，里面有你想做的事情，而你不知道怎么做。你会比我快得多地弄明白如何做，比你在课堂上学到任何东西都快。&lt;/p&gt;&#xA;&lt;p&gt;不过，你不必学习编程。如果你想知道什么算作技术，它实际上包括你可以用&amp;quot;制造&amp;quot;或&amp;quot;构建&amp;quot;这个词描述的一切。所以焊接算，制作衣服算，制作视频也算。无论你最感兴趣的是什么。关键的区别在于你是在生产还是在消费。你在写电脑游戏，还是在玩电脑游戏？这就是分界线。&lt;/p&gt;&#xA;&lt;p&gt;苹果公司的创始人史蒂夫·乔布斯在青少年时期花时间研究书法——你在中世纪手稿中看到的那种美丽书写。没有人，包括他自己，认为这会对他的职业生涯有帮助。他这样做只是因为他感兴趣。但结果证明这对他的帮助很大。让苹果真正变得伟大的计算机，Macintosh，恰恰在计算机变得足够强大可以制作像印刷书籍中的字母而不是你在8位游戏中看到的计算机式字母的时候问世。苹果在这方面击败了所有人，原因之一是史蒂夫是计算机行业中少数真正懂得图形设计的人之一。&lt;/p&gt;&#xA;&lt;p&gt;不要觉得你的项目必须是严肃的。它们可以像你喜欢的那样轻浮，只要你在构建你兴奋的东西。大概90%的程序员从构建游戏开始。他们和他们的朋友喜欢玩游戏。所以他们构建他们和他们的朋友想要的那种东西。如果你有一天想创办初创公司，这正是你15岁时应该做的事情。&lt;/p&gt;&#xA;&lt;p&gt;你不必只做一个项目。事实上，学习多种东西是好的。史蒂夫·乔布斯不仅学习了书法。他还学习了电子学，这更有价值。无论你最感兴趣的是什么。（你注意到这里的主题了吗？）&lt;/p&gt;&#xA;&lt;p&gt;所以这就是你需要的三个东西中的第一个，变得擅长某种或某些技术。你做这件事的方式和你变得擅长小提琴或足球的方式相同：练习。如果你在22岁创办初创公司，现在开始写你自己的程序，那么到创办公司时，你将至少花费7年时间练习编写代码，任何事情练习7年后你都可以变得相当擅长。&lt;/p&gt;&#xA;&lt;p&gt;假设你现在22岁并且已经成功了：你现在真的擅长某种技术。你如何获得初创公司的主意？这似乎可能是困难的部分。即使你是一个好的程序员，你如何获得创建Google的主意？&lt;/p&gt;&#xA;&lt;p&gt;实际上，一旦你擅长技术，获得初创公司的主意就很容易。一旦你擅长某种技术，当你看世界时，你会看到缺失事物周围的虚线轮廓。你开始能够看到技术本身缺失的东西，以及可以使用它修复的所有破损东西，而每一个都是潜在的初创公司。&lt;/p&gt;&#xA;&lt;p&gt;在我们家附近的小镇上有一家商店，门口有个标志警告门很难关上。这个标志已经存在好几年了。对商店里的人来说，门卡住一定看起来像这种神秘的自然现象，他们所能做的就是竖起一个标志警告顾客。但任何木匠看到这种情况都会想&amp;quot;为什么不把卡住的部分刨掉？&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;一旦你擅长编程，世界上所有缺失的软件开始变得像对木匠来说卡住的门一样明显。我给你一个真实的例子。回到20世纪，美国大学过去出版包含所有学生姓名和联系信息的印刷目录。当我告诉你这些目录被称为什么时，你会知道我在谈论哪个初创公司。它们被称为facebook，因为通常每个学生名字旁边都有一张照片。&lt;/p&gt;&#xA;&lt;p&gt;所以马克·扎克伯格2002年出现在哈佛，而大学仍然没有把facebook放到网上。每个单独的宿舍都有在线的facebook，但没有整个大学的。大学行政部门一直在努力开会讨论这个问题，大概再过十年左右可能会解决问题。大多数学生没有有意识地注意到有什么问题。但马克是个程序员。他看着这种情况想&amp;quot;嗯，这很愚蠢。我可以在一晚上写个程序来解决这个问题。只要让人们上传他们自己的照片，然后将数据组合成整个大学的新网站。&amp;ldquo;所以他做了。几乎一夜之间，他就有数千用户。&lt;/p&gt;&#xA;&lt;p&gt;当然Facebook当时还不是初创公司。它只是一个&amp;hellip;项目。又是这个词。项目不仅是学习技术的最佳方式。它们也是初创公司主意的最佳来源。&lt;/p&gt;&#xA;&lt;p&gt;Facebook在这方面并不不寻常。苹果和Google也是从项目开始的。苹果本不是为了成为一家公司。史蒂夫·沃兹尼亚克只是想建造自己的计算机。它只有在史蒂夫·乔布斯说&amp;quot;嘿，我想知道我们是否能向其他人销售这台计算机的计划&amp;quot;时才变成一家公司。苹果就是这样开始的。他们甚至没有销售计算机，只是销售计算机的计划。你能想象这家公司看起来多么蹩脚吗？&lt;/p&gt;&#xA;&lt;p&gt;Google也是如此。拉里和谢尔盖最初并不是试图创办公司。他们只是试图让搜索变得更好。在Google之前，大多数搜索引擎不尝试按重要性对它们给你的结果进行排序。如果你搜索&amp;quot;rugby&amp;rdquo;，它们只是给你包含&amp;quot;rugby&amp;quot;这个词的每个网页。1997年网络如此之小，这实际上有效！有点。可能只有20或30个包含&amp;quot;rugby&amp;quot;这个词的页面，但网络呈指数级增长，这意味着这种搜索方式变得指数级更加破损。大多数用户只是想，&amp;ldquo;哇，我肯定要查看很多搜索结果才能找到我想要的东西。&amp;ldquo;门卡住了。但和马克一样，拉里和谢尔盖是程序员。和马克一样，他们看着这种情况想&amp;quot;嗯，这很愚蠢。一些关于rugby的页面比其他页面更重要。让我们弄清楚哪些是更重要的，先显示它们。&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;事后看来，这显然是一个很好的初创公司主意。当时并不明显。永远不会明显。如果创办苹果、Google或Facebook显然是个好主意，其他人早就已经做了。这就是为什么最好的初创公司成长自不打算成为初创公司的项目。你不是在试图创办公司。你只是在跟随你对什么有趣的直觉。如果你年轻且擅长技术，那么你对什么有趣的潜意识本能比你对什么会是好公司的有意识想法更好。&lt;/p&gt;&#xA;&lt;p&gt;所以，如果你是年轻的创始人，为你自己和你的朋友构建东西使用是至关重要的。年轻创始人犯的最大错误是为某些神秘的其他人群构建东西。但如果你能制作一些你和朋友真正想要使用的东西——你的朋友不是出于对你的忠诚才使用，如果你关闭它他们会非常伤心——那么你几乎肯定有一个好初创公司主意的萌芽。对你来说它可能不像初创公司。可能不清楚如何从中赚钱。但相信我，有办法。&lt;/p&gt;&#xA;&lt;p&gt;你在初创公司主意中需要的，而且是你唯一需要的，是你的朋友真正想要的东西。而一旦你擅长技术，这些主意并不难看到。到处都是卡住的门。[2]&lt;/p&gt;&#xA;&lt;p&gt;现在是你需要的第三样也是最后一样东西：一个联合创始人，或多个联合创始人。最佳的初创公司有两到三个创始人，所以你需要一到两个联合创始人。你如何找到他们？你能预测我接下来要说什么吗？是同样的东西：项目。你通过与他们一起做项目来找到联合创始人。你在联合创始人中需要的是擅长他们做的事情并且你和他们合作良好的人，而判断这一点的唯一方法是和他们一起做事情。&lt;/p&gt;&#xA;&lt;p&gt;在这一点上，我要告诉你一些你可能不想听到的事情。在你的课程中表现出色真的很重要，即使是那些只是记忆或对文学喋喋不休的课程，因为你需要在课程中表现出色才能进入好大学。如果你想创办初创公司，你应该努力进入你能进入的最好的大学，因为那是最好的联合创始人的地方。它也是最好的员工的地方。当拉里和谢尔盖创办Google时，他们开始只是雇佣他们从斯坦福认识的所有最聪明的人，这对他们来说是一个真正的优势。&lt;/p&gt;&#xA;&lt;p&gt;经验证据在这方面是明确的。如果你看看最大数量的成功初创公司来自哪里，它几乎与最挑剔的大学名单相同。&lt;/p&gt;&#xA;&lt;p&gt;我不认为是这些大学的声望导致了更多的好初创公司从它们那里出来。我也不认为这是因为教学质量更好。驱动这一点的只是进入的难度。你必须相当聪明和坚定才能进入MIT或剑桥，所以如果你确实设法进入了，你会发现其他学生包括很多聪明和坚定的人。[3]&lt;/p&gt;&#xA;&lt;p&gt;你不必和你在大学遇到的人一起创办初创公司。Twitch的创始人在七岁时就认识了。Stripe的创始人帕特里克和约翰·科利森在约翰出生时就认识了。但大学是联合创始人的主要来源。因为它们是联合创始人的地方，它们也是主意的地方，因为最好的主意成长自你与成为你联合创始人的人一起做的项目。&lt;/p&gt;&#xA;&lt;p&gt;所以从现在到开始初创公司你需要做的事情清单相当短。你需要变得擅长技术，而做到这一点的方法是做你自己的项目。你需要在学校尽可能表现好，这样你才能进入好大学，因为那是联合创始人和主意的地方。&lt;/p&gt;&#xA;&lt;p&gt;就是这样，只有两件事，构建东西并在学校表现出色。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 这句话中的修辞技巧是&amp;quot;Google&amp;quot;指的是不同的事物。我的意思是：一家最终变得像Google一样大的公司，其成长机会与拉里和谢尔盖在开始时可以合理预期Google本身的成长机会一样多。但我认为原版更简洁。&lt;/p&gt;&#xA;&lt;p&gt;[2] 为朋友做东西不是初创公司主意的唯一来源。它只是年轻创始人的最佳来源，他们对其他人想要的东西了解最少，他们自己的需求最能预测未来需求。&lt;/p&gt;&#xA;&lt;p&gt;[3] 奇怪的是，在像美国这样的国家，本科招生做得不好，这一点尤其如此。美国招生部门让申请者跳过许多与其智力能力无关的任意障碍。但测试越随意，它就越成为仅仅测试决心和足智多谋。而这两者是初创公司创始人最重要的品质。所以美国招生部门在选择创始人方面比他们在选择学生方面做得更好时更擅长。&lt;/p&gt;&#xA;&lt;p&gt;感谢贾里德·弗里德曼、卡罗琳·利维、杰西卡·利文斯顿、哈吉·塔加尔和加里·谭阅读本文的草稿。&lt;/p&gt;</description>
    </item>
    <item>
      <title>如何努力工作</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/hwh/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/hwh/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/hwh.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;如何努力工作&#34;&gt;如何努力工作&lt;/h1&gt;&#xA;&lt;p&gt;2021年6月&lt;/p&gt;&#xA;&lt;p&gt;似乎没有什么可学的关于如何努力工作的知识。任何上过学的人都知道这意味着什么，即使他们选择不这样做。有12岁的孩子工作得非常努力。然而，当我问我现在是否比在学校时更了解努力工作时，答案肯定是肯定的。&lt;/p&gt;&#xA;&lt;p&gt;我知道的一件事是，如果你想做伟大的事情，你必须非常努力地工作。我小时候并不确定这一点。功课的难度各不相同；人们不总是必须超级努力才能做得好。而且一些著名成年人所做的事情，他们似乎做得毫不费力。也许，有什么方法可以通过纯粹的才华来逃避努力工作？现在我知道那个问题的答案了。没有。&lt;/p&gt;&#xA;&lt;p&gt;某些科目似乎容易的原因是我的学校标准很低。著名成年人似乎毫不费力地做事情的原因是多年的练习；他们让它看起来很容易。&lt;/p&gt;&#xA;&lt;p&gt;当然，那些著名成年人通常也很有天赋。伟大的工作有三个要素：天赋、练习和努力。只有其中两个你可以做得相当好，但要做最好的工作你需要所有三个：你需要伟大的天赋，大量的练习，并且非常努力。[1]&lt;/p&gt;&#xA;&lt;p&gt;例如，比尔·盖茨是他那个时代商界最聪明的人之一，但他也是最努力工作的人之一。&amp;ldquo;我在二十多岁时从来没有休息过一天，&amp;ldquo;他说。&amp;ldquo;一天都没有。&amp;ldquo;莱昂内尔·梅西也是如此。他很有天赋，但当他的青少年教练谈论他时，他们记得的不是他的才华，而是他的奉献和获胜的欲望。如果必须选择，P.G.伍德豪斯可能会获得我对20世纪最佳英语作家的投票。当然没有人让这看起来更容易。但没有人比他更努力。74岁时，他写道&lt;/p&gt;&#xA;&lt;p&gt;对于我的每一本新书，我有，可以说，这次我在文学花园里挑了一个柠檬的感觉。真的，这是好事。我想。让一个人保持警觉，让一个人把每句话重写十次。或者在许多情况下二十次。&lt;/p&gt;&#xA;&lt;p&gt;听起来有点极端，你认为。然而比尔·盖茨听起来更极端。十年中没有一天休息？这两个人的天赋几乎和任何人可能拥有的一样多，然而他们也工作得和任何人可能努力的一样。你需要两者兼得。&lt;/p&gt;&#xA;&lt;p&gt;这似乎很明显，然而在实践中我们发现这有点难以把握。才华和努力工作之间有一种微妙的异或。这部分来自流行文化，在那里它似乎运行得很深，部分来自离群值如此罕见的事实。如果伟大的才华和伟大的动力都是罕见的，那么两者兼得的人就是罕见的平方。你遇到的大多数拥有大量其中一个的人会有较少的另一个。但如果你想成为离群值，你需要两者兼得。由于你无法真正改变你拥有多少天赋，在实践中，做伟大的工作，尽可能地说，归结为非常努力地工作。&lt;/p&gt;&#xA;&lt;p&gt;如果你有明确定义的、外部强加的目标，就像你在学校时那样，努力工作是直接的。这有一些技巧：你必须学会不对自己撒谎，不拖延（这是对自己撒谎的一种形式），不分心，在事情出错时不放弃。但这种纪律水平似乎相当小的孩子也能达到，如果他们想要的话。&lt;/p&gt;&#xA;&lt;p&gt;我从小孩时代学到现在的是如何朝着既不明确定义也不是外部强加的目标努力。如果你想做真正伟大的事情，你可能必须两者都学会。&lt;/p&gt;&#xA;&lt;p&gt;其中最基本的水平就是简单地觉得你应该在没有人告诉你的情况下工作。现在，当我不努力工作时，警钟就会响起。当我努力工作时，我不能确定我在取得进展，但当我不努力时，我可以确定我一事无成，这感觉很糟糕。[2]&lt;/p&gt;&#xA;&lt;p&gt;学习这一点没有一个单一的时刻。像大多数小孩子一样，我喜欢学习或做新事物时的成就感。随着我长大，这变成了当我没有取得任何成就时的一种厌恶感。我有一个可以精确确定日期的里程碑是我13岁时停止看电视。&lt;/p&gt;&#xA;&lt;p&gt;和我谈过的几个人记得在这个年龄左右开始认真对待工作。当我问帕特里克·克里森什么时候开始觉得闲散令人厌恶时，他说我想大约13或14岁。我有一个大约那时的清晰记忆，坐在客厅里，盯着外面，想知道为什么我在浪费我的暑假。也许青春期会发生一些变化。这是有道理的。&lt;/p&gt;&#xA;&lt;p&gt;奇怪的是，认真对待工作的最大障碍可能是学校，它使工作（他们称之为工作）显得无聊和无意义。在能够全心全意地渴望做之前，我必须学会什么是真正的工作。这花了一段时间，因为即使在大学里，很多工作也是毫无意义的；有整个部门是毫无意义的。但当我了解到真正工作的形状时，我发现我对它的渴望就像它们彼此天生一对一样嵌入其中。&lt;/p&gt;&#xA;&lt;p&gt;我怀疑大多数人必须在爱工作之前学会什么是工作。哈代在《一个数学家的辩白》中雄辩地写道：&lt;/p&gt;&#xA;&lt;p&gt;我不记得作为一个男孩时对数学有任何热情，我可能有的关于数学家职业的观念远非高尚。我从考试和奖学金的角度思考数学：我想击败其他男孩，这似乎是我能最果断地做到这一点的方式。&lt;/p&gt;&#xA;&lt;p&gt;他直到大学中途读到乔丹的《分析教程》时才学会数学的真正含义。&lt;/p&gt;&#xA;&lt;p&gt;我永远不会忘记阅读那杰出著作时的惊讶，那是我这一代许多数学家的第一个灵感，并且在阅读它时第一次学会了数学的真正含义。&lt;/p&gt;&#xA;&lt;p&gt;为了理解什么是真正的工作，你需要学会忽略两种独立的虚假。一种是哈代在学校遇到的那种。当科目被调整教给孩子时会被扭曲——通常扭曲到与实际从业者所做的工作完全不同。[3] 另一种虚假是某些类型工作固有的。某些类型的工作本质上是虚假的，或者充其量只是忙碌的工作。&lt;/p&gt;&#xA;&lt;p&gt;真正的工作有一种实在性。并不都是写作《原理》，但都感觉是必要的。这是一个模糊的标准，但它是故意模糊的，因为它必须涵盖许多不同的类型。[4]&lt;/p&gt;&#xA;&lt;p&gt;一旦你了解真正工作的形状，你必须学会每天花多少小时在上面。你不能通过简单地醒着的每一刻都工作来解决这个问题，因为在许多类型的工作中，有一个点之后结果的质量会开始下降。&lt;/p&gt;&#xA;&lt;p&gt;这个限制取决于工作类型和个人。我做过几种不同的工作，每种的限制都不同。对于较难的写作或编程类型，我的限制是每天大约五小时。而当我经营创业公司时，我可以一直工作。至少在我做的那三年是这样；如果我继续更久，我可能需要偶尔休假。[5]&lt;/p&gt;&#xA;&lt;p&gt;找到限制的唯一方法是超越它。培养对你所做工作质量的敏感性，然后你会注意到它是否因为你工作太努力而下降。诚实在这里是关键的，在两个方向上：你必须注意你什么时候懒惰，但也要注意你什么时候工作太努力。如果你认为工作太努力有什么值得钦佩的，把那个想法从头脑中去掉。你不仅得到更差的结果，而且是因为你在炫耀而得到它们——如果不是对别人，那么是对自己。[6]&lt;/p&gt;&#xA;&lt;p&gt;找到努力工作的限制是一个持续的、正在进行的过程，不是你只做一次的事情。工作的难度和你做它的能力都可以随时变化，所以你需要不断判断你有多努力和你做得如何。&lt;/p&gt;&#xA;&lt;p&gt;然而，努力并不意味着不断推动自己去工作。也许有些人这样做，但我认为我的经历是相当典型的，我只需要偶尔在开始项目或遇到某种阻碍时推动自己。那是我有拖延危险的时候。但一旦我开始滚动，我倾向于继续前进。&lt;/p&gt;&#xA;&lt;p&gt;让我继续前进的动力取决于工作类型。当我在Viaweb工作时，我是被对失败的恐惧驱动的。那时我几乎没有拖延，因为总是有事情需要做，如果我能通过做它在我和追逐的野兽之间拉开更多距离，为什么要等？[7] 而现在驱动我写论文的是论文中的缺陷。在论文之间，我会烦恼几天，像一只狗在决定确切躺在哪里时绕圈。但一旦我开始一篇，我不必推动自己去工作，因为总是有一些错误或遗漏已经在推动我。&lt;/p&gt;&#xA;&lt;p&gt;我确实做了一些努力专注于重要话题。许多问题中心有一个硬核，周围是较容易的东西。努力工作意味着尽可能朝着中心瞄准。有些日子你可能不能；有些日子你只能处理较容易的、外围的东西。但你应该总是尽可能接近中心瞄准而不停滞。&lt;/p&gt;&#xA;&lt;p&gt;你人生要做什么这个更大的问题是这些有硬核的问题之一。中心有重要的问题，这些问题往往是困难的，边缘有不那么重要、较容易的问题。因此，除了处理特定问题涉及的小的、日常调整外，你偶尔必须做出大的、终身规模的调整，关于做哪种类型的工作。规则是相同的：努力工作意味着朝着中心瞄准——朝着最雄心勃勃的问题。&lt;/p&gt;&#xA;&lt;p&gt;然而，我所说的中心是指实际的中心，而不仅仅是当前关于中心的共识。关于哪些问题最重要的共识经常是错误的，无论是在一般意义上还是在特定领域内。如果你不同意它，而你是对的，这可能代表一个做新事情的宝贵机会。&lt;/p&gt;&#xA;&lt;p&gt;更雄心勃勃的工作类型通常会更难，但虽然你不应该对此否认，你也不应该把困难作为决定做什么的不谬指南。如果你发现某种雄心勃勃的工作对你来说是便宜的，意思是它比别人更容易，要么是因为你碰巧拥有的能力，要么是因为你发现的新方法，或者仅仅是因为你对它更兴奋，那么一定要做那个。一些最好的工作是由那些找到做困难事情的简单方法的人完成的。&lt;/p&gt;&#xA;&lt;p&gt;除了学习真正工作的形状外，你需要弄清楚你适合哪种类型。这不仅仅意味着弄清楚哪种类型最适合你的自然能力；这不意味着如果你7英尺高，你必须打篮球。你适合的不仅取决于你的才华，而且可能更重要的是你的兴趣。对一个话题的深层兴趣让人们比任何纪律都能让他们更努力地工作。&lt;/p&gt;&#xA;&lt;p&gt;发现你的兴趣可能比发现你的才华更难。才华的类型比兴趣少，它们在童年早期就开始被判断，而对一个话题的兴趣是一种微妙的东西，可能要到二十多岁，甚至更晚才能成熟。这个话题甚至可能更早不存在。另外有一些强大的错误来源你需要学会忽略。你真的对x感兴趣吗，还是你想做它因为你会赚很多钱，或者因为别人会对你印象深刻，或者因为你父母想要你做？[8]&lt;/p&gt;&#xA;&lt;p&gt;弄清楚做什么工作的难度因人而异。这是我从孩提时代起学到的关于工作的最重要的事情之一。作为一个孩子，你得到印象每个人都有一个使命，他们所要做的就是弄清楚它是什么。在电影中是这样，在给孩子的精简传记中也是这样。有时在现实生活中也是这样。有些人在孩童时就弄清楚要做什么并且就去做，像莫扎特。但其他人，像牛顿，不安分地从一种工作转向另一种。也许回顾中我们可以识别一个作为他们的使命——我们可以希望牛顿花更多时间在数学和物理上，更少时间在炼金术和神学上——但这是由后见之偏误引起的幻觉。没有他能听到的声音呼唤他。&lt;/p&gt;&#xA;&lt;p&gt;因此，虽然有些人的生活快速收敛，但会有其他人的生活永远不会收敛。对于这些人来说，弄清楚做什么工作与其说是努力工作的前奏，不如说是它的一个持续部分，像一组联立方程之一。对于这些人，我前面描述的过程有第三个组成部分：除了测量你工作多努力和你做得如何外，你必须思考是否应该继续在这个领域工作或切换到另一个。如果你工作努力但没有得到足够好的结果，你应该切换。这样表达听起来很简单，但在实践中非常困难。你不应该在第一天仅仅因为你工作努力但没有取得任何进展就放弃。你需要给自己时间开始。但多少时间？如果进行顺利的工作停止顺利，你应该做什么？那时你给自己多少时间？[9]&lt;/p&gt;&#xA;&lt;p&gt;什么甚至算作好结果？这可能真的很难决定。如果你在探索一个很少有人工作过的领域，你甚至可能不知道好结果是什么样子。历史充满了人们误判他们工作重要性的例子。&lt;/p&gt;&#xA;&lt;p&gt;检验做某事是否值得的最好标准是你是否觉得它有趣。这听起来像是一个危险的主观标准，但它可能是你能得到的最准确的。你是在这些东西上工作的人。谁比你处于更好的位置来判断它是否重要，什么比它是否有趣更好地预测它的重要性？&lt;/p&gt;&#xA;&lt;p&gt;然而，为了使这个检验有效，你必须对自己诚实。确实，这是关于努力工作整个问题最引人注目的事情：在每一点上它如何取决于对自己诚实。&lt;/p&gt;&#xA;&lt;p&gt;努力工作不仅仅是你拨到11的表盘。它是一个复杂的、动态的系统，必须在每一点都正确调整。你必须了解真正工作的形状，清楚地看到你最擅长哪种类型，尽可能接近它的真实核心瞄准，在每一刻准确判断你能够做什么和你做得如何，并且每天投入尽可能多的时间而不损害结果的质量。这个网络太复杂了而无法欺骗。但如果你始终诚实和有洞察力，它会自动呈现最佳形状，你会以很少有人具有的方式富有成效。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 在《天才的车票理论》中我说伟大工作的三个要素是天赋、决心和兴趣。这是前一阶段的公式；决心和兴趣产生练习和努力。&lt;/p&gt;&#xA;&lt;p&gt;[2] 我的意思是以天为分辨率，而不是小时。你经常在不工作的时候取得进展，意思是问题的解决方案在你淋浴时来到你，甚至在你睡觉时，但那只是因为你前一天在努力工作。&lt;/p&gt;&#xA;&lt;p&gt;偶尔去度假是好的，但当我度假时，我喜欢学习新事物。我不会喜欢仅仅坐在海滩上。&lt;/p&gt;&#xA;&lt;p&gt;[3] 孩子在学校做的最像真正版本的事情是运动。承认是因为许多运动起源于学校玩的游戏。但至少在这个领域，孩子们正在做成年人完全做的事情。&lt;/p&gt;&#xA;&lt;p&gt;在普通美国高中，你有一个选择：假装做严肃的事情，或者认真地做假装的事情。可以说后者并不更糟。&lt;/p&gt;&#xA;&lt;p&gt;[4] 知道你想做什么工作并不意味着你能够。大多数人必须花大量时间做他们不想做的事情，特别是在早期。但如果你知道你想做什么，你至少知道推动你生活的方向。&lt;/p&gt;&#xA;&lt;p&gt;[5] 强烈工作的较低时间限制为解决有孩子后工作时间减少的问题提供了一个方案：切换到更难的问题。实际上我这样做了，虽然不是故意的。&lt;/p&gt;&#xA;&lt;p&gt;[6] 一些文化有表演性努力工作的传统。我不喜欢这个想法，因为（a）它使重要的事情变得滑稽可笑，（b）它使人们在做不重要的事情时筋疲力尽。我不知道足够多的是否能肯定地说它总体是好还是坏，但我的猜测是坏的。&lt;/p&gt;&#xA;&lt;p&gt;[7] 人们在创业公司上如此努力工作的原因之一是创业公司可能失败，当它们失败时，那种失败往往是决定性和明显的。&lt;/p&gt;&#xA;&lt;p&gt;[8] 为了赚很多钱而做某事是可以的。你必须以某种方式解决金钱问题，通过试图一次赚很多来高效地做这件事没有错。我想甚至为了金钱本身而对金钱感兴趣也是可以的；无论什么让你高兴。只要你意识到你的动机。要避免的是无意识地让金钱的需要扭曲你关于你发现什么类型的工作最有趣的想法。&lt;/p&gt;&#xA;&lt;p&gt;[9] 许多人在个人项目中以较小规模面对这个问题。但认识和接受单个项目中的死胡同比完全放弃某种类型的工作更容易。你越坚定，它就越难。像西班牙流感受害者一样，你在与自己的免疫系统斗争：你不是放弃，而是告诉自己，我应该更努力。谁能说你不对？&lt;/p&gt;&#xA;&lt;p&gt;感谢特雷弗·布莱克威尔、约翰·卡马克、约翰·克里森、帕特里克·克里森、罗伯特·莫里斯、杰夫·拉尔斯顿和哈吉·塔加阅读本文草稿。&lt;/p&gt;&#xA;&lt;p&gt;阿拉伯语翻译&lt;/p&gt;</description>
    </item>
    <item>
      <title>如何变得流行</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/popular/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/popular/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/popular.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;如何变得流行&#34;&gt;如何变得流行&lt;/h1&gt;&#xA;&lt;p&gt;2001年5月&lt;/p&gt;&#xA;&lt;p&gt;（本文是作为一种新语言的商业计划书而写的。因此它缺少（因为想当然）一个好的编程语言最重要的特征：非常强大的抽象能力。）&lt;/p&gt;&#xA;&lt;p&gt;我有一个朋友曾经告诉一位著名的操作系统专家，他想设计一种真正好的编程语言。专家告诉他，这将是浪费时间，编程语言不会因为其优点而变得流行或不流行，所以无论他的语言有多好，都没人会使用。至少，这是他设计的语言所发生的情况。&lt;/p&gt;&#xA;&lt;p&gt;到底是什么让一种语言变得流行？流行的语言是否配得上它们的流行度？试图定义一个好的编程语言是否值得？你会怎么做？&lt;/p&gt;&#xA;&lt;p&gt;我认为这些问题的答案可以通过观察黑客并了解他们想要什么来找到。编程语言是为黑客而设计的，而编程语言作为编程语言（而不是，比如说，作为指称语义练习或编译器设计练习）是好的，当且仅当黑客喜欢它。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-流行的机制&#34;&gt;1 流行的机制&lt;/h2&gt;&#xA;&lt;p&gt;当然，大多数人在选择编程语言时并不仅仅基于它们的优点。大多数程序员被告知要使用什么语言。然而我认为这些外部因素对编程语言流行度的影响并不像人们有时认为的那么大。我认为更大的问题是黑客对好的编程语言的想法与大多数语言设计者的想法不同。&lt;/p&gt;&#xA;&lt;p&gt;在这两者之间，黑客的意见才是重要的。编程语言不是定理。它们是工具，为人们设计的，必须像鞋子必须为人类的脚设计一样，适合人类的优点和缺点。如果鞋子穿上时夹脚，那它就是一双坏鞋，无论它作为雕塑品多么优雅。&lt;/p&gt;&#xA;&lt;p&gt;可能是大多数程序员无法区分好语言和坏语言。但这与其他工具没有什么不同。这并不意味着尝试设计好语言是浪费时间。专家黑客在看到好语言时能够识别出来，他们会使用它。诚然，专家黑客是极少数，但这个极少数群体编写了所有好的软件，他们的影响力使得其他程序员倾向于使用他们使用的任何语言。通常，这不仅仅是影响，而是命令：专家黑客通常就是那些作为老板或导师告诉其他程序员使用什么语言的人。&lt;/p&gt;&#xA;&lt;p&gt;专家黑客的意见并不是决定编程语言相对流行度的唯一力量——遗留软件（Cobol）和炒作（Ada、Java）也起作用——但我认为它是长期内最强大的力量。考虑到初始的关键质量和足够的时间，编程语言可能会变得与其应得的流行度相当。而流行度进一步将好语言与坏语言分开，因为来自真实用户的反馈总是导致改进。看看任何流行语言在其生命周期中发生了多大变化。Perl和Fortran是极端的例子，但即使是Lisp也发生了很大变化。例如，Lisp 1.5没有宏；这些是后来发展的，在麻省理工学院的黑客花了几年时间使用Lisp编写真实程序之后。[1]&lt;/p&gt;&#xA;&lt;p&gt;所以无论一种语言是否必须好才能流行，我认为一种语言必须流行才能好。它必须保持流行才能保持好。编程语言的工艺水平不会停滞不前。然而我们今天拥有的Lisp几乎与麻省理工学院在1980年代中期的Lisp相同，因为那是Lisp最后一次拥有足够大和要求高的用户群的时候。&lt;/p&gt;&#xA;&lt;p&gt;当然，黑客在使用语言之前必须了解它。他们如何听到？从其他黑客那里。但必须有一些初始的黑客群体使用该语言，其他人才能听到。我想知道这个群体必须多大；多少用户构成关键质量？我随口一说，二十个。如果一种语言有二十个独立的用户，意味着二十个用户自己决定使用它，我会认为它是真实的。&lt;/p&gt;&#xA;&lt;p&gt;达到那里并不容易。如果从零到二十比从二十到一千更难，我不会感到惊讶。获得那初始二十个用户的最好方法可能是使用特洛伊木马：给人们一个他们想要的应用程序，而这个应用程序恰好是用新语言编写的。&lt;/p&gt;&#xA;&lt;h2 id=&#34;2-外部因素&#34;&gt;2 外部因素&lt;/h2&gt;&#xA;&lt;p&gt;让我们首先承认一个确实影响编程语言流行度的外部因素。要变得流行，编程语言必须是流行系统的脚本语言。Fortran和Cobol是早期IBM大型机的脚本语言。C是Unix的脚本语言，后来Perl也是。Tcl是Tk的脚本语言。Java和Javascript旨在成为Web浏览器的脚本语言。&lt;/p&gt;&#xA;&lt;p&gt;Lisp不是一个大规模流行的语言，因为它不是大规模流行系统的脚本语言。它保留的流行度可以追溯到1960年代和1970年代，当时它是麻省理工学院的脚本语言。当时的许多伟大程序员都在某个时期与麻省理工学院有关联。在1970年代初期，在C之前，麻省理工学院的Lisp方言MacLisp是严肃黑客想要使用的唯一编程语言之一。&lt;/p&gt;&#xA;&lt;p&gt;今天，Lisp是两个适度流行系统的脚本语言，Emacs和Autocad，因此我怀疑今天大部分Lisp编程都是在Emacs Lisp或AutoLisp中完成的。&lt;/p&gt;&#xA;&lt;p&gt;编程语言不是孤立存在的。Hack是一个及物动词——黑客通常在hack某物——在实践中，语言是相对于它们用来hack的任何东西来评判的。所以如果你想设计一种流行的语言，你要么必须提供比语言更多的东西，要么你必须设计你的语言来取代某个现有系统的脚本语言。&lt;/p&gt;&#xA;&lt;p&gt;Common Lisp不受欢迎的部分原因是因为它是一个孤儿。它确实伴随着一个要hack的系统：Lisp Machine。但Lisp Machines（以及并行计算机）在1980年代被通用处理器日益增长的力量压垮了。如果Common Lisp是Unix的好脚本语言，它可能会保持流行。唉，它是一个非常糟糕的脚本语言。&lt;/p&gt;&#xA;&lt;p&gt;描述这种情况的一种方法是说语言不是根据其自身的优点来评判的。另一种观点是，编程语言除非也是某物的脚本语言，否则就不是真正的编程语言。如果这让人感到意外，这似乎不公平。我认为这并不比期望编程语言有实现更不公平。这只是编程语言的一部分。&lt;/p&gt;&#xA;&lt;p&gt;当然，编程语言需要好的实现，而且这必须是免费的。公司会为软件付费，但个人黑客不会，而你需要吸引的是黑客。&lt;/p&gt;&#xA;&lt;p&gt;语言也需要有一本关于它的书。这本书应该是薄的、写得好的，充满了好的例子。K&amp;amp;R是这里的理想。目前我几乎会说一种语言必须有一本O&amp;rsquo;Reilly出版的书。这正成为对黑客重要性的测试。&lt;/p&gt;&#xA;&lt;p&gt;也应该有在线文档。事实上，书可以作为在线文档开始。但我不认为物理书已经过时了。它们的格式方便，出版商施加的事实审查是一种有用的、虽然不完美的过滤器。书店是学习新语言的最重要地方之一。&lt;/p&gt;&#xA;&lt;h2 id=&#34;3-简洁&#34;&gt;3 简洁&lt;/h2&gt;&#xA;&lt;p&gt;假设你能提供任何语言需要的三个东西——一个免费的实现、一本书、以及要hack的东西——你如何制造一种黑客会喜欢的语言？&lt;/p&gt;&#xA;&lt;p&gt;黑客喜欢的一件事是简洁。黑客是懒惰的，与数学家和现代主义建筑师是懒惰的方式相同：他们讨厌任何多余的东西。说一个即将编写程序的黑客基于他必须键入的字符总数来选择使用什么语言，至少是潜意识的，这离真相不远。如果这不是黑客思考的精确方式，语言设计者最好表现得好像是这样。&lt;/p&gt;&#xA;&lt;p&gt;试图用冗长的表达来宠用户，这些表达旨在类似英语，是错误的。Cobol因此缺陷而臭名昭著。黑客会认为被要求写&lt;/p&gt;&#xA;&lt;p&gt;add x to y giving z&lt;/p&gt;&#xA;&lt;p&gt;而不是&lt;/p&gt;&#xA;&lt;p&gt;z = x+y&lt;/p&gt;&#xA;&lt;p&gt;是介于对他智力的侮辱和对上帝的罪之间。&lt;/p&gt;&#xA;&lt;p&gt;有时有人说Lisp应该使用first和rest而不是car和cdr，因为这将使程序更容易阅读。可能是最初的几个小时。但黑客可以很快学会car意味着列表的第一个元素，cdr意味着其余的。使用first和rest意味着多50%的输入。而且它们的长度也不同，这意味着参数在调用时不会对齐，而car和cdr经常在连续行中这样使用。我发现代码在页面上的对齐方式非常重要。当Lisp代码以可变宽度字体设置时，我几乎无法阅读，朋友们说这对其他语言也是如此。&lt;/p&gt;&#xA;&lt;p&gt;简洁是强类型语言失败的一个地方。在所有其他条件相同的情况下，没有人想以一堆声明开始程序。任何可以隐含的东西，都应该是。&lt;/p&gt;&#xA;&lt;p&gt;单个标记也应该简短。Perl和Common Lisp在这个问题上占据相反的极端。Perl程序几乎可以神秘地密集，而内置Common Lisp操作符的名称则可笑地长。Common Lisp的设计者可能期望用户有文本编辑器为他们键入这些长名称。但长名称的成本不仅仅是键入它的成本。还有阅读它的成本，以及它在屏幕上占用空间的成本。&lt;/p&gt;&#xA;&lt;h2 id=&#34;4-可hack性&#34;&gt;4 可Hack性&lt;/h2&gt;&#xA;&lt;p&gt;对黑客来说，有一件事比简洁更重要：能够做你想做的事。在编程语言的历史中，令人惊讶的是，大量的努力都用于防止程序员做被认为不合适的事情。这是一个危险傲慢的计划。语言设计师如何知道程序员将要需要做什么？我认为语言设计师最好将他们的目标用户视为天才，他们将需要做设计师从未预料到的事情，而不是需要保护自己免受自己的伤害的笨蛋。笨蛋无论如何都会伤到自己的脚。你可能阻止他引用另一个包中的变量，但你无法阻止他编写一个设计不良的程序来解决错误的问题，并且永远花时间做这件事。&lt;/p&gt;&#xA;&lt;p&gt;好的程序员经常想做危险和不雅的事情。我所说的不雅是指超越语言试图呈现的任何语义门面的东西：例如，获取某些高级抽象的内部表示。黑客喜欢hack，而hack意味着进入事物内部并重新猜测原始设计师。&lt;/p&gt;&#xA;&lt;p&gt;让自己被重新猜测。当你制造任何工具时，人们以你未曾打算的方式使用它，这对于高度复杂的工具如编程语言尤其如此。许多黑客想要以你从未想象过的方式调整你的语义模型。我说，让他们吧；在不危害运行时系统如垃圾收集器的情况下，给予程序员尽可能多的内部东西访问权限。&lt;/p&gt;&#xA;&lt;p&gt;在Common Lisp中，我经常想要迭代结构的字段——例如，梳理对已删除对象的引用，或找到未初始化的字段。我知道结构在底层只是向量。然而我无法编写一个可以在任何结构上调用的通用函数。我只能通过名称访问字段，因为这就是结构应该意味着的意思。&lt;/p&gt;&#xA;&lt;p&gt;黑客可能只想在一个大程序中一两次颠覆事物的预期模型。但能够这样做会产生多大的不同。这可能不仅仅是解决问题的问题。这里也有一种乐趣。黑客分享外科医生秘密的探索内脏的乐趣，青少年秘密的挤痘痘的乐趣。[2] 至少对于男孩来说，某些类型的恐怖是迷人的。Maxim杂志每年出版一卷照片，包含美女写真和可怕事故的混合。他们了解他们的观众。&lt;/p&gt;&#xA;&lt;p&gt;从历史上看，Lisp在让黑客为所欲为方面一直很好。Common Lisp的政治正确性是一种异常。早期的Lisp让你可以接触到一切。幸运的是，这种精神的大部分在宏中得以保留。能够对源代码进行任意转换，这是一件多么美妙的事情。&lt;/p&gt;&#xA;&lt;p&gt;经典的宏是真正的黑客工具——简单、强大和危险。理解它们的作用是如此简单：你调用一个函数在宏的参数上，无论它返回什么都被插入到宏调用的地方。卫生宏体现了相反的原则。它们试图保护你理解它们在做什么。我从未听过卫生宏用一句话解释过。它们是决定程序员被允许想要什么危险的经典例子。卫生宏旨在保护我免受变量捕获等问题的影响，但变量捕获正是在某些宏中我想要的东西。&lt;/p&gt;&#xA;&lt;p&gt;真正好的语言应该是既干净又肮脏的：干净地设计，具有少量良好理解和高度正交的操作符核心，但肮脏在它让黑客为所欲为的意义上。C就是这样。早期的Lisp也是。真正的黑客语言总是有一种稍微放荡不羁的特征。&lt;/p&gt;&#xA;&lt;p&gt;好的编程语言应该有让那些使用&amp;quot;软件工程&amp;quot;短语的人摇头不赞成的特征。在连续体的另一端是像Ada和Pascal这样的语言，它们是适合教学的礼仪模型，但不适合其他用途。&lt;/p&gt;&#xA;&lt;h2 id=&#34;5-一次性程序&#34;&gt;5 一次性程序&lt;/h2&gt;&#xA;&lt;p&gt;为了吸引黑客，语言必须擅长编写他们想要编写的程序类型。这意味着，也许令人惊讶的是，它必须擅长编写一次性程序。&lt;/p&gt;</description>
    </item>
    <item>
      <title>如何向投资者展示</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/investors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/investors/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/investors.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;如何向投资者展示&#34;&gt;如何向投资者展示&lt;/h1&gt;&#xA;&lt;p&gt;2006年8月&lt;/p&gt;&#xA;&lt;p&gt;想要创业？获得Y Combinator资助。&lt;/p&gt;&#xA;&lt;p&gt;几天后就是演示日，今年夏天我们资助的创业公司将向投资者展示。Y Combinator每年一月和六月资助创业公司。十周后，我们邀请所有我们认识的投资者来听他们展示到目前为止所构建的东西。&lt;/p&gt;&#xA;&lt;p&gt;十周时间不多。普通创业公司在十周后可能没有什么可展示的。但普通创业公司会失败。当你观察那些后来做得很好的公司时，你会发现很多都是从某人用一两周不间断的工作敲出一个原型开始的。创业公司是&amp;quot;欲速则不达&amp;quot;规则的反例。&lt;/p&gt;&#xA;&lt;p&gt;（太多的钱对创业公司来说似乎和太多的时间一样糟糕，所以我们也不给他们太多钱。）&lt;/p&gt;&#xA;&lt;p&gt;演示日前一周，我们有一个叫做排练日的彩排。在其他Y Combinator活动中，我们允许外部客人参加，但排练日不行。除了其他创始人，没有人可以看到排练。&lt;/p&gt;&#xA;&lt;p&gt;排练日的展示通常相当粗糙。但这是可以预料的。我们努力选择擅长构建东西的创始人，而不是擅长展示的人。有些创始人刚刚大学毕业，甚至还在学校，从未在他们不认识的人群面前讲过话。&lt;/p&gt;&#xA;&lt;p&gt;所以我们专注于基础知识。在演示日，每个创业公司只有十分钟时间，所以我们鼓励他们专注于两个目标：(a) 解释你在做什么，(b) 解释为什么用户会想要它。&lt;/p&gt;&#xA;&lt;p&gt;这听起来可能很容易，但当演讲者没有展示经验，而且他们正在向主要是非技术背景的观众解释技术问题时，这并不容易。&lt;/p&gt;&#xA;&lt;p&gt;当创业公司向投资者展示时，这种情况不断重复：不擅长解释的人，对不擅长理解的人讲话。实际上每个成功的创业公司，包括像谷歌这样的明星公司，都在某个时候向不理解的投资者展示并被拒绝。这是因为创始人不擅长展示，还是因为投资者迟钝？可能两者都有。&lt;/p&gt;&#xA;&lt;p&gt;在最近的排练日，我们四个Y Combinator合伙人发现自己说了很多和前两次一样的话。所以在晚宴后，我们收集了所有关于向投资者展示的建议。大多数创业公司面临类似的挑战，所以我们希望这会对更广泛的受众有用。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-解释你在做什么&#34;&gt;1. 解释你在做什么。&lt;/h2&gt;&#xA;&lt;p&gt;投资者在判断早期创业公司时的主要问题是你是否做出了引人注目的产品。在他们能够判断你是否构建了一个好的x之前，他们必须理解你构建了什么类型的x。如果你不告诉他们你做什么，而是让他们听某种开场白，他们会感到非常沮丧。&lt;/p&gt;&#xA;&lt;p&gt;尽快说出你在做什么，最好在第一句。&amp;ldquo;我们是杰夫和鲍勃，我们构建了一个易于使用的基于网络的数据库。现在我们将向你们展示并解释为什么人们需要这个。&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;如果你是一个伟大的公共演讲者，你可能能够违反这个规则。去年，一位创始人在演讲的前半部分花了大量时间对传统桌面比喻的局限性进行了迷人分析。他成功了，但除非你是一个迷人的演讲者，而大多数黑客不是，最好还是安全行事。&lt;/p&gt;&#xA;&lt;h2 id=&#34;2-迅速进入演示&#34;&gt;2. 迅速进入演示。&lt;/h2&gt;&#xA;&lt;p&gt;对于在演示日展示的YC创始人来说，这部分现在已经过时了，因为演示日展示现在如此之短，以至于它们很少包含太多或任何演示。然而，它们在没有演示的情况下似乎工作得一样好，这让我觉得我之前如此强调演示是错误的。&lt;/p&gt;&#xA;&lt;p&gt;演示比你任何口头描述都能更有效地解释你制作了什么。唯一值得先谈论的是你试图解决的问题以及为什么它很重要。但不要花费超过十分之一的时间在那上面。然后演示。&lt;/p&gt;&#xA;&lt;p&gt;当你演示时，不要按功能目录运行。而是从你要解决的问题开始，然后展示你的产品如何解决它。按照某种目的驱动的顺序展示功能，而不是它们在屏幕上出现的顺序。&lt;/p&gt;&#xA;&lt;p&gt;如果你在演示基于网络的东西，假设网络连接会在你演示30秒后神秘死亡，并且准备好在你的笔记本电脑上运行服务器软件的副本。&lt;/p&gt;&#xA;&lt;h2 id=&#34;3-宁要狭窄的描述不要模糊的描述&#34;&gt;3. 宁要狭窄的描述，不要模糊的描述。&lt;/h2&gt;&#xA;&lt;p&gt;创始人抵抗简洁描述项目的一个原因是，在这个早期阶段，有各种可能性。最简洁的描述似乎误导性地狭窄。例如，一个构建了易于使用的基于网络的数据库的团队可能抵制称他们的应用程序为那个，因为它可能远不止于此。事实上，它可能是任何东西&amp;hellip;&lt;/p&gt;&#xA;&lt;p&gt;问题是，当你（在微积分意义上）接近对可能是任何东西的描述时，你描述的内容接近于零。如果你将你的基于网络的数据库描述为&amp;quot;一个允许人们协作利用信息价值的系统&amp;quot;，它会从一个投资者的耳朵进，另一个耳朵出。他们只会把那句话当作无意义的套话丢弃，并越来越不耐烦地希望在下一句话中你真正解释你制作了什么。&lt;/p&gt;&#xA;&lt;p&gt;你的主要目标不是描述你的系统有一天可能成为的一切，而只是说服投资者你值得进一步交谈。所以像通过连续逼近获得正确答案的算法一样处理这个问题。从一个引人入胜但可能过于狭窄的描述开始，然后尽可能充实它。这与增量开发的原则相同：从简单的原型开始，然后添加功能，但在每一点都有可工作的代码。在这种情况下，&amp;ldquo;可工作的代码&amp;quot;意味着投资者头脑中的可工作描述。&lt;/p&gt;&#xA;&lt;h2 id=&#34;4-不要边说边操作&#34;&gt;4. 不要边说边操作。&lt;/h2&gt;&#xA;&lt;p&gt;让一个人说话，另一个人使用电脑。如果同一个人做两件事，他们不可避免地会朝着电脑屏幕喃喃自语，而不是清楚地对着观众说话。&lt;/p&gt;&#xA;&lt;p&gt;只要你站在观众附近并看着他们，礼貌（和习惯）迫使他们注意你。一旦你停止看他们去摆弄电脑上的东西，他们的思绪就会飘到他们稍后要做的差事上。&lt;/p&gt;&#xA;&lt;h2 id=&#34;5-不要长篇大论地谈论次要问题&#34;&gt;5. 不要长篇大论地谈论次要问题。&lt;/h2&gt;&#xA;&lt;p&gt;如果你只有几分钟时间，用它们来解释你的产品做什么以及为什么它很棒。竞争对手或简历等次要问题应该是你在最后快速浏览的单张幻灯片。如果你有令人印象深刻的简历，只需在屏幕上闪现15秒并说几句话。对于竞争对手，列出前3名，并用一句话分别解释他们缺少什么而你拥有。把这类东西放在最后，在你已经清楚说明你构建了什么之后。&lt;/p&gt;&#xA;&lt;h2 id=&#34;6-不要过于深入商业模式&#34;&gt;6. 不要过于深入商业模式。&lt;/h2&gt;&#xA;&lt;p&gt;谈论你计划如何赚钱是好的，但主要是因为这表明你关心那个并且已经考虑过。不要详细谈论你的商业模式，因为(a) 聪明的投资者在简短演示中并不关心那个，(b) 你此时拥有的任何商业模式可能是错误的。&lt;/p&gt;&#xA;&lt;p&gt;最近一位来Y Combinator演讲的风险投资家谈到了他刚刚投资的一家公司。他说他们的商业模式是错误的，在他们做对之前可能会改变三次。创始人是经验丰富的人，以前做过创业公司，刚刚成功从顶级风险投资公司之一获得了数百万资金，即使他们的商业模式也是垃圾。（然而他还是投资了，因为他预期在这个阶段会是垃圾。）&lt;/p&gt;&#xA;&lt;p&gt;如果你在解决一个重要问题，谈论那个会比谈论商业模式让你听起来聪明得多。商业模式只是一堆猜测，对你可能不擅长的领域的猜测。所以不要把你宝贵的几分钟花在谈论垃圾上，而你可以谈论你了解很多的具体、有趣的事情：你正在解决的问题和你到目前为止构建的东西。&lt;/p&gt;&#xA;&lt;p&gt;除了浪费时间，如果你的商业模式看起来明显错误，那会把你想让投资者记住的东西从他们头脑中推出去。他们只会记住你是那个有愚蠢赚钱计划的公司，而不是解决了那个重要问题的公司。&lt;/p&gt;&#xA;&lt;h2 id=&#34;7-对着观众缓慢而清晰地说话&#34;&gt;7. 对着观众缓慢而清晰地说话。&lt;/h2&gt;&#xA;&lt;p&gt;在排练日，每个人都能看出那些在世界各地待过一段时间并向群体展示过的人和那些没有的人之间的区别。&lt;/p&gt;&#xA;&lt;p&gt;你对着满屋子的人说话时需要使用完全不同于对话的声音和方式。日常生活在这方面没有给你练习。如果你还不能做到这一点，最好的解决方案是把它当作一种有意识的人工技巧，就像杂耍一样。&lt;/p&gt;&#xA;&lt;p&gt;然而，这不意味着你应该像某种播音员一样说话。观众会忽略那个。你需要做的是用这种人工方式说话，但让它看起来像对话。（写作也是一样。好的写作是为了看起来自然而做的精心努力。）&lt;/p&gt;&#xA;&lt;p&gt;如果你想事先写出整个演示并背诵，那没问题。这在过去对一些团队有效。但确保写出听起来像自然、非正式演讲的内容，并以那种方式传达。&lt;/p&gt;&#xA;&lt;p&gt;宁可说慢一点。在排练日，一位创始人提到了演员使用的一条规则：如果你觉得你说得太慢了，你的说话速度大约是正确的。&lt;/p&gt;&#xA;&lt;h2 id=&#34;8-让一个人说话&#34;&gt;8. 让一个人说话。&lt;/h2&gt;&#xA;&lt;p&gt;创业公司经常想表明所有创始人都是平等的伙伴。这是一个好本能；投资者不喜欢不平衡的团队。但通过分割演示来表明这一点太过分了。这很分散注意力。你可以用更微妙的方式展示彼此的尊重。例如，当其中一个团队在演示日展示时，两位创始人中更外向的一位做了大部分讲话，但他把他的联合创始人描述为他遇到过的最好的黑客，你可以看出他是真心的。&lt;/p&gt;&#xA;&lt;p&gt;选择一个或最多两个最好的演讲者，让他们做大部分讲话。&lt;/p&gt;&#xA;&lt;p&gt;例外：如果其中一位创始人是某个特定技术领域的专家，让他们谈论那方面一两分钟可能是好的。这种&amp;quot;专家证人&amp;quot;可以增加可信度，即使观众不理解所有细节。如果乔布斯和沃兹尼亚克有10分钟时间展示Apple II，让乔布斯讲9分钟，让沃兹在中间讲一分钟关于他在设计中完成的一些技术壮举，可能是个好计划。（当然，如果真的是他们两个，乔布斯会讲整个10分钟。）&lt;/p&gt;&#xA;&lt;h2 id=&#34;9-显得自信&#34;&gt;9. 显得自信。&lt;/h2&gt;&#xA;&lt;p&gt;由于可用时间短暂以及他们缺乏技术背景，观众中的许多人将很难评估你在做什么。可能最初最大的证据是你自己对它的信心。你必须表明你对自己制作的东西印象深刻。&lt;/p&gt;&#xA;&lt;p&gt;我的意思是展示，而不是告诉。永远不要说&amp;quot;我们充满激情&amp;quot;或&amp;quot;我们的产品很棒&amp;rdquo;。人们只是忽略那个——或者更糟，把你当作吹牛者写掉。这样的信息必须是隐含的。&lt;/p&gt;&#xA;&lt;p&gt;你绝不能做的是显得紧张和道歉。如果你真的制作了好东西，你告诉投资者是在帮他们一个忙。如果你不真正相信那个，也许你应该改变你公司在做的事情。如果你不相信你的创业公司有如此的前景，让他们投资是你帮他们的忙，为什么你要把时间投资在里面？&lt;/p&gt;</description>
    </item>
    <item>
      <title>如何在变化的世界中成为专家</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/ecw/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/ecw/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/ecw.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;如何在变化的世界中成为专家&#34;&gt;如何在变化的世界中成为专家&lt;/h1&gt;&#xA;&lt;p&gt;2014年12月&lt;/p&gt;&#xA;&lt;p&gt;如果世界是静态的，我们可以对我们的信念有单调递增的信心。一个信念经历过的（更多样化的）经验越多，它错误的可能性就越小。大多数人对自己的观点隐含地相信类似的东西。对于那些变化不大的事物，比如人性，他们这样做是有道理的。但对于变化的事物，你不能以同样的方式信任你的观点，这可能包括几乎其他一切。&lt;/p&gt;&#xA;&lt;p&gt;当专家出错时，通常因为他们是早期世界版本的专家。&lt;/p&gt;&#xA;&lt;p&gt;有可能避免这种情况吗？你能保护自己免受过时信念的影响吗？在某种程度上，是的。我花了将近十年时间投资早期创业公司，奇怪的是，保护自己免受过时信念的影响正是你作为创业投资者必须做的。大多数真正好的创业想法一开始看起来像坏主意，其中许多看起来不好特别是因为世界的一些变化刚刚将它们从坏变成好。我花了很多时间学习识别这样的想法，我使用的技术可能适用于一般性的想法。&lt;/p&gt;&#xA;&lt;p&gt;第一步是对变化有明确的信念。那些陷入对观点单调递增信心的人隐含地得出结论世界是静态的。如果你有意识地提醒自己不是，你开始寻找变化。&lt;/p&gt;&#xA;&lt;p&gt;应该在哪里寻找？除了人性变化不大这个中等有用的概括外，不幸的事实是变化很难预测。这很大程度上是同义反复，但仍然值得记住：重要的变化通常来自不可预见的领域。&lt;/p&gt;&#xA;&lt;p&gt;所以我甚至不尝试预测它。当在采访中被要求预测未来时，我总是不得不努力即兴想出听起来合理的东西，就像一个没有为考试准备的学生。[1] 但我没有准备不是因为懒惰。在我看来，关于未来的信念很少是正确的，它们通常不值得它们强加的额外刚性，最好的策略就是保持积极开放的心态。不要试图将自己指向正确的方向，而是承认你不知道正确的方向是什么，而是尝试对变化的风向超级敏感。&lt;/p&gt;&#xA;&lt;p&gt;有工作假设是可以的，即使它们可能会限制你一些，因为它们也会激励你。追逐事物令人兴奋，尝试猜测答案也令人兴奋。但你必须自律，不要让你的假设变成更坚固的东西。[2]&lt;/p&gt;&#xA;&lt;p&gt;我相信这种被动的方法不仅适用于评估新想法，也适用于产生新想法。想出新想法的方法不是明确地尝试，而是尝试解决问题，并且在这个过程中不忽视你产生的奇怪预感。&lt;/p&gt;&#xA;&lt;p&gt;变化的风向源于领域专家的无意识思维。如果你在某个领域足够专业，你产生的任何奇怪想法或看似无关的问题本身就值得探索。[3] 在Y Combinator内部，当一个想法被描述为疯狂时，这是一种赞美——实际上，平均来说可能比当一个想法被描述为好时更高的赞美。&lt;/p&gt;&#xA;&lt;p&gt;创业投资者有非凡的动机来纠正过时的信念。如果他们能在其他投资者之前意识到某个看似无望的创业公司实际上并非如此，他们可以赚大钱。但动机不仅仅是财务上的。投资者的观点被明确测试：创业公司来找他们，他们必须说是或否，然后，相当快地，他们就知道自己是否猜对了。那些对Google说不的投资者（而且有几个人）将在余生中记住这一点。&lt;/p&gt;&#xA;&lt;p&gt;任何必须在某种意义上押注想法而不仅仅是评论想法的人都有类似的动机。这意味着任何想要这种动机的人都可以拥有它们，通过将他们的评论变成赌注：如果你以某种相当持久和公开的形式写一个话题，你会发现你比大多数人在随意对话中更担心把事情做对。[4]&lt;/p&gt;&#xA;&lt;p&gt;我发现的另一个保护自己免受过时信念影响的技巧是首先关注人而不是想法。虽然未来发现的本质很难预测，但我发现我能很好地预测什么样的人会做出这些发现。好的新想法来自真诚、精力充沛、独立思考的人。&lt;/p&gt;&#xA;&lt;p&gt;作为投资者，押注人而不是想法无数次拯救了我。例如，我们认为Airbnb是个坏主意。但我们能看出创始人是真诚、精力充沛、独立思考的。（确实，几乎是病态地如此。）所以我们暂停怀疑并资助了他们。&lt;/p&gt;&#xA;&lt;p&gt;这似乎也是一种应该普遍适用的技术。让自己周围环绕着那些能产生新想法的人。如果你想在自己的信念变得过时时快速注意到，没有什么比与那些发现会使它们过时的人做朋友更好的了。&lt;/p&gt;&#xA;&lt;p&gt;不成为自己专业知识的囚徒已经够难了，但只会变得更难，因为变化正在加速。这不是最近的趋势；自旧石器时代以来变化一直在加速。思想催生思想。我不期望那会改变。但我可能错了。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 我通常的技巧是谈论大多数人还没有注意到的当下方面。&lt;/p&gt;&#xA;&lt;p&gt;[2] 特别是当它们变得足够知名以至于人们开始将它们与你认同时。你必须对你想相信的事情保持额外的怀疑，一旦一个假设开始与你认同，它几乎肯定会开始属于那一类。&lt;/p&gt;&#xA;&lt;p&gt;[3] 在实践中，&amp;ldquo;足够专业&amp;quot;并不要求一个人被认可为专家——无论如何，这是一个滞后指标。在许多领域，一年的专注工作加上大量关心就足够了。&lt;/p&gt;&#xA;&lt;p&gt;[4] 虽然它们是公开的并且无限期地存在，但在论坛和Twitter等地方上的评论经验上似乎像随意对话一样运作。门槛可能在于你写的东西是否有标题。&lt;/p&gt;&#xA;&lt;p&gt;感谢Sam Altman、Patrick Collison和Robert Morris阅读本文草稿。&lt;/p&gt;</description>
    </item>
    <item>
      <title>如何成为天使投资人</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/angelinvesting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/angelinvesting/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/angelinvesting.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;如何成为天使投资人&#34;&gt;如何成为天使投资人&lt;/h1&gt;&#xA;&lt;p&gt;2009年3月&lt;/p&gt;&#xA;&lt;p&gt;（本文源自于AngelConf会议的演讲。）&lt;/p&gt;&#xA;&lt;p&gt;1998年我们卖掉创业公司时，我想有一天我会做一些天使投资。七年后我仍然没有开始。我推迟是因为它看起来神秘而复杂。结果证明它比我想象的要容易，而且也更有趣。&lt;/p&gt;&#xA;&lt;p&gt;我认为困难的部分，投资的机制，其实并不是。你给创业公司钱，他们给你股票。你可能会得到优先股，这意味着拥有额外权利的股票，比如在出售时优先拿回你的钱，或者可转换债券，这意味着（在纸上）你在借钱给公司，债务在下一个足够大的融资轮时转换为股票。[1]&lt;/p&gt;&#xA;&lt;p&gt;使用其中一个有时有小的战术优势。可转换债券的文书工作更简单。但实际上你使用哪个并不重要。不要花太多时间担心交易条款的细节，特别是当你刚开始天使投资时。这不是你在这个游戏中获胜的方式。当人们谈论一个成功的天使投资人时，他们不是说&amp;quot;他获得了4倍清算优先权。&amp;ldquo;他们说&amp;quot;他投资了Google。&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;这就是你获胜的方式：投资正确的创业公司。这比其他任何事情都重要得多，我担心甚至谈论其他事情会误导你。&lt;/p&gt;&#xA;&lt;h2 id=&#34;机制&#34;&gt;机制&lt;/h2&gt;&#xA;&lt;p&gt;天使投资人经常联合交易，这意味着他们联合起来以相同条款投资。在联合体中通常有一个&amp;quot;领投&amp;quot;投资者，他与创业公司谈判条款。但并非总是如此：有时创业公司拼凑一个投资者联合体，这些投资者独立接触他们，创业公司的律师提供文书工作。&lt;/p&gt;&#xA;&lt;p&gt;开始天使投资的最简单方法是找到一个已经在做这件事的朋友，并试图被纳入他的联合体。然后你所要做的就是开支票。&lt;/p&gt;&#xA;&lt;p&gt;不过，不要觉得你必须加入联合体。自己做并不难。你可以直接使用Wilson Sonsini和Y Combinator在线发布的标准AA系列文件。你当然应该让律师审查一切。你和创业公司都应该有律师。但律师不必从头创建协议。[2] 当你与创业公司谈判条款时，你关心两个数字：你投入多少钱，以及公司的估值。估值决定你获得多少股票。如果你向一家公司投入5万美元，投资前估值为100万美元，那么投资后估值为105万美元，你获得.05/1.05，即公司股票的4.76%。&lt;/p&gt;&#xA;&lt;p&gt;如果公司以后筹集更多资金，新投资者将像你一样从所有现有股东手中拿走一部分公司股份。如果在下一轮他们向新投资者出售公司10%的股份，你的4.76%将减少到4.28%。&lt;/p&gt;&#xA;&lt;p&gt;没关系。稀释是正常的。通常能保护你在未来轮次中不被虐待的是，你和创始人在同一条船上。他们不能在稀释你的同时不稀释自己。而且除非最终净收益，他们不会稀释自己。所以理论上，每一轮进一步的投资让你在公司更有价值的情况下拥有更小的份额，直到几轮后你最终在公司IPO时拥有0.5%的股份，你非常高兴，因为你的5万美元变成了500万美元。[3]&lt;/p&gt;&#xA;&lt;p&gt;你投资的协议应该有条款让你贡献到未来轮次以维持你的百分比。所以是否被稀释是你的选择。[4] 如果公司做得真的很好，你最终会被稀释，因为最终估值会变得太高，对你来说不值得。&lt;/p&gt;&#xA;&lt;p&gt;天使投资多少？差异很大，从1万美元到数十万，甚至在极少数情况下达到数百万。上限显然是创始人想要筹集的总金额。下限是总数的5-10%或1万美元，以较大者为准。如今典型的天使轮可能是从5个人筹集15万美元。&lt;/p&gt;&#xA;&lt;p&gt;估值变化不大。对于天使轮，很少看到低于50万或高于4-5百万的估值。4百万开始是VC的领域。&lt;/p&gt;&#xA;&lt;p&gt;你如何决定提供什么估值？如果你是由其他人领导的轮次的一部分，那个问题就为你解决了。但如果你自己投资呢？没有真正的答案。没有合理的方法来评估早期创业公司。估值只反映了公司议价能力的强弱。如果他们真的很想要你，要么是因为他们迫切需要钱，要么你是能给他们很大帮助的人，他们会让你以低估值投资。如果他们不需要你，估值会更高。所以猜测。创业公司可能不比你知道这个数字应该是多少。[5]&lt;/p&gt;&#xA;&lt;p&gt;最终这并不重要。当天使投资人从交易中赚很多钱时，不是因为他们以150万美元而不是300万美元的估值投资。是因为公司真的非常成功。&lt;/p&gt;&#xA;&lt;p&gt;我不能过分强调这一点。不要纠结于机制或交易条款。你应该花时间思考的是公司是否好。&lt;/p&gt;&#xA;&lt;p&gt;（同样，创始人们也不应该纠结于交易条款，而应该花时间思考如何使公司变得更好。）&lt;/p&gt;&#xA;&lt;p&gt;天使投资的第二个不太明显的组成部分是：你预期帮助创业公司多少。像你投资的金额一样，这可能差异很大。如果你不想，你不必做任何事；你可以只是一个资金来源。或者你可以成为公司的事实上的员工。只要确保你和创业公司提前达成一致，关于你将为他们做多少。&lt;/p&gt;&#xA;&lt;p&gt;真正热门的公司有时对天使有高标准。每个人都想投资的公司实际上在试镜投资者，只接受有名和/或会为他们努力工作的人的钱。但不要觉得你必须投入大量时间，否则你就无法投资任何好的创业公司。创业公司的交易有多热门与其最终表现有多好之间缺乏相关性令人惊讶。许多热门的创业公司最终会失败，而没有人喜欢的许多创业公司最终会成功。而后者如此渴望资金，他们会以低估值接受任何人的钱。[6]&lt;/p&gt;&#xA;&lt;h2 id=&#34;选择赢家&#34;&gt;选择赢家&lt;/h2&gt;&#xA;&lt;p&gt;如果能够挑选出那些，那不是很好吗？天使投资对你回报影响最大的部分，选择正确的公司，也是最难的。所以你实际上应该忽略（或者更精确地说，存档，在Gmail意义上）我到目前为止告诉你的一切。你可能需要在某个时候参考它，但它不是中心问题。&lt;/p&gt;&#xA;&lt;p&gt;中心问题是选择正确的创业公司。&amp;ldquo;制造人们想要的东西&amp;quot;对创业公司来说，&amp;ldquo;选择正确的创业公司&amp;quot;对投资者来说。结合起来就是&amp;quot;选择将制造人们想要的东西的创业公司&amp;rdquo;。&lt;/p&gt;&#xA;&lt;p&gt;你怎么做到这一点？这不像选择已经在制造广受欢迎东西的创业公司那么简单。到那时对天使来说已经太晚了。VC已经盯上他们了。作为天使，你必须在创业公司成功之前选择它们——要么因为他们制造了伟大的东西但用户还没有意识到，就像早期的Google，要么因为他们距离重大成功还有一到两次迭代，就像Paypal当他们为在PDA之间转账制作软件时。&lt;/p&gt;&#xA;&lt;p&gt;要成为一个好的天使投资人，你必须是一个好的潜力判断者。这就是归结为的。VC可以是快速的追随者。他们中的大多数不试图预测什么会赢。他们只是试图在某个东西已经在赢时快速注意到。但天使必须能够预测。[7]&lt;/p&gt;&#xA;&lt;p&gt;这个事实的一个有趣结果是，有很多人从未做过天使投资，却已经是比他们意识到的更好的天使投资人。一个对风险投资机制一无所知但知道成功的创业创始人看起来是什么样的人，实际上比那些精通条款表但认为&amp;quot;黑客&amp;quot;意味着闯入计算机的人远远领先。如果你能够通过同情心来识别好的创业创始人——如果你都以相同的频率共鸣——那么你可能已经是比普通专业VC更好的创业选择者了。[8]&lt;/p&gt;&#xA;&lt;p&gt;例如，Paul Buchheit在我开始天使投资大约一年后开始，他在选择创业公司方面几乎立即和我一样好。我额外的一年经验与我们共鸣创始人的能力相比是四舍五入的误差。&lt;/p&gt;&#xA;&lt;p&gt;什么造就了好的创始人？如果有一个词意味着无助的反义词，那就是那个词。糟糕的创始人看起来无助。他们可能聪明，也可能不聪明，但不知何故事件压倒了他们，他们变得沮丧并放弃。好的创始人让事情按他们想要的方式发生。这并不是说他们以预定的方式强迫事情发生。好的创始人对现实有健康的尊重。但他们是不懈地足智多谋的。这是我能想到的最接近无助反义词的词。你想要资助那些不懈足智多谋的人。&lt;/p&gt;&#xA;&lt;p&gt;注意我们开始谈论事情，现在我们在谈论人。投资者之间有一个持续的争论，哪个更重要，人，还是想法——或者更精确地说，市场。有些人，像Ron Conway，说是人——想法会改变，但人是公司的基础。而Marc Andreessen说他会支持热门市场中一般的创始人而不是糟糕市场中的伟大创始人。[9]&lt;/p&gt;&#xA;&lt;p&gt;这两个立场并不像看起来那么遥远，因为好人会找到好的市场。即使IBM没有碰巧将PC标准丢在他怀里，Bill Gates可能最终也会相当富有。&lt;/p&gt;&#xA;&lt;p&gt;我思考了很多偏爱押注人的投资者和偏爱押注市场的投资者之间的分歧。令人惊讶的是它甚至存在。你会期望意见已经收敛得更多了。&lt;/p&gt;&#xA;&lt;p&gt;但我想我已经弄清楚发生了什么。我认识的最突出的三个偏爱市场的人是Marc、Jawed Karim和Joe Kraus。他们三个在自己的创业公司中，基本上飞入了一个上升热气流：他们遇到了一个增长如此之快的市场，他们所能做的就是跟上它。那种经历很难忽视。而且我认为他们低估了自己：他们回想骑乘那个巨大热气流上升的感觉是多么容易，他们认为&amp;quot;任何人都能做到。&amp;ldquo;但那不是真的；他们不是普通人。&lt;/p&gt;&#xA;&lt;p&gt;所以作为天使投资人，我认为你想选择Ron Conway并押注于人。热气流会发生，是的，但没有人能预测它们——甚至创始人也不能，当然作为投资者的你也不能。而且只有好人才能在遇到热气流时骑乘它们。&lt;/p&gt;&#xA;&lt;h2 id=&#34;交易流&#34;&gt;交易流&lt;/h2&gt;&#xA;&lt;p&gt;当然，如何选择创业公司的问题假定你有创业公司可供选择。你如何找到它们？这是另一个由联合体为你解决的问题。如果你跟随朋友的投资，你就不必寻找创业公司。&lt;/p&gt;&#xA;&lt;p&gt;问题不是找到创业公司，而是找到一条合理高质量的公司流。传统的方法是通过联系人。如果你是许多投资者和创始人的朋友，他们会把交易发给你。硅谷基本上靠推荐运行。而且一旦你开始成为可靠、有用的投资者，人们会向你推荐很多交易。我当然会。&lt;/p&gt;&#xA;&lt;p&gt;还有一种更新的方法找到创业公司，那就是参加像Y Combinator的演示日这样的活动，那里一批新创建的创业公司同时向投资者展示。我们每年有两个演示日，一个在三月，一个在八月。这些基本上是大规模推荐。&lt;/p&gt;&#xA;&lt;p&gt;但像演示日这样的活动只占创业公司和投资者之间匹配的一小部分。个人推荐仍然是最常见的途径。所以如果你想听说新的创业公司，最好的方法是获得大量推荐。&lt;/p&gt;&#xA;&lt;p&gt;获得大量推荐的最佳方法是投资创业公司。无论你看起来多么聪明和友好，内部人士会不愿意向你推荐，直到你通过做几次投资证明了自己。一些聪明、友好的人原来是不可靠、高维护的投资者。但一旦你证明自己是好的投资者，所谓的交易流将在质量和数量上迅速增加。在极端情况下，对于像Ron Conway这样的人，它基本上与整个硅谷的交易流相同。&lt;/p&gt;&#xA;&lt;p&gt;所以如果你想认真投资，开始的方法是从你现有的联系自我启动，在你遇到的公司中成为好的投资者，最终你将开始一个连锁反应。好的投资者很少见，即使在硅谷。整个硅谷可能只有几百个认真的天使，然而他们可能是使硅谷成为今天样子的单一最重要的成分。天使是创业形成的限制性试剂。&lt;/p&gt;&#xA;&lt;p&gt;如果硅谷只有几百个认真的天使，那么通过决定成为一个，你可以单手显著拓宽硅谷创业公司的管道。这有点令人震惊。&lt;/p&gt;&#xA;&lt;h2 id=&#34;做得好&#34;&gt;做得好&lt;/h2&gt;&#xA;&lt;p&gt;你如何成为好的天使投资人？你需要的第一个东西是果断。当我们与创始人谈论好和坏的投资者时，我们描述好人的方式之一是说&amp;quot;他开支票。&amp;ldquo;这并不意味着投资者对每个人说是。远非如此。这意味着他快速下定决心，并跟进执行。你可能想，这能有多难？你尝试时会看到。这源于天使投资的本质，决策是困难的。你必须早期猜测，在最有前途的想法仍然看似反直觉的阶段，因为如果它们明显好，VC已经资助它们了。&lt;/p&gt;&#xA;&lt;p&gt;假设是1998年。你遇到一个由几个研究生创立的创业公司。他们说他们要做互联网搜索。已经有一堆大上市公司在做搜索。这些研究生怎么可能与他们竞争？而且搜索真的重要吗？所有搜索引擎都在试图让人们开始称它们为&amp;quot;门户网站&amp;quot;而不是。你为什么要投资一个由几个无名小辈经营的公司，他们试图在一个自己已经宣布过时的领域与大型、积极的公司竞争？然而这些研究生看起来相当聪明。你怎么办？&lt;/p&gt;&#xA;&lt;p&gt;当你没有经验时，有一个果断的技巧：将你的投资规模降低到你不会太在意损失的金额。对于每个富人（你可能不应该尝试天使投资，除非你认为自己富有），有一些金额会是虽然令人烦恼但无痛的损失。在你感觉舒适投资之前，不要投资超过那个数额。&lt;/p&gt;&#xA;&lt;p&gt;例如，如果你有500万美元的可投资资产，损失1.5万美元可能虽然令人烦恼但是无痛的。这不到你净资产的.3%。所以从做3或4个1.5万美元的投资开始。没有什么能像经验一样教你天使投资。把前几个当作教育费用。6万美元比许多研究生课程便宜。而且你获得股权。&lt;/p&gt;&#xA;&lt;p&gt;真正不酷的是战略性犹豫不决：在试图收集更多关于创业公司轨迹的信息的同时拖延创始人。[10] 总有这样做的诱惑，因为你依据的东西太少了，但你有意识地抵抗它。从长远来看，对你有利的是做好。&lt;/p&gt;&#xA;&lt;p&gt;成为好的天使投资人的另一个组成部分就是做一个好人。天使投资不是通过欺骗人们赚钱的业务。创业公司创造财富，创造财富不是零和游戏。没有人必须输你才能赢。事实上，如果你虐待你投资的创始人，他们只会变得沮丧，公司会做得更差。而且你的推荐会枯竭。所以我建议做好。&lt;/p&gt;&#xA;&lt;p&gt;我认识的最成功的天使投资人基本上都是好人。一旦他们投资了一家公司，他们只想帮助它。他们也会帮助他们没有投资的人。当他们帮忙时，他们似乎不记录这些。开销太大了。他们只是试图帮助每个人，并假设好的事情会以某种方式回流给他们。经验上这似乎有效。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 可转换债券可以在特定估值上限，或者在转换时以对最终估值的折扣进行。例如，30%折扣的可转换债券意味着当它转换时，你获得的股票就像你以低30%的估值投资一样。在无法或不想确定估值应该是什么的情况下，这可能很有用。你把它留给下一个投资者。另一方面，许多投资者想知道他们确切得到什么，所以他们只会做有上限的可转换债券。&lt;/p&gt;</description>
    </item>
    <item>
      <title>如何筹集资金</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/fr/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/fr/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/fr.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;如何筹集资金&#34;&gt;如何筹集资金&lt;/h1&gt;&#xA;&lt;p&gt;想创业吗？获得Y Combinator的资助。&lt;/p&gt;&#xA;&lt;p&gt;2013年9月&lt;/p&gt;&#xA;&lt;p&gt;大多数筹集资金的创业公司不止一次。典型的轨迹可能是（1）从Y Combinator或个人天使投资者那里获得数万美元启动，（2）筹集几十万到几百万来建立公司，然后（3）一旦公司明显成功，再进行一轮或多轮融资以加速增长。&lt;/p&gt;&#xA;&lt;p&gt;实际情况可能更加混乱。有些公司在第二阶段筹集两次资金。其他公司跳过第一阶段直接进入第二阶段。在Y Combinator，我们遇到越来越多已经筹集数十万美元的公司。但三阶段路径至少是单个创业公司路径会围绕的标准。&lt;/p&gt;&#xA;&lt;p&gt;本文主要关注第二阶段的融资。这是我们在Demo日展示的创业公司正在做的融资类型，本文也是我们给他们的建议。&lt;/p&gt;&#xA;&lt;h3 id=&#34;力量&#34;&gt;力量&lt;/h3&gt;&#xA;&lt;p&gt;融资在两种意义上都是困难的：像举重一样困难，也像解谜题一样困难。像举重一样困难是因为要说服人们拿出大笔资金本身就很困难。这个问题是不可简化的；它本应该困难。但许多其他困难都可以消除。融资之所以看起来像谜题，只是因为对大多数创始人来说这是一个陌生的世界，我希望通过提供一个路线图来解决这个问题。&lt;/p&gt;&#xA;&lt;p&gt;对创始人来说，投资者的行为常常是模糊的——部分原因是他们的动机模糊，部分原因是他们故意误导你。投资者的误导方式与缺乏经验创始人的美好愿望结合得非常糟糕。在YC，我们总是警告创始人这种危险，投资者可能对YC创业公司比对其他公司更加谨慎，即使如此，我们仍然看到这两个易变因素结合时产生的一系列爆炸。[1]&lt;/p&gt;&#xA;&lt;p&gt;如果你是一个缺乏经验的创始人，生存的唯一方法是给自己施加外部约束。你不能相信你的直觉。我要在这里给你一套规则，如果有什么能帮你度过这个过程的话，就是它了。在某些时刻你会想忽略它们。所以零号规则是：这些规则的存在是有原因的。如果没有强大的力量把你推向另一个方向，你就不需要一条规则来让你朝着某个方向前进。&lt;/p&gt;&#xA;&lt;p&gt;作用在你身上的力量的最终来源是作用在投资者身上的力量。投资者夹在两种恐惧之间：投资失败的创业公司的恐惧，和错过成功的创业公司的恐惧。所有这些恐惧的原因恰恰是创业公司成为如此有吸引力的投资的原因：成功的创业公司增长非常快。但这种快速增长意味着投资者不能等待。如果你等到一个创业公司明显成功时，那就太晚了。要获得真正的高回报，你必须在还不清楚创业公司会如何发展时就投资他们。但这反过来又让投资者担心他们即将投资一个失败的项目。而他们经常确实如此。&lt;/p&gt;&#xA;&lt;p&gt;如果可能的话，投资者想做的就是等待。当一个创业公司只有几个月大时，过去的每一周都会给你提供更多关于它们的信息。但如果等得太久，其他投资者可能会抢走交易。当然，所有其他投资者都受到同样的力量影响。所以往往会发生的是，他们都尽可能等待，然后当一些人行动时，其他人也不得不行动。&lt;/p&gt;&#xA;&lt;h3 id=&#34;除非你想要资金而且资金也想要你否则不要融资&#34;&gt;除非你想要资金而且资金也想要你，否则不要融资。&lt;/h3&gt;&#xA;&lt;p&gt;成功创业公司中如此高比例的公司融资，以至于融资似乎是创业公司的定义特征之一。实际上不是。快速增长才是使公司成为创业公司的原因。大多数处于快速增长位置的公司发现（a）外部资金有助于他们更快增长，（b）他们的增长潜力使他们很容易吸引这种资金。对于一个成功的创业公司来说，（a）和（b）都成立是如此普遍，以至于实际上所有公司都接受外部资金。但可能有这样的情况：创业公司要么不想更快增长，要么外部资金不会帮助它们增长，如果你是其中之一，不要融资。&lt;/p&gt;&#xA;&lt;p&gt;另一个不融资的时机是你无法融资的时候。如果你在能够说服投资者之前尝试融资，你不仅会浪费时间，还会在你和那些投资者之间烧毁你的声誉。&lt;/p&gt;&#xA;&lt;h3 id=&#34;处于融资模式或非融资模式&#34;&gt;处于融资模式或非融资模式。&lt;/h3&gt;&#xA;&lt;p&gt;融资最让创始人惊讶的事情之一是它是如此分散注意力。当你开始融资时，其他一切都会停止。问题不是融资消耗的时间，而是它成为你头脑中最主要的事情。创业公司无法长时间承受这种分散注意力。早期创业公司之所以增长，主要是因为创始人使其增长，如果创始人分心，增长通常会急剧下降。&lt;/p&gt;&#xA;&lt;p&gt;因为融资如此分散注意力，创业公司应该要么处于融资模式，要么不处于融资模式。当你决定融资时，你应该全神贯注于它，这样你就可以快速完成并回到工作中。[2]&lt;/p&gt;&#xA;&lt;p&gt;当你不处于融资模式时，你可以从投资者那里接受资金。你只是不能在这方面花费任何注意力。有两件事需要注意力：说服投资者，以及与他们谈判。所以当你不处于融资模式时，只有当投资者不需要说服，并且愿意以你无需谈判就接受的条款投资时，你才应该接受他们的资金。例如，如果一家有声誉的投资者愿意使用标准文件以可转换票据投资，该票据要么没有上限，要么有良好的估值上限，你可以在不考虑的情况下接受。[3] 条款将是你在下一轮股权融资中确定的条款。&amp;ldquo;不需要说服&amp;quot;就是这个意思：零时间与投资者会面或为他们准备材料。如果投资者说他们准备好投资，但需要你过来开一次会面见一些合伙人，如果你不处于融资模式，就说不，因为那就是融资。[4] 礼貌地告诉他们；告诉他们你现在专注于公司，当你融资时你会回复他们；但不要滑下斜坡。&lt;/p&gt;&#xA;&lt;p&gt;投资者会试图在你不想融资时引诱你融资。如果他们能做到，这对他们来说很好，因为他们可以借此在其他人之前获得机会。他们会发邮件说他们想要见你了解更多关于你的情况。如果你收到VC公司合伙人的冷邮件，即使你处于融资模式也不应该见面。交易不会那样发生。[5] 但即使你收到合伙人的邮件，你也应该推迟见面直到你处于融资模式。他们可能说他们只是想见面聊天，但投资者从来不只是想见面聊天。如果他们喜欢你怎么办？如果他们开始谈论给你钱怎么办？你能够抵制进行那种对话吗？除非你在融资方面经验丰富，能够与投资者保持随意的对话，否则更安全的方式是告诉他们你以后，当你融资时会很乐意，但现在你需要专注于公司。[6]&lt;/p&gt;&#xA;&lt;p&gt;在第二阶段成功融资的公司有时在离开融资模式后会增加一些投资者。这没关系；如果融资顺利，你将能够花费时间说服他们或就条款进行谈判。&lt;/p&gt;&#xA;&lt;h3 id=&#34;获得投资者的介绍&#34;&gt;获得投资者的介绍。&lt;/h3&gt;&#xA;&lt;p&gt;在与投资者交谈之前，你必须被介绍给他们。如果你在Demo日展示，你将同时被介绍给一大批投资者。但即使如此，你也应该用你自己收集的介绍来补充这些。&lt;/p&gt;&#xA;&lt;p&gt;你必须被介绍吗？在第二阶段，是的。一些投资者会让你给他们发商业计划书，但你可以从他们网站的组织方式看出他们并不真正希望创业公司直接接近他们。&lt;/p&gt;&#xA;&lt;p&gt;介绍的有效性差异很大。最好的介绍类型是刚刚投资你的知名投资者。所以当你让投资者承诺时，请他们介绍你给其他他们尊重的投资者。[7] 第二好的介绍类型是他们资助的公司的创始人。你也可以从创业社区的其他人那里获得介绍，如律师和记者。&lt;/p&gt;&#xA;&lt;p&gt;现在有像AngelList、FundersClub和WeFunder这样的网站可以介绍你给投资者。我们建议创业公司将其视为辅助资金来源。首先从你自己获得的领导者那里筹集资金。那些平均而言会是更好的投资者。此外，一旦你能说你已经从一些知名投资者那里筹集了一些资金，你将更容易在这些网站上筹集资金。&lt;/p&gt;&#xA;&lt;h3 id=&#34;在听到是的之前听到的是不&#34;&gt;在听到是的之前，听到的是不。&lt;/h3&gt;&#xA;&lt;p&gt;把投资者当作说不，直到他们毫不含糊地说是，以 definite offer with no contingencies 的形式。&lt;/p&gt;&#xA;&lt;p&gt;我之前提到过，如果可能的话，投资者倾向于等待。对创始人来说特别危险的是他们等待的方式。基本上，他们引导你。他们似乎就要投资了，直到他们说不是的那一刻。如果他们甚至说不的话。一些更差的投资者实际上从不说不；他们只是停止回复你的邮件。他们希望这种方式获得投资的选择权。如果他们后来决定想要投资——通常是因为他们听说你是一个热门交易——他们可以假装只是分心了，然后重新开始对话，好像他们本来就要投资一样。[8]&lt;/p&gt;&#xA;&lt;p&gt;这不是投资者会做的最糟糕的事情。有些人会用听起来像他们承诺的语言，但实际上并不承诺他们。而美好愿望的创始人很高兴与他们妥协。[9]&lt;/p&gt;&#xA;&lt;p&gt;幸运的是，下一个规则是中和这种行为的一种策略。但要起作用，取决于你不被听起来像是的不是所欺骗。创始人经常被误导/误解这一点，所以我们设计了一个协议来解决这个问题。如果你相信投资者已经承诺，让他们确认。如果你和他们对现实有不同的看法，无论差异的来源是他们的不可靠性还是你的美好愿望，书面确认承诺的前景就会暴露出来。在他们确认之前，把他们的当作不对待。&lt;/p&gt;&#xA;&lt;h3 id=&#34;进行期望值加权的广度优先搜索&#34;&gt;进行期望值加权的广度优先搜索。&lt;/h3&gt;&#xA;&lt;p&gt;当你与投资者交谈时，你的模式应该是期望值加权的广度优先搜索。你应该总是与投资者并行交谈，而不是串行。你负担不起串行与投资者交谈的时间，而且如果你一次只与一个投资者交谈，他们就没有其他投资者的压力来促使他们行动。但你不应该对每个投资者都给予同样的关注，因为一些是比其他更有前途的前景。最佳解决方案是与所有潜在投资者并行交谈，但给更有前途的投资者更高的优先级。[10]&lt;/p&gt;&#xA;&lt;p&gt;期望值 = 投资者说是的可能性，乘以他们如果说是会有多好。例如，一个著名的投资者会投资很多，但很难说服，可能和一个不出名的天使投资者有相同的期望值，后者不会投资很多，但很容易说服。而一个只会投资少量资金，却需要多次会面才能决定的天使投资者，期望值很低。最后会见这样的投资者，如果有的话。[11]&lt;/p&gt;&#xA;&lt;p&gt;进行期望值加权的广度优先搜索将使你免受那些从未明确说不但只是逐渐消失的投资者的影响，因为你也会以相同的速度逐渐远离他们。它保护你免受那些不可靠的投资者的影响，就像分布式算法保护你免受故障处理器的影响一样。如果某个投资者不回复你的邮件，或者想要很多会议但不进展到给你offer，你会自动减少对他们的关注。但你必须在分配概率方面自律。你不能让多想要一个投资者影响你对他们多想要你的估计。&lt;/p&gt;&#xA;&lt;h3 id=&#34;知道你的立场&#34;&gt;知道你的立场。&lt;/h3&gt;&#xA;&lt;p&gt;当投资者习惯性地看起来比实际情况更积极时，你如何判断你与一个投资者相处得如何？通过看他们的行动而不是言语。每个投资者都有一定的轨道，他们需要从第一次对话到汇款资金，你应该始终知道这个轨道包括什么，你在哪里，以及你前进的速度有多快。&lt;/p&gt;&#xA;&lt;p&gt;永远不要在与投资者的会面结束时离开而不问接下来会发生什么。他们还需要什么才能决定？他们需要再次与你会面吗？谈论什么？多久？他们需要在内部做什么，比如与他们的合伙人交谈，或调查某些问题？他们预计需要多长时间？不要太pushy，但要知道你的立场。如果投资者模糊或抗拒回答这些问题，假设最坏的情况；真正对你的感兴趣的投资者通常会乐于谈论在现在和汇款资金之间必须发生的事情，因为他们已经在头脑中思考那个过程了。[12]&lt;/p&gt;&#xA;&lt;p&gt;如果你在谈判方面经验丰富，你已经知道如何问这些问题。[13] 如果不是，在这种情况下你可以使用一个技巧。投资者知道你在融资方面缺乏经验。在这方面缺乏经验不会让你没有吸引力。如果你创办科技创业公司，在技术方面是新手会，但在融资方面是新手不会。Larry和Sergey在融资方面是新手。所以你可以只是坦白说你在这一点上缺乏经验，并问他们的过程如何，你在哪个阶段。[14]&lt;/p&gt;&#xA;&lt;h3 id=&#34;获得第一个承诺&#34;&gt;获得第一个承诺。&lt;/h3&gt;&#xA;&lt;p&gt;大多数投资者对你意见的最大因素是其他投资者对你的意见。一旦你开始让投资者承诺，让更多投资者承诺就变得越来越容易。但硬币的另一面是，获得第一个承诺往往很困难。&lt;/p&gt;&#xA;&lt;p&gt;获得第一个实质性的offer可能是融资总难度的一半。什么算作实质性offer取决于来自谁以及金额是多少。来自朋友和家人的资金通常不算，无论多少。但如果你从一家知名的VC公司或天使投资者那里获得5万美元，这通常足以让事情开始滚动。[15]&lt;/p&gt;&#xA;&lt;h3 id=&#34;关闭承诺的资金&#34;&gt;关闭承诺的资金。&lt;/h3&gt;&#xA;&lt;p&gt;钱在银行之前不算交易。我经常听到缺乏经验的创始人说&amp;quot;我们已经筹集了80万美元&amp;rdquo;，结果发现到目前为止零美元在银行中。记住折磨投资者的双重恐惧？让他们过早跳起来的错失恐惧，以及导致跳到粪便上的恐惧？这是一个人们特别容易出现买方懊悔的市场。它也为他们提供了很多借口来满足这种懊悔。公开市场像鞭子一样鞭打创业投资。如果中国经济明天爆炸，所有赌注都取消。但对个别创业公司来说也有很多惊喜，它们往往集中在融资周围。明天一个大的竞争对手可能出现，或者你可能会收到停止令，或者你的联合创始人可能会辞职。[16]&lt;/p&gt;&#xA;&lt;p&gt;即使一天的延迟也可能带来导致投资者改变主意的信息。所以当某人承诺时，拿钱。知道你的立场并不在他们说会投资时结束。在他们说是之后，知道拿钱的时间表，然后看管这个过程直到它发生。机构投资者有负责汇款的人，但你可能需要亲自追逐天使投资者来收集支票。&lt;/p&gt;&#xA;&lt;p&gt;缺乏经验的投资者最有可能出现买方懊悔。经验丰富的投资者已经学会把说是视为从跳水板上跳水，他们也有更多的品牌要维护。但我听说过即使是顶级VC公司也会违背交易的情况。&lt;/p&gt;&#xA;&lt;h3 id=&#34;避免不领投的投资者&#34;&gt;避免不&amp;quot;领投&amp;quot;的投资者。&lt;/h3&gt;&#xA;&lt;p&gt;由于获得第一个offer是融资的大部分困难，这应该成为你开始时计算期望值的一部分。你不仅要估计投资者说是的概率，还要估计他们会第一个说是的概率，而后者并不只是前者的恒定分数。一些投资者以快速决定而闻名，这些在早期特别有价值。&lt;/p&gt;&#xA;&lt;p&gt;相反，一个只有其他投资者已经投资时才会投资的投资者最初是毫无价值的。虽然大多数投资者受到其他投资者对你感兴趣程度的影响，但有些人有明确的政策，只在其他投资者已经投资后才投资。你可以识别这种可鄙的投资者亚种，因为他们经常谈论&amp;quot;领投者&amp;quot;。他们说他们不领投，或者一旦你有领投者他们就会投资。有时他们甚至声称愿意自己领投，意思是他们不会投资，直到你从其他投资者那里获得$x。（如果&amp;quot;领投&amp;quot;的意思是他们将单方面投资，此外还会帮助你筹集更多，那就很好。当它们用这个术语的意思是除非你能在其他地方筹集更多，否则它们不会投资，那就很糟糕。）[17]&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;领投&amp;quot;这个术语从哪里来？直到几年前，在第二阶段筹集资金的创业公司通常会进行股权融资，几个投资者同时使用相同的文件投资。你与一个&amp;quot;领投&amp;quot;投资者谈判条款，然后所有其他人都签署相同的文件，所有资金在收盘时变更。&lt;/p&gt;&#xA;&lt;p&gt;A轮融资仍然是这样，但现在大多数A轮融资之前的融资情况不同了。现在在A轮之前很少有实际的轮次，或领投者。现在创业公司只是一次一个地从投资者那里筹集资金，直到他们觉得足够了。&lt;/p&gt;&#xA;&lt;p&gt;既然不再有领投者，为什么投资者使用这个术语？因为这是他们真正意思的更合法的说法。他们的真正意思是他们对你的兴趣是其他投资者对你的兴趣的函数。即所有平庸投资者的光谱特征。但当用领投者的术语来表达时，听起来好像他们的行为有一些结构性因此是合法的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>如何获得新想法</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/getideas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/getideas/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/getideas.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;如何获得新想法&#34;&gt;如何获得新想法&lt;/h1&gt;&#xA;&lt;p&gt;2023年1月&lt;/p&gt;&#xA;&lt;p&gt;（有人将我的文章输入GPT制作了一个可以基于它们回答问题的东西，然后问它好想法从哪里来。答案还可以，但不是我会说的。这是我会说的。）&lt;/p&gt;&#xA;&lt;p&gt;获得新想法的方法是注意异常：什么看起来奇怪，或缺失，或坏了？你可以在日常生活中看到异常（很多单口喜剧都是基于这个），但寻找它们的最佳地方是在知识的前沿。&lt;/p&gt;&#xA;&lt;p&gt;知识分形增长。从远处看，它的边缘看起来很平滑，但当你学到足够接近其中一个时，你会注意到它充满了空白。这些空白看起来很明显；似乎无法解释没有人尝试过x或对y感到好奇。在最好的情况下，探索这样的空白会产生全新的分形芽。&lt;/p&gt;</description>
    </item>
    <item>
      <title>如何让匹兹堡成为创业中心</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/pgh/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/pgh/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/pgh.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;如何让匹兹堡成为创业中心&#34;&gt;如何让匹兹堡成为创业中心&lt;/h1&gt;&#xA;&lt;p&gt;2016年4月&lt;/p&gt;&#xA;&lt;p&gt;（这是我在匹兹堡一个名为Opt412的活动上的演讲。其中大部分内容适用于其他城镇。但并非全部，因为正如我在演讲中所说，匹兹堡比大多数想成为创业中心的地方有一些重要优势。）&lt;/p&gt;&#xA;&lt;p&gt;要让匹兹堡成为像硅谷这样的创业中心需要什么？我对匹兹堡相当了解，因为我在这里长大，在门罗维尔。我也相当了解硅谷，因为那是我现在居住的地方。你能在这里建立起那种创业生态系统吗？&lt;/p&gt;&#xA;&lt;p&gt;当我同意在这里演讲时，我以为我无法给出一个非常乐观的演讲。我以为我会谈论匹兹堡可以做什么来成为创业中心，很大程度上是虚拟语气。相反，我要谈论的是匹兹堡能够做什么。&lt;/p&gt;&#xA;&lt;p&gt;改变我想法的是我在《纽约时报》美食版读到的一篇文章。标题是&amp;quot;匹兹堡青年驱动的食品繁荣&amp;quot;。对大多数人来说，这听起来可能不有趣，更不用说与创业相关了。但读到那个标题让我感到非常振奋。如果我刻意挑选，我想不出一个更有希望的标题。当我读到文章时，我变得更加兴奋。它说&amp;quot;25到29岁的人现在占所有居民的7.6%，比十年前的7%有所上升。&amp;ldquo;哇，我想，匹兹堡可能是下一个波特兰。它可能成为所有二十多岁的人都想去生活的地方。&lt;/p&gt;&#xA;&lt;p&gt;几天前我到这里时，我能感觉到不同。我从1968年到1984年住在这里。当时我没有意识到，但在这整个期间，城市都在自由落体。除了各地都发生的向郊区迁移外，钢铁和核工业都在消亡。天啊，现在情况大不相同了。不仅仅是市中心看起来繁荣得多。这里有一种我小时候没有的活力。&lt;/p&gt;&#xA;&lt;p&gt;我小时候，这是年轻人离开的地方。现在是吸引他们的地方。&lt;/p&gt;&#xA;&lt;p&gt;这与创业有什么关系？创业公司是由人组成的，而典型创业公司中的人的平均年龄正好在25到29岁之间。&lt;/p&gt;&#xA;&lt;p&gt;我已经看到一个城市拥有这些人有多么强大。五年前，他们把硅谷的重心从半岛转移到旧金山。谷歌和Facebook在半岛上，但下一代的大赢家都在旧金山。重心转移的原因是人才战争，尤其是程序员方面。大多数25到29岁的人想住在城市，而不是无聊的郊区。所以无论他们喜欢与否，创始人都知道他们必须在城市。我认识多个创始人，他们本来更喜欢住在硅谷 proper，但他们强迫自己搬到旧金山，因为他们知道否则会输掉人才战争。&lt;/p&gt;&#xA;&lt;p&gt;因此，成为二十多岁人的磁石是一件非常有希望的事情。很难想象一个地方能成为创业中心却不具备这个特质。当我读到关于25到29岁人群比例增加的统计数据时，我感到的兴奋完全和看到创业公司的图表开始从x轴向上攀升时一样。&lt;/p&gt;&#xA;&lt;p&gt;全国25到29岁人群的比例是6.8%。这意味着你领先0.8%。人口是306,000，所以我们谈论的是约2500人的过剩。这是一个小镇的人口，而这还只是过剩。所以你已经有了一个立足点。现在你只需要扩展它。&lt;/p&gt;&#xA;&lt;p&gt;虽然&amp;quot;青年驱动的食品繁荣&amp;quot;可能听起来轻浮，但它绝非如此。餐厅和咖啡馆是城市个性的重要组成部分。想象走在巴黎的街道上。你走过什么？小餐厅和咖啡馆。想象开车穿过一些令人沮丧的随机远郊。你开车经过什么？星巴克、麦当劳和必胜客。正如格特鲁德·斯坦因所说，那里没有那里。你可以在任何地方。&lt;/p&gt;&#xA;&lt;p&gt;这些独立的餐厅和咖啡馆不仅仅是喂养人们。它们让这里有了这里。&lt;/p&gt;&#xA;&lt;p&gt;所以这是我第一个具体建议，将匹兹堡变成下一个硅谷：尽你所能鼓励这种青年驱动的食品繁荣。城市能做什么？把开办这些小餐厅和咖啡馆的人当作你的用户，去问他们想要什么。我至少可以猜到他们可能想要的一件事：快速的许可流程。旧金山在这方面给你留下了大量超越它们的空间。&lt;/p&gt;&#xA;&lt;p&gt;我知道餐厅不是主要推动力。主要推动力，正如《纽约时报》文章所说，是便宜的住房。这是一个很大的优势。但&amp;quot;便宜住房&amp;quot;这个短语有点误导。有很多更便宜的地方。匹兹堡的特殊之处不在于它便宜，而在于它是一个你真正想要生活的便宜地方。&lt;/p&gt;&#xA;&lt;p&gt;部分原因在于建筑本身。我很久以前就意识到，当我还是一个贫穷的二十多岁年轻人时，最好的交易是曾经富有然后变得贫穷的地方。如果一个地方一直富有，它很好但太昂贵。如果一个地方一直贫穷，它便宜但严酷。但如果一个地方曾经富有然后变得贫穷，你可以找到便宜的宫殿。这就是吸引人们来这里的原因。一百年前匹兹堡富有时，住在这里的人建造了大型坚固的建筑。不一定总是最好的品味，但绝对坚固。所以这是成为创业中心的另一个建议：不要摧毁吸引人们来这里的老建筑。当城市正在复苏时，就像现在的匹兹堡，开发商竞相拆除老建筑。不要让这种情况发生。专注于历史保护。大型房地产开发项目不是吸引二十多岁年轻人来这里的原因。它们与新餐厅和咖啡馆相反；它们减少了城市的个性。&lt;/p&gt;&#xA;&lt;p&gt;经验证据表明，你在历史保护方面不能太严格。城市对此越严格，它们似乎做得越好。&lt;/p&gt;&#xA;&lt;p&gt;但匹兹堡的吸引力不仅仅是建筑本身。还在于它们所在的街区。像旧金山和纽约一样，匹兹堡幸运地是一个前汽车时代的城市。它不太分散。因为这些25到29岁的人不喜欢开车。他们更喜欢步行、骑自行车或乘坐公共交通。如果你最近去过旧金山，你会忍不住注意到大量的骑自行车的人。这不仅仅是二十多岁年轻人采用的时尚。在这方面，他们发现了一种更好的生活方式。胡须会消失，但自行车不会。无需驾驶就能出行的城市就是更好的城市。所以我建议你尽一切可能利用这一点。与历史保护一样，似乎不可能做得太过。&lt;/p&gt;&#xA;&lt;p&gt;为什么不把匹兹堡变成全国对自行车和行人最友好的城市？看看你是否能让旧金山相比之下显得落后。如果你这样做，你不太可能后悔。城市对你想吸引的年轻人来说会像天堂。如果他们确实离开去别处找工作，他们会遗憾地离开这样一个地方。 downside是什么？你能想象一个&amp;quot;因变得对自行车太友好而被毁灭的城市&amp;quot;的头条吗？这根本不会发生。&lt;/p&gt;&#xA;&lt;p&gt;所以假设酷炫的老街区和小餐馆让这里成为下一个波特兰。这足够吗？它将使你处于比波特兰本身好得多的位置，因为匹兹堡有波特兰缺乏的东西：一流的研究型大学。CMU加上小咖啡馆意味着你拥有的不仅仅是喝拿铁的时髦人士。这意味着你有一边喝拿铁一边讨论分布式系统的时髦人士。现在你真的非常接近旧金山了。&lt;/p&gt;&#xA;&lt;p&gt;事实上，你在一方面比旧金山更好，因为CMU在市中心，但斯坦福和伯克利都在郊区。&lt;/p&gt;&#xA;&lt;p&gt;CMU能做什么来帮助匹兹堡成为创业中心？成为更好的研究型大学。CMU是世界上最好的大学之一，但想象一下如果它是最好的，每个人都知道这一点，情况会怎样。有很多有抱负的人必须去最好的地方，无论它在哪里。如果CMU是那个地方，他们都会来这里。哈萨克斯坦的孩子会梦想有一天生活在匹兹堡。&lt;/p&gt;&#xA;&lt;p&gt;成为那种人才磁铁是大学为使自己的城市成为创业中心所能做出的最重要贡献。事实上，这几乎是它们能做出的唯一贡献。&lt;/p&gt;&#xA;&lt;p&gt;但是等等，大学不应该建立名称中包含&amp;quot;创新&amp;quot;和&amp;quot;创业&amp;quot;等词语的项目吗？不，它们不应该。这类事情几乎总是令人失望。它们追求的是错误的目标。获得创新的方法不是瞄准创新，而是瞄准更具体的东西，比如更好的电池或更好的3D打印。而学习创业的方法是去做，这在学校里是做不到的。&lt;/p&gt;&#xA;&lt;p&gt;我知道听到大学鼓励创业最好的事情是成为一所伟大的大学，可能会让一些行政人员失望。这就像告诉想减肥的人减肥的方法是少吃。&lt;/p&gt;&#xA;&lt;p&gt;但如果你想了解创业公司的来源，看看经验证据。看看最成功的创业公司的历史，你会发现它们有机地源于几个创始人构建一些开始时是有趣副业项目的东西。大学在聚集创始人方面很出色，但除此之外，它们能做的最好的事情就是不要干涉。例如，不要对学生和教师开发的&amp;quot;知识产权&amp;quot;声称所有权，并且对推迟入学和请假有宽松的规定。&lt;/p&gt;&#xA;&lt;p&gt;事实上，大学为鼓励创业所能做的最有效的事情之一是哈佛发明的一种复杂的不干涉方式。哈佛曾经在圣诞节后为秋季学期进行考试。一月初他们有一个叫做&amp;quot;阅读期&amp;quot;的时间，你应该在为考试学习。而微软和Facebook有一个很少有人意识到的共同点：它们都是在阅读期开始的。这是产生那种变成创业公司的副业项目的完美情况。学生们都在校园里，但他们不必做任何事情，因为他们应该在为考试学习。&lt;/p&gt;&#xA;&lt;p&gt;哈佛可能已经关闭了这个窗口，因为几年前他们将考试移到圣诞节前，并将阅读期从11天缩短到7天。但如果一所大学真的想帮助学生创办创业公司，经验证据，按市值加权，表明它们能做的最好的事情就是什么都不做。&lt;/p&gt;&#xA;&lt;p&gt;匹兹堡的文化是它的另一个优势。一个城市似乎必须在社会上自由才能成为创业中心，原因很明显。一个城市必须容忍奇怪才能成为创业公司的家园，因为创业公司非常奇怪。你不能选择只允许那些会变成大创业公司的奇怪形式，因为它们都混杂在一起。你必须容忍所有的奇怪。&lt;/p&gt;&#xA;&lt;p&gt;这立即排除了美国的大部分地区。我很乐观，它不排除匹兹堡。我在这里长大的记忆之一，虽然当时没有意识到有什么不寻常的，是人们相处得有多好。我仍然不确定为什么。也许一个原因是每个人都感觉像移民。当我在门罗维尔还是个孩子时，人们不称自己为美国人。他们称自己为意大利人、塞尔维亚人或乌克兰人。想象一下一百年前这里是什么样子，当时人们从二十个不同的国家涌入。宽容是唯一的选择。&lt;/p&gt;&#xA;&lt;p&gt;我记忆中匹兹堡的文化是宽容和务实的。这也是我描述硅谷文化的方式。这不是巧合，因为匹兹堡是它那个时代的硅谷。这是一个人们建造新事物的城市。虽然人们建造的东西已经改变，但做这种工作需要的精神是相同的。&lt;/p&gt;&#xA;&lt;p&gt;所以，虽然拿铁喝着的时髦人士的涌入可能有些方面令人讨厌，但我会不遗余力地鼓励他们。更广泛地说是容忍奇怪，即使达到古怪加利福尼亚人的程度。对匹兹堡来说，这是一个保守的选择：这是回到城市的根源。&lt;/p&gt;&#xA;&lt;p&gt;不幸的是，我把最艰难的部分留到了最后。成为创业中心还需要一件事，而匹兹堡没有：投资者。硅谷有庞大的投资者社区，因为它有50年的时间来发展一个。纽约有庞大的投资者社区，因为它充满了非常喜欢钱并且能够快速注意到新赚钱方式的人。但匹兹堡两者都没有。吸引其他人来这里便宜的住房对投资者没有影响。&lt;/p&gt;&#xA;&lt;p&gt;如果投资者社区在这里成长起来，它会以与硅谷相同的方式发生：缓慢而有机地。所以我不会在短期内拥有庞大投资者社区上下赌注。但幸运的是，有三个趋势使这变得不像以前那样必要。一个是创业公司启动成本越来越低，所以你不需要像以前那样多的外部资金。第二个是感谢Kickstarter等事物，创业公司可以更快获得收入。你可以从任何地方在Kickstarter上放东西。第三个是像Y Combinator这样的项目。来自世界任何地方的创业公司都可以去YC三个月，获得资金，然后如果他们想就可以回家。&lt;/p&gt;&#xA;&lt;p&gt;我的建议是让匹兹堡成为创业公司的好地方，逐渐会有更多的创业公司留下来。其中一些会成功；它们的一些创始人会成为投资者；还会有更多的创业公司留下来。&lt;/p&gt;&#xA;&lt;p&gt;这不是成为创业中心的快速路径。但它至少是一条路径，这是其他城市很少有的。而且这并不是说你在此期间必须做出痛苦的牺牲。想想我建议你应该做的事情。鼓励当地餐厅，保存老建筑，利用密度，让CMU成为最好的，促进宽容。这些是使匹兹堡现在成为好居住地方的事情。我只是说你应该更多地做这些事情。&lt;/p&gt;&#xA;&lt;p&gt;这是一个令人鼓舞的想法。如果匹兹堡成为创业中心的道路是更多地做自己，那么它有很好的成功机会。事实上，它可能在其规模的城市中拥有最好的机会。这需要一些努力和很多时间，但如果任何城市能做到，匹兹堡可以。&lt;/p&gt;&#xA;&lt;p&gt;感谢查理·奇弗和杰西卡·利文斯顿阅读草稿，感谢梅格·奇弗组织Opt412并邀请我演讲。&lt;/p&gt;</description>
    </item>
    <item>
      <title>如果Lisp这么好</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/iflisp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/iflisp/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/iflisp.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;如果lisp这么好&#34;&gt;如果Lisp这么好&lt;/h1&gt;&#xA;&lt;p&gt;2003年5月&lt;/p&gt;&#xA;&lt;p&gt;如果Lisp这么好，为什么没有更多人使用它？我最近在一次演讲中被听众中的一个学生问到了这个问题。而且不是第一次了。&lt;/p&gt;&#xA;&lt;p&gt;在语言方面，就像在许多事情中一样，流行度和质量之间没有太大关联。为什么约翰·格里沙姆（《诉讼之王》销售排名第44）比简·奥斯汀（《傲慢与偏见》销售排名第6191）卖得更好？即使是格里沙姆会声称这是因为他是更好的作家吗？&lt;/p&gt;&#xA;&lt;p&gt;这是《傲慢与偏见》的第一句话：&amp;ldquo;凡是有钱的单身汉，总想娶位太太，这已经成了一条举世公认的真理。&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;举世公认的真理？&amp;rdquo; 对于一个爱情故事的第一句话来说，这些词太长了。&lt;/p&gt;&#xA;&lt;p&gt;就像简·奥斯汀的作品一样，Lisp看起来很难。它的语法，或者说缺乏语法，使它看起来完全不同于大多数人习惯的语言。在学习Lisp之前，我也害怕它。我最近发现了一本1983年的笔记本，我在上面写道：&amp;ldquo;我想我应该学习Lisp，但它看起来太陌生了。&amp;ldquo;幸运的是，我当时19岁，对学习新东西没有太多抵触。我非常无知，学习几乎任何东西都意味着学习新事物。&lt;/p&gt;&#xA;&lt;p&gt;被Lisp吓到的人们编造了其他不使用它的理由。当C是默认语言时，标准的借口是Lisp太慢。现在Lisp方言是可用语言中较快的之一，这个借口已经消失了。现在的标准借口是公开循环的：其他语言更流行。&lt;/p&gt;&#xA;&lt;p&gt;（小心这种推理。它会让你得到Windows。）&lt;/p&gt;&#xA;&lt;p&gt;流行度总是自我延续的，但在编程语言中尤其如此。为流行语言编写的库更多，这使它们更流行。程序经常必须与现有程序一起工作，如果它们用相同的语言编写，这会更容易，所以语言像病毒一样从程序传播到程序。管理者更喜欢流行的语言，因为它们给他们更多对开发者的控制力，开发者可以更容易被替换。&lt;/p&gt;&#xA;&lt;p&gt;确实，如果编程语言都或多或少等价，那么使用除最流行语言之外的任何语言都没有什么理由。但它们并不都等价，差远了。这就是为什么不那么流行的语言，像简·奥斯汀的小说，继续存在的原因。当其他人在阅读最新的约翰·格里沙姆小说时，总会有一小部分人在阅读简·奥斯汀。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;&lt;em&gt;日语翻译 | 罗马尼亚语翻译 | 西班牙语翻译&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>学生创业指南</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/mit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/mit/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/mit.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;学生创业指南&#34;&gt;学生创业指南&lt;/h1&gt;&#xA;&lt;p&gt;2006年10月&lt;/p&gt;&#xA;&lt;p&gt;（本文基于在麻省理工学院的演讲。）&lt;/p&gt;&#xA;&lt;p&gt;直到最近，毕业生只有两个选择：找工作或读研究生。我认为第三种选择会越来越多：创办自己的创业公司。但这会有多普遍呢？&lt;/p&gt;&#xA;&lt;p&gt;我确信默认的选择永远会是找工作，但创业公司很可能变得和读研究生一样普遍。在90年代晚期，我的教授朋友们常常抱怨他们招不到研究生，因为所有本科生都去创业公司工作了。如果这种情况再次出现，我不会感到惊讶，但有一个不同：这一次他们会创办自己的公司，而不是去为别人的公司工作。&lt;/p&gt;&#xA;&lt;p&gt;最有抱负的学生现在会问：为什么要等到毕业？为什么不在大学期间就创业？事实上，为什么要上大学？为什么不直接创业？&lt;/p&gt;&#xA;&lt;p&gt;一年半前我做过一个演讲，我说雅虎、谷歌和微软创始人的平均年龄是24岁，如果研究生可以创业，为什么本科生不可以？我很高兴我把这表述为一个问题，因为现在我可以假装这不只是一个修辞问题。那时我无法想象为什么创业创始人应该有年龄下限。毕业是行政上的变化，不是生理上的。而且肯定有本科生在技术上和大多数研究生一样有能力。那么为什么本科生就不能像研究生一样能够创业呢？&lt;/p&gt;&#xA;&lt;p&gt;我现在意识到毕业时确实有些变化：你失去了一个巨大的失败借口。无论你的生活多么复杂，你会发现其他人，包括你的家人和朋友，都会忽略所有细节，认为你在任何给定时间只有一个职业。如果你在大学并且有暑假编程工作，你仍然被认为是一个学生。而如果你毕业并找到一份编程工作，每个人会立即认为你是一个程序员。&lt;/p&gt;&#xA;&lt;p&gt;在校期间创业的问题在于有一个内置的逃生舱。如果你在大三和大四之间的夏天创业，对每个人来说这都像是一个暑假工作。所以如果它没有进展，没什么大不了的；你在秋天和其他所有大四学生一起回到学校；没有人认为你是一个失败者，因为你的职业是学生，而你在那个方面没有失败。而如果你在毕业后一年创业，只要你没有被研究生院录取，创业对每个人来说就是你的职业。你现在是一个创业公司创始人，所以你必须在这方面做得很好。&lt;/p&gt;&#xA;&lt;p&gt;对几乎每个人来说，同辈的意见是最强大的动力——甚至比大多数创业公司创始人的名义目标，变得富有，还要强大。[1] 在每个资助周期开始一个月左右，我们有一个叫做原型日的活动，每个创业公司向其他公司展示他们到目前为止所做的事情。你可能认为他们不需要更多的动力。他们在为自己的酷新想法工作；他们有近期所需的资金；他们在玩一个只有两种结果的游戏：财富或失败。你认为这应该足够有动力了。然而，演示的前景使大多数人都疯狂地活动起来。&lt;/p&gt;&#xA;&lt;p&gt;即使你明确地为了变得富有而创业，你可能得到的钱在大多数时候看起来相当理论化。驱动你日常工作的是不想看起来很糟糕。&lt;/p&gt;&#xA;&lt;p&gt;你可能无法改变这一点。即使你能，我也不认为你会想；一个真正、真正不关心同辈怎么想的人可能是反社会者。所以你最多能做到的是把这种力量当作风，相应地设置你的船。如果你知道你的同辈会把你推向某个方向，选择好的同辈，定位自己让他们把你推向你喜欢的方向。&lt;/p&gt;&#xA;&lt;p&gt;毕业改变了主导风向，那些确实有影响。创业是如此困难，即使是成功的那些也是险胜。无论一个创业公司现在飞得多高，它可能在起落架上有几片叶子，是那些在跑道尽头勉强掠过的树留下的。在如此接近的比赛中，反对你的力量的最小增加就足以让你跌入失败的边缘。&lt;/p&gt;&#xA;&lt;p&gt;当我们刚开始创办Y Combinator时，我们鼓励人们还在大学时就开始创业。部分原因是Y Combinator开始时是一种夏季项目。我们保持了项目形式——我们每周一起吃晚饭被证明是个好主意——但我们现在决定官方立场应该是告诉人们等到毕业。&lt;/p&gt;&#xA;&lt;p&gt;这是否意味着你不能在大学创业？完全不是。Loopt的联合创始人Sam Altman在我们资助他们时刚刚完成大二，而Loopt可能是我们迄今为止资助的所有创业公司中最有前途的一个。但Sam Altman是一个非常不寻常的人。在大约见到他三分钟后，我记得我想&amp;quot;啊，所以这就是比尔·盖茨19岁时一定有的样子。&amp;quot;&lt;/p&gt;&#xA;&lt;p&gt;如果在大学期间创业可以成功，为什么我们告诉人们不要这样做？原因和那个可能虚构的小提琴家一样，每当有人请他评判某人的演奏时，他总是说他们没有足够的天赋成为专业演奏家。作为音乐家成功需要决心和天赋，所以这个答案对每个人来说都是正确的建议。不确定的人相信它并放弃，而足够决心的人会想&amp;quot;去他的，不管怎样我都会成功。&amp;quot;&lt;/p&gt;&#xA;&lt;p&gt;所以我们现在的官方政策只资助那些我们无法说服不去创业的本科生。坦率地说，如果你不确定，你应该等待。并不是说如果你现在不创业，所有创业机会都会消失。也许你正在研究的某个想法的窗口会关闭，但这不会是你最后一个想法。对于每个过时的想法，新的想法变得可行。从历史上看，创业机会只随时间增加。&lt;/p&gt;&#xA;&lt;p&gt;那样的话，你可能会问，为什么不等待更久？为什么不先工作一段时间，或者去读研究生，然后再创业？事实上，这可能是个好主意。如果我必须挑选创业公司创始人的最佳时机，基于我们最兴奋看到申请的人，我说是可能是25岁左右。为什么？25岁左右的人比21岁的人有什么优势？为什么不是更老？25岁的人能做32岁的人不能做什么的事情？这些问题值得研究。&lt;/p&gt;&#xA;&lt;p&gt;优势&lt;/p&gt;&#xA;&lt;p&gt;如果你在大学后不久创业，按照现在的标准你会是一个年轻的创始人，所以你应该知道年轻创始人的相对优势是什么。它们不是你可能想的那些。作为一个年轻创始人，你的优势是：耐力、贫穷、无根性、同事和无知。&lt;/p&gt;&#xA;&lt;p&gt;耐力的重要性不应该令人惊讶。如果你听说过关于创业公司的任何事情，你可能听说过长时间工作。据我所知，这些是普遍的。我想不出任何成功的创业公司创始人是朝九晚五工作的。对于年轻的创始人来说，长时间工作尤其必要，因为他们可能不像后来那样高效。&lt;/p&gt;&#xA;&lt;p&gt;你的第二个优势，贫穷，听起来可能不像一个优势，但它确实是一个巨大的优势。贫穷意味着你可以过得很便宜，这对创业公司至关重要。几乎每个失败的创业公司都是因为钱用完了而失败的。这样说有点误导，因为通常有其他潜在原因。但无论问题的来源是什么，低消耗率给你更多的机会从中恢复。由于大多数创业公司一开始会犯各种错误，从错误中恢复的空间是有价值的东西。&lt;/p&gt;&#xA;&lt;p&gt;大多数创业公司最终做的事情与他们计划的不同。成功找到可行的方法的方法是尝试那些不可行的方法。所以在创业公司中最糟糕的事情是有一个僵化的、预先确定的计划，然后开始花很多钱来实现它。最好便宜地运营，给你的想法时间来进化。&lt;/p&gt;&#xA;&lt;p&gt;最近的毕业生几乎可以靠极少的钱生活，这给了你比年长创始人的优势，因为软件创业公司的主要成本是人。有孩子和抵押贷款的人处于真正的劣势。这是我宁愿选择25岁的人而不是32岁的人的原因之一。32岁的人可能是更好的程序员，但可能也有昂贵得多的生活。而25岁的人有一些工作经验（稍后更多），但可以像本科生一样过得很便宜。&lt;/p&gt;&#xA;&lt;p&gt;当我们创办Viaweb时，Robert Morris和我分别是29岁和30岁，但幸运的是我们仍然像23岁的人一样生活。我们俩都几乎零资产。我本来很想有抵押贷款，因为那意味着我有房子。但回想起来，一无所有结果很方便。我没有被束缚，而且我习惯了过得很便宜。&lt;/p&gt;&#xA;&lt;p&gt;然而，比过便宜生活更重要的是想得便宜。Apple II如此流行的原因之一是它很便宜。电脑本身很便宜，而且它使用便宜的、现成的配件，比如用于数据存储的盒式磁带录音机和作为显示器的电视机。你知道为什么吗？因为Woz为自己设计这台电脑，他买不起更贵的东西。&lt;/p&gt;&#xA;&lt;p&gt;我们从同样的现象中受益。我们的价格在当时是 daringly 低的。最高级的服务是每月300美元，比标准低一个数量级。回想起来这是个聪明的举动，但我们这么做不是因为聪明。每月300美元对我们来说看起来是很多钱。像苹果一样，我们创造了便宜的东西，因此受欢迎，仅仅因为我们很穷。&lt;/p&gt;&#xA;&lt;p&gt;很多创业公司都有这种形式：有人出现，以原来成本的十分之一或百分之一制造东西，现有的竞争者无法跟随，因为他们甚至不想思考这种可能性的世界。例如，传统的长途电话公司甚至不想思考VoIP。（但不管怎样，它正在到来。）贫穷在这场游戏中有帮助，因为你个人的偏见指向技术进化的同一方向。&lt;/p&gt;&#xA;&lt;p&gt;无根性的优势与贫穷类似。年轻时你更容易移动——不仅因为你没有房子或很多财产，还因为你不太可能有认真的关系。这被证明是重要的，因为很多创业公司涉及某人搬家。&lt;/p&gt;&#xA;&lt;p&gt;例如，Kiko的创始人现在正在前往湾区的路上创办他们的下一个创业公司。对于他们想做的事情来说，这是更好的地方。他们很容易决定去，因为据我所知，他们中没有人有认真的女朋友，他们拥有的一切都可以装进一辆车里——或者更准确地说，要么能装进一辆车，要么足够破烂以至于不介意留下。&lt;/p&gt;&#xA;&lt;p&gt;他们至少在波士顿。如果他们在内布拉斯加，像Evan Williams在他们那个年龄时一样，会怎么样？最近有人写文章说Y Combinator的缺点是你必须搬家才能参与。不可能有其他方式。我们与创始人进行的对话必须亲自进行。我们一次资助十几个创业公司，不可能同时在十几个地方。但即使我们能以某种方式神奇地让人们免于搬家，我们也不会。让人们留在内布拉斯加对创始人没有好处。不是创业中心的地方对创业公司是有毒的。你可以从间接证据中看出这一点。从休斯顿、芝加哥或迈阿密成功创业的人均数量来看，你可以知道在那里开始创业有多难。我不知道是什么抑制了这些城镇的所有创业公司——可能是一百个微妙的小事情——但一定有原因。[2]&lt;/p&gt;&#xA;&lt;p&gt;也许这会改变。也许创业公司越来越便宜意味着它们可以在任何地方生存，而不仅仅是最有利的环境中。也许37signals是未来的模式。但也许不是。从历史上看，总有某些城镇是特定行业的中心，如果你不在其中之一，你就处于劣势。所以我猜测37signals是一个异常。我们在这里看到的是一个比&amp;quot;Web 2.0&amp;quot;古老得多的模式。&lt;/p&gt;&#xA;&lt;p&gt;也许湾地区的人均创业公司比迈阿密多的原因仅仅是因为那里有更多的创始人类型的人。成功的创业公司几乎从来不是由一个人创办的。通常它们始于一次对话，其中有人提到某件事对一家公司来说是个好主意，他的朋友说，&amp;ldquo;是的，那是个好主意，让我们试试。&amp;ldquo;如果你缺少那个说&amp;quot;让我们试试&amp;quot;的第二个人，创业公司就不会发生。这是本科生有优势的另一个领域。他们周围有很多愿意这么说的人。在一所好大学里，你与许多其他有抱负和技术头脑的人聚集在一起——可能比你一生中任何时候都要集中。如果你的原子核释放出一个中子，它很可能会击中另一个原子核。&lt;/p&gt;&#xA;&lt;p&gt;人们在Y Combinator问我们的首要问题是：我在哪里可以找到联合创始人？这是30岁开始创业的人的最大问题。他们在学校时认识很多好的联合创始人，但到了30岁，他们要么失去了联系，要么这些人被他们不想离开的工作束缚住了。&lt;/p&gt;&#xA;&lt;p&gt;Viaweb在这方面也是个异常。虽然我们相对年长，但我们没有被令人印象深刻的工作束缚住。我当时试图成为一名艺术家，这不是很有约束力，而Robert虽然29岁，但由于1988年学术生涯中的小插曲，仍然在读研究生。所以可以说是Worm使Viaweb成为可能。否则Robert在那个年龄已经是初级教授了，他不会有时间和我一起疯狂的投机项目。&lt;/p&gt;&#xA;&lt;p&gt;人们问Y Combinator的大多数问题我们都有某种答案，但联合创始人问题没有。没有好的答案。联合创始人确实应该是你 already 认识的人。迄今为止，遇到他们的最佳地点是学校。你有大量聪明人样本；你可以比较他们在相同任务上的表现；每个人的生活都很流动。很多创业公司因此从学校发展而来。谷歌、雅虎和微软等都是由在学校认识的人创办的。（微软的情况是高中。）&lt;/p&gt;&#xA;&lt;p&gt;许多学生觉得他们应该等待并获得更多经验后再创办公司。如果其他条件都相等，他们应该。但其他条件并不像看起来那么相等。大多数学生没有意识到他们在创业公司最稀缺的成分，联合创始人方面多么富有。如果你等待太久，你可能会发现你的朋友现在 involved 在他们不想放弃的某个项目中。他们越优秀，这种情况越可能发生。&lt;/p&gt;&#xA;&lt;p&gt;缓解这个问题的一个方法可能是在你获得那些年经验的同时积极规划你的创业。当然，去工作或去读研究生或做任何事，但要定期聚会谋划，这样创业的想法在每个人的大脑中保持活跃。我不知道这是否有效，但尝试也无害。&lt;/p&gt;&#xA;&lt;p&gt;仅仅意识到你作为学生的优势就有帮助。你的一些同学可能会成为成功的创业公司创始人；在一所优秀的技术大学，这几乎是肯定的。那么是哪些人？如果我是你，我会寻找那些不仅聪明，而且无可救药的建设者。寻找那些不断开始项目，并且至少完成其中一些的人。这就是我们要寻找的。最重要的是，在学术资格甚至你申请的想法之上，我们寻找建造东西的人。&lt;/p&gt;&#xA;&lt;p&gt;联合创始人相遇的另一个地方是在工作中。比在学校少，但你可以做一些事情来提高几率。最重要的是，在有很多聪明年轻人的地方工作。另一个是为位于创业中心的公司工作。在创业公司到处都是的地方，更容易说服同事和你一起辞职。&lt;/p&gt;&#xA;&lt;p&gt;你可能还想看看你被雇用时签署的雇佣协议。大多数会说你在公司工作期间想到的任何想法都属于他们。在实践中，任何人很难证明你什么时候有什么想法，所以界限在代码上划定。如果你要创业，不要在仍然受雇时写任何代码。或者至少丢弃你在受雇期间写的任何代码，重新开始。并不是你的雇主会发现并起诉你。事情不会到那一步；投资者或收购者或（如果你如此幸运）承销商会首先找你麻烦。从t=0到你买游艇之间，会有人问你的代码是否合法属于其他人，你需要能够说不。[3]&lt;/p&gt;&#xA;&lt;p&gt;迄今为止我见过的最过分的雇佣协议是亚马逊的。除了通常关于拥有你想法的条款外，你还不能成为有另一位曾在亚马逊工作的创始人的创业公司的创始人——即使你不认识他们，甚至没有同时在那里工作。我怀疑他们会很难执行这个，但他们甚至尝试这是个坏迹象。还有很多其他地方可以工作；你不妨选择一个保留更多选择的地方。&lt;/p&gt;&#xA;&lt;p&gt;说到工作的好地方，当然有谷歌。但我注意到谷歌有些令人恐惧的地方：没有创业公司从那里出来。在这方面它是个黑洞。人们似乎太喜欢在谷歌工作而不愿离开。所以如果你希望有一天创办创业公司，迄今为止的证据表明你不应该在那里工作。&lt;/p&gt;&#xA;&lt;p&gt;我意识到这似乎是个奇怪的建议。如果他们让你的生活如此美好以至于你不想离开，为什么不在那里工作？因为，实际上，你可能得到了一个局部最大值。你需要一定的激活能量来创办创业公司。所以一个相当愉快的工作场所可能会诱使你无限期地停留，即使离开对你来说是有净收益的。[4]&lt;/p&gt;&#xA;&lt;p&gt;如果你想创业，最好的工作场所可能是一个创业公司。除了是合适的经验类型，不管怎样它会很快结束。你要么最终变得富有，那样问题解决了，或者创业公司被收购，那样在那里工作会变得糟糕，离开很容易，或者最可能的是，事情会失败，你又自由了。&lt;/p&gt;&#xA;&lt;p&gt;你最后的优势，无知，听起来不太有用。我故意用一个有争议的词来形容它；你也可以同样称之为天真。但它似乎是一种强大的力量。我的Y Combinator联合创始人Jessica Livingston即将出版一本采访创业公司创始人的书，我注意到其中有一个显著的模式。一个接一个的人说，如果他们知道会有多难，他们会太害怕而不敢开始。&lt;/p&gt;&#xA;&lt;p&gt;当它是其他愚蠢形式的天平砝码时，无知可能是有用的。在开始创业时有用，因为你比你意识到的更有能力。开始创业比你预期的难，但你也比你预期的更有能力，所以它们平衡了。&lt;/p&gt;&#xA;&lt;p&gt;大多数人看着像苹果这样的公司，会想，我怎么可能制造这样的东西？苹果是一个机构，而我只是一个人。但每个机构都曾经只是一小撮人在房间里决定开始某件事。机构是被创造出来的，由与你不同的人创造出来的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>将程序装在脑中</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/head/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/head/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/head.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;将程序装在脑中&#34;&gt;将程序装在脑中&lt;/h1&gt;&#xA;&lt;p&gt;2007年8月&lt;/p&gt;&#xA;&lt;p&gt;一个优秀的程序员密集地工作在他自己的代码上时，可以像数学家把持一个他在解决的问题那样把持它。数学家不像学校教的那样在纸上工作来回答问题。他们在脑子里做得更多：他们试图充分理解问题空间，能够像漫步在你成长房屋的记忆中那样漫步其中。在最佳状态下，编程也是如此。你把整个程序装在脑中，你可以随意操纵它。&lt;/p&gt;&#xA;&lt;p&gt;这在项目开始时特别有价值，因为最初最重要的是能够改变你正在做的事情。不仅仅是以不同的方式解决问题，而是改变你正在解决的问题。&lt;/p&gt;&#xA;&lt;p&gt;你的代码是你对你正在探索的问题的理解。所以只有当你把代码装在脑中时，你才真正理解这个问题。&lt;/p&gt;&#xA;&lt;p&gt;把程序装进脑中并不容易。如果你离开一个项目几个月，当你回到它时，可能需要几天才能真正再次理解它。即使你在积极地处理一个程序，每天开始工作时也需要半小时才能把它装进脑中。这是最好的情况。在典型办公条件下工作的普通程序员永远不会进入这种模式。或者更戏剧性地说，在典型办公条件下工作的普通程序员永远不会真正理解他们正在解决的问题。&lt;/p&gt;&#xA;&lt;p&gt;即使是最优秀的程序员并不总是把他们正在处理的整个程序都装在脑中。但你可以做一些事情来帮助：&lt;/p&gt;&#xA;&lt;h2 id=&#34;避免干扰&#34;&gt;避免干扰。&lt;/h2&gt;&#xA;&lt;p&gt;干扰对许多类型的工作都是有害的，但对编程尤其有害，因为程序员倾向于在他们能处理的细节极限上运作。&lt;/p&gt;&#xA;&lt;p&gt;干扰的危险不在于它持续多久，而在于它使你的大脑混乱的程度。程序员可以离开办公室去吃个三明治而不会失去脑中的代码。但错误的干扰可以在30秒内抹去你的大脑。&lt;/p&gt;&#xA;&lt;p&gt;奇怪的是，有计划的干扰可能比没有计划的干扰更糟。如果你知道一小时后有个会议，你甚至不会开始处理困难的事情。&lt;/p&gt;&#xA;&lt;h2 id=&#34;长时间工作&#34;&gt;长时间工作。&lt;/h2&gt;&#xA;&lt;p&gt;因为每次开始处理一个程序都有固定成本，所以在几个长时段中工作比在许多短时段中工作更有效率。当然，总会有一个点，因为你累了而变得愚蠢。这因人而异。我听说过人们连续36小时编程，但我能管理的最多只有18小时左右，而且我在不超过12小时的块中工作效果最好。&lt;/p&gt;&#xA;&lt;p&gt;最佳状态不是你身体能忍受的极限。分解项目既有优势也有成本。有时当你在休息后回到问题时，你会发现你的潜意识留下了答案等着你。&lt;/p&gt;&#xA;&lt;h2 id=&#34;使用简洁的语言&#34;&gt;使用简洁的语言。&lt;/h2&gt;&#xA;&lt;p&gt;更强大的编程语言使程序更短。程序员似乎至少部分地用他们用来编写程序的语言来思考程序。语言越简洁，程序越短，就越容易装进脑中并保持在那里。&lt;/p&gt;&#xA;&lt;p&gt;你可以通过使用一种称为自底向上编程的风格来增强强大语言的效果，在这种风格中，你编写多层程序，较低的层作为其上层的编程语言。如果你正确地这样做，你只需要把最顶层装在脑中。&lt;/p&gt;&#xA;&lt;h2 id=&#34;不断重写你的程序&#34;&gt;不断重写你的程序。&lt;/h2&gt;&#xA;&lt;p&gt;重写程序通常会得到更清晰的设计。但即使不会，它也有优势：你必须完全理解一个程序才能重写它，所以没有更好的方法把它装进脑中。&lt;/p&gt;&#xA;&lt;h2 id=&#34;写可重读的代码&#34;&gt;写可重读的代码。&lt;/h2&gt;&#xA;&lt;p&gt;所有程序员都知道写可读代码是好的。但你自己是最重要的读者。特别是在开始时；原型是与自己的对话。当为自己写作时，你有不同的优先事项。如果为别人写作，你可能不想让代码太密集。程序的某些部分可能最容易读，如果你把东西摊开，像一本入门教科书。而如果你写代码是为了让它容易重新装进脑中，最好追求简洁。&lt;/p&gt;&#xA;&lt;h2 id=&#34;小组工作&#34;&gt;小组工作。&lt;/h2&gt;&#xA;&lt;p&gt;当你在脑中操纵一个程序时，你的视野倾向于停在你拥有的代码边缘。其他部分你理解得不够好，更重要的是，不能随意处理。所以程序员数量越少，项目就能越完全地变异。如果只有一个程序员，通常开始时是这样，你可以做全面重新设计。&lt;/p&gt;&#xA;&lt;h2 id=&#34;不要让多个人编辑同一段代码&#34;&gt;不要让多个人编辑同一段代码。&lt;/h2&gt;&#xA;&lt;p&gt;你永远不会像理解自己的代码那样理解别人的代码。无论你多么彻底地读过它，你只是读了它，而不是写了它。所以如果一段代码由多个作者编写，他们中没有人像单个作者那样理解它。&lt;/p&gt;&#xA;&lt;p&gt;当然你不能安全地重新设计别人正在处理的东西。不仅仅是你必须请求许可。你甚至不让自己考虑这样的事情。重新设计有几个作者的代码就像改变法律；重新设计你独自控制的代码就像看到模糊图像的另一种解释。&lt;/p&gt;&#xA;&lt;p&gt;如果你想让几个人在一个项目上工作，把它分成组件，每个给一个人。&lt;/p&gt;&#xA;&lt;h2 id=&#34;从小开始&#34;&gt;从小开始。&lt;/h2&gt;&#xA;&lt;p&gt;随着你对程序越来越熟悉，它变得更容易装在脑中。一旦你确信你已经完全探索了某些部分，你就可以开始把它们当作黑盒处理。但当你开始处理一个项目时，你被迫看到一切。如果你开始的问题太大，你可能永远无法完全把握它。所以如果你需要写一个大的、复杂的程序，开始的最佳方式可能不是为它写规范，而是写一个解决子集问题的原型。无论计划有什么优势，它们往往被能够把程序装在脑中的优势所抵消。&lt;/p&gt;&#xA;&lt;p&gt;程序员们经常偶然做到这八点，这很引人注目。有人有了一个新项目的想法，但因为不是正式批准的，他必须在下班时间做——结果证明更有生产力，因为没有干扰。受到他对新项目的热情驱使，他连续工作许多小时。因为它最初只是一个实验，他使用的是&amp;quot;脚本&amp;quot;语言而不是&amp;quot;生产&amp;quot;语言——实际上它强大得多。他完全重写程序几次；这对正式项目是不合理的，但这是爱的劳动，他想要它完美。而且因为除了他没有人会看到它，他省略了除笔记类型外的任何注释。他被迫在小团队中工作，因为他要么还没有告诉任何人这个想法，要么它看起来如此无望以至于不允许其他人在其上工作。即使有一个团队，他们也不能让多个人编辑同一段代码，因为它变化太快，那是不可能的。项目从小开始是因为想法一开始很小；他只是有一些很酷的黑客技巧想试试。&lt;/p&gt;&#xA;&lt;p&gt;更引人注目的是有多少正式批准的项目设法把这八件事都做错了。事实上，如果你看看大多数组织中软件编写的方式，几乎就像他们在故意做错事情。在某种意义上，他们确实如此。自从有组织以来，其定义性品质之一就是把个人当作可互换的部件。这对更可并行化的任务很有效，比如打仗。在历史上大部分时间里，一支训练有素的专业士兵军队可以指望打败一群个人战士，无论多么勇敢。但拥有想法不是很可并行化的。而程序就是：想法。&lt;/p&gt;&#xA;&lt;p&gt;组织不喜欢依赖个人天才的想法不仅仅是真的，它是同义反复。不这样做是组织定义的一部分。至少是我们当前组织概念的一部分。&lt;/p&gt;&#xA;&lt;p&gt;也许我们可以定义一种新型的组织，结合个人的努力而不要求他们可互换。可以说市场就是这种形式的组织，尽管把市场描述为退化情况可能更准确——当组织不可能时默认得到的情况。&lt;/p&gt;&#xA;&lt;p&gt;可能我们能做到的最好的是某种hack，比如让一个组织的编程部分以不同于其他部分的方式工作。也许最佳解决方案是大公司甚至不尝试内部开发想法，而只是购买它们。但无论解决方案是什么，第一步是意识到存在问题。&amp;ldquo;软件公司&amp;quot;这个短语本身就有矛盾。这两个词在相反的方向上拉扯。任何大型组织中的优秀程序员都会与之冲突，因为组织的设计是为了防止程序员追求的目标。&lt;/p&gt;&#xA;&lt;p&gt;优秀的程序员无论如何都能完成很多事情。但这往往需要对雇佣他们的组织进行实际上反抗的行为。如果更多的人理解程序员的行为方式是由他们工作的需求驱动的，这可能会有所帮助。他们长时间工作，期间推掉所有其他义务，直接投入编程而不是先写规范，重写已经工作的代码，这不是因为他们不负责任。他们更喜欢独自工作，或者对探头说你好的人咆哮，这不是因为他们不友好。这个表面上随机的令人讨厌习惯集合有一个单一的解释：将程序装在脑中的力量。&lt;/p&gt;&#xA;&lt;p&gt;无论理解这一点是否能帮助大型组织，它肯定能帮助他们的竞争对手。大公司的最弱点是他们不让个别程序员做出伟大的工作。所以如果你是一个小创业公司，这是攻击他们的地方。接手那些必须在一个大脑中解决的问题。&lt;/p&gt;&#xA;&lt;p&gt;感谢Sam Altman、David Greenspan、Aaron Iba、Jessica Livingston、Robert Morris、Peter Norvig、Lisa Randall、Emmett Shear、Sergei Tsarev和Stephen Wolfram阅读本文的草稿。&lt;/p&gt;</description>
    </item>
    <item>
      <title>岛屿测试</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/island/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/island/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/island.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;岛屿测试&#34;&gt;岛屿测试&lt;/h1&gt;&#xA;&lt;p&gt;2006年7月&lt;/p&gt;&#xA;&lt;p&gt;我发现了一个方便的测试方法，可以弄清楚你对什么上瘾。想象你要在缅因州海岸外的一个小岛上朋友家度周末。岛上没有商店，你在那里期间不能离开。而且，你从未去过这个房子，所以不能假设它会比普通房子有更多的东西。&lt;/p&gt;&#xA;&lt;p&gt;除了衣物和洗漱用品，你会特意打包带什么东西？那就是你对什么上瘾。例如，如果你发现自己带了一瓶伏特加（以防万一），你可能想要停下来想一想。&lt;/p&gt;&#xA;&lt;p&gt;对我来说，这个清单是四样东西：书、耳塞、笔记本和笔。&lt;/p&gt;&#xA;&lt;p&gt;如果我想到的话，我可能会带其他东西，比如音乐或茶，但没有它们我也能生活。我对咖啡因没有那么上瘾，不至于仅仅一个周末就冒险让房子里没有茶。&lt;/p&gt;&#xA;&lt;p&gt;安静是另一回事。我意识到带耳塞去缅因州海岸外的小岛旅行似乎有点古怪。如果说任何地方应该是安静的，那就是那里。但如果隔壁房间的人打鼾怎么办？如果有孩子在打篮球怎么办？（砰、砰、砰&amp;hellip;砰。）为什么要冒险？耳塞很小。&lt;/p&gt;&#xA;&lt;p&gt;有时我可以在噪音中思考。如果我在某个项目上已经有了动力，我可以在嘈杂的地方工作。我可以在机场编辑文章或调试代码。但机场并没有那么糟糕：大部分噪音是白色的。我无法忍受的是墙那边传来情景喜剧的声音，或者街上汽车播放砰砰音乐。&lt;/p&gt;&#xA;&lt;p&gt;当然还有另一种思考，当你开始新事物时，需要完全安静。你永远不知道什么时候会需要这种思考。带着耳塞总是好的。&lt;/p&gt;&#xA;&lt;p&gt;笔记本和笔可以说是专业设备。虽然实际上它们有类似药物的东西，从某种意义上说，它们的主要目的是让我感觉更好。我几乎从来不回去读我在笔记本上写的东西。只是如果不能写下来，担心记住一个想法会妨碍产生下一个想法。笔和纸能引导想法。&lt;/p&gt;&#xA;&lt;p&gt;我发现最好的笔记本是一家叫做Miquelrius的公司制造的。我用他们的最小尺寸，大约2.5×4英寸。在这么窄的页面上写字的秘诀是只有当空间用完时才断词，像拉丁文铭文一样。我用最便宜的塑料Bic圆珠笔，部分原因是它们的粘性墨水不会渗透页面，部分原因是我不担心丢失它们。&lt;/p&gt;&#xA;&lt;p&gt;我大约三年前才开始带笔记本。在那之前我用我能找到的任何纸片。但纸片的问题是没有顺序。在笔记本里，你可以通过看周围的页面来猜测一个涂鸦是什么意思。在纸片时代，我不断发现几年前写的笔记，如果我能弄明白是什么意思，可能会说一些我需要记住的东西。&lt;/p&gt;&#xA;&lt;p&gt;至于书，我知道房子里可能会有东西可读。平均来说，我在旅行中带四本书，只读其中一本，因为我在途中找到新书可读。真的带书是保险。&lt;/p&gt;&#xA;&lt;p&gt;我意识到对书的依赖并不完全是好事——我需要它们是为了分散注意力。我在旅行中带的书往往很正当，那种可能在大学课程中被指定阅读的东西。但我知道我的动机并不正当。我带书是因为如果世界变得无聊，我需要能够潜入某个作家提炼的另一个世界。就像当你知道应该吃水果时吃果酱一样。&lt;/p&gt;&#xA;&lt;p&gt;在某个时候我会不带书。有一次我在一些陡峭的山里散步，决定如果无聊的话，我宁愿只是思考，也不愿携带任何不必要的重量。情况并不那么糟。我发现我可以通过有想法而不是读别人的东西来娱乐自己。如果你停止吃果酱，水果开始尝起来更好。&lt;/p&gt;&#xA;&lt;p&gt;所以也许我会在未来的某次旅行中尝试不带书。然而，他们将不得不从我冰冷的、死去的耳朵里撬出耳塞。&lt;/p&gt;&#xA;&lt;p&gt;西班牙语翻译 | 日语翻译&lt;/p&gt;</description>
    </item>
    <item>
      <title>布拉德利的幽灵</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/polls/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/polls/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/polls.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;布拉德利的幽灵&#34;&gt;布拉德利的幽灵&lt;/h1&gt;&#xA;&lt;p&gt;2004年11月&lt;/p&gt;&#xA;&lt;p&gt;很多人现在在写为什么克里失败了。这里我想探讨一个更具体的问题：为什么出口民调如此错误？&lt;/p&gt;&#xA;&lt;p&gt;在俄亥俄州，克里最终以49-51失败，出口民调却给了他52-48的胜利。这不仅仅是随机错误。在每个摇摆州，他们都高估了克里的选票。在佛罗里达州，布什最终以52-47获胜，出口民调预测势均力敌。&lt;/p&gt;&#xA;&lt;p&gt;（这些不是早期数字。它们来自东部时间大约午夜，俄亥俄州和佛罗里达州投票结束后很久。然而到第二天下午，网上的出口民调数字与实际结果相符。我能想象这种情况发生的唯一方式是，负责出口民调的人在看到实际结果后篡改了数据。但那是另一个问题。）&lt;/p&gt;&#xA;&lt;p&gt;发生了什么？问题的根源可能是布拉德利效应的一种变体。这个术语是在汤姆·布拉德利这位黑人洛杉矶市长尽管在民调中领先优势却在加州州长选举中失败后发明的。显然，选民害怕说他们计划投票反对他，以免他们的动机被（也许正确地）怀疑。&lt;/p&gt;&#xA;&lt;p&gt;今年出口民调可能发生了类似情况。理论上，出口民调应该非常准确。你不是在问人们会做什么。你在问他们刚刚做了什么。&lt;/p&gt;&#xA;&lt;p&gt;问这个怎么会出错？因为有些人不回应。为了获得真正随机的样本，民意调查员会说，询问离开投票场的每第20个人他们投票给了谁。但不是每个人都想回答。民意调查员不能简单地忽略那些不愿回答的人，否则他们的样本就不再随机了。所以他们所做的，显然是记下这个人的年龄、种族和性别，并据此猜测他们投票给了谁。&lt;/p&gt;&#xA;&lt;p&gt;只要人们投票给谁和他们是否愿意谈论之间没有相关性，这就有效。但今年可能有相关性。可能是相当多投票给布什的人不想这么说。&lt;/p&gt;&#xA;&lt;p&gt;为什么不？因为美国人的保守程度超过他们愿意承认的程度。这个国家精英的价值观，至少目前，是NPR价值观。普通人，正如我认为共和党和民主党都会同意的，在社会问题上更保守。虽然有些人公开炫耀他们不分享精英意见的事实，但其他人对此感到有点紧张，好像他们有不良餐桌礼仪。&lt;/p&gt;&#xA;&lt;p&gt;例如，根据当前的NPR价值观，你不能说任何可能被视为对同性恋者贬损的话。这样做就是&amp;quot;恐同&amp;quot;。然而，大量美国人深信宗教，而圣经在同性恋问题上相当明确。他们该怎么办？我认为许多人做的是保留他们的意见，但只保留在自己心里。&lt;/p&gt;&#xA;&lt;p&gt;他们知道自己相信什么，但他们也知道他们应该相信什么。所以当一个陌生人（例如，民意调查员）询问他们对同性婚姻等事情的意见时，他们不会总是说出他们真正想的。&lt;/p&gt;&#xA;&lt;p&gt;当精英的价值观是自由派时，民意调查倾向于低估普通选民的保守程度。这似乎是解释为什么今年出口民调如此错误的主要理论。NPR价值观说应该投票给克里。所以所有投票给克里的人都觉得这样做是道德的，并急于告诉民意调查员他们这样做了。没有人投票给克里是作为一种安静的反抗行为。&lt;/p&gt;&#xA;&lt;p&gt;支持女性总统&lt;/p&gt;&#xA;&lt;p&gt;日语翻译&lt;/p&gt;&#xA;&lt;p&gt;如果你喜欢这个，你可能也喜欢黑客与画家。&lt;/p&gt;</description>
    </item>
    <item>
      <title>废除死刑的真正原因</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/real/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/real/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/real.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;废除死刑的真正原因&#34;&gt;废除死刑的真正原因&lt;/h1&gt;&#xA;&lt;p&gt;2021年4月&lt;/p&gt;&#xA;&lt;p&gt;当知识分子谈论死刑时，他们谈论的是国家是否可以夺取某人生命，死刑是否起到威慑作用，以及某些群体是否被判处更多死刑等问题。但实际上，关于死刑的辩论不是关于杀死杀人犯是否可以。这是关于杀死无辜者是否可以，因为至少有4%的死囚是无辜的。&lt;/p&gt;&#xA;&lt;p&gt;当我还是个孩子时，我想象人们被冤枉定罪是罕见的，特别是在谋杀案中这一定非常罕见。事实远非如此。现在，感谢像&amp;quot;无辜项目&amp;quot;这样的组织，我们看到不断有关于谋杀定罪在新证据出现后被推翻的故事。有时警察和检察官只是非常草率。有时他们是不诚实的，完全知道他们在冤枉一个无辜的人。&lt;/p&gt;&#xA;&lt;p&gt;肯尼斯·亚当斯和其他三名男子因谋杀定罪在监狱中度过了18年。他们在DNA检测牵涉到三个不同的男人后被昭雪，其中两人后来供认。警察在调查初期就被告知了其他人的情况，但从未跟进这个线索。&lt;/p&gt;&#xA;&lt;p&gt;基思·哈沃德因谋杀定罪在监狱中度过了33年。他被定罪是因为&amp;quot;专家&amp;quot;说他的牙齿与一名受害者身上的咬痕照片相匹配。DNA检测显示谋杀是由另一个名叫杰里·克罗蒂的男人所为后，他被昭雪。&lt;/p&gt;&#xA;&lt;p&gt;里基·杰克逊和另外两名男子因一名12岁男孩的证词被定罪谋杀，在监狱中度过了39年，该男孩后来翻供说受到警察胁迫。多人证实男孩当时在其他地方。在县检察官撤销指控后，三名男子被昭雪，称&amp;quot;国家正在承认明显的事实。&amp;quot;&lt;/p&gt;&#xA;&lt;p&gt;阿尔弗雷德·布朗因谋杀定罪在监狱中度过了12年，其中包括10年在死囚牢房。当发现助理地区检察官隐瞒了证明他不可能犯罪的电话记录后，他被昭雪。&lt;/p&gt;&#xA;&lt;p&gt;格伦·福特在因谋杀定罪后在死囚牢房度过了29年。新证据证明谋杀发生时他甚至不在现场后，他被昭雪。被指派代表他的律师从未尝试过陪审团案件。&lt;/p&gt;&#xA;&lt;p&gt;卡梅伦·威灵厄姆实际上在2004年被注射死刑处决。作证说他故意纵火的&amp;quot;专家&amp;quot;后来被揭穿。德克萨斯州2009年下令重新审查此案后得出结论&amp;quot;无法维持纵火认定。&amp;quot;&lt;/p&gt;&#xA;&lt;p&gt;里奇·格洛西普因实际杀人犯的证词被定罪谋杀，在死囚牢房度过了20年，实际杀人犯为了指控他而逃脱了无期徒刑。2015年，他在即将被处决前几分钟，发现俄克拉荷马州一直计划用非法药物组合杀死他。尽管有证明他无罪的新证据，他们仍计划继续执行处决，可能在今年夏天。&lt;/p&gt;&#xA;&lt;p&gt;我可以继续列举。有数百个类似的案例。仅在佛罗里达州，迄今为止就有29名死囚被昭雪。&lt;/p&gt;&#xA;&lt;p&gt;远非罕见，错误的谋杀定罪非常普遍。警察面临解决引起广泛关注的犯罪的压力。当他们找到嫌疑人时，他们想要相信他有罪，并忽视甚至破坏证明相反的证据。地区检察官希望被视为有效和严厉打击犯罪，为了赢得定罪愿意操纵证人和隐瞒证据。法院指定的辩护律师工作过度且往往无能。有一大批愿意提供虚假证词以换取较轻刑罚的罪犯，容易被影响的证人可以被警察要求说任何话，以及渴望声称科学证明被告有罪的虚假&amp;quot;专家&amp;quot;。而陪审团想要相信他们，否则一些可怕的犯罪仍然未解决。&lt;/p&gt;&#xA;&lt;p&gt;这种无能和不诚实的马戏团是死刑的真正问题。我们甚至还没有到达关于死刑的道德合理性或有效性的理论问题开始重要的地步，因为这么多被判处死刑的人实际上是无辜的。无论理论上的意义是什么，在实践中，死刑意味着杀死无辜的人。&lt;/p&gt;&#xA;&lt;p&gt;感谢特雷弗·布莱克威尔、杰西卡·利文斯顿和唐·奈特阅读本文草稿。&lt;/p&gt;&#xA;&lt;h2 id=&#34;相关&#34;&gt;相关&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;佛罗里达会杀死一个无辜的人吗？&lt;/li&gt;&#xA;&lt;li&gt;凯文·库珀被陷害谋杀了吗？&lt;/li&gt;&#xA;&lt;li&gt;德克萨斯处决了一个无辜的人吗？&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>异端</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/heresy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/heresy/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/heresy.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;异端&#34;&gt;异端&lt;/h1&gt;&#xA;&lt;p&gt;2022年4月&lt;/p&gt;&#xA;&lt;p&gt;我一生中目睹的最令人惊讶的事情之一是异端概念的重生。&lt;/p&gt;&#xA;&lt;p&gt;理查德·韦斯特福尔在他关于牛顿的优秀传记中写道，当他被选为三一学院研究员时：&amp;ldquo;舒适地得到支持，牛顿可以完全投身于他选择的任何事物。为了留下来，他只需要避免三个不可饶恕的罪：犯罪、异端和婚姻。&amp;rdquo; [1] 我第一次读到这句话是在1990年代，听起来有趣地中世纪。避免犯异端，多么奇怪。但当我20年后重读时，它听起来像是对当代就业的描述。&lt;/p&gt;&#xA;&lt;p&gt;你可以因为发表越来越多的意见而被解雇。那些解雇你的人不用&amp;quot;异端&amp;quot;这个词来描述它们，但在结构上它们是等价的。结构上，异端有两个鲜明的特征：（1）它优先于真假问题，（2）它压倒发言人所做的一切其他事情。&lt;/p&gt;&#xA;&lt;p&gt;例如，当有人称一个陈述为&amp;quot;x主义&amp;quot;时，他们也隐含地说这是讨论的结束。他们说了这个之后，并不会继续考虑这个陈述是否真实。使用这种标签在对话上相当于发出异常信号。这是它们被使用的原因之一：结束讨论。&lt;/p&gt;&#xA;&lt;p&gt;如果你发现自己和一个经常使用这些标签的人交谈，可能值得明确问他们是否相信任何婴儿都被连同洗澡水一起扔掉了。一个陈述可能是x主义（无论x是什么值），同时也真实吗？如果答案是肯定的，那么他们承认禁止真相。这足够明显，我猜大多数人会回答否。但如果他们回答否，很容易表明他们错了，实际上这种标签被应用于陈述，无论其真假。&lt;/p&gt;&#xA;&lt;p&gt;这最清楚的证据是，一个陈述是否被认为是x主义往往取决于谁说的。真理不是那样运作的。同一个陈述不可能当一个人说时是真实的，但当另一个人说时是x主义，因此是虚假的。[2]&lt;/p&gt;&#xA;&lt;p&gt;异端与普通意见相比的另一个鲜明特征是，它们的公开表达压倒发言人所做的一切其他事情。在普通事情上，比如历史知识或音乐品味，你根据你意见的平均值来评判。异端在质上不同。就像把一块铀掉到天平上。&lt;/p&gt;&#xA;&lt;p&gt;在过去（现在在某些地方仍然），对异端的惩罚是死亡。你可能过着模范善行的生活，但如果你公开质疑，比如说，基督的神性，你将被烧死。如今，在文明国家，异端只是在比喻意义上被解雇，通过失去工作。但情况的结构是相同的：异端压倒一切。你可能花了过去十年拯救儿童的生命，但如果你表达某些意见，你会自动被解雇。&lt;/p&gt;&#xA;&lt;p&gt;这很像你犯了罪。无论你生活多么有美德，如果你犯了罪，你仍然必须承受法律的惩罚。以前过着无可指责的生活可能会减轻惩罚，但不影响你有罪还是无罪。&lt;/p&gt;&#xA;&lt;p&gt;异端是一种意见，其表达被视为犯罪——一种使某些人感觉不仅是你错了，而且你应该受到惩罚的意见。确实，他们看到你受惩罚的愿望往往比你犯了实际罪行时更强烈。极左的许多人强烈相信重罪犯的重新融入（我自己也相信），但却似乎觉得任何犯有某些异端罪的人永远不应该再工作。&lt;/p&gt;&#xA;&lt;p&gt;总会有一些异端——一些你会因表达而受惩罚的意见。但现在比几十年前多得多，即使是那些对此感到高兴的人也不得不承认确实如此。&lt;/p&gt;&#xA;&lt;p&gt;为什么？为什么这个听起来古老过时的宗教概念以世俗形式回归？为什么是现在？&lt;/p&gt;&#xA;&lt;p&gt;你需要两种成分来制造一波不宽容：不宽容的人，以及指导他们的意识形态。不宽容的人总是在那里。它们存在于每个足够大的社会中。这就是为什么不宽容的浪潮会如此突然地出现；它们只需要一些东西来引发它们。&lt;/p&gt;&#xA;&lt;p&gt;我已经写过一篇描述激进传统思维者的文章。简短版本是，人们可以根据（1）他们是独立思维还是传统思维，以及（2）他们对这有多激进来在两个维度上分类。激进传统思维者是正统的执行者。&lt;/p&gt;&#xA;&lt;p&gt;通常他们只在局部可见。他们是一个群体中脾气暴躁、爱挑剔的人——每当有东西违反当前礼仪规则时，他们总是第一个抱怨。但偶尔，就像矢量场元素变得对齐一样，大量激进传统思维者一下子团结在某种意识形态后面。然后他们成为更大的问题，因为暴民动态接管了，每个参与者的热情被其他人的热情增加。&lt;/p&gt;&#xA;&lt;p&gt;20世纪最臭名昭著的案例可能是文化大革命。虽然由毛泽东发起以破坏他的对手，但文化大革命其他方面主要是基层现象。毛泽东本质上说：我们中间有异端。找出他们并惩罚他们。而这就是激进传统思维者需要听到的全部。他们以狗追松鼠的喜悦进行这件事。&lt;/p&gt;&#xA;&lt;p&gt;要团结传统思维者，意识形态必须具有宗教的许多特征。特别是它必须有严格和任意的规则，信徒可以通过遵守来证明他们的纯洁，其信徒必须相信遵守这些规则的人事实上比不遵守的人在道德上优越。[3]&lt;/p&gt;&#xA;&lt;p&gt;1980年代末，这种类型的新意识形态出现在美国大学。它有非常强烈的道德纯洁成分，激进传统思维者以他们通常的渴望抓住它——更是因为前几十年社会规范的放松意味着可禁止的东西越来越少。结果的不宽容浪潮在形式上与文化大革命惊人地相似，虽然幸好规模小得多。[4]&lt;/p&gt;&#xA;&lt;p&gt;我在这里故意避免提及任何具体的异端。部分原因是异端猎人的普遍策略之一，现在和过去一样，是指责那些不赞成他们压制思想方式的人本身就是异端。确实，这种策略如此一致，你可以用它作为在任何时代检测巫师迫害的方法。&lt;/p&gt;&#xA;&lt;p&gt;这是我避免提及任何具体异端的第二个原因。我希望这篇文章在未来而不仅仅是现在有效。不幸的是，它可能会。激进传统思维者将永远在我们中间，寻找要禁止的东西。他们需要的只是一个意识形态来告诉他们是什么。而当前的不太可能是最后一个。&lt;/p&gt;&#xA;&lt;p&gt;左右都有激进传统思维者。当前不宽容浪潮来自左派的原因很简单，因为新的统一意识形态碰巧来自左派。下一个可能来自右派。想象那会是什么样子。&lt;/p&gt;&#xA;&lt;p&gt;幸运的是，在西方国家，对异端的压制远不如过去那样糟糕。虽然过去十年你可以公开表达的意见窗口变窄了，但它仍然比几百年前宽得多。问题是导数。直到大约1985年，窗口一直在变得越来越宽。1985年任何展望未来的人都会期望言论自由继续增加。相反，它减少了。[5]&lt;/p&gt;&#xA;&lt;p&gt;这种情况类似于麻疹等传染病发生的情况。2010年任何展望未来的人都会期望美国的麻疹病例数量继续减少。相反，由于反疫苗者，它增加了。绝对数量仍然不是那么高。问题是导数。[6]&lt;/p&gt;&#xA;&lt;p&gt;在这两种情况下，很难知道要担心多少。如果少数极端分子拒绝给孩子接种疫苗，或者在大学上喊倒发言人，这对整个社会真的危险吗？开始担心的点大概是当他们的努力开始蔓延到其他人的生活时。在这两种情况下，这似乎确实正在发生。&lt;/p&gt;&#xA;&lt;p&gt;所以可能值得花费一些努力来抵制以保持言论自由窗口的开放。我希望这篇文章不仅有助于形成对抗当前压制思想努力的社会抗体，而且有助于对抗异端概念本身。这才是真正的奖品。你如何禁用异端概念？自从启蒙运动以来，西方社会发现了许多技术来做到这一点，但肯定还有更多有待发现。&lt;/p&gt;&#xA;&lt;p&gt;总的来说我乐观。虽然过去十年言论自由的趋势不好，但在更长期上它是好的。而且有迹象表明当前的不宽容浪潮正在达到顶峰。我交谈的独立思维者似乎比几年前更有信心。另一方面，即使是一些领导者也开始怀疑事情是否走得太远。年轻人中的流行文化已经向前发展。我们要做的就是继续抵制，浪潮就崩溃了。然后我们将净胜出，因为不仅击败了这波浪潮，我们还开发了抵抗下一波浪潮的新战术。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 或者更准确地说，是牛顿的传记，因为韦斯特福尔写了两本：一本长的叫《永不休息》，一本短的叫《艾萨克·牛顿的一生》。两本都很棒。短版本进展更快，但长本充满了有趣且经常非常有趣的细节。这段话在两本中相同。&lt;/p&gt;&#xA;&lt;p&gt;[2] 另一个更微妙但同样有决定性的证据是，x主义的声称从来没有被限定。你从未听任何人说一个陈述&amp;quot;可能是x主义&amp;quot;或&amp;quot;几乎肯定是y主义&amp;quot;。如果x主义的声称实际上是关于真理的声称，你会期望看到&amp;quot;可能&amp;quot;出现在&amp;quot;x主义&amp;quot;前面，就像你看到它出现在&amp;quot;谬误&amp;quot;前面一样频繁。&lt;/p&gt;&#xA;&lt;p&gt;[3] 规则必须严格，但不需要要求高。所以最有效的规则类型是关于表面事务的，比如教义细节，或者信徒必须使用的确切词语。这种规则可以变得极其复杂，却不通过要求重大牺牲而排斥潜在皈依者。&lt;/p&gt;&#xA;&lt;p&gt;正统的表面要求使其成为美德的廉价替代品。而这反过来又是正统对坏人如此有吸引力的原因之一。你可能是一个可怕的人，但只要你正统，你就比任何不正统的人都好。&lt;/p&gt;&#xA;&lt;p&gt;[4] 可以说有两波。第一波到2000年已经有所减弱，但随后在2010年代跟着第二波，可能是由社交媒体引起的。&lt;/p&gt;&#xA;&lt;p&gt;[5] 幸运的是，今天大多数试图压制思想的人仍然足够尊重启蒙原则，对其口头上说说而已。他们知道不应该禁止思想本身，所以他们必须将思想重新描述为造成&amp;quot;伤害&amp;quot;，这听起来像是可以禁止的东西。更极端的人试图声称言论本身就是暴力，甚至沉默也是。但听起来可能很奇怪，这种翻腾是个好迹象。当我们真的陷入麻烦时，他们会停止费心发明禁止思想的借口——当他们像中世纪教会那样说&amp;quot;对，我们在禁止思想，事实上这是它们的清单&amp;quot;时。&lt;/p&gt;&#xA;&lt;p&gt;[6] 人们只有因为疫苗工作得如此之好，才有忽视医学界关于疫苗共识的奢侈。如果我们根本没有疫苗，死亡率会如此之高，以至于大多数当前的反疫苗者会乞求它们。而言论自由的情况类似。正是因为他们生活在启蒙运动创造的世界里，郊区的孩子们才能玩禁止思想的游戏。&lt;/p&gt;&#xA;&lt;p&gt;感谢Marc Andreessen、Chris Best、Trevor Blackwell、Nicholas Christakis、Daniel Gackle、Jonathan Haidt、Claire Lehmann、Jessica Livingston、Greg Lukianoff、Robert Morris和Garry Tan阅读本文的草稿。&lt;/p&gt;</description>
    </item>
    <item>
      <title>微软已死</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/microsoft/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/microsoft/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/microsoft.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;微软已死&#34;&gt;微软已死&lt;/h1&gt;&#xA;&lt;p&gt;2007年4月&lt;/p&gt;&#xA;&lt;p&gt;几天前我突然意识到微软已经死了。我正在和一个年轻的创业公司创始人谈论谷歌与雅虎的不同。我说雅虎从一开始就被对微软的恐惧所扭曲。这就是为什么他们将自己定位为&amp;quot;媒体公司&amp;quot;而不是&amp;quot;技术公司&amp;quot;。然后我看着他的脸，意识到他并不理解。这就像我告诉他80年代中期女孩们多么喜欢巴里·马尼洛一样。巴里谁？微软？他什么也没说，但我能看出他不相信有人会害怕他们。&lt;/p&gt;&#xA;&lt;p&gt;从80年代末开始，微软在软件界投下阴影将近20年。我能记得在他们之前是IBM。我大多忽略了这阴影。我从不使用微软软件，所以它只间接影响我——例如，我从僵尸网络收到的垃圾邮件。因为我没有注意，所以我没有注意到阴影何时消失。&lt;/p&gt;&#xA;&lt;p&gt;但现在它已经消失了。我能感觉到。再也没有人害怕微软了。他们仍然赚很多钱——IBM也是如此。但他们并不危险。&lt;/p&gt;&#xA;&lt;p&gt;微软什么时候死的，死于什么？我知道他们在2001年时似乎还很危险，因为我当时写了一篇论文，说他们没有看起来那么危险。我猜他们在2005年就死了。我知道当我们创办Y Combinator时，我们并不担心微软会与我们资助的创业公司竞争。事实上，我们甚至从未邀请他们参加我们为创业公司向投资者展示而组织的演示日。我们邀请雅虎、谷歌和其他一些互联网公司，但我们从未费心邀请微软。那里也从未有人给我们发过邮件。他们在不同的世界。&lt;/p&gt;&#xA;&lt;p&gt;是什么杀死了他们？我认为是四件事，都发生在2000年代中期。&lt;/p&gt;&#xA;&lt;p&gt;最明显的是谷歌。镇上只能有一个大佬，而他们显然就是。谷歌现在是迄今为止最危险的公司，无论从好的还是坏的意义上来说。微软最多只能 afterward 蹒跚而行。&lt;/p&gt;&#xA;&lt;p&gt;谷歌什么时候领先？人们会倾向于将其推回到2004年8月的IPO，但那时他们并没有设定辩论的条款。我认为他们在2005年领先。Gmail是让他们越过边缘的事情之一。Gmail表明他们能做的不仅仅是搜索。&lt;/p&gt;&#xA;&lt;p&gt;Gmail还展示了如果你利用后来被称为&amp;quot;Ajax&amp;quot;的技术，基于网络的软件能做多少事情。这是微软死亡的第二个原因：每个人都能看到桌面已经结束。现在应用程序似乎不可避免地会在网络上生存——不仅仅是电子邮件，而是一切，直到Photoshop。甚至微软现在也看到了这一点。&lt;/p&gt;&#xA;&lt;p&gt;具有讽刺意味的是，微软无意中帮助创造了Ajax。Ajax中的x来自XMLHttpRequest对象，它让浏览器在显示页面的同时在后台与服务器通信。（最初与服务器通信的唯一方式是请求新页面。）XMLHttpRequest是微软在90年代末创建的，因为他们需要它用于Outlook。他们没有意识到的是，它对很多其他人也有用——事实上，对任何想要让网络应用程序像桌面应用程序一样工作的人都有用。&lt;/p&gt;&#xA;&lt;p&gt;Ajax的另一个关键组件是Javascript，这种在浏览器中运行的编程语言。微软看到了Javascript的危险，并试图尽可能长时间地保持其损坏。[1] 但最终开源世界赢了，通过产生Javascript库，这些库就像树长在铁丝网上一样，覆盖了浏览器的缺陷。&lt;/p&gt;&#xA;&lt;p&gt;微软死亡的第三个原因是宽带互联网。现在任何关心的人都可以拥有快速的网络接入。连接到服务器的管道越大，你对桌面的需求就越少。&lt;/p&gt;&#xA;&lt;p&gt;棺材上的最后一颗钉子来自苹果。感谢OS X，苹果以在技术界极为罕见的方式死而复生。[2] 他们的胜利如此彻底，以至于当我遇到运行Windows的计算机时，我现在感到惊讶。我们在Y Combinator资助的几乎所有人都使用苹果笔记本电脑。在创业学校的观众中也是如此。现在所有计算机人员都使用Mac或Linux。Windows是给祖母用的，就像90年代的Mac一样。所以不仅桌面不再重要，关心计算机的人也没有人使用微软的了。&lt;/p&gt;&#xA;&lt;p&gt;当然，苹果在音乐方面也让微软节节败退，电视和手机也在路上。&lt;/p&gt;&#xA;&lt;p&gt;我很高兴微软死了。他们像尼禄或康茂德——邪恶得只有继承的权力才能让你如此。因为记住，微软的垄断不是从微软开始的。他们是从IBM那里得到的。软件业务从大约1950年代中期到大约2005年一直被垄断所笼罩。也就是说，几乎它的整个存在时间。&amp;ldquo;Web 2.0&amp;quot;之所以如此兴高采烈，原因之一就是这种感觉，无论是有意识还是无意识的，这个垄断时代可能终于结束了。&lt;/p&gt;&#xA;&lt;p&gt;当然，作为一个黑客，我禁不住思考如何修复一些损坏的东西。微软有什么方法可以东山再起吗？原则上，是的。要看看如何做到，想象两件事：（a）微软现在手头的现金量，以及（b）拉里和谢尔盖十年前在所有搜索引擎中奔波，试图以100万美元出售谷歌的想法，但被每个人拒绝。&lt;/p&gt;&#xA;&lt;p&gt;令人惊讶的事实是，按照像微软这样富有的公司的标准， brilliant hackers——危险地brilliant的hackers——可以非常便宜地得到。他们再也无法雇佣聪明的人了，但他们可以购买他们想要的数量，只需多一个数量级的钱。所以如果他们想再次成为竞争者，他们可以这样做：购买所有好的&amp;quot;Web 2.0&amp;quot;创业公司。他们可以用比必须为Facebook支付的少的钱获得几乎所有这些公司。把它们都放在硅谷的一栋楼里，用铅屏蔽包围它们，保护它们不受雷德蒙德的任何接触。我建议这个很安全，因为他们永远不会这样做。微软最大的弱点是他们仍然没有意识到他们有多么糟糕。他们仍然认为他们可以在内部编写软件。也许他们可以，按照桌面世界的标准。但那个世界几年前就结束了。&lt;/p&gt;&#xA;&lt;p&gt;我已经知道人们对这篇论文的反应会是什么。一半的读者会说微软仍然是一家利润极其丰厚的公司，我应该更小心，不要基于我们与世隔绝的&amp;quot;Web 2.0&amp;quot;小泡泡中少数人的想法得出结论。另一半，年轻的一半，会抱怨这是旧闻。&lt;/p&gt;&#xA;&lt;p&gt;另见：微软已死：Cliffs Notes&lt;/p&gt;&#xA;&lt;p&gt;注释&lt;/p&gt;&#xA;&lt;p&gt;[1] 制作不兼容的软件不需要有意识的努力。你所要做的就是不太努力地修复错误——如果你是一家大公司，你会产生大量的错误。这种情况类似于&amp;quot;文学理论家&amp;quot;的写作。大多数人不试图晦涩；他们只是不努力做到清晰。这不会带来回报。&lt;/p&gt;&#xA;&lt;p&gt;[2] 部分原因是史蒂夫·乔布斯被约翰·斯卡利推走，这在技术公司中是罕见的。如果苹果的董事会没有犯那个错误，他们就不必反弹。&lt;/p&gt;&#xA;&lt;p&gt;葡萄牙语翻译&lt;/p&gt;&#xA;&lt;p&gt;简体中文翻译&lt;/p&gt;&#xA;&lt;p&gt;韩语翻译&lt;/p&gt;</description>
    </item>
    <item>
      <title>成瘾性</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/addiction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/addiction/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/addiction.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;成瘾性&#34;&gt;成瘾性&lt;/h1&gt;&#xA;&lt;p&gt;成瘾性的加速 2010年7月&lt;/p&gt;&#xA;&lt;p&gt;烈酒、香烟、海洛因和可卡因的共同点是，它们都是成瘾性较低的前身物质的更浓缩形式。我们描述为成瘾性的大多数（如果不是全部）事物都是如此。可怕的是，创造它们的过程正在加速。&lt;/p&gt;&#xA;&lt;p&gt;我们不想阻止它。这是治愈疾病的同一过程：技术进步。技术进步意味着让事物做更多我们想要的事情。当我们想要的事物是我们想要想要的事物时，我们认为技术进步是好的。如果某种新技术使太阳能电池的效率提高x%，那似乎绝对是更好的。当进步浓缩了我们不想要想要的东西——当它将鸦片变成海洛因时——它似乎变坏了。但这是同一过程在起作用。&lt;/p&gt;&#xA;&lt;p&gt;没有人怀疑这个过程正在加速，这意味着越来越多我们喜欢的事物将被变成我们过于喜欢的事物。&lt;/p&gt;&#xA;&lt;p&gt;据我所知，没有词来形容我们过于喜欢的事物。最接近的是&amp;quot;addictive&amp;quot;（成瘾的）的口语意义。在我的一生中，这种用法变得越来越普遍。原因很清楚：我们需要它的事物越来越多。在极端的一端是可卡因和冰毒。食物通过工厂化农业和食品加工创新的结合，变成了具有更直接冲击力的东西，你可以在美国的任何城镇看到结果。跳棋和纸牌已经被《魔兽世界》和《FarmVille》取代。电视变得更加引人入胜，即便如此，它也无法与Facebook竞争。&lt;/p&gt;&#xA;&lt;p&gt;现在的世界比40年前更容易让人上瘾。除非产生这些事物的技术进步形式受到与技术进步一般不同的法律约束，否则在未来40年里，世界将比过去40年变得更加容易让人上瘾。&lt;/p&gt;&#xA;&lt;p&gt;未来40年将给我们带来一些美妙的事物。我并不是暗示它们都应该被避免。酒精是一种危险的药物，但我宁愿生活在一个有葡萄酒的世界，而不是没有葡萄酒的世界。大多数人可以与酒精共存；但你必须小心。更多我们喜欢的事物将意味着更多我们必须小心的事物。&lt;/p&gt;&#xA;&lt;p&gt;不幸的是，大多数人都不会。这意味着随着世界变得更加容易让人上瘾，一个人可以过正常生活的两种意义将被进一步分开。&amp;ldquo;正常&amp;quot;的一种意义是统计上的正常：其他人都做的事情。另一种意义是当我们谈论机械的正常运行范围时的意义：效果最好的。&lt;/p&gt;&#xA;&lt;p&gt;这两种意义已经相距甚远。现在，任何试图好好生活的人在美国大部分地区都会显得异常节欲。这种现象只会变得更加明显。从现在开始，你可以把它作为一个经验法则：如果人们不认为你很奇怪，那么你生活得很糟糕。&lt;/p&gt;&#xA;&lt;p&gt;社会最终会对新的成瘾事物产生抗体。我在香烟身上看到了这种情况的发生。当香烟首次出现时，它们的传播方式就像传染病在以前隔离的人群中传播一样。吸烟迅速成为一种（统计上的）正常事物。到处都有烟灰缸。我还是孩子的时候，我们家里有烟灰缸，尽管我父母都不吸烟。你必须为客人准备。&lt;/p&gt;&#xA;&lt;p&gt;随着关于吸烟危险的知识传播，习俗改变了。在过去20年里，吸烟已经从看起来完全正常的事物变成了一种相当肮脏的习惯：从电影明星在宣传照中做的事情，变成了成瘾者小团体在办公楼门外做的事情。当然，很多变化是由于立法，但如果习俗没有改变，立法也不可能发生。&lt;/p&gt;&#xA;&lt;p&gt;然而，这花了一段时间——大约100年。除非社会抗体的进化速度能够加快，以匹配技术进步抛弃新的成瘾事物的加速速度，否则我们将越来越无法依赖习俗来保护我们。&lt;/p&gt;&#xA;&lt;p&gt;除非我们想成为每种新成瘾的煤矿中的金丝雀——那些悲惨的例子成为未来一代人教训的人——否则我们将必须自己弄清楚要避免什么以及如何避免。怀疑一切新事物实际上将成为一个合理的策略（或更合理的策略）。&lt;/p&gt;&#xA;&lt;p&gt;事实上，即使那样也不够。我们不仅要担心新事物，还要担心现有事物变得更加容易让人上瘾。这就是咬到我的东西。我避免了大多数成瘾，但互联网让我上瘾了，因为在我使用它的过程中它变得让人上瘾了。&lt;/p&gt;&#xA;&lt;p&gt;我认识的大多数人都有互联网成瘾问题。我们都在努力找出自己摆脱它的习俗。这就是为什么我没有iPhone的原因；我最不想要的就是互联网跟随我进入世界。&lt;/p&gt;&#xA;&lt;p&gt;我最新的技巧是长途徒步旅行。我曾经认为跑步比徒步是更好的锻炼形式，因为它花的时间更少。现在徒步旅行的缓慢性似乎成了一个优势，因为我在小径上花的时间越长，我有不受干扰的思考时间就越长。&lt;/p&gt;&#xA;&lt;p&gt;听起来很古怪，不是吗？当你试图解决没有习俗指导的问题时，总是会这样。也许我不能诉诸奥卡姆剃刀；也许我只是古怪。但如果我对成瘾性加速的看法是正确的，那么这种孤独的挣扎来避免它的方式将 increasingly 成为任何想要完成任务的人的命运。我们将越来越多地被我们说不的事情所定义。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 你能将技术进步限制在你想要的领域吗？只能在有限范围内，而不成为警察国家。即使那样，你的限制也会产生不良副作用。&amp;ldquo;好&amp;quot;和&amp;quot;坏&amp;quot;的技术进步没有明显区分，所以你会发现你不能在不减缓前者的同时减缓后者。而且，无论如何，正如禁酒令和&amp;quot;毒品战争&amp;quot;所显示的，禁令往往弊大于利。&lt;/p&gt;&#xA;&lt;p&gt;[2] 技术一直在加速。按照旧石器时代的标准，技术在新石器时代以惊人的速度发展。&lt;/p&gt;&#xA;&lt;p&gt;[3] 除非我们大规模生产社会习俗。我怀疑最近美国福音派基督教的复兴部分是对毒品的反应。在绝望中，人们伸手拿大锤；如果他们的孩子不听他们的话，也许他们会听上帝的。但那种解决方案比让孩子对毒品说不有更广泛的后果。你最终也对科学说不。我担心我们可能正在走向一个未来，只有少数人自己规划穿越禁区的行程，而其他人预订包价旅行。或者更糟的是，由政府为他们预订。&lt;/p&gt;&#xA;&lt;p&gt;[4] 人们通常用&amp;quot;拖延&amp;quot;这个词来描述他们在互联网上做什么。在我看来，将正在发生的事情仅仅描述为不工作太温和了。当有人喝醉而不是工作时，我们不会称之为拖延。&lt;/p&gt;&#xA;&lt;p&gt;[5] 几个人告诉我他们喜欢iPad，因为它让他们能将互联网带到笔记本电脑太显眼的情况下。换句话说，它是一个扁酒瓶。（当然，iPhone也是如此，但这个优势不那么明显，因为它读起来像电话，大家都习惯了。）&lt;/p&gt;&#xA;&lt;p&gt;感谢Sam Altman、Patrick Collison、Jessica Livingston和Robert Morris阅读本文草稿。&lt;/p&gt;</description>
    </item>
    <item>
      <title>我从Hacker News学到的</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/hackernews/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/hackernews/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/hackernews.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;我从hacker-news学到的&#34;&gt;我从Hacker News学到的&lt;/h1&gt;&#xA;&lt;p&gt;2009年2月&lt;/p&gt;&#xA;&lt;p&gt;Hacker News上周满两岁了。最初它应该是一个副业项目——一个用来磨练Arc的应用程序，以及现任和未来Y Combinator创始人交流新闻的地方。它已经变得比我预期的更大，占用了我更多的时间，但我不后悔，因为我在工作中学到了很多东西。&lt;/p&gt;&#xA;&lt;h2 id=&#34;增长&#34;&gt;增长&lt;/h2&gt;&#xA;&lt;p&gt;当我们在2007年2月推出时，工作日流量大约是1600个独立日访问者。从那时起增长到大约22,000个。这个增长率比我喜欢的要高一点。我希望网站增长，因为一个至少不缓慢增长的网站可能已经死了。但我不希望它变得像Digg或Reddit那样大——主要是因为这会稀释网站的特色，也是因为我不想把所有时间都花在处理扩展性问题上。&lt;/p&gt;&#xA;&lt;p&gt;我已经有够多的问题了。记住，HN的最初动机是测试一种新的编程语言，而且是一种专注于实验语言设计而非性能的语言。每次网站变慢，我就通过回忆McIlroy和Bentley的名言&amp;quot;性能的关键在于优雅，而不是特殊情况的军队&amp;quot;来强化自己，并寻找我能用最少代码消除的瓶颈。到目前为止，我一直能够跟上，从某种意义上说，尽管增长了14倍，性能却一直保持中等水平。我不知道下一步该做什么，但我可能会想出办法。&lt;/p&gt;&#xA;&lt;p&gt;这通常是我对网站的态度。Hacker News是一个实验，而且是在一个非常年轻的领域的实验。这种类型的网站只有几年历史。互联网对话一般来说也只有几十年历史。所以我们可能只发现了最终会发现的很小一部分。&lt;/p&gt;&#xA;&lt;p&gt;这就是为什么我对HN如此乐观。当一项技术如此年轻时，现有的解决方案通常很糟糕；这意味着必须有可能做得更好；这意味着许多看似无法解决的问题其实可以解决。包括，我希望，困扰了这么多先前社区的问题：被增长所破坏。&lt;/p&gt;&#xA;&lt;h2 id=&#34;稀释&#34;&gt;稀释&lt;/h2&gt;&#xA;&lt;p&gt;自从网站建立几个月以来，用户就一直在担心这个问题。到目前为止，这些警报都是错误的，但它们可能不会永远如此。稀释是一个难题。但可能是可以解决的；当&amp;quot;总是&amp;quot;等于20个实例时，开放对话&amp;quot;总是&amp;quot;被增长破坏并没有多大意义。&lt;/p&gt;&#xA;&lt;p&gt;但重要的是要记住我们正在尝试解决一个新问题，因为这意味着我们将不得不尝试新事物，其中大多数可能不会奏效。几周前我尝试用橙色显示平均评论分数最高的用户的名字。[1] 那是一个错误。突然间一个或多或少团结的文化被分为有和没有两部分。直到看到它被分裂，我才意识到这个文化有多么团结。看着很痛苦。[2]&lt;/p&gt;&#xA;&lt;p&gt;所以橙色用户名不会回来了。（抱歉。）但将来会有其他同样看似有缺陷的想法，而那些被证明有效的想法可能与那些无效的想法看起来一样有缺陷。&lt;/p&gt;&#xA;&lt;p&gt;可能我从稀释中学到的最重要的事情是，它更多地是用行为而不是用户来衡量的。你想要排除的是不良行为，而不是坏人。用户行为出人意料地具有可塑性。如果人们被期望表现良好，他们往往会这样；反之亦然。&lt;/p&gt;&#xA;&lt;p&gt;当然，禁止不良行为确实倾向于使坏人远离，因为在一个必须表现良好的地方，他们会感到不舒服地受约束。但这种排除他们的方式比显性障碍更温和，可能也更有效。&lt;/p&gt;&#xA;&lt;p&gt;现在很清楚，破窗理论也适用于社区网站。该理论认为，轻微的不良行为形式会鼓励更恶劣的行为：一个有很多涂鸦和破窗户的社区会成为发生抢劫的地方。当Giuliani推行使破窗理论著名的改革时，我住在纽约，转变是奇迹般的。当Reddit发生相反情况时，我是Reddit用户，转变同样引人注目。&lt;/p&gt;&#xA;&lt;p&gt;我不是在批评Steve和Alexis。Reddit发生的事情不是出于疏忽。从一开始他们就有一个政策，除了垃圾邮件什么都不审查。此外，Reddit与Hacker News有不同的目标。Reddit是一家创业公司，不是一个副业项目；它的目标是尽可能快地增长。结合快速增长和零审查，结果就是一场混战。但如果他们重新来过，我不认为他们会做得有很大不同。从流量来看，Reddit比Hacker News成功得多。&lt;/p&gt;&#xA;&lt;p&gt;但Reddit发生的事情不会不可避免地发生在HN身上。有几个局部最大值。可以有自由放任的地方，也有更深思熟虑的地方，就像现实世界中一样；人们会根据他们在哪里而有不同的行为，就像他们在现实世界中一样。&lt;/p&gt;&#xA;&lt;p&gt;我在野外观察到这一点。我见过在Reddit和Hacker News上交叉发帖的人，他们确实费心写了两个版本，一个给Reddit的激烈版本，一个给HN的更温和版本。&lt;/p&gt;&#xA;&lt;h2 id=&#34;提交&#34;&gt;提交&lt;/h2&gt;&#xA;&lt;p&gt;像Hacker News这样的网站需要避免两种主要类型的问题：不好的故事和不好的评论。到目前为止，不好故事的危险似乎较小。现在首页上的故事仍然是HN开始时大概会在那里的那些故事。&lt;/p&gt;&#xA;&lt;p&gt;我曾经认为我必须加权投票以防止垃圾出现在首页上，但我还不需要这样做。我本不会预测首页会保持得这么好，我不确定为什么会这样。也许只有更深思熟虑的用户足够关心提交和投票链接，所以一个随机新用户的边际成本接近于零。或者首页通过广告宣传预期类型的提交来保护自己。&lt;/p&gt;&#xA;&lt;p&gt;对首页最危险的东西是那些太容易投票的东西。如果有人证明了一个新定理，读者需要一些工作来决定是否投票。一个有趣的漫画需要较少的努力。一个以战斗口号为标题的咆哮需要零努力，因为人们甚至不读它就投票。&lt;/p&gt;&#xA;&lt;p&gt;因此我称之为轻浮原则：在用户投票的新闻网站上，最容易判断的链接将接管，除非你采取具体措施来防止它。&lt;/p&gt;&#xA;&lt;p&gt;Hacker News有两种防止轻浮的保护。最常见的轻浮链接类型被禁止作为离题。小猫图片、政治咆哮等等被明确禁止。这排除了大多数轻浮内容，但不是全部。一些链接既是轻浮的（在非常短的意义上），也是相关的。&lt;/p&gt;&#xA;&lt;p&gt;对此没有单一的解决方案。如果一个链接只是一个空洞的咆哮，编辑有时会杀死它，即使它在相关意义上是关于黑客的，因为它不符合真正的标准，即激发一个人的智力好奇心。如果一个网站的帖子特征是这种类型，我有时会禁止它，这意味着该url的新内容被自动杀死。如果一个帖子有诱饵标题，编辑有时会重新措辞使其更实际。这对于标题是战斗口号的链接特别必要，否则它们成为隐含的&amp;quot;如果你相信某某就投票&amp;quot;帖子，这是最极端的轻浮形式。&lt;/p&gt;&#xA;&lt;p&gt;处理链接的技术必须发展，因为链接在发展。聚合器的存在已经影响了它们聚合的内容。作者现在故意写东西来吸引聚合器的流量——有时甚至是特定的聚合器。（不，这个陈述的讽刺性没有逃过我的注意。）然后有更阴险的变异，比如链接劫持——发布别人文章的释义并提交它而不是原始文章。这些可以获得很多投票，因为文章中很多好的东西经常被保留；确实，释义越接近抄袭，保留的就越多。[3]&lt;/p&gt;&#xA;&lt;p&gt;我认为一个杀死提交的网站提供一种方式让用户如果想要可以看到被杀掉的内容是很重要的。这使编辑诚实，同样重要的是，让用户有信心如果编辑停止诚实他们会知道。HN用户可以通过翻转他们个人资料中称为showdead的开关来做到这一点。[4]&lt;/p&gt;&#xA;&lt;h2 id=&#34;评论&#34;&gt;评论&lt;/h2&gt;&#xA;&lt;p&gt;坏评论似乎比坏提交更难解决的问题。虽然HN首页上链接的质量没有太大变化，但中位数评论的质量可能有所下降。&lt;/p&gt;&#xA;&lt;p&gt;评论中有两种主要的坏：刻薄和愚蠢。两者之间有很大的重叠——刻薄的评论很可能也是愚蠢的——但处理它们的策略不同。刻薄更容易控制。你可以有规则说不应该刻薄，如果你执行它们，似乎有可能控制住刻薄。&lt;/p&gt;&#xA;&lt;p&gt;控制愚蠢更难，也许是因为愚蠢不那么容易区分。刻薄的人比愚蠢的人更可能知道自己在刻薄。&lt;/p&gt;&#xA;&lt;p&gt;最危险的愚蠢评论形式不是长而错误的论点，而是愚蠢的笑话。长而错误的论点实际上相当罕见。评论质量和长度之间有很强的相关性；如果你想比较社区网站上评论的质量，平均长度会是一个很好的预测指标。原因可能是人性，而不是任何特定于评论线程的东西。可能只是愚蠢更多地表现为很少有想法，而不是错误的想法。&lt;/p&gt;&#xA;&lt;p&gt;无论原因是什么，愚蠢的评论往往是短的。而且因为很难写一个以其传达的信息量而 distinguished 的短评论，人们试图通过搞笑来区分它们。愚蠢评论最诱人的形式是 supposedly 机智的贬低，可能是因为贬低是幽默的最容易形式。[5] 所以禁止刻薄的一个优势是它也减少了这些。&lt;/p&gt;&#xA;&lt;p&gt;坏评论像野葛：它们迅速接管。评论对新评论的影响比提交对新提交的影响大得多。如果有人提交一个蹩脚的文章，其他提交不会都变得蹩脚。但如果有人在帖子上发布一个愚蠢的评论，这就为它周围的区域定下了基调。人们用愚蠢的笑话回复愚蠢的笑话。&lt;/p&gt;&#xA;&lt;p&gt;也许解决方案是在人们可以对评论做出回应之前添加一个延迟，并使延迟长度与其质量的一些预测成反比。那么愚蠢的线程会增长得更慢。[6]&lt;/p&gt;&#xA;&lt;h2 id=&#34;人&#34;&gt;人&lt;/h2&gt;&#xA;&lt;p&gt;我注意到我描述的大多数技术是保守的：它们旨在保护网站的特色，而不是增强它。我不认为这是我的偏见。这是由于问题的形状。Hacker News有幸开始就好，所以在这种情况下这确实是一个保护问题。但我认为这个原则也适用于不同起源的网站。&lt;/p&gt;&#xA;&lt;p&gt;社区网站中的好东西更多地来自人，而不是技术；技术主要在防止坏事情方面发挥作用。技术当然可以增强讨论。例如，嵌套评论可以。但我宁愿使用一个功能原始、用户聪明友好的网站，也不愿使用一个用户是白痴或巨魔的更先进的网站。&lt;/p&gt;&#xA;&lt;p&gt;所以社区网站能做的最重要的事情是吸引它想要的那种人。一个试图尽可能大的网站想要吸引每个人。但一个针对特定用户群体的网站必须只吸引那些人——同样重要的是，排斥其他所有人。我在HN上有意识地努力做到这一点。图形设计尽可能简单，网站规则不鼓励戏剧性的链接标题。目标是第一次到达HN的人唯一感兴趣的东西应该是那里表达的想法。&lt;/p&gt;&#xA;&lt;p&gt;调整网站以吸引某些人的缺点是，对那些人来说，它可能太有吸引力了。我太清楚Hacker News可能有多令人上瘾了。对我，就像对许多用户一样，它是一种虚拟的城镇广场。当我想从工作中休息一下时，我走进广场，就像我可能会走进现实世界中的哈佛广场或大学大道。[7] 但在线广场比物理广场更危险。如果我半天在大学大道闲逛，我会注意到。我必须走一英里才能到那里，坐在咖啡馆感觉与工作不同。但访问在线论坛只需要点击一下，表面上感觉非常像工作。你可能是在浪费时间，但你不是闲置的。互联网上有人错了，而你正在解决问题。&lt;/p&gt;&#xA;&lt;p&gt;Hacker News肯定是有用的。我从在HN上读到的东西中学到了很多。我写了几篇最初作为评论的文章。所以我不希望网站消失。但我想要确保它不是生产力的净拖累。那将是一场灾难，吸引成千上万聪明人到导致他们浪费大量时间的网站。我希望我能100%确定这不是对HN的描述。&lt;/p&gt;&#xA;&lt;p&gt;我觉得游戏和社交应用程序的令人上瘾性仍然是一个大部分未解决的问题。现在的情况就像1980年代的快克可卡因：我们发明了极其令人上瘾的新东西，但我们还没有进化出保护自己免受它们伤害的方法。我们最终会的，这是我希望接下来专注解决的问题之一。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 我尝试用平均数和中位数评论分数对用户进行排名，平均数（去掉高分）似乎是对高质量更准确的预测。不过中位数可能是对低质量更准确的预测。&lt;/p&gt;&#xA;&lt;p&gt;[2] 我从这个实验中学到的另一件事是，如果你要区分人，你最好确定你做得对。这是快速原型设计不起作用的问题之一。&lt;/p&gt;&#xA;&lt;p&gt;确实，这是不在各种类型的人之间歧视的智力上诚实的论点。不这样做的理由不是每个人都一样，而是做错是坏的，做对是难的。&lt;/p&gt;&#xA;&lt;p&gt;[3] 当我抓住恶劣的链接劫持帖子时，我用他们复制的任何东西的url替换它。习惯性链接劫持的网站会被禁止。&lt;/p&gt;</description>
    </item>
    <item>
      <title>我们告诉孩子的谎言</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/lies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/lies/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/lies.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;我们告诉孩子的谎言&#34;&gt;我们告诉孩子的谎言&lt;/h1&gt;&#xA;&lt;p&gt;2008年5月&lt;/p&gt;&#xA;&lt;p&gt;成年人不断地对孩子撒谎。我不是说我们应该停止，但我认为我们至少应该审视我们告诉他们什么谎言以及为什么。&lt;/p&gt;&#xA;&lt;p&gt;这对我们可能也有好处。我们小时候都被骗过，有些我们被告知的谎言仍然影响着我们。因此，通过研究成年人对孩子撒谎的方式，我们或许能够清除我们被告知的谎言。&lt;/p&gt;&#xA;&lt;p&gt;我在非常广泛的意义上使用&amp;quot;谎言&amp;quot;这个词：不仅仅是明显的虚假陈述，还包括我们误导孩子的所有更微妙的方式。虽然&amp;quot;谎言&amp;quot;有负面含义，我并不是建议我们永远不应该这样做——只是说当我们这样做时应该注意。[1]&lt;/p&gt;&#xA;&lt;p&gt;我们对孩子撒谎的方式最显著的事情之一是，这个阴谋是多么广泛。所有成年人都知道他们的文化对孩子撒谎什么：那些你回答&amp;quot;问你父母&amp;quot;的问题。如果一个孩子问1982年谁赢得了世界大赛或碳的原子量是多少，你可以直接告诉他。但如果一个孩子问你&amp;quot;有上帝吗？&amp;ldquo;或&amp;quot;妓女是什么？&amp;ldquo;你可能会说&amp;quot;问你父母&amp;rdquo;。&lt;/p&gt;&#xA;&lt;p&gt;既然我们都同意，孩子们很少看到他们被呈现的世界观中有裂缝。最大的分歧是在父母和学校之间，但即使那些也很小。学校对有争议的话题说话很小心，如果他们确实与父母希望孩子相信的相矛盾，父母要么迫使学校保持沉默，要么把孩子转到新学校。&lt;/p&gt;&#xA;&lt;p&gt;这个阴谋是如此彻底，以至于大多数发现它的孩子只是通过发现他们被告知的内容中的内在矛盾才发现的。对于那些在手术过程中醒来的孩子来说，这可能是创伤性的。爱因斯坦的经历是这样的：&lt;/p&gt;&#xA;&lt;p&gt;通过阅读流行的科学书籍，我很快确信圣经故事中的许多内容不可能是真的。其结果是一种积极的自由思考，伴随着青年故意被国家通过谎言欺骗的印象：这是一个压倒性的印象。[2]&lt;/p&gt;&#xA;&lt;p&gt;我记得那种感觉。到15岁时，我确信世界从头到尾都是腐败的。这就是为什么像《黑客帝国》这样的电影有如此共鸣。每个孩子都在一个虚假的世界中长大。在某种程度上，如果背后的力量像一群邪恶机器一样明确区分，人们可以通过吃药就能彻底摆脱，那会更容易。&lt;/p&gt;&#xA;&lt;h2 id=&#34;保护&#34;&gt;保护&lt;/h2&gt;&#xA;&lt;p&gt;如果你问成年人为什么对孩子撒谎，他们给出的最常见的原因是为了保护他们。孩子们确实需要保护。你想为新生儿创造的环境与大城市的街道非常不同。&lt;/p&gt;&#xA;&lt;p&gt;这似乎如此明显，以至于称之为谎言似乎是错误的。告诉婴儿世界是安静、温暖和安全的，这当然不是一个坏谎言。但如果这种无害的谎言不加以审视，可能会变味。&lt;/p&gt;&#xA;&lt;p&gt;想象一下，如果你试图让某人在像新生儿一样受保护的环境中生活到18岁。如此严重地误导某人关于世界的事情，似乎不是保护而是虐待。当然，这是一个极端的例子；当父母做这种事情时，它成为全国新闻。但你在较小的范围内看到了同样的问题，在郊区青少年感到的不适中。&lt;/p&gt;&#xA;&lt;p&gt;郊区的主要目的是为孩子们提供一个受保护的环境成长。它似乎对10岁的孩子很棒。我10岁时喜欢住在郊区。我没有注意到它是多么贫瘠。我的整个世界不比我骑自行车去的几个朋友的家和我跑来跑去的一些树林大。在对数尺度上，我介于婴儿床和地球之间。郊区的街道正好合适。但随着我长大，郊区开始感觉令人窒息地虚假。&lt;/p&gt;&#xA;&lt;p&gt;生活在10岁或20岁时可能相当好，但在15岁时经常令人沮丧。这是一个太大的问题，无法在这里解决，但15岁生活糟糕的一个原因肯定是孩子们被困在一个为10岁孩子设计的世界里。&lt;/p&gt;&#xA;&lt;p&gt;父母希望通过在郊区抚养孩子来保护他们免受什么伤害？一个搬出曼哈顿的朋友只是说她3岁的女儿&amp;quot;看到太多&amp;rdquo;。我能想到的包括：喝醉或吸毒的人、贫穷、疯狂、可怕的医疗状况、不同程度的奇怪性行为，以及暴力的愤怒。&lt;/p&gt;&#xA;&lt;p&gt;我想如果我有3岁的孩子，最让我担心的是愤怒。我29岁时搬到纽约，即使那时我也感到惊讶。我不希望一个3岁的孩子看到我目睹的一些争吵。那太可怕了。成年人对年幼孩子隐瞒的很多事情，他们隐瞒是因为这些事情会吓到孩子，而不是因为他们想隐瞒这些事情的存在。误导孩子只是一个副作用。&lt;/p&gt;&#xA;&lt;p&gt;这似乎是成年人对孩子撒谎的最正当的类型之一。但因为谎言是间接的，我们没有对它们进行严格的统计。父母知道他们隐瞒了关于性的事实，许多人在某个时刻会坐下来向孩子解释更多。但很少有人告诉他们孩子真实世界和他们成长起来的茧之间的区别。将此与父母试图在孩子心中灌输的信心结合起来，每年你都会得到一批新的18岁年轻人，他们认为他们知道如何管理世界。&lt;/p&gt;&#xA;&lt;p&gt;不是所有18岁的年轻人都认为他们知道如何管理世界吗？实际上这似乎是一个最近的创新，不超过100年。在前工业时代，青少年是成人世界的初级成员，相对较清楚自己的不足。他们能看到他们不像村里的铁匠那么强壮或熟练。在过去时代，人们对某些事情对孩子撒谎比我们现在多，但人工、受保护环境中隐含的谎言是最近的发明。像许多新发明一样，富人首先得到了这个。国王和贵族的孩子是第一批与世界脱节长大的人。郊区意味着一半人口在这方面可以像国王一样生活。&lt;/p&gt;&#xA;&lt;h2 id=&#34;性和毒品&#34;&gt;性（和毒品）&lt;/h2&gt;&#xA;&lt;p&gt;在纽约抚养青少年孩子，我会有不同的担忧。我较少担心他们会看到什么，更担心他们会做什么。我和许多在曼哈顿长大的孩子一起上大学，总的来说他们似乎相当玩世不恭。他们似乎平均在14岁左右失去童贞，到大学时尝试过的毒品比我听说的还要多。&lt;/p&gt;&#xA;&lt;p&gt;父母不希望青少年孩子有性生活的原因很复杂。有一些明显的危险：怀孕和性传播疾病。但这些不是父母不希望孩子有性生活的唯一原因。14岁女孩的平均父母会讨厌她有性生活的想法，即使怀孕或性传播疾病的风险为零。&lt;/p&gt;&#xA;&lt;p&gt;孩子可能能感觉到他们没有被告诉全部真相。毕竟，怀孕和性传播疾病对成年人来说同样是问题，而他们有性生活。&lt;/p&gt;&#xA;&lt;p&gt;什么真正让父母对他们青少年孩子的性生活感到困扰？他们对这个想法的厌恶是如此本能，可能是天生的。但如果是天生的，它应该是普遍的，而且有很多社会父母不介意青少年孩子有性生活——事实上，14岁成为母亲是正常的。那么发生了什么？似乎确实存在一个普遍禁忌，反对与青春期前的儿童发生性关系。人们可以想象这有进化原因。我认为这是工业化社会父母不喜欢青少年孩子有性生活的主要原因。他们仍然认为他们是孩子，尽管从生物学上讲他们不是，所以对儿童性行为的禁忌仍然有力量。&lt;/p&gt;&#xA;&lt;p&gt;成年人对性隐瞒的一件事他们也对毒品隐瞒：它可以带来极大的快乐。这就是性和毒品如此危险的原因。对它们的渴望可能会模糊一个人的判断力——当被模糊的判断力已经是青少年孩子糟糕的判断力时，这尤其令人恐惧。&lt;/p&gt;&#xA;&lt;p&gt;这里父母的愿望冲突。较老的社会告诉孩子他们判断力差，但现代父母希望孩子自信。这可能是比把他们放在位置上的旧计划更好的计划，但它有副作用，即在隐含地对孩子的判断力撒谎之后，我们不得不再次对他们如果相信我们可能会遇到麻烦的所有事情撒谎。&lt;/p&gt;&#xA;&lt;p&gt;如果父母告诉孩子关于性和毒品的真相，那将是：你应该避免这些事情的原因是你的判断力糟糕。有你两倍经验的人仍然会被它们烧伤。但这可能是那些真相不会有说服力的情况之一，因为糟糕判断力的症状之一是相信你有好的判断力。当你太弱而举不起某物时，你能看出来，但当你冲动地做决定时，你更加确信。&lt;/p&gt;&#xA;&lt;h2 id=&#34;天真&#34;&gt;天真&lt;/h2&gt;&#xA;&lt;p&gt;父母不希望孩子有性生活的另一个原因是他们想保持他们的天真。成年人对孩子应该如何行为有一定的模型，这不同于他们对其他成年人的期望。&lt;/p&gt;&#xA;&lt;p&gt;最明显的区别之一是孩子们被允许使用的词语。大多数父母在与他人交谈时使用不希望孩子使用的词语。他们试图尽可能长时间地隐瞒这些词语的存在。这是每个人都参与的另一个阴谋：每个人都知道你不应该在孩子面前说脏话。&lt;/p&gt;&#xA;&lt;p&gt;我从未听过对父母告诉孩子的任何事情有比为什么他们不应该说脏话更多不同的解释。我认识的每个父母都禁止孩子说脏话，但没有两个人有相同的理由。很明显，大多数开始是不希望孩子说脏话，然后编造理由。&lt;/p&gt;&#xA;&lt;p&gt;所以关于正在发生的事情的理论是，脏话的功能是将说话者标记为成年人。&amp;ldquo;shit&amp;quot;和&amp;quot;poopoo&amp;quot;的意思没有区别。那么为什么一个孩子可以说一个被禁止？唯一的解释是：根据定义。[3]&lt;/p&gt;&#xA;&lt;p&gt;为什么当孩子做保留给成年人的事情时，成年人如此困扰？一个满嘴脏话、愤世嫉俗的10岁孩子靠在灯柱上，嘴角落出一支香烟的想法非常令人不安。但为什么？&lt;/p&gt;&#xA;&lt;p&gt;我们希望孩子天真的一个原因是我们被编程喜欢某种无助感。我几次听到母亲说她们故意不纠正年幼孩子的错误发音，因为它们如此可爱。如果你想一想，可爱就是无助。设计得可爱的玩具和卡通角色总是茫然无知的表情和短小、无效的四肢。&lt;/p&gt;&#xA;&lt;p&gt;考虑到人类后代在如此长的时间里如此无助，我们有天生的愿望去爱和保护无助的生物并不奇怪。没有使孩子可爱的无助感，他们会非常烦人。他们只会像无能的成年人。但还有更多。假设的玩世不恭的10岁孩子如此困扰我的原因不仅是他会很烦人，而是他很早就切断了他的成长前景。要变得玩世不恭，你必须认为你知道世界如何运作，而10岁孩子对此的任何理论可能都是相当狭隘的。&lt;/p&gt;&#xA;&lt;p&gt;天真也是思想开放。我们希望孩子天真，这样他们才能继续学习。听起来矛盾，但有某些知识会妨碍其他知识。如果你要学习世界是一个残酷的地方，充满试图互相利用的人，你最好最后学习这个。否则你不会费心学习更多。&lt;/p&gt;&#xA;&lt;p&gt;非常聪明的成年人似乎通常异常天真，我不认为这是巧合。我认为他们故意避免学习某些事情。当然我这样做。我曾经我想知道一切。现在我知道我不想。&lt;/p&gt;&#xA;&lt;h2 id=&#34;死亡&#34;&gt;死亡&lt;/h2&gt;&#xA;&lt;p&gt;除了性，死亡是成年人对孩子撒谎最明显的话题。我相信他们隐瞒性是因为深深的禁忌。但为什么我们向孩子隐瞒死亡？可能是因为年幼的孩子对它特别恐惧。他们想感到安全，而死亡是终极威胁。&lt;/p&gt;&#xA;&lt;p&gt;我们父母告诉我们的最壮观的谎言之一是关于我们第一只猫的死亡。多年来，当我们询问更多细节时，他们被迫编造更多，所以故事变得相当精心。猫在兽医办公室死亡。死因？麻醉本身。猫为什么在兽医办公室？要做绝育手术。为什么这样一个常规手术杀死了它？这不是兽医的错；猫有先天性心脏虚弱；麻醉对它来说太强了；但没有人能提前知道这一点。直到我们二十多岁真相才出来：我妹妹，当时大约三岁，不小心踩到了猫并弄断了它的背。&lt;/p&gt;&#xA;&lt;p&gt;他们不觉得需要告诉我们猫现在在猫天堂快乐地生活。我父母从未声称死去的人或动物&amp;quot;去了更好的地方&amp;rdquo;，或我们会再次见到他们。这似乎没有伤害我们。&lt;/p&gt;&#xA;&lt;p&gt;我祖母告诉我们一个关于我祖父死亡的编辑版本。她说有一天他们正坐着看书，当她对他说什么时，他没有回答。他似乎睡着了，但当她试图唤醒他时，她不能。&amp;ldquo;他走了。&amp;ldquo;心脏病发作听起来像睡着。后来我了解到事情没有那么整洁，心脏病发作花了一天的大部分时间才杀死他。&lt;/p&gt;&#xA;&lt;p&gt;除了这样的彻头彻尾的谎言，当死亡话题出现时，肯定有很多改变话题的情况。我当然不记得这个，但我可以从我直到大约19岁才真正意识到我会死亡这一事实推断出来。我怎么可能这么长时间错过如此明显的事情？既然我看到父母处理这个话题，我能看出如何：关于死亡的问题被温和但坚定地避开。&lt;/p&gt;&#xA;&lt;p&gt;在这个话题上，特别是，孩子们迎合他们一半。孩子们经常想被欺骗。他们希望相信他们生活在一个舒适、安全的世界，就像他们的父母希望他们相信的那样。[4]&lt;/p&gt;&#xA;&lt;h2 id=&#34;身份认同&#34;&gt;身份认同&lt;/h2&gt;&#xA;&lt;p&gt;一些父母对种族或宗教群体有强烈的依恋，希望他们的孩子也感受到这一点。这通常需要两种不同的撒谎：第一种是告诉孩子他或她是X，第二种是X群体通过相信来区分自己的特定谎言。[5]&lt;/p&gt;&#xA;&lt;p&gt;告诉孩子他们有特定的种族或宗教身份是你能告诉他们的最粘性的事情之一。几乎你告诉孩子的任何其他事情，他们都可以在开始为自己思考后改变主意。但如果你告诉孩子他们是某个群体的成员，这似乎几乎不可能摆脱。&lt;/p&gt;&#xA;&lt;p&gt;尽管这可能是父母最预谋的谎言之一。当父母信仰不同宗教时，他们经常在他们之间同意他们的孩子将&amp;quot;被抚养为X&amp;rdquo;。而且这有效。孩子们顺从地长大，认为自己是X，尽管如果他们的父母选择了另一种方式，他们会长大认为自己是Y。&lt;/p&gt;&#xA;&lt;p&gt;这如此有效的一个原因是涉及的第二种谎言。真相是公共财产。你无法通过做理性的事情和相信真实的事情来区分你的群体。如果你想把自己与他人区分开来，你必须做武断的事情，相信虚假的事情。在花了一生做武断的事情和相信虚假的事情，并因此被&amp;quot;外人&amp;quot;视为奇怪之后，推动孩子认为自己是X的认知失调一定是巨大的。如果他们不是X，为什么他们坚持所有这些武断的信仰和习俗？如果他们不是X，为什么所有非X都称他们为X？&lt;/p&gt;&#xA;&lt;p&gt;这种形式的谎言不是没有用处的。你可以用它来携带有益信仰的载荷，它们也将成为孩子身份认同的一部分。你可以告诉孩子，除了从不穿黄色、相信世界是由巨型兔子创造的，以及在吃鱼前总是弹指外，X群体也特别诚实和勤奋。然后X孩子会长大，感觉诚实和勤奋是他们身份认同的一部分。&lt;/p&gt;&#xA;&lt;p&gt;这可能解释了现代宗教传播的很大一部分，并解释了为什么它们的教义是有用的和怪异的组合。怪异的一半使宗教粘住，有用的一半是载荷。[6]&lt;/p&gt;&#xA;&lt;h2 id=&#34;权威&#34;&gt;权威&lt;/h2&gt;&#xA;&lt;p&gt;成年人对孩子撒谎最不可原谅的原因之一是为了维持对他们的权力。有时这些谎言是真正邪恶的，像儿童骚扰者告诉受害者如果他们告诉任何人发生了什么他们会遇到麻烦。其他似乎更无辜；这取决于成年人为了维持权力撒谎的程度，以及他们用它做什么。&lt;/p&gt;&#xA;&lt;p&gt;大多数成年人努力对孩子隐瞒他们的缺点。通常他们的动机是混合的。例如，有外遇的父亲通常对孩子隐瞒这件事。他的动机部分是这会让他们担心，部分是这会引入性话题，部分（比他愿意承认的更大部分）是他不想在他们眼中玷污自己。&lt;/p&gt;&#xA;&lt;p&gt;如果你想了解告诉孩子什么谎言，阅读任何一本教他们关于&amp;quot;问题&amp;quot;的书。[7] Peter Mayle写了一本叫《我们为什么要离婚？》的书。它从关于离婚要记住的三件最重要的事情开始，其中之一是：你不应该责怪一方父母，因为离婚从来不只是一个人的错。[8] 真的吗？当男人带着他的秘书私奔时，总是部分他妻子的错吗？但我能理解为什么Mayle可能这么说。也许孩子尊重父母比了解他们的真相更重要。&lt;/p&gt;&#xA;&lt;p&gt;但因为成年人隐瞒他们的缺点，同时坚持对孩子的高行为标准，很多孩子长大感到他们无望地达不到标准。他们走来走去，因为说了脏话而感到可怕地邪恶，而事实上他们周围的大多数成年人都在做更糟糕的事情。&lt;/p&gt;&#xA;&lt;p&gt;这在智力问题和道德问题上都会发生。人们越自信，他们似乎越愿意回答&amp;quot;我不知道&amp;rdquo;。不太自信的人觉得他们必须有答案，否则他们会看起来很糟糕。我父母在承认不知道事情方面相当好，但我肯定被老师告诉了很多这种类型的谎言，因为我直到上大学才听到老师说&amp;quot;我不知道&amp;quot;。我记得因为在全班面前听到有人这么说如此令人惊讶。&lt;/p&gt;&#xA;&lt;p&gt;我第一次暗示老师不是全知的是六年级，在我父亲反驳了我在学校学到的东西之后。当我抗议老师说了相反的话时，我父亲回答说那个人不知道他在说什么——他毕竟只是个小学老师。&lt;/p&gt;&#xA;&lt;p&gt;只是个老师？这个短语似乎几乎不合语法。老师不知道他们教科目的一切吗？如果不是，为什么他们是教我们的人？&lt;/p&gt;&#xA;&lt;p&gt;可悲的事实是，美国公立学校老师通常不太理解他们教的东西。有一些极好的例外，但一般来说，计划从事教学的人在学术上在大学生群体中排名接近底部。所以我11岁时仍然认为老师是不会错的，这一事实显示了系统对我的大脑做了什么。&lt;/p&gt;&#xA;&lt;h2 id=&#34;学校&#34;&gt;学校&lt;/h2&gt;&#xA;&lt;p&gt;孩子在学校学到的内容是复杂的谎言混合物。最可原谅的是那些为了简化思想使其容易学习而说的谎言。问题是，很多宣传被以简化的名义偷偷塞入课程。&lt;/p&gt;&#xA;&lt;p&gt;公立学校教科书代表了各种有势力的群体希望被告知的内容之间的妥协。谎言很少是公开的。通常它们要么是遗漏，要么是以牺牲其他话题为代价过度强调某些话题。我们在小学得到的历史观是一个粗略的圣徒传记，每个有势力的群体至少有一个代表。&lt;/p&gt;&#xA;&lt;p&gt;我记得的著名科学家是爱因斯坦、玛丽·居里和乔治·华盛顿·卡弗。爱因斯坦很重要，因为他的工作导致了原子弹。玛丽·居里与X射线有关。但卡弗让我困惑。他似乎用花生做了一些事情。&lt;/p&gt;</description>
    </item>
    <item>
      <title>我们寻找创始人的品质</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/founders/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/founders/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/founders.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;我们寻找创始人的品质&#34;&gt;我们寻找创始人的品质&lt;/h1&gt;&#xA;&lt;p&gt;想创业吗？获得Y Combinator的资助。&lt;/p&gt;&#xA;&lt;p&gt;2010年10月&lt;/p&gt;&#xA;&lt;p&gt;（我为《福布斯》写了这篇文章，他们让我写一些关于我们寻找创始人所注重的品质的内容。在印刷版中，他们因为空间限制删掉了最后一项。）&lt;/p&gt;&#xA;&lt;h3 id=&#34;1-决心&#34;&gt;1. 决心&lt;/h3&gt;&#xA;&lt;p&gt;这已经成为创业创始人最重要的品质。当我们开始Y Combinator时，我们认为最重要的品质是智力。这是硅谷的神话。当然，你不希望创始人愚蠢。但只要你的智力超过某个阈值，最重要的是决心。你会遇到很多障碍。你不能成为那种容易气馁的人。&lt;/p&gt;&#xA;&lt;p&gt;WePay的Bill Clerico和Rich Aberman就是一个很好的例子。他们在做一家金融创业公司，这意味着与大型官僚公司进行无休止的谈判。当你创办一家依赖与大公司交易才能生存的创业公司时，常常感觉他们试图无视你直到你消失。但是当Bill Clerico开始打电话给你时，你最好还是按照他的要求做，因为他不会放弃。&lt;/p&gt;&#xA;&lt;h3 id=&#34;2-灵活性&#34;&gt;2. 灵活性&lt;/h3&gt;&#xA;&lt;p&gt;然而，你不希望拥有&amp;quot;不要放弃你的梦想&amp;quot;这类短语所暗示的那种决心。创业世界是如此不可预测，你需要能够即时修改你的梦想。我找到的对你需要的决心和灵活性组合的最好比喻是跑卫。他决心要向前推进，但在任何特定时刻，他可能需要横向甚至向后移动才能到达那里。&lt;/p&gt;&#xA;&lt;p&gt;目前灵活性纪录保持者可能是Greplin的Daniel Gross。他用一些糟糕的电商创意申请了YC。我们告诉他，如果他做其他事情，我们会资助他。他想了一秒钟，然后说好的。在决定做Greplin之前，他又经历了两个想法。他在演示日向投资者展示时只工作了几几天，但他得到了很多关注。他似乎总能化险为夷。&lt;/p&gt;&#xA;&lt;h3 id=&#34;3-想象力&#34;&gt;3. 想象力&lt;/h3&gt;&#xA;&lt;p&gt;智力当然很重要。看起来最重要的类型是想象力。能够快速解决预定义问题并不那么重要，重要的是能够提出令人惊讶的新想法。在创业世界中，大多数好主意最初看起来都很糟糕。如果它们明显很好，就已经有人在做了。所以你需要那种能产生恰到好处的疯狂想法的智力。&lt;/p&gt;&#xA;&lt;p&gt;Airbnb就是那种想法。事实上，当我们资助Airbnb时，我们认为它太疯狂了。我们无法相信大量的人会想住在别人的地方。我们资助他们是因为我们非常喜欢创始人。当我们听说他们通过销售奥巴马和麦凯恩品牌的早餐麦片来维持生计时，他们就入选了。事实证明，这个想法最终是恰到好处的疯狂。&lt;/p&gt;&#xA;&lt;h3 id=&#34;4-淘气&#34;&gt;4. 淘气&lt;/h3&gt;&#xA;&lt;p&gt;虽然最成功的创始人通常是好人，但他们眼中往往有一种海盗般的光芒。他们不是那种循规蹈矩的好人。在道德上，他们关心把重大问题做对，而不是遵守礼节。这就是为什么我用淘气而不是邪恶这个词。他们喜欢打破规则，但不是重要的规则。不过这个品质可能是多余的；它可能已经被想象力所暗示。&lt;/p&gt;&#xA;&lt;p&gt;Loopt的Sam Altman是最成功的校友之一，所以我们问他可以在Y Combinator申请表上放什么问题，帮助我们找到更多像他这样的人。他说要问一个时候他们曾经为了自己的利益而黑入某些东西——这里的黑入是指击败系统，而不是入侵计算机。这已经成为我们在评审申请时最关注的问题之一。&lt;/p&gt;&#xA;&lt;h3 id=&#34;5-友谊&#34;&gt;5. 友谊&lt;/h3&gt;&#xA;&lt;p&gt;从经验来看，只有一个创始人似乎很难开始创业。大多数重大的成功都有两三个创始人。创始人之间的关系必须牢固。他们必须真正喜欢彼此，并且合作良好。创业公司对创始人关系所做的事情，就像狗对袜子所做的一样：如果可以拉开，它就会被拉开。&lt;/p&gt;&#xA;&lt;p&gt;Justin.tv的Emmett Shear和Justin Kan是密切合作的好朋友的好例子。他们从二年级就认识。他们几乎可以读懂彼此的想法。我确信他们会争论，就像所有创始人一样，但我从未感觉到他们之间有任何未解决的紧张关系。&lt;/p&gt;&#xA;&lt;p&gt;感谢Jessica Livingston和Chris Steiner阅读本文的草稿。&lt;/p&gt;</description>
    </item>
    <item>
      <title>投资者群体动态</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/herd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/herd/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/herd.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;投资者群体动态&#34;&gt;投资者群体动态&lt;/h1&gt;&#xA;&lt;p&gt;2013年8月&lt;/p&gt;&#xA;&lt;p&gt;大多数投资者对你的看法中，最大的组成部分是其他投资者的看法。这当然是指数增长的配方。当一个投资者想要投资你时，这使得其他投资者想要投资，这又使得其他人想要投资，如此循环往复。&lt;/p&gt;&#xA;&lt;p&gt;有时缺乏经验的创始人错误地得出结论，认为操纵这些力量是融资的本质。他们听到关于成功创业公司投资热潮的故事，并认为因此发生这种情况是成功创业公司的标志。但实际上，这两者并没有那么高度相关。许多引起热潮的创业公司最终失败了（在极端情况下，部分原因是热潮），而许多非常成功的创业公司在第一次筹集资金时只受到投资者的中等程度欢迎。&lt;/p&gt;&#xA;&lt;p&gt;所以本文的目的不是解释如何创造热潮，而仅仅是解释产生热潮的力量。这些力量在融资中总是在某种程度上起作用，它们可能导致令人惊讶的情况。如果你理解它们，你至少可以避免感到惊讶。&lt;/p&gt;&#xA;&lt;p&gt;当其他投资者喜欢你时，投资者更喜欢你的一个原因是你实际上成了一个更好的投资。筹集资金降低了失败的风险。确实，尽管投资者讨厌这一点，但你因此有理由为后来的投资者提高估值。在你没有钱时投资的投资者承担了更多风险，有权获得更高回报。此外，已经筹集资金的公司在字面上更有价值。在你筹集第一个一百万美元后，公司至少价值增加了一百万美元，因为它是和以前一样的公司，加上它在银行里有一百万美元。[1]&lt;/p&gt;&#xA;&lt;p&gt;但要注意，因为后来的投资者如此讨厌价格被提高，他们甚至抵制这种不言自明的推理。只在你愿意失去的投资者身上提高价格，因为有些会愤怒地拒绝。[2]&lt;/p&gt;&#xA;&lt;p&gt;当你在融资方面取得一些成功时，投资者更喜欢你的第二个原因是这使你更自信，而投资者对你的看法是他们对你公司看法的基础。创始人常常惊讶于投资者似乎多么快地知道他们开始成功筹集资金。虽然实际上有很多方法让这种信息在投资者之间传播，但主要载体可能是创始人自己。虽然他们对技术常常一无所知，但大多数投资者很擅长读人。当融资进展顺利时，投资者很快在你增加的自信中感觉到它。（这是普通创始人无法保持扑克脸的能力对你有利的一个情况。）&lt;/p&gt;&#xA;&lt;p&gt;但坦率地说，当你开始筹集资金时，投资者更喜欢你的最重要原因是他们不擅长判断创业公司。判断创业公司即使对最好的投资者来说也很难。平庸的投资者还不如抛硬币。所以当平庸的投资者看到很多其他人想要投资你时，他们假设一定有原因。这导致了硅谷称为&amp;quot;热门交易&amp;quot;的现象，你有的投资者兴趣超出你所能处理的程度。&lt;/p&gt;&#xA;&lt;p&gt;最好的投资者不太受其他投资者意见的影响。将自己的判断与其他人的平均在一起只会稀释自己的判断。但他们在实际意义上间接受到影响，即其他投资者的兴趣施加了截止日期。这是报价产生报价的第四种方式。如果你开始与一家公司接近达成报价，这有时会促使其他公司，甚至是好公司，做出决定，以免失去交易。&lt;/p&gt;&#xA;&lt;p&gt;除非你是谈判奇才（如果你不确定，你就不是），在夸大这一点以推动好投资者决定时要非常小心。创始人一直尝试这种事情，投资者对此非常敏感。如果有的话，过于敏感。但只要你告诉真相，你就是安全的。如果你与投资者B进展得很远，但你宁愿从投资者A那里筹集资金，你可以告诉投资者A这正在发生。这没有操纵。你确实处于困境，因为你真的宁愿从A那里筹集资金，但当A的决定仍然不确定时，你不能安全地拒绝B的报价。&lt;/p&gt;&#xA;&lt;p&gt;但是，不要告诉A B是谁。VC有时会问你在和哪些其他VC交谈，但你永远不应该告诉他们。天使投资人你有时可以告诉其他天使投资人，因为天使投资人彼此合作更多。但如果VC问，只是指出他们不希望你告诉其他公司你的谈话，你觉得有义务对任何你交谈的公司做同样的事情。如果他们推动你，指出你在融资方面缺乏经验——这总是可以安全打的牌——你觉得你必须格外谨慎。[3]&lt;/p&gt;&#xA;&lt;p&gt;虽然很少有创业公司会经历兴趣热潮，但几乎所有的创业公司至少在最初都会经历这种现象的另一面，即群体在远处保持聚集。投资者如此受其他投资者意见影响的事实意味着你总是从某种困境开始。所以不要因为获得第一个承诺有多困难而气馁，因为大部分困难来自这种外部力量。第二个会更容易。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 会计师可能会说，筹集了一百万美元的公司如果是可转换债务就没有更富有，但在实践中，以可转换债务筹集的资金与股权轮筹集的资金几乎没有区别。&lt;/p&gt;&#xA;&lt;p&gt;[2] 创始人常常对此感到惊讶，但投资者可能变得非常情绪化。或者更确切地说是愤慨；这是我观察到的主要情绪；但它非常普遍，有时会导致投资者违背自己的利益行事。我知道一个投资者以1500万美元估值上限投资了一家创业公司。早些时候他有机会以500万美元上限投资，但他拒绝了，因为一个较早投资的朋友能够以300万美元上限投资。&lt;/p&gt;&#xA;&lt;p&gt;[3] 如果一个投资者强烈要求你告诉他你与其他投资者的谈话，这是你想要作为投资者的人吗？&lt;/p&gt;&#xA;&lt;p&gt;感谢Paul Buchheit、Jessica Livingston、Geoff Ralston和Garry Tan阅读本文的草稿。&lt;/p&gt;</description>
    </item>
    <item>
      <title>拉面盈利</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/ramenprofitable/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/ramenprofitable/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/ramenprofitable.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;拉面盈利&#34;&gt;拉面盈利&lt;/h1&gt;&#xA;&lt;p&gt;2009年7月&lt;/p&gt;&#xA;&lt;p&gt;现在&amp;quot;拉面盈利&amp;quot;这个词已经广为流传，我应该准确地解释一下这个概念的含义。&lt;/p&gt;&#xA;&lt;p&gt;拉面盈利意味着创业公司赚到的钱刚好够支付创始人的生活费用。这是一种与传统创业公司所追求的不同形式的盈利能力。传统盈利意味着一场大赌注终于得到了回报，而拉面盈利的主要重要性在于它为你赢得了时间。[1]&lt;/p&gt;&#xA;&lt;p&gt;在过去，创业公司通常只有在筹集并花费了相当多的资金后才能实现盈利。一家制造计算机硬件的公司可能需要5年才能盈利，在此期间他们花费了5000万美元。但当他们实现盈利时，他们的年收入可能达到5000万美元。这种盈利意味着创业公司已经成功了。&lt;/p&gt;&#xA;&lt;p&gt;拉面盈利则是另一个极端：一个创业公司在2个月后就能盈利，即使其月收入只有3000美元，因为唯一的员工是几个25岁的创始人，他们几乎可以靠很少的钱生活。月收入3000美元并不意味着公司已经成功了。但它确实与传统盈利的公司有共同之处：他们不需要筹集资金来生存。&lt;/p&gt;&#xA;&lt;p&gt;拉面盈利对大多数人来说是一个陌生的概念，因为它直到最近才变得可行。它对很多创业公司来说仍然不可行；例如，对大多数生物技术创业公司来说就不行；但对许多软件创业公司来说却是可行的，因为它们现在如此便宜。对许多公司来说，唯一的真正成本是创始人的生活费用。&lt;/p&gt;&#xA;&lt;p&gt;这种盈利能力的主要意义在于你不再受投资者的摆布。如果你仍在亏损，那么最终你将不得不筹集更多资金或关闭公司。一旦你实现了拉面盈利，这种痛苦的选择就消失了。你仍然可以筹集资金，但你现在不必这样做。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;不需要资金最明显的优势是你可以获得更好的条件。如果投资者知道你需要资金，他们有时会利用你。有些人甚至会故意拖延，因为他们知道随着资金耗尽，你会变得越来越顺从。&lt;/p&gt;&#xA;&lt;p&gt;但拉面盈利还有三个不太明显的优势。一是它让你对投资者更有吸引力。如果你已经盈利了，无论规模多么小，它都表明（a）你至少能让某人付钱给你，（b）你认真对待构建人们想要的东西，（c）你有足够的自律来保持低支出。&lt;/p&gt;&#xA;&lt;p&gt;这让投资者感到放心，因为你已经解决了他们最大的三个担忧。他们通常会资助有聪明创始人和大市场的公司，但最终仍然失败。当这些公司失败时，通常是因为（a）人们不愿意为他们制作的东西付费，例如因为向他们销售太难，或者市场还没有准备好，（b）创始人解决了错误的问题，而没有关注用户的需求，或者（c）公司在开始赚钱之前花费太多并耗尽了资金。如果你实现了拉面盈利，你已经避免了这些错误。&lt;/p&gt;&#xA;&lt;p&gt;拉面盈利的另一个优势是它对士气有好处。当你刚开始创办公司时，公司往往感觉相当理论化。它在法律上是一家公司，但当你称之为公司时，你感觉自己在说谎。当人们开始向你支付可观金额时，公司开始感觉真实。而你自己的生活费用是你感受最深的里程碑，因为在那个时刻未来发生了翻转。现在生存是默认状态，而不是死亡。&lt;/p&gt;&#xA;&lt;p&gt;在创业公司中，这种规模的士气提升非常有价值，因为运营创业公司的精神压力是导致困难的原因。创业公司仍然非常罕见。为什么更多的人不去做？财务风险？很多25岁的年轻人无论如何都不存钱。长时间工作？很多人在常规工作中工作时间同样长。阻止人们创办创业公司的是对承担如此多责任的恐惧。这不是非理性的恐惧：真的很难承受。任何能减轻你一些负担的事情都会大大增加你生存的机会。&lt;/p&gt;&#xA;&lt;p&gt;一个达到拉面盈利的创业公司成功的可能性可能比失败的可能性更大。考虑到创业公司结果的二元分布：你要么失败，要么赚很多钱，这是相当令人兴奋的。&lt;/p&gt;&#xA;&lt;p&gt;拉面盈利的第四个优势是最不明显的，但可能是最重要的。如果你不需要筹集资金，你就不必中断公司的工作去做这件事。&lt;/p&gt;&#xA;&lt;p&gt;筹集资金非常分散注意力。如果你的生产力能达到以前的三分之一，你就很幸运了。这种情况可能会持续数月。&lt;/p&gt;&#xA;&lt;p&gt;直到今年早些时候，我才理解（或者说记起）为什么筹集资金如此分散注意力。我注意到我们资助的创业公司在转向筹集资金时通常会停滞不前，但直到YC自己筹集资金时我才确切记得为什么。我们相对来说比较顺利；我询问的第一个人就答应了；但是花了数月时间来敲定细节，在那段时间里我几乎没有完成任何实际工作。为什么？因为我一直在思考这个问题。&lt;/p&gt;&#xA;&lt;p&gt;在任何给定时间，创业公司往往有一个最紧迫的问题。这是你晚上入睡时和早上洗澡时思考的问题。当你开始筹集资金时，这成为你思考的问题。你早上只洗一次澡，如果你在洗澡时思考投资者，那么你就不是在思考产品。&lt;/p&gt;&#xA;&lt;p&gt;而如果你可以选择何时筹集资金，你可以选择一个不在其他事情中间的时间，你可能还可以坚持要求这轮融资快速结束。如果你不在乎它是否完成，你甚至可以避免让这轮融资占据你的思想。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;拉面盈利的含义不超过其定义所暗示的。例如，它并不意味着你在&amp;quot;自举&amp;quot;创业公司——即你永远不会接受投资者的资金。经验上这似乎不太有效。很少有创业公司在没有接受投资的情况下成功。也许随着创业公司变得更便宜，这会变得更加普遍。另一方面，资金就在那里，等待被投资。如果创业公司不那么需要它，他们将能够以更好的条件获得它，这将使他们更倾向于接受它。这将倾向于产生一种平衡。[2]&lt;/p&gt;&#xA;&lt;p&gt;拉面盈利不暗示的另一件事是Joe Kraus的想法，即你应该在将产品投入测试版时将商业模式也投入测试版。他认为你应该从一开始就让人们付钱给你。我认为这太局限了。Facebook没有这样做，而且他们比大多数创业公司做得更好。立即赚钱对他们来说不仅不必要，而且可能有害。我确实认为Joe的规则对许多创业公司可能有用。不过，当创始人看起来不专注时，我有时建议他们尝试让客户为他们做的一些事情付费，希望这种约束会促使他们采取行动。&lt;/p&gt;&#xA;&lt;p&gt;Joe的想法和拉面盈利之间的区别在于，拉面盈利的公司不必以最终会赚钱的方式赚钱。它只需要赚钱。最著名的例子是Google，最初通过向Yahoo等网站许可搜索来赚钱。&lt;/p&gt;&#xA;&lt;p&gt;拉面盈利有缺点吗？可能最大的危险是它可能使你变成一家咨询公司。创业公司必须是产品公司，从某种意义上说，是制作每个人使用的单一东西。创业公司的定义特质是它们增长快，而咨询无法像产品那样扩展。[3] 但是通过咨询每月赚3000美元很容易；事实上，这对于合同编程来说是一个低费率。所以可能有一种滑向咨询的诱惑，并告诉自己你是一家拉面盈利的创业公司，而实际上你根本不是创业公司。&lt;/p&gt;&#xA;&lt;p&gt;一开始做一些咨询类型的工作是可以的。创业公司通常一开始必须做一些奇怪的事情。但请记住，拉面盈利不是目的地。创业公司的目标是变得非常大；拉面盈利是避免在路上死亡的技巧。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] &amp;ldquo;拉面盈利&amp;quot;中的&amp;quot;拉面&amp;quot;指的是速食拉面，这差不多是最便宜的食物了。&lt;/p&gt;&#xA;&lt;p&gt;请不要按字面意思理解这个词。只靠速食拉面生活会非常不健康。米饭和豆类是更好的食物来源。如果你没有电饭煲，请先投资一个。&lt;/p&gt;&#xA;&lt;h3 id=&#34;两人份米饭和豆子&#34;&gt;两人份米饭和豆子&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;n 橄榄油或黄油&lt;/li&gt;&#xA;&lt;li&gt;n 黄洋葱&lt;/li&gt;&#xA;&lt;li&gt;其他新鲜蔬菜；尝试不同种类&lt;/li&gt;&#xA;&lt;li&gt;3n 瓣大蒜&lt;/li&gt;&#xA;&lt;li&gt;n 12盎司罐白豆、芸豆或黑豆&lt;/li&gt;&#xA;&lt;li&gt;n 块Knorr牛肉或蔬菜汤块&lt;/li&gt;&#xA;&lt;li&gt;n 茶匙新鲜研磨黑胡椒&lt;/li&gt;&#xA;&lt;li&gt;3n 茶匙孜然粉&lt;/li&gt;&#xA;&lt;li&gt;n 杯干米饭，最好是糙米&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;将米饭放入电饭煲。按照米包装上的说明加水。（默认：每杯米2杯水。）打开电饭煲然后就不用管它了。&lt;/p&gt;&#xA;&lt;p&gt;切碎洋葱和其他蔬菜，在油中用较低火候煎炒至洋葱呈玻璃状。加入切碎的大蒜、胡椒、孜然和更多的脂肪，搅拌。保持低火。再煮2或3分钟，然后加入豆子（不要沥干豆子），搅拌。投入汤块，盖上盖子，在较低火候上再煮至少10分钟。勤加搅拌以避免粘锅。&lt;/p&gt;&#xA;&lt;p&gt;如果你想省钱，从折扣店买大罐装的豆子。批量购买香料也便宜得多。如果你附近有印度杂货店，他们会用与超市小罐相同的价格卖大袋孜然。&lt;/p&gt;&#xA;&lt;p&gt;[2] 权力从投资者转向创始人实际上很可能会增加风险投资业务的规模。我认为投资者目前对创始人过于严厉。如果他们被迫停止，整个风险投资业务会运作得更好，你可能会看到类似于取消限制性法律时总是看到的贸易增长。&lt;/p&gt;&#xA;&lt;p&gt;投资者是创始人痛苦的最大来源之一；如果他们停止造成如此多的痛苦，成为创始人会更好；如果成为创始人更好，更多的人会去做。&lt;/p&gt;&#xA;&lt;p&gt;[3] 可以想象，一个创业公司可以通过将咨询转化为可扩展的形式而变得庞大。但如果他们这样做，他们就真的成为了一家产品公司。&lt;/p&gt;&#xA;&lt;p&gt;感谢Jessica Livingston阅读本文草稿。&lt;/p&gt;&#xA;&lt;p&gt;日文翻译&lt;/p&gt;</description>
    </item>
    <item>
      <title>招聘已经过时</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/hiring/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/hiring/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/hiring.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;招聘已经过时&#34;&gt;招聘已经过时&lt;/h1&gt;&#xA;&lt;p&gt;2005年5月&lt;/p&gt;&#xA;&lt;p&gt;（本文源于在伯克利CSUA的演讲。）&lt;/p&gt;&#xA;&lt;p&gt;现在互联网上的三大巨头是雅虎、谷歌和微软。他们创始人的平均年龄：24岁。所以现在已经很确定地建立了研究生可以创办成功公司的观念。如果研究生能做到，为什么本科生不能呢？&lt;/p&gt;&#xA;&lt;p&gt;像技术领域的一切一样，创办创业公司的成本已经急剧下降。现在它如此之低，以至于消失在了噪音中。创办基于网络的创业公司的主要成本是食物和房租。这意味着创办公司并不比做一个彻底的懒虫花费更多。如果你准备靠拉面生活，你很可能用一万美元的种子资金就可以创办一家创业公司。&lt;/p&gt;&#xA;&lt;p&gt;创办公司的成本越低，你需要投资者的许可来做的就越少。所以很多现在永远无法创办公司的人将能够创办公司。&lt;/p&gt;&#xA;&lt;p&gt;最有趣的子集可能是那些二十出头的人。我对拥有投资者想要的一切除了智力的创始人，或者除了精力以外的一切都不感兴趣的创始人并不那么兴奋。被新的更低门槛解放的最有前途的群体是那些拥有投资者想要的一切除了经验的人。&lt;/p&gt;&#xA;&lt;h2 id=&#34;市场价格&#34;&gt;市场价格&lt;/h2&gt;&#xA;&lt;p&gt;我曾经声称书呆子在中学不受欢迎主要是因为他们有比全职追求受欢迎更重要的事情要做。有些人说我只是在告诉人们他们想听的话。好吧，我现在要以一种壮观的方式来这样做：我认为大学生被低估了。&lt;/p&gt;&#xA;&lt;p&gt;或者更准确地说，我认为很少有人意识到20岁人价值的巨大差异。有些，确实，不是很能干。但其他人比几乎所有30岁的人更能干。[1]&lt;/p&gt;&#xA;&lt;p&gt;直到现在，问题一直在于很难挑选出他们。世界上每个风险投资家，如果他们能回到过去，都会尝试投资微软。但当时会有谁投资？有多少人会意识到这个特定的19岁少年是比尔·盖茨？&lt;/p&gt;&#xA;&lt;p&gt;很难判断年轻人，因为（a）他们变化很快，（b）他们之间有很大差异，（c）他们个人前后不一致。最后一点是个大问题。当你年轻时，即使你很聪明，你偶尔也会说蠢话做蠢事。所以如果算法是过滤掉说蠢话的人，就像许多投资者和雇主无意识做的那样，你会得到很多误报。&lt;/p&gt;&#xA;&lt;p&gt;大多数刚从大学招聘人的组织只意识到22岁人的平均价值，这并不高。因此，二十世纪的大多数理念是每个人都必须从某种入门级工作的实习生开始。组织意识到进来的人流有很大差异，但他们没有追求这个想法，而是倾向于压制它，相信即使是最有前途的孩子从底层开始也是好的，这样他们就不会头脑膨胀。&lt;/p&gt;&#xA;&lt;p&gt;最有生产力的年轻人总是被大组织低估，因为年轻人还没有表现可以衡量，而且对他们能力的任何猜测错误都会趋向于平均值。&lt;/p&gt;&#xA;&lt;p&gt;一个特别有生产力的22岁人该做什么？你能做的一件事是绕过组织，直接到用户那里。任何雇佣你的公司，从经济上讲，都在作为顾客的代理。他们给你的薪酬率（尽管他们可能没有意识到这一点）是试图猜测你对用户的价值。但有一种方法可以上诉他们的判断。如果你愿意，你可以选择通过创办自己的公司来直接被用户估值。&lt;/p&gt;&#xA;&lt;p&gt;市场比任何雇主都要有洞察力得多。而且它是完全非歧视性的。在互联网上，没人知道你是一条狗。更重要的是，没人知道你22岁。用户关心的只是你的网站或软件是否给他们想要的东西。他们不关心背后的人是否是个高中生。&lt;/p&gt;&#xA;&lt;p&gt;如果你真的很有生产力，为什么不让雇主按市场价格付给你薪水？为什么去大公司做普通员工，而你可以创办创业公司让他们收购你来得到你？&lt;/p&gt;&#xA;&lt;p&gt;当大多数人听到&amp;quot;创业公司&amp;quot;这个词时，他们想到的是那些已经上市的名公司。但大多数成功的创业公司都是通过被收购成功的。而且通常收购者不仅想要技术，还想要创造它的人。&lt;/p&gt;&#xA;&lt;p&gt;大公司通常在创业公司盈利之前就收购它们。显然，在这种情况下，他们不是为了收入。他们想要的是开发团队和迄今为止他们构建的软件。当一家创业公司在六个月内被以200或300万美元收购时，这实际上更像是一种签约奖金而不是收购。&lt;/p&gt;&#xA;&lt;p&gt;我认为这种事情会越来越多发生，而且这对每个人都更好。显然，对创办创业公司的人来说更好，因为他们前期得到一大笔钱。但我认为对收购者来说也会更好。大公司的中心问题，也是他们比小公司生产力低得多的主要原因，是难以评估每个人的工作。购买萌芽阶段的创业公司为他们解决了这个问题：收购者在开发人员证明自己之前不用付款。收购者在下行方面受到保护，但仍然获得大部分上行收益。&lt;/p&gt;&#xA;&lt;h2 id=&#34;产品开发&#34;&gt;产品开发&lt;/h2&gt;&#xA;&lt;p&gt;购买创业公司还解决了困扰大公司的另一个问题：他们不能做产品开发。大公司擅长从现有产品中提取价值，但不擅长创造新产品。&lt;/p&gt;&#xA;&lt;p&gt;为什么？值得详细研究这种现象，因为这是创业公司存在的理由。&lt;/p&gt;&#xA;&lt;p&gt;首先，大多数大公司都有某种地盘要保护，这往往会扭曲他们的开发决策。例如，基于网络的应用程序现在很热门，但在微软内部肯定对它们有很多矛盾情绪，因为基于软件的整个想法威胁着桌面。所以微软最终得到的任何基于网络的应用程序，可能像Hotmail一样，是在公司外部开发的。&lt;/p&gt;&#xA;&lt;p&gt;大公司不擅长开发新产品的另一个原因是，做那种事情的人往往在大公司中没有多大权力（除非碰巧是CEO）。颠覆性技术是由颠覆性的人开发的。他们要么不为大公司工作，要么被唯唯诺诺的人智取，相比之下影响力很小。&lt;/p&gt;&#xA;&lt;p&gt;大公司还失败是因为他们通常每种东西只做一个。当你只有一个网络浏览器时，你不能用它做任何真正有风险的事情。如果十个不同的创业公司设计十个不同的网络浏览器，你选择最好的，你可能会得到更好的东西。&lt;/p&gt;&#xA;&lt;p&gt;这个问题更一般的版本是，对公司来说，新想法太多了，无法全部探索。现在可能有500家创业公司认为他们在制造微软可能购买的东西。即使是微软可能也无法管理500个内部开发项目。&lt;/p&gt;&#xA;&lt;p&gt;大公司也不以正确的方式付钱给人。在大公司开发新产品的人无论成功与否都得到大致相同的报酬。在创业公司的人期望如果产品成功就变得富有，如果失败就一无所获。[2] 所以很自然，创业公司的人工作努力得多。&lt;/p&gt;&#xA;&lt;p&gt;大公司的庞大规模本身就是个障碍。在创业公司，开发人员经常被迫直接与用户交谈，无论他们是否愿意，因为没有其他人做销售和支持。做销售很痛苦，但通过尝试向人们推销东西，你比阅读他们在焦点小组中所说的学到更多。&lt;/p&gt;&#xA;&lt;p&gt;然后当然，大公司在产品开发方面很糟糕，因为他们在一切方面都很糟糕。在大公司比小公司发生的一切都慢，而产品开发是必须快速发生的事情，因为你必须经过很多次迭代才能得到好东西。&lt;/p&gt;&#xA;&lt;h2 id=&#34;趋势&#34;&gt;趋势&lt;/h2&gt;&#xA;&lt;p&gt;我认为大公司购买创业公司的趋势只会加速。 remaining的最大障碍之一是骄傲。大多数公司，至少无意识地，觉得他们应该能够在内部开发东西，而购买创业公司在某种程度上是承认失败。因此，就像人们通常对待承认失败一样，他们尽可能推迟它。这使得收购在最终发生时非常昂贵。&lt;/p&gt;&#xA;&lt;p&gt;公司应该做的是在创业公司年轻时就发现它们，在风险投资家把它们膨胀成需要花费数亿美元收购的东西之前。风险投资家添加的大部分内容，收购者无论如何都不需要。&lt;/p&gt;&#xA;&lt;p&gt;为什么收购者不尝试预测他们将不得不以数亿美元收购的公司，并以十分之一或二十分之一的价格及早抓住它们？因为他们无法提前预测赢家？如果他们只支付二十分之一的价格，他们只需要预测到二十分之一那么好就行。他们肯定能做到这一点。&lt;/p&gt;&#xA;&lt;p&gt;我认为收购技术的公司将逐渐学会追逐更早期的创业公司。他们不一定直接收购。解决方案可能是投资和收购的某种混合：例如，购买公司的一部分并获得以后购买其余部分的选择权。&lt;/p&gt;&#xA;&lt;p&gt;当公司购买创业公司时，他们有效地融合了招聘和产品开发。我认为这比分别做两件事更有效，因为你总是得到真正致力于他们所做事情的人。&lt;/p&gt;&#xA;&lt;p&gt;此外，这种方法产生了已经很好合作的开发团队。他们之间的任何冲突都在创业公司的火热考验中解决了。到收购者得到他们时，他们在互相完成对方的句子。这在软件中很有价值，因为如此多的错误发生在不同人代码之间的边界上。&lt;/p&gt;&#xA;&lt;h2 id=&#34;投资者&#34;&gt;投资者&lt;/h2&gt;&#xA;&lt;p&gt;创办公司越来越便宜不仅让黑客相对于雇主有更多权力。它也让他们相对于投资者有更多权力。&lt;/p&gt;&#xA;&lt;p&gt;风险投资家中的传统智慧是，不应该允许黑客经营自己的公司。创始人应该接受MBA作为他们的老板，自己承担某种首席技术官的头衔。可能有情况下这是个好主意。但我认为创始人将越来越能够就控制问题推回去，因为他们不再像过去那样需要投资者的钱。&lt;/p&gt;&#xA;&lt;p&gt;创业公司是一个相对较新的现象。仙童半导体被认为是第一家风险投资支持的创业公司，他们成立于1959年，不到五十年前。以社会变化的时间尺度衡量，我们现在拥有的还是测试版。所以我们不应该假设创业公司现在的工作方式就是它们必须工作的方式。&lt;/p&gt;&#xA;&lt;p&gt;仙童需要很多钱才能开始。他们必须建造实际的工厂。现在基于网络的创业公司的第一轮风险融资资金花在什么上？更多的钱不能让软件写得更快；设施不需要，因为现在那些可以相当便宜；钱真正能为你买到的只是销售和营销。我承认销售队伍是有价值的。但营销越来越无关紧要。在互联网上，任何真正好的东西都会通过口碑传播。&lt;/p&gt;&#xA;&lt;p&gt;投资者的权力来自金钱。当创业公司需要更少的钱时，投资者对他们的权力就更小。所以未来的创始人可能不必接受新的CEO，如果他们不想要的话。风险投资家将不得不被踢着尖叫地沿着这条路走，但就像许多人们必须被踢着尖叫着推向的事情一样，这可能实际上对他们有好处。&lt;/p&gt;&#xA;&lt;p&gt;谷歌是事情发展方向的一个标志。作为资助的条件，他们的投资者坚持他们雇佣一个有经验的老家伙作为CEO。但据我所知，创始人没有 just 屈服并接受风险投资家想要的任何人。他们推迟了整整一年，当他们最终接受CEO时，他们选择了一个拥有计算机科学博士学位的人。&lt;/p&gt;&#xA;&lt;p&gt;听起来创始人仍然是公司中最有权力的人，而且从谷歌的表现来看，他们的年轻和缺乏经验似乎并没有伤害他们。确实，我怀疑谷歌比如果创始人在风险投资家想要的时候给他们想要的东西，并在他们获得第一轮融资后让某个MBA接管会做得更好。&lt;/p&gt;&#xA;&lt;p&gt;我不是说风险投资家安装的商业人士没有价值。当然他们有价值。但他们不需要成为创始人的老板，这就是CEO这个头衔的意思。我预测未来风险投资家安装的高管将越来越多地是COO而不是CEO。创始人将直接管理工程，其余的通过COO管理。&lt;/p&gt;&#xA;&lt;h2 id=&#34;开放的笼子&#34;&gt;开放的笼子&lt;/h2&gt;&#xA;&lt;p&gt;与雇主和投资者双方，权力的天平都在慢慢向年轻人转移。然而他们似乎最后一个意识到这一点。只有最有雄心的大学生甚至在毕业时考虑创办自己的公司。大多数人只想找份工作。&lt;/p&gt;&#xA;&lt;p&gt;也许事情就应该这样。也许如果创办创业公司的想法令人生畏，你就过滤掉了不坚定的人。但我怀疑过滤器设置得有点太高。我认为有些人如果尝试的话，能够创办成功的创业公司，而他们却让自己被扫入大公司的进气管道。&lt;/p&gt;&#xA;&lt;p&gt;你有没有注意到，当动物被放出笼子时，他们并不总是意识到门开了？通常他们需要用棍子戳才能出来。博客也发生了类似的事情。人们在1995年本可以在线发布，但博客直到近几年才真正流行起来。1995年我们认为只有专业作家才有权发表他们的想法，而任何这样做的人都是怪人。现在在线发布变得如此流行，以至于每个人都想做，甚至印刷记者。但博客最近不是因为任何技术创新而流行起来；只是花了八年时间让每个人意识到笼子开了。&lt;/p&gt;&#xA;&lt;p&gt;我认为大多数大学生还没有意识到经济笼子是开着的。很多人被父母告诉成功的道路是找到一份好工作。当他们的父母在大学时这是真的，但现在不那么真实了。成功的道路是建造有价值的东西，你不必为现有公司工作才能做到。事实上，如果你不这样做，你往往能做得更好。&lt;/p&gt;&#xA;&lt;p&gt;当我和大学生交谈时，最让我惊讶的是他们多么保守。当然不是政治上。我的意思是他们似乎不想冒险。这是个错误，因为你越年轻，你能承担的风险就越多。&lt;/p&gt;&#xA;&lt;h2 id=&#34;风险&#34;&gt;风险&lt;/h2&gt;&#xA;&lt;p&gt;风险和回报总是成比例的。例如，股票比债券风险更大，而且随着时间的推移总是有更大的回报。那么为什么有人投资债券呢？问题在于&amp;quot;随着时间的推移&amp;quot;这个短语。股票在三十年内会产生更大的回报，但它们可能逐年失去价值。所以你应该投资什么取决于你多快需要钱。如果你年轻，你应该选择你能找到的最有风险的投资。&lt;/p&gt;&#xA;&lt;p&gt;所有这些关于投资的说法可能看起来很理论化。大多数大学生可能债务多于资产。他们可能觉得他们没有什么可以投资的。但那不是真的：他们有时间可以投资，同样的风险规则也适用于此。你二十出头正是承担疯狂职业风险的时候。&lt;/p&gt;&#xA;&lt;p&gt;风险总是与回报成比例的原因是市场力量使然。人们会为稳定性支付额外费用。所以如果你选择稳定性——通过购买债券，或者去大公司工作——那将花费你。&lt;/p&gt;&#xA;&lt;p&gt;风险更大的职业选择平均来说报酬更好，因为对它们的需求更少。像创办创业公司这样的极端选择如此可怕，以至于大多数人甚至不会尝试。所以考虑到赌注，你最终不会遇到你可能期望的那么多竞争。&lt;/p&gt;&#xA;&lt;p&gt;数学是无情的。虽然也许10个创业公司中有9个失败，但成功的一个会付给创始人超过他们在普通工作中赚到的10倍。[3] 这就是创业公司在&amp;quot;平均&amp;quot;意义上报酬更好的意思。&lt;/p&gt;&#xA;&lt;p&gt;记住这一点。如果你创办创业公司，你可能会失败。大多数创业公司都失败。这是行业的本质。但尝试有90%失败几率的事情不一定是个错误，如果你能承担风险的话。40岁时失败，当你有家庭要抚养时，可能是严重的。但如果你22岁失败，那又怎样？如果你大学一毕业就尝试创办创业公司却失败了，你会在23岁时破产但聪明得多。如果你想想，这大致是你希望从研究生课程中得到的东西。&lt;/p&gt;&#xA;&lt;p&gt;即使你的创业公司确实失败了，你也不会损害你在雇主那里的前景。为了确认，我问了一些在大公司工作的朋友。我问了雅虎、谷歌、亚马逊、思科和微软的经理，他们会对两个能力相等的24岁候选人有什么感觉，一个尝试创办了失败的创业公司，另一个大学毕业后两年一直在一家大公司做开发。每个人都回答说他们更 prefer 尝试创办自己公司的人。雅虎的工程负责人Zod Nazem说：&amp;ldquo;我实际上更看重有失败创业公司经历的人。你可以引用我的话！&amp;ldquo;所以你有它了。想被雅虎雇佣吗？创办你自己的公司。&lt;/p&gt;</description>
    </item>
    <item>
      <title>拯救生命的 NFT</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/nft/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/nft/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/nft.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;拯救生命的-nft&#34;&gt;拯救生命的 NFT&lt;/h1&gt;&#xA;&lt;p&gt;2021年5月&lt;/p&gt;&#xA;&lt;p&gt;Noora Health，一个我支持了多年的非营利组织，刚刚推出了一种新的 NFT。它有一个戏剧性的名字，&amp;ldquo;拯救数千生命&amp;rdquo;，因为这就是收益要做的事情。&lt;/p&gt;&#xA;&lt;p&gt;Noora 拯救生命已经7年了。他们在南亚的医院运行项目，教导新妈妈回家后如何照顾她们的婴儿。他们现在在165家医院。而且因为他们知道在一家新医院开始前后的数字，他们可以衡量他们产生的影响。这是巨大的。每1000个活产婴儿，他们拯救9个婴儿。&lt;/p&gt;&#xA;&lt;p&gt;这个数字来自 Noora 与 Ariadne Labs 的 Better Birth 团队合作进行的一项研究，该研究涉及28家不同医院的133,733个家庭。Ariadne Labs 是布莱根妇女医院和哈佛大学陈曾熙公共卫生学院的卫生系统创新联合中心。&lt;/p&gt;&#xA;&lt;p&gt;Noora 如此有效，即使你以最保守的方式衡量他们的成本，将他们的整个预算除以拯救的生命数量，拯救一个生命的成本也是我所见过的最低的。1,235美元。&lt;/p&gt;&#xA;&lt;p&gt;对于这个 NFT，他们将发布一份公开报告，追踪这笔特定资金的使用情况，并估计因此拯救的生命数量。&lt;/p&gt;&#xA;&lt;p&gt;NFT 是一个新领域，这种使用方式尤其新颖，但我对其潜力感到兴奋。我很期待看到这次特别拍卖会发生什么，因为与代表已经发生事情的 NFT 不同，这个 NFT 随着价格升高而变得更好。&lt;/p&gt;&#xA;&lt;p&gt;保留价约为250万美元，因为这是名字准确所需要的：这就是拯救2000条生命的成本。但这个 NFT 的价格越高，将拯救的生命就越多。能够写出这样的句子真是太好了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>捐赠</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/donate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/donate/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/donate.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;捐赠&#34;&gt;捐赠&lt;/h1&gt;&#xA;&lt;h2 id=&#34;非限制性捐赠&#34;&gt;非限制性捐赠&lt;/h2&gt;&#xA;&lt;p&gt;2021年3月&lt;/p&gt;&#xA;&lt;p&gt;非营利世界的秘密诅咒是限制性捐赠。如果你没有参与过非营利组织，你可能以前从未听说过这个短语。但如果你参与过，它可能让你感到不安。&lt;/p&gt;&#xA;&lt;p&gt;限制性捐赠意味着捐赠者限制资金用途的捐赠。这在大型捐赠中很常见，可能是默认的。然而，这通常是个坏主意。通常捐赠者希望资金使用的方式不是非营利组织会选择的方式。否则就没有必要限制捐赠。但谁更了解资金需要花在哪里，是非营利组织还是捐赠者？&lt;/p&gt;&#xA;&lt;p&gt;如果非营利组织不比其捐赠者更了解资金需要花在哪里，那么它是不称职的，你根本不应该向它捐赠。&lt;/p&gt;&#xA;&lt;p&gt;这意味着限制性捐赠本质上不是最优的。它要么是对糟糕的非营利组织的捐赠，要么是为错误事物的捐赠。&lt;/p&gt;&#xA;&lt;p&gt;这个原则有几个例外。一个是当非营利组织是伞形组织时。例如，向大学进行限制性捐赠是合理的，因为大学只是名义上的单一非营利组织。另一个例外是当捐赠者确实和非营利组织一样了解资金需要花在哪里时。例如，盖茨基金会有特定目标，经常向个别非营利组织进行限制性捐赠来实现这些目标。但除非你自己是领域专家或向伞形组织捐赠，如果你的捐赠是非限制性的，它会做更多好事。&lt;/p&gt;&#xA;&lt;p&gt;如果限制性捐赠比非限制性捐赠做的好事少，为什么捐赠者经常进行限制性捐赠？部分原因是做好事不是捐赠者的唯一动机。他们通常还有其他动机——留下印记，或产生良好的宣传[1]，或遵守法规或公司政策。许多捐赠者可能从未考虑过限制性和非限制性捐赠之间的区别。他们可能相信为特定目的捐赠资金就是捐赠的工作方式。公平地说，非营利组织并不非常努力地阻止这种错觉。他们负担不起。经营非营利组织的人几乎总是对金钱感到焦虑。他们负担不起与大捐赠者争论的权利。&lt;/p&gt;&#xA;&lt;p&gt;你不能期望在这种不对称的关系中有坦率。所以我会告诉你非营利组织希望他们能告诉你的话。如果你想向非营利组织捐赠，请进行非限制性捐赠。如果你信任他们使用你的资金，就信任他们决定如何使用。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 不幸的是，限制性捐赠往往比非限制性捐赠产生更多宣传。&amp;ldquo;X捐赠资金在非洲建造学校&amp;quot;不仅比&amp;quot;X向Y非营利组织捐赠资金由Y自行决定使用&amp;quot;更有趣，而且更多地将注意力集中在X上。&lt;/p&gt;&#xA;&lt;p&gt;感谢Chase Adam、Ingrid Bassett、Trevor Blackwell和Edith Elliot阅读本文草稿。&lt;/p&gt;</description>
    </item>
    <item>
      <title>控制权</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/control/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/control/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/control.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;控制权&#34;&gt;控制权&lt;/h1&gt;&#xA;&lt;h2 id=&#34;创始人控制权&#34;&gt;创始人控制权&lt;/h2&gt;&#xA;&lt;p&gt;2010年12月&lt;/p&gt;&#xA;&lt;p&gt;我们资助的一个创始人现在正在和风险投资家谈判，他问我创业公司的创始人在A轮融资后保留董事会控制权有多普遍。他说风投告诉他这几乎从未发生过。&lt;/p&gt;&#xA;&lt;p&gt;十年前这是真的。在过去，创始人很少在A轮融资后保持董事会的控制权。传统的A轮董事会由两名创始人、两名风投和一名独立成员组成。最近的结构通常是一名创始人、一名风投和一名独立成员。无论哪种情况，创始人都失去了多数席位。&lt;/p&gt;&#xA;&lt;p&gt;但并非总是如此。马克·扎克伯格在A轮时保持了Facebook董事会的控制权，至今仍然保持着。马克·平库斯也保持了Zynga的控制权。但这些只是例外吗？创始人在A轮后保持控制权有多普遍？我听说过我们资助的公司中有几个案例，但我不确定有多少，所以我给ycfounders邮件列表发了邮件。&lt;/p&gt;&#xA;&lt;p&gt;回复让我感到惊讶。在我们资助的十几家公司中，创始人在A轮融资后仍然拥有董事会多数席位。&lt;/p&gt;&#xA;&lt;p&gt;我觉得我们正处于一个临界点。很多风投仍然表现得好像创始人在A轮融资后保留董事会控制权是闻所未闻的。很多人试图让你感觉很糟糕，即使你只是问一下——好像你想要这样的东西是个新手或控制狂。但我听到的创始人不是新手或控制狂。或者如果他们是，他们就像马克·扎克伯格那样，是风投应该努力资助更多的新手和控制狂。&lt;/p&gt;&#xA;&lt;p&gt;创始人在A轮融资后保留控制权显然是闻所未闻的。除非发生财务灾难，我认为在未来一年内这将成为常态。&lt;/p&gt;&#xA;&lt;p&gt;公司的控制权是一个比在董事会会议上简单投票超过其他方更复杂的问题。投资者通常对某些重大决定拥有否决权，比如出售公司，无论他们拥有多少董事会席位。而且董事会投票很少分裂。事情是在投票前的讨论中决定的，而不是在投票本身中，投票通常是一致的。但如果在这种讨论中意见分歧，知道自己会在投票中失败的一方往往会不那么坚持。这就是董事会控制权的实际意义。你不能简单地做任何你想做的事；董事会仍然必须为股东的利益行事；但如果你拥有多数董事会席位，那么你对股东利益的意见往往会占上风。&lt;/p&gt;&#xA;&lt;p&gt;因此，虽然董事会控制权不是完全控制权，但也不是虚构的。公司内部的感觉必然会有所不同。这意味着如果创始人在A轮融资后保留董事会控制权成为常态，这将改变整个创业世界的感觉方式。&lt;/p&gt;&#xA;&lt;p&gt;转向新规范的速度可能出人意料地快，因为能够保留控制权的创业公司往往是最好的那些。它们是为其他创业公司和风投设定趋势的公司。&lt;/p&gt;&#xA;&lt;p&gt;风投在与创业公司谈判时严苛的很多原因是，他们不好意思回到合伙人那里看起来像是被打败了。当他们签署投资意向书时，他们希望能够吹嘘他们获得的好条款。很多人个人并不那么在意创始人是否保留董事会控制权。他们只是不想看起来像是做出了让步。这意味着如果让创始人保留控制权不再被视为让步，它将迅速变得更加普遍。&lt;/p&gt;&#xA;&lt;p&gt;就像很多强加给风投的变化一样，这个变化最终不会像他们想象的那样成为大问题。风投仍然能够说服；他们只是不能强迫。而他们不得不诉诸强迫的创业公司并不是重要的那些。风投从少数大成功案例中赚取大部分资金，而那些不是他们。&lt;/p&gt;&#xA;&lt;p&gt;知道创始人将保持董事会的控制权甚至可能帮助风投做出更好的选择。如果他们知道不能解雇创始人，他们将不得不选择他们可以信任的创始人。而这才是他们一直以来应该选择的人。&lt;/p&gt;&#xA;&lt;p&gt;感谢Sam Altman、John Bautista、Trevor Blackwell、Paul Buchheit、Brian Chesky、Bill Clerico、Patrick Collison、Adam Goldstein、James Lindenbaum、Jessica Livingston和Fred Wilson阅读本文的草稿。&lt;/p&gt;</description>
    </item>
    <item>
      <title>教训</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/lesson/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/lesson/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/lesson.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;教训&#34;&gt;教训&lt;/h1&gt;&#xA;&lt;h2 id=&#34;需要忘掉的教训&#34;&gt;需要忘掉的教训&lt;/h2&gt;&#xA;&lt;p&gt;2019年12月&lt;/p&gt;&#xA;&lt;p&gt;你在学校学到的最有害的东西，不是你在任何特定课程中学到的东西。而是学会如何获得好成绩。&lt;/p&gt;&#xA;&lt;p&gt;当我在大学时，一个特别认真的哲学研究生曾经告诉我，他从不关心在一门课中得到什么成绩，只关心从中学到了什么。这句话一直留在我脑海里，因为这是我唯一一次听到有人这么说。&lt;/p&gt;&#xA;&lt;p&gt;对我来说，就像大多数学生一样，对我所学东西的测量完全支配了我在大学的实际学习。我相当认真；我对上过的大多数课程都真正感兴趣，而且我很努力学习。然而，我学习最努力的时候是为考试而学习的时候。&lt;/p&gt;&#xA;&lt;p&gt;理论上，考试就像它们的名字所暗示的那样：对你课堂所学内容的测试。理论上，你不需要为一门课的考试做任何准备，就像你不需要为验血做准备一样。理论上，你通过上课、参加讲座、做阅读和/或作业来学习，之后的考试只是测量你学得有多好。&lt;/p&gt;&#xA;&lt;p&gt;实际上，正如阅读这篇文章的几乎每个人都会知道的，情况是如此不同，以至于听到这个关于课程和考试应该如何工作的解释就像听到一个意思已经完全改变的词的词源。实际上，&amp;ldquo;为考试而学习&amp;quot;这个短语几乎是多余的，因为那时才是真正学习的时候。勤奋和懒散的学生之间的区别在于前者努力学习考试，而后者不这样做。没有人在学期开始两周后就熬夜学习。&lt;/p&gt;&#xA;&lt;p&gt;尽管我是一个勤奋的学生，但我在学校做的几乎所有工作都是为了在某些事情上获得好成绩。&lt;/p&gt;&#xA;&lt;p&gt;对许多人来说，前一句话中有&amp;quot;尽管&amp;quot;这个词似乎很奇怪。我不是在陈述一个同义反复吗？勤奋学生不就是全优学生吗？这就是学习和成绩的混淆在多大程度上渗透了我们的文化。&lt;/p&gt;&#xA;&lt;p&gt;如果学习和成绩混为一谈，有那么糟糕吗？是的，很糟糕。直到大学毕业几十年后，当我运行Y Combinator时，我才意识到它有多糟糕。&lt;/p&gt;&#xA;&lt;p&gt;当我是学生时，我当然知道为考试学习和实际学习远非一回事。至少，你在考试前一天晚上塞进脑子的知识不会保留。但问题比这更糟。真正的问题是大多数考试远没有达到它们应该测量的东西。&lt;/p&gt;&#xA;&lt;p&gt;如果考试真的是学习的测试，情况就不会那么糟糕。获得好成绩和学习会趋于一致，只是晚了一点。问题是给学生的大多数考试都非常容易被&amp;quot;黑客攻击&amp;rdquo;。大多数获得好成绩的人都知道这一点，而且知道得太清楚，以至于他们甚至不再质疑这一点。当你意识到如果不这样做听起来多么天真时，你就会明白。&lt;/p&gt;&#xA;&lt;p&gt;假设你正在上一门中世纪历史的课程，期末考试即将来临。期末考试应该是对你中世纪历史知识的测试，对吧？所以如果现在和考试之间有几天时间，如果你想考试考得好，最好的利用时间方式肯定是阅读你能找到的关于中世纪历史的最好的书。然后你就会对此了解很多，并且在考试中表现很好。&lt;/p&gt;&#xA;&lt;p&gt;不，不，不，经验丰富的学生对自己说。如果你只是阅读关于中世纪历史的好书，你学到的大部分东西都不会出现在考试中。你想读的不是好书，而是这门课的讲义和指定阅读。而且即使大部分内容你也可以忽略，因为你只需要担心可能作为考试问题出现的那种东西。你在寻找明确定义的信息块。如果指定的阅读材料中有关于某个微妙点的有趣题外话，你可以安全地忽略它，因为那不是可能成为考试问题的那种东西。但如果教授告诉你1378年分裂有三个根本原因，或者黑死病有三个主要后果，你最好知道它们。而且它们是否确实是原因或后果并不重要。就这门课而言，它们就是。&lt;/p&gt;&#xA;&lt;p&gt;在大学里，通常有旧考试的副本流传，这些进一步缩小了你必须学习的范围。除了了解这位教授问什么类型的问题外，你通常还会得到实际的考试题目。许多教授会重复使用它们。教一门课10年后，很难不这样做，至少是不经意地。&lt;/p&gt;&#xA;&lt;p&gt;在某些课程中，你的教授会有某种政治观点要表达，如果是这样，你也必须表达。这种需求因课程而异。在数学或硬科学或工程学课程中，很少需要这样做，但在光谱的另一端，有些课程不这样做你就无法获得好成绩。&lt;/p&gt;&#xA;&lt;p&gt;在一门关于x的课程中获得好成绩与大量学习x是如此不同，以至于你必须选择其中一个，如果学生选择成绩，你不能责怪他们。每个人都用成绩来评判他们——研究生院、雇主、奖学金，甚至他们自己的父母。&lt;/p&gt;&#xA;&lt;p&gt;我喜欢学习，我真的很享受我在大学里写的一些论文和程序。但是，我是否曾经在某个班级交了论文后，坐下来为好玩而再写一篇？当然没有。我还有其他课程要交。如果必须在学习和成绩之间做出选择，我选择了成绩。我来上大学不是为了做得不好。&lt;/p&gt;&#xA;&lt;p&gt;任何关心获得好成绩的人都必须玩这个游戏，否则他们会被那些这样做的人超越。在精英大学，这意味着几乎每个人，因为不关心获得好成绩的人可能一开始就不会在那里。结果是学生们竞争最大化学习和获得好成绩之间的差距。&lt;/p&gt;&#xA;&lt;p&gt;为什么考试这么糟糕？更准确地说，为什么它们如此容易被&amp;quot;黑客攻击&amp;quot;？任何有经验的程序员都能回答这个问题。一个作者没有注意防止被黑客攻击的软件有多容易被黑客攻击？通常它就像漏勺一样多孔。&lt;/p&gt;&#xA;&lt;p&gt;对于任何由权威机构强加的测试，可被黑客攻击是默认设置。给你的考试如此一致地糟糕——如此一致地远离测量它们应该测量的东西——仅仅是因为创建它们的人没有做太多努力来防止它们被黑客攻击。&lt;/p&gt;&#xA;&lt;p&gt;但如果老师的考试可以被黑客攻击，你不能责怪他们。他们的工作是教学，而不是创建无法被黑客攻击的考试。真正的问题是成绩，或者更准确地说，是成绩被过度使用了。如果成绩只是老师告诉学生他们做对了什么做错了什么的一种方式，就像教练给运动员提建议一样，学生就不会被诱惑去黑客攻击考试。但不幸的是，过了某个年龄后，成绩不仅仅是建议。过了某个年龄，每当你在被教导时，你通常也在被评判。&lt;/p&gt;&#xA;&lt;p&gt;我用大学考试作为例子，但那些实际上是最不容易被黑客攻击的。大多数学生一生中参加的所有考试都至少同样糟糕，其中最引人注目的是让他们进入大学的考试。如果进入大学仅仅是让招生官像科学家测量物体质量一样测量你思维质量的问题，我们可以告诉青少年&amp;quot;多学习&amp;quot;然后就这样。你可以从这听起来有多不像高中来判断大学招生作为考试有多糟糕。实际上，雄心勃勃的孩子在高中必须做的那些怪异具体的事情与大学招生可被黑客攻击的程度成正比。你不关心的那些主要是记忆的课程，你必须参加的随机的&amp;quot;课外活动&amp;quot;以展示你&amp;quot;全面发展&amp;quot;，像国际象棋一样人为的标准化考试，你必须写的&amp;quot;论文&amp;quot;大概是想要达到某个非常特定的目标，但你没有被告诉是什么。&lt;/p&gt;&#xA;&lt;p&gt;除了对孩子做的坏事外，这个考试在非常容易被黑客攻击的意义上也很糟糕。如此容易被黑客攻击，以至于整个产业都成长起来去黑客攻击它。这就是考试准备公司和招生顾问的明确目的，但这也是私立学校功能的重要部分。&lt;/p&gt;&#xA;&lt;p&gt;为什么这个特定的考试如此容易被黑客攻击？我想是因为它在测量什么。尽管流行的说法是进入好大学的方法是真正聪明，但精英大学的招生官既不是，也不声称只是在寻找那个。他们在寻找什么？他们在寻找不仅仅是聪明，而是在某种更一般意义上令人钦佩的人。这种更一般的令人钦佩的品质是如何测量的？招生官感觉它。换句话说，他们接受他们喜欢的人。&lt;/p&gt;&#xA;&lt;p&gt;所以大学招生测试的是你是否适合某些群体的品味。嗯，当然这样的考试会很容易被黑客攻击。而且因为它既非常容易被黑客攻击，又有（被认为的）很大利害关系，所以它被黑客攻击的程度无与伦比。这就是为什么它在如此长的时间里如此扭曲你的生活。&lt;/p&gt;&#xA;&lt;p&gt;难怪高中生经常感到疏离。他们生活的形状完全是人为的。&lt;/p&gt;&#xA;&lt;p&gt;但浪费你的时间不是教育系统对你做的最糟糕的事情。最糟糕的事情是它训练你获胜的方式是通过黑客攻击糟糕的测试。这是一个更微妙的问题，直到我看到它发生在其他人身上时我才认识到。&lt;/p&gt;&#xA;&lt;p&gt;当我在Y Combinator开始建议创业创始人时，特别是年轻的创始人，我对他们总是似乎把事情弄得过于复杂的方式感到困惑。他们会问，你如何筹集资金？让风险投资家想投资你的技巧是什么？我会解释，让VC想投资你的最好方法是实际上成为一个好的投资。即使你能欺骗VC投资一个糟糕的创业公司，你也在欺骗自己。你在投资时间到同一个你要求他们投资钱的公司。如果这不是一个好投资，你为什么还要这样做？&lt;/p&gt;&#xA;&lt;p&gt;哦，他们会说，然后停顿一下消化这个启示后，他们会问：什么使创业公司成为一个好的投资？&lt;/p&gt;&#xA;&lt;p&gt;所以我会解释，使创业公司有前途的，不仅仅是在投资者眼中，而且实际上，是增长。理想情况下是收入，但如果不行，就是使用量。他们需要做的是获得大量用户。&lt;/p&gt;&#xA;&lt;p&gt;一个人如何获得大量用户？他们对此有各种想法。他们需要做一个能给他们带来&amp;quot;曝光&amp;quot;的大型发布。他们需要有影响力的人谈论他们。他们甚至知道他们需要在星期二发布，因为那时能得到最多的关注。&lt;/p&gt;&#xA;&lt;p&gt;不，我会解释，那不是获得大量用户的方法。你获得大量用户的方法是让产品真正优秀。然后人们不仅会使用它，还会向他们的朋友推荐，所以一旦你开始，你的增长将是指数级的。&lt;/p&gt;&#xA;&lt;p&gt;在这一点上，我已经告诉了创始人一些你认为会完全显而易见的事情：他们应该通过做出好的产品来做出好的公司。然而，他们的反应就像许多物理学家第一次听到相对论时的反应一样：对其明显天才感到惊讶，同时怀疑如此奇怪的东西不可能正确。好的，他们会尽职地说。你能把我们介绍给某某有影响力的人吗？记住，我们想在星期二发布。&lt;/p&gt;&#xA;&lt;p&gt;有时创始人需要几年时间才能掌握这些简单的教训。不是因为他们懒惰或愚蠢。他们似乎对眼前的事情视而不见。&lt;/p&gt;&#xA;&lt;p&gt;为什么，我问自己，他们总是把事情弄得如此复杂？然后有一天我意识到这不是一个修辞问题。&lt;/p&gt;&#xA;&lt;p&gt;为什么创始人在答案就在眼前的情况下却用错误的方式把自己搞得一团糟？因为那是他们被训练去做的事情。他们的教育教会他们获胜的方式是黑客攻击测试。甚至没有人告诉他们他们正在被训练这样做。年轻的，最近的毕业生，从未面对过非人为的测试。他们认为世界就是这样工作的：当你面对任何类型的挑战时，你要做的第一件事就是弄清楚黑客攻击测试的技巧是什么。这就是为什么对话总是从如何筹集资金开始，因为那读起来像是测试。它出现在YC的结尾。它有数字 attached，更高的数字似乎更好。它一定是测试。&lt;/p&gt;&#xA;&lt;p&gt;世界上肯定有大的部分，获胜的方式是通过黑客攻击测试。这种现象不限于学校。有些人，要么由于意识形态，要么由于无知，声称这对创业公司也是如此。但事实并非如此。事实上，关于创业公司最引人注目的事情之一是你通过简单地做好工作而获胜的程度。就像任何事情一样，有边缘情况，但总的来说，你通过获得用户而获胜，而用户关心的是产品是否做他们想要的事情。&lt;/p&gt;&#xA;&lt;p&gt;为什么我花了这么长时间才理解为什么创始人把创业公司搞得过于复杂？因为我没有明确地意识到学校训练我们通过黑客攻击糟糕的测试而获胜。不仅仅是他们，还有我！我也被训练去黑客攻击糟糕的测试，直到几十年后我才意识到。&lt;/p&gt;&#xA;&lt;p&gt;我活得好像意识到了这一点，但不知道为什么。例如，我避免为大公司工作。但如果你问为什么，我会说是因为它们虚假，或官僚。或者就是讨厌。我从未理解我对大公司的厌恶有多少是由于这样一个事实：你通过黑客攻击糟糕的测试而获胜。&lt;/p&gt;&#xA;&lt;p&gt;同样，测试无法被黑客攻击是吸引我进入创业公司的很大一部分原因。但同样，我没有明确地意识到这一点。&lt;/p&gt;&#xA;&lt;p&gt;我实际上通过逐次逼近实现了可能有闭式解决方案的东西。我逐渐消除了我在黑客攻击糟糕测试方面的训练，而不知道我正在这样做。刚出校门的人能仅仅通过知道恶魔的名字并说消失就驱逐这个恶魔吗？这似乎值得尝试。&lt;/p&gt;&#xA;&lt;p&gt;仅仅明确地谈论这种现象就可能使事情变得更好，因为它的大部分力量来自于我们想当然地认为它。在你注意到它之后，它似乎是房间里的大象，但这是一只伪装得相当好的大象。这种现象是如此古老，如此普遍。它只是疏忽的结果。没有人打算事情变成这样。这只是当你将学习与成绩、竞争和对不可被黑客攻击的天真假设结合在一起时发生的事情。&lt;/p&gt;&#xA;&lt;p&gt;意识到让我困惑最多的两件事——高中的虚假性，以及让创始人看到显而易见的事情的困难——都有相同的原因，这是令人震惊的。这么大的板块这么晚才到位是很少见的。&lt;/p&gt;&#xA;&lt;p&gt;通常当这种情况发生时，它在很多不同的领域都有含义，这个情况似乎也不例外。例如，它表明教育可以做得更好，以及你如何修复它。但它也似乎为所有大公司似乎都有的问题提供了一个潜在答案：我们如何才能更像创业公司？我现在不打算追究所有含义。我在这里想要关注的是它对个人的意义。&lt;/p&gt;&#xA;&lt;p&gt;首先，这意味着大多数雄心勃勃的大学毕业生有一些他们可能想要忘掉的东西。但它也改变了你看待世界的方式。除了看着人们做的所有不同类型的工作并将它们模糊地或多或少吸引人地思考外，你现在可以问一个非常具体的问题，这将以一种有趣的方式对它们进行排序：在这种工作中，你在多大程度上通过黑客攻击糟糕的测试而获胜？&lt;/p&gt;&#xA;&lt;p&gt;如果有一种方法能快速识别糟糕的测试会有所帮助。这里有模式吗？事实证明有。&lt;/p&gt;&#xA;&lt;p&gt;测试可以分为两种：由权威机构强加的测试，和不是的测试。不是由权威机构强加的测试本质上无法被黑客攻击，在没有人声称它们测试的不仅仅是它们实际测试的东西的意义上。例如，足球比赛只是测试谁获胜，而不是哪个球队更好。你可以从评论员事后有时说更好的球队获胜这一事实看出这一点。而由权威机构强加的测试通常是其他东西的代理。课程中的测试应该测量的不仅仅是你在这特定考试中做得如何，而是你在课程中学到了多少。虽然不是由权威机构强加的测试本质上无法被黑客攻击，但由权威机构强加的测试必须被设计得无法被黑客攻击。通常它们不是。所以作为第一近似，糟糕的测试大致相当于由权威机构强加的测试。&lt;/p&gt;&#xA;&lt;p&gt;你可能实际上喜欢通过黑客攻击糟糕的测试而获胜。想必有些人确实如此。但我打赌大多数发现自己做这种工作的人并不喜欢它。他们只是想当然地认为世界就是这样工作的，除非你想退出并成为某种嬉皮工匠。&lt;/p&gt;&#xA;&lt;p&gt;我怀疑许多人隐含地假设在一个有糟糕测试的领域工作是赚大钱的代价。但是，我可以告诉你，这是错误的。过去是真的。在二十世纪中期，当经济由寡头垄断组成时，通往顶层的唯一方式是玩他们的游戏。但现在不是真的。现在有通过做好工作而致富的方法，这也是人们对致富比过去兴奋得多的部分原因。当我还是个孩子时，你要么成为工程师制造很酷的东西，要么通过成为&amp;quot;高管&amp;quot;而赚大钱。现在你可以通过制造很酷的东西而赚大钱。&lt;/p&gt;&#xA;&lt;p&gt;随着工作与权威之间联系的侵蚀，黑客攻击糟糕的测试变得越来越不重要。这种联系的侵蚀是现在发生的最重要趋势之一，我们在人们做的几乎所有类型的工作中都看到它的影响。创业公司是最明显的例子之一，但我们在写作中看到几乎相同的事情。作家不再需要通过出版商和编辑来接触读者；现在他们可以直接去。&lt;/p&gt;&#xA;&lt;p&gt;我越思考这个问题，就越乐观。这似乎是我们没有意识到某件事在多大程度上阻碍了我们，直到它被消除的情况之一。我可以预见整个虚假的建筑 crumbling。想象一下，当越来越多的人开始问自己是否想通过黑客攻击糟糕的测试而获胜，并决定他们不想这样做时会发生什么。那些通过黑客攻击糟糕的测试而获胜的工作类型将会缺乏人才，而那些通过做好工作而获胜的工作类型将会看到最有雄心的人的涌入。随着黑客攻击糟糕的测试的重要性缩小，教育将进化到停止训练我们这样做。想象一下，如果这种情况发生，世界会是什么样子。&lt;/p&gt;&#xA;&lt;p&gt;这不仅是一个个人需要忘掉的教训，也是社会需要忘掉的教训，当我们这样做时，我们会对释放出来的能量感到惊讶。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 如果仅使用测试来测量学习听起来像是不可能的乌托邦，那已经是Lambda School的工作方式了。Lambda School没有成绩。你要么毕业，要么不毕业。测试的唯一目的是在课程的每个阶段决定你是否可以继续到下一个阶段。所以实际上整个学校都是通过/不通过。&lt;/p&gt;&#xA;&lt;p&gt;[2] 如果期末考试由与教授的长时间对话组成，你可以通过阅读关于中世纪历史的好书来准备它。学校中考试的可被黑客攻击性很大程度上是由于同一个测试必须给大量学生参加这一事实。&lt;/p&gt;&#xA;&lt;p&gt;[3] 学习是获得好成绩的天真算法。&lt;/p&gt;&#xA;&lt;p&gt;[4] 黑客攻击有多种含义。有一种狭义的含义，意思是破坏某些东西。这就是一个人黑客攻击糟糕测试的意义。但还有另一种更一般的含义，意思是找到一个令人惊讶的问题解决方案，通常是通过以不同方式思考它。这种意义上的黑客攻击是一件美妙的事情。事实上，人们在糟糕测试上使用的一些黑客攻击技巧令人印象深刻地巧妙；问题不在于黑客攻击，而在于因为测试可被黑客攻击，它们不测试它们应该测试的东西。&lt;/p&gt;</description>
    </item>
    <item>
      <title>散文的时代</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/essay/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/essay/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/essay.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;散文的时代&#34;&gt;散文的时代&lt;/h1&gt;&#xA;&lt;p&gt;2004年9月&lt;/p&gt;&#xA;&lt;p&gt;还记得你在高中时必须写的散文吗？主题句，引言段，支持段落，结论。结论比如说，白鲸记中的亚哈是一个基督式的人物。&lt;/p&gt;&#xA;&lt;p&gt;唉。所以我将试图给出故事的另一面：散文真正是什么，以及如何写散文。或者至少，我是如何写散文的。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;修正&#34;&gt;修正&lt;/h2&gt;&#xA;&lt;p&gt;真正的散文与学校里必须写的东西之间最明显的区别是，真正的散文不仅仅局限于英国文学。当然，学校应该教学生如何写作。但由于一系列历史偶然事件，写作教学与文学研究混在了一起。因此全国各地的学生都不是在写预算很少的棒球队如何与洋基队竞争，或者色彩在时尚中的作用，或者什么构成好的甜点，而是在写狄更斯作品中的象征主义。&lt;/p&gt;&#xA;&lt;p&gt;结果写作被弄得无聊而无意义。谁在乎狄更斯作品中的象征主义？狄更斯本人会对关于色彩或棒球的散文更感兴趣。&lt;/p&gt;&#xA;&lt;p&gt;事情怎么会变成这样？要回答这个问题，我们必须回到将近一千年前。大约在1100年，欧洲在几个世纪的混乱后终于开始喘息，一旦他们有了好奇的奢侈，他们就重新发现了我们称之为&amp;quot;经典&amp;quot;的东西。效果就好像我们被来自另一个太阳系的生物访问过一样。这些早期文明如此复杂，以至于在接下来的几个世纪里，欧洲学者在几乎所有领域的主要工作都是吸收他们所知道的东西。&lt;/p&gt;&#xA;&lt;p&gt;在这个时期，研究古代文本获得了巨大的声望。这似乎是学者所做工作的本质。随着欧洲学术获得势头，它变得越来越不重要；到1350年，想要学习科学的人可以找到比亚里士多德时代更好的老师。[1] 但学校的变化比学术慢。在19世纪，研究古代文本仍然是课程的主干。&lt;/p&gt;&#xA;&lt;p&gt;那么问题的时机成熟了：如果研究古代文本是学术的合法领域，为什么不是现代文本？答案当然是，古典学术的最初存在理由是一种不需要对当代作者进行的智力考古学。但出于明显的原因，没有人想给出那个答案。考古工作基本完成，这意味着研究古典的人如果不是在浪费时间，至少是在处理次要问题。&lt;/p&gt;&#xA;&lt;p&gt;于是现代文学研究开始了。起初有很大的阻力。第一批英国文学课程似乎是由较新的学院提供的，特别是美国的学院。达特茅斯学院、佛蒙特大学、阿默斯特学院和伦敦大学学院在1820年代教授英国文学。但哈佛直到1876年才有英国文学教授，牛津直到1885年才有。（牛津在设立英国文学教授职位之前就有了中文教授。）[2]&lt;/p&gt;&#xA;&lt;p&gt;打破平衡的，至少在美国，似乎是教授不仅应该教书还应该做研究的想法。这个想法（连同博士学位、系，以及整个现代大学的概念）在19世纪末从德国进口。从1876年在约翰霍普金斯大学开始，新模式迅速传播。&lt;/p&gt;&#xA;&lt;p&gt;写作是受害者之一。学院长期以来一直教授英语写作。但你如何对写作进行研究？教数学的教授可以被要求做原创数学，教历史的教授可以被要求写关于历史的学术文章，但教修辞学或写作的教授呢？他们应该研究什么？最接近的似乎是英国文学。[3]&lt;/p&gt;&#xA;&lt;p&gt;因此在19世纪末，写作教学被英语教授继承。这有两个缺点：(a) 文学专家本人不一定是好作家，就像艺术史学家不一定是好画家一样，(b) 写作的题目现在往往是文学，因为那是教授感兴趣的。&lt;/p&gt;&#xA;&lt;p&gt;高中模仿大学。我们痛苦的高中经历是在1892年播下的种子，当时全国教育协会&amp;quot;正式建议将文学和写作在高中课程中统一。&amp;quot;[4] 3R中的写作部分后来变成了英语，产生了奇怪的后果，即高中生现在必须写关于英国文学的文章——在不知不觉中，模仿几十年前英语教授在期刊上发表的任何东西。&lt;/p&gt;&#xA;&lt;p&gt;如果这对学生来说似乎是无意义的练习，也就不足为奇了，因为我们现在离真正的工作有三步之遥：学生在模仿英语教授，英语教授在模仿古典学者，而古典学者仅仅是传统的继承者，这个传统源自700年前迷人且迫切需要的工作。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;无需辩护&#34;&gt;无需辩护&lt;/h2&gt;&#xA;&lt;p&gt;真正的散文与学校让你写的东西之间的另一个大区别是，真正的散文不会采取一个立场然后为它辩护。这个原则，就像我们应该写关于文学的想法一样，结果是一个早已被遗忘的起源的知识遗留物。&lt;/p&gt;&#xA;&lt;p&gt;人们常常错误地认为中世纪的大学大多是神学院。实际上它们更像法学院。至少在我们的传统中，律师是倡导者，被训练来为争论的任何一方辩护，并尽可能为那个立场辩护。无论是原因还是结果，这种精神弥漫在早期大学中。修辞学研究，即有说服力地争论的艺术，占本科课程的三分之一。[5] 讲座后最常见的讨论形式是辩论。这至少名义上保存在我们今天的论文答辩中：大多数人把论文和 dissertation 这两个词当作可以互换的，但最初，至少论文是采取的立场，而 dissertation 是为它辩护的论点。&lt;/p&gt;&#xA;&lt;p&gt;在法律纠纷中辩护可能是必要的邪恶，但这不是获得真理的最佳方式，我想律师会第一个承认。不仅仅是你这样会错过微妙之处。真正的问题是你不能改变问题。&lt;/p&gt;&#xA;&lt;p&gt;然而这个原则被内置在他们在高中教你写的东西的 very 结构中。主题句是你的论点，预先选择，支持段落是你在冲突中打击的 blows，而结论——呃，结论是什么？我在高中时从来不确定。似乎我们应该只是用足够不同的词语重述我们在第一段说的话，以至于没有人能分辨出来。何必呢？但当你理解了这种&amp;quot;散文&amp;quot;的起源，你就能看到结论来自哪里。这是对陪审团的 concluding remarks。&lt;/p&gt;&#xA;&lt;p&gt;好的写作应该有说服力，当然，但它应该有说服力是因为你得到了正确的答案，而不是因为你做得很好。当我把散文的草稿给朋友时，我想知道两件事：哪些部分让他们感到无聊，哪些似乎没有说服力。无聊的部分通常可以通过删减来修复。但我不会试图通过更聪明地争论来修复没有说服力的部分。我需要讨论这个问题。&lt;/p&gt;&#xA;&lt;p&gt;至少我一定把某件事解释得很糟糕。在这种情况下，在谈话过程中我将被迫想出一个更清晰的解释，我可以直接把它纳入散文中。我常常也不得不说的话。但目的从来不是 per se 有说服力。随着读者变得更聪明，有说服力和真实变得相同，所以如果我能说服聪明的读者，我一定接近真理。&lt;/p&gt;&#xA;&lt;p&gt;试图说服的写作可能是一种有效的（或至少不可避免的）形式，但称之为散文在历史上是不准确的。散文是别的东西。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;尝试&#34;&gt;尝试&lt;/h2&gt;&#xA;&lt;p&gt;要理解真正的散文是什么，我们必须再次回到历史，虽然这次不那么远。回到米歇尔·德·蒙田，他在1580年出版了一本他称之为&amp;quot;essais&amp;quot;的书。他做的事情与律师做的事情完全不同，差异体现在名称中。Essayer 是法语动词，意思是&amp;quot;尝试&amp;quot;，而 essai 是一次尝试。散文是你写来试图弄清楚某事的东西。&lt;/p&gt;&#xA;&lt;p&gt;弄清楚什么？你还不知道。所以你不能以论点开始，因为你没有，可能永远不会有一个。散文不以陈述开始，而是以问题开始。在真正的散文中，你不采取立场并辩护。你注意到一扇半开的门，你打开它走进去看看里面是什么。&lt;/p&gt;&#xA;&lt;p&gt;如果你想做的只是弄清楚事情，为什么要写任何东西呢？为什么不只是坐着思考？嗯，这正是蒙田的伟大发现。表达想法有助于形成它们。事实上，帮助这个词太弱了。我散文中最终出现的大部分内容只有当我坐下来写它们时才想到。这就是为什么我写它们。&lt;/p&gt;&#xA;&lt;p&gt;你在学校写的东西，理论上，你只是在向读者解释自己。在真正的散文中，你为自己写作。你在大声思考。&lt;/p&gt;&#xA;&lt;p&gt;但不太一样。就像邀请人们来迫使你清理公寓一样，写别人会读的东西迫使你思考得好。所以有听众确实很重要。我只为自己写的东西不好。它们往往会 peter out。当我遇到困难时，我发现我以几个模糊的问题结束，然后 drift off 去喝杯茶。&lt;/p&gt;&#xA;&lt;p&gt;许多已发表的散文以同样的方式 peter out。特别是新闻杂志 staff writers 写的那种。外部作家倾向于提供辩护立场的社论，这种社论直线走向激动人心（且预先注定）的结论。但 staff writers 感觉有义务写一些&amp;quot;平衡&amp;quot;的东西。因为他们为流行杂志写作，他们从最具放射性争议的问题开始，然后——因为他们为流行杂志写作——他们接着惊恐地退缩。堕胎，支持还是反对？这个团体说一件事。那个团体说另一件事。有一件事是确定的：问题是一个复杂的。（但不要生我们的气。我们没有得出任何结论。）&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;河流&#34;&gt;河流&lt;/h2&gt;&#xA;&lt;p&gt;问题还不够。散文必须提供答案。当然，它们并不总是如此。有时你从一个有希望的问题开始，却一无所获。但那些你不会发表。那些就像得到不确定结果的实验。你发表的散文应该告诉读者一些他还不知道的事情。&lt;/p&gt;&#xA;&lt;p&gt;但你告诉他的事情不重要，只要有趣。我有时被指责为 meandering。在辩护立场的写作中，这将是一个缺陷。在那里你不关心真理。你已经知道你要去哪里，你想直接去那里，blustering 通过障碍物，hand-waving 你走过沼泽地的方式。但这不是你在散文中试图做的。散文应该是寻找真理。如果它不 meander 就会令人怀疑。&lt;/p&gt;</description>
    </item>
    <item>
      <title>散文领域的形态</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/field/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/field/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/field.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;散文领域的形态&#34;&gt;散文领域的形态&lt;/h1&gt;&#xA;&lt;p&gt;2025年6月&lt;/p&gt;&#xA;&lt;p&gt;散文必须告诉人们一些他们还不知道的事情。但人们不知道某件事有三种不同的原因，这产生了三种非常不同的散文。&lt;/p&gt;&#xA;&lt;p&gt;人们不知道某件事的一个原因是如果这件事不重要。这并不意味着它会成为一篇糟糕的散文。例如，你可能会写一篇关于特定车型的好散文。读者会从中学到一些东西。这会丰富他们对世界的认识。对少数读者来说，这甚至可能引发某种顿悟。但除非这是一辆非常不寻常的汽车，否则对每个人来说并不是必须了解的。[1]&lt;/p&gt;&#xA;&lt;p&gt;如果某件事不重要，那么&amp;quot;为什么人们不知道它&amp;quot;这个问题就没有答案。不知道随机的事实是默认状态。但如果你要写重要的事情，你必须问为什么你的读者还不知道它们。是因为他们聪明但缺乏经验，还是因为他们迟钝？&lt;/p&gt;&#xA;&lt;p&gt;所以读者可能还不知道你告诉他们的事情的三个原因是：(a) 它不重要，(b) 他们迟钝，或 (c) 他们缺乏经验。&lt;/p&gt;&#xA;&lt;p&gt;我做这个分类的目的是要说明以下事实，如果我一开始就提出这个事实可能显得有争议，但现在应该很明显了。如果你为聪明的人写重要的事情，你就是在为年轻人写作。&lt;/p&gt;&#xA;&lt;p&gt;或者更准确地说，那是你最有影响力的地方。无论你说什么，对你来说都应该至少有些新意，无论你多大年纪。否则就不是散文了，因为散文是你为了弄清楚某件事而写的东西。但无论你弄清楚什么，对年轻读者来说可能比你更令人惊讶。&lt;/p&gt;&#xA;&lt;p&gt;惊讶有一个连续谱。在一个极端，你读到的东西可以改变你的整个思维方式。《自私的基因》对我就是这样。就像突然看到一个模糊图像的另一种解释：你可以把基因而不是生物体当作主角，当你这样做时，进化就变得更容易理解了。在另一个极端，写作只是把读者已经在想的事情——或者他们以为自己在想的事情——用文字表达出来。&lt;/p&gt;&#xA;&lt;p&gt;散文的影响力是它改变读者思维的程度乘以主题的重要性。但很难在这两方面都做得很好。很难对重要主题有大的新想法。所以在实践中有一个权衡：你可以在中等重要的事情上极大地改变读者的思维，或者在非常重要的事情上稍微改变它。但对于年轻读者，权衡会发生变化。有更多空间来改变他们的思维，所以写重要事情有更大的回报。&lt;/p&gt;&#xA;&lt;p&gt;这种权衡不是有意识的，至少对我来说不是。它更像是一种作家工作的引力场。但每个散文家都在其中工作，无论他们是否意识到这一点。&lt;/p&gt;&#xA;&lt;p&gt;一旦你陈述这一点，这似乎很明显，但我花了很长时间才理解。我知道我想为聪明的人写重要的事情。我凭经验注意到我似乎在为年轻人写作。但我花了几年时间才理解后者是前者的自动结果。事实上，我只是在写这篇散文时才真正弄明白这一点。&lt;/p&gt;&#xA;&lt;p&gt;既然我知道了，我应该改变什么吗？我不这么认为。事实上，看到作家工作领域的形态让我想起我不是在优化其中的回报。我不是在试图惊讶任何特定年龄的读者；我在试图惊讶我自己。&lt;/p&gt;&#xA;&lt;p&gt;我通常决定写什么的方式是跟随好奇心。我注意到一些新事物并深入研究它。改变那可能是个错误。但看到散文领域的形态让我开始思考。什么会惊讶年轻读者？人们倾向于晚学到哪些重要事情？有趣的问题。我应该思考一下。&lt;/p&gt;&#xA;&lt;h3 id=&#34;注释&#34;&gt;注释&lt;/h3&gt;&#xA;&lt;p&gt;[1] 不过，写一篇关于不重要主题的真正好散文很难，因为真正好的散文家不可避免地会把主题引入更深的水域。E.B.怀特可以写一篇关于如何煮土豆的散文，结果充满了永恒的智慧。在这种情况下，当然它就不是关于如何煮土豆了；那只是起点。&lt;/p&gt;&#xA;&lt;p&gt;感谢杰西卡·利文斯顿和迈克尔·尼尔森阅读本文的草稿。&lt;/p&gt;</description>
    </item>
    <item>
      <title>新颖与异端</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/nov/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/nov/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/nov.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;新颖与异端&#34;&gt;新颖与异端&lt;/h1&gt;&#xA;&lt;p&gt;2019年11月&lt;/p&gt;&#xA;&lt;p&gt;如果你发现了新事物，很有可能会被指责为某种形式的异端。&lt;/p&gt;&#xA;&lt;p&gt;要发现新事物，你必须研究那些好但不明显的想法；如果一个想法明显很好，其他人可能已经在研究它了。好想法不明显的一个常见方式是它隐藏在人们非常依恋的错误假设的阴影中。但是，你从研究这样的想法中发现的任何东西都会倾向于掩盖它的错误假设。因此，你会从那些执着于错误假设的人那里得到很多压力。伽利略和达尔文是这种现象的著名例子，但这可能总是抵抗新思想的因素。&lt;/p&gt;&#xA;&lt;p&gt;因此，组织或社会拥有扑灭异端的文化是特别危险的。当你压制异端时，你不仅仅是防止人们反驳你试图保护的错误假设。你还压制了任何间接暗示它是错误的想法。每个珍视的错误假设周围都有一个未探索想法的死区。假设越是荒谬，它创造的死区就越大。&lt;/p&gt;&#xA;&lt;p&gt;然而，这种现象也有积极的一面。如果你在寻找新想法，找到它们的一种方法就是寻找异端。当你从这种方式看问题时，错误假设周围令人沮丧的大死区变成了令人兴奋的新想法大矿。&lt;/p&gt;</description>
    </item>
    <item>
      <title>早期</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/early/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/early/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/early.md&#34;&gt;English version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;早期&#34;&gt;早期&lt;/h1&gt;&#xA;&lt;p&gt;2020年10月&lt;/p&gt;&#xA;&lt;p&gt;阻碍人们做出伟大工作的最大因素之一，就是害怕做出平庸的东西。这种恐惧并非没有道理。许多伟大的项目在早期阶段都会显得不太令人印象深刻，即使对它们的创造者来说也是如此。你必须经历这个阶段才能达到那之后更伟大的工作。但许多人没有做到。大多数人甚至没有达到做出让自己感到尴尬的成果的阶段，更不用说继续前进了。他们太害怕了，甚至不敢开始。&lt;/p&gt;&#xA;&lt;p&gt;想象一下，如果我们能够消除对做出平庸之物的恐惧。想象一下我们能够多做出多少成果。&lt;/p&gt;&#xA;&lt;p&gt;有没有希望消除这种恐惧？我认为有。我认为这里起作用的习惯并不深。&lt;/p&gt;&#xA;&lt;p&gt;创造新事物对我们这个物种来说本身就是一件新事物。这件事一直都在发生，但在过去的几个世纪里，它发生得太慢，以至于对个人来说几乎是看不见的。而且由于我们不需要处理新想法的习俗，我们也没有发展出任何习俗。&lt;/p&gt;&#xA;&lt;p&gt;我们对雄心勃勃项目的早期版本缺乏足够的经验，不知道如何应对它们。我们像对待更完成的工作或不太雄心勃勃的项目一样评判它们。我们没有意识到它们是特殊情况。&lt;/p&gt;&#xA;&lt;p&gt;或者至少，大多数人没有。我自信我们能做得更好的原因之一是，这已经开始发生了。在这方面已经有一些地方生活在未来之中。硅谷就是其中之一：一个不知名的人在研究一个听起来很奇怪的想法，不会像在家里那样自动被 dismissed。在硅谷，人们已经意识到这样做有多危险。&lt;/p&gt;&#xA;&lt;p&gt;处理新想法的正确方法是把它们视为对你想象力的挑战——不仅仅是降低标准，而是完全转换极性，从列举想法不可行的原因，转变为思考它可行的方式。这就是当我遇到有新想法的人时所做的。我已经相当擅长这个，但我有大量的练习。成为 Y Combinator 的合伙人意味着你几乎完全沉浸于由不知名人物提出的奇怪想法中。每六个月你都会面对成千上万的新想法，必须从中筛选，知道在一个结果呈幂律分布的世界里，如果你错过了这个干草堆中的针，将会非常明显。乐观变得紧迫。&lt;/p&gt;&#xA;&lt;p&gt;但我有希望的是，随着时间的推移，这种乐观态度可以变得足够普遍，成为一种社会习俗，而不仅仅是少数专家使用的技巧。毕竟，这是一个极其有利可图的技巧，而且那些 tends to spread quickly.&lt;/p&gt;&#xA;&lt;p&gt;当然，缺乏经验并不是人们对雄心勃勃项目的早期版本过于苛刻的唯一原因。他们这样做也是为了显得聪明。在一个新想法有风险的领域，比如初创公司，那些 dismiss 它们的人实际上更可能是对的。只是当他们的预测按结果加权时不是这样。&lt;/p&gt;&#xA;&lt;p&gt;但人们 dismiss 新想法还有另一个更阴险的原因。如果你尝试一些雄心勃勃的事情，你周围的许多人会有意识或无意识地希望你失败。他们担心如果你尝试一些雄心勃勃的事情并成功了，你会超过他们。在一些国家，这不仅仅是个人缺陷，而是民族文化的一部分。&lt;/p&gt;&#xA;&lt;p&gt;我不会声称硅谷的人们克服这些冲动是因为他们道德更高尚。[1] 许多人希望你成功的原因是他们希望与你一起上升。对投资者来说，这个激励特别明确。他们希望你成功，因为他们希望你在这个过程中让他们致富。但你遇到的许多其他人也可以从你的成功中以某种方式受益。至少，当你出名时，他们可以说他们很久以前就认识你了。&lt;/p&gt;&#xA;&lt;p&gt;但即使硅谷的鼓励态度植根于自身利益，但随着时间的推移，它实际上已经成长为一种善意。鼓励初创公司已经实践了很长时间，已经成为一种习俗。现在，这似乎就是对初创公司应该做的事情。&lt;/p&gt;&#xA;&lt;p&gt;也许硅谷太乐观了。也许它太容易被冒名顶替者愚弄。许多不太乐观的记者想要相信这一点。但他们引用的冒名顶替者名单 suspiciously 很短，而且充满了星号。[2] 如果你用收入作为标准，硅谷的乐观态度似乎比世界其他地方更准确。而且因为它有效，它会传播。&lt;/p&gt;&#xA;&lt;p&gt;当然，新想法不仅仅是新的初创公司想法。对做出平庸之物的恐惧在每个领域都阻碍着人们。但硅谷展示了习俗可以多快地发展以支持新想法。而这反过来又证明，dismiss 新想法并不是深深植根于人性中，以至于无法 unlearn。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;不幸的是，如果你想做新事情，你将面临一个比他人的怀疑更强大的力量：你自己的怀疑。你也会过于严厉地评判自己的早期工作。你如何避免这种情况？&lt;/p&gt;&#xA;&lt;p&gt;这是一个困难的问题，因为你不想完全消除对做出平庸之物的恐惧。正是这种恐惧引导你走向做好工作。你只是想暂时关闭它，就像止痛药暂时关闭疼痛一样。&lt;/p&gt;&#xA;&lt;p&gt;人们已经发现了几种有效的技术。哈代在《一个数学家的辩白》中提到了两个：好的工作不是由&amp;quot;谦逊&amp;quot;的人完成的。例如，在任何学科中，教授的首要职责之一是稍微夸大他的学科的重要性和他在其中的重要性。如果你高估了你正在从事的工作的重要性，那将弥补你对初始结果的错误严厉判断。如果你看着某个东西，它是一个价值100的目标的20%，然后得出结论说它是一个价值200的目标的10%，你对它的预期价值的估计是正确的，即使两个组成部分都是错误的。&lt;/p&gt;&#xA;&lt;p&gt;正如哈代所建议的，稍微过度自信也有帮助。我注意到在许多领域，最成功的人都稍微过度自信。从表面上看，这似乎不太可能。当然，对自己的能力有准确的估计是最优的。怎么可能成为一个错误的优势？因为这个错误补偿了其他来源的反向错误：稍微过度自信使你能够抵御他人的怀疑和你自己的怀疑。&lt;/p&gt;&#xA;&lt;p&gt;无知有类似的效果。如果你是一个足够宽松的完成作品的评判者，那么将早期工作错误地判断为完成工作是安全的。我怀疑培养这种无知是否可能，但经验上它是一个真正的优势，特别是对年轻人来说。&lt;/p&gt;&#xA;&lt;p&gt;度过雄心勃勃项目平庸阶段的另一种方法是与合适的人在一起——在社会逆风中创造一个漩涡。但仅仅收集总是鼓励你的人是不够的。你会学会 discount 那个。你需要能够真正区分丑小鸭和幼天鹅的同事。最能做到这一点的人是那些从事自己类似项目的人，这就是为什么大学部门和研究实验室工作得如此之好。你不需要机构来收集同事。他们自然会聚集，只要有机会。但通过寻找其他试图做新事情的人来加速这个过程是非常值得的。&lt;/p&gt;&#xA;&lt;p&gt;教师实际上是同事的一个特例。教师的工作既是看到早期工作的承诺，也是鼓励你继续。但不幸的是，擅长这个的教师相当稀少，所以如果你有机会向一个学习，抓住它。[3]&lt;/p&gt;&#xA;&lt;p&gt;对一些人来说，依靠纯粹的纪律可能有效：告诉自己你只需要按过初始的垃圾阶段，不要气馁。但像很多&amp;quot;告诉你自己&amp;quot;的建议一样，这比听起来更难。而且随着年龄增长，它会变得更难，因为你的标准会提高。老人确实有一个补偿优势：他们以前经历过这个。&lt;/p&gt;&#xA;&lt;p&gt;如果你少关注你现在的位置，多关注变化率，会有所帮助。如果你能看到它在改进，你就不会太担心做不好的工作。显然，它改进得越快，这越容易。所以当你开始新事物时，如果你能花很多时间在它上面是好的。这是年轻的另一个优势：你倾向于有更大的时间块。&lt;/p&gt;&#xA;&lt;p&gt;另一个常见的技巧是开始时认为新工作是不同类型、要求较低的类型。开始一幅画说它只是一个草图，或者一个新的软件说它只是一个快速的黑客行为。然后你用较低的标准评判你的初始结果。一旦项目滚动起来，你可以偷偷地把它转换成更多的东西。[4]&lt;/p&gt;&#xA;&lt;p&gt;如果你使用能让你快速工作并且不需要太多前期承诺的媒介，这会更容易。当你在笔记本上绘画时，比当你在雕刻石头时，更容易说服自己某物只是一个草图。而且你得到初始结果更快。[5][6]&lt;/p&gt;&#xA;&lt;p&gt;如果你把它视为一种学习方式而不仅仅是制作东西的方式，那么尝试一个有风险的项目会更容易。那么即使项目真的失败了，你仍然会从中获益。如果问题定义得足够尖锐，失败本身就是知识：如果你试图证明的定理结果证明是假的，或者你使用某种尺寸的结构构件，它在压力下失效了，你学到了一些东西，即使它不是你想学的东西。[7]&lt;/p&gt;&#xA;&lt;p&gt;一个对我来说特别有效的动机是好奇心。我喜欢尝试新事物，只是为了看看它们会变成什么样子。我们本着这种精神创立了 Y Combinator，这也是我在研究 Bel 时保持动力的主要因素之一。在长期使用各种方言的 Lisp 之后，我很好奇看到它的固有形状是什么：如果你完全遵循公理方法，你最终会得到什么。&lt;/p&gt;&#xA;&lt;p&gt;但为了不被看起来平庸的早期努力所气馁，你必须对自己玩心理游戏，这有点奇怪。你试图 trick 自己相信的东西实际上是事实。一个雄心勃勃项目的看起来平庸的早期版本确实比它看起来的更有价值。所以最终的解决方案可能是教自己认识到这一点。&lt;/p&gt;&#xA;&lt;p&gt;一种方法是研究做过伟大工作的人的历史。他们在早期在想什么？他们做的第一件事是什么？有时很难得到这个问题的准确答案，因为人们常常对自己的早期工作感到尴尬，并且很少努力发表它。（他们也错误地判断它。）但当你能够准确了解某人在通往某条伟大工作道路上迈出的第一步时，它们往往相当微弱。[8]&lt;/p&gt;&#xA;&lt;p&gt;也许如果你研究足够多的这样的案例，你可以教自己成为早期工作的更好评判者。那么你就能免疫于他人的怀疑和自己对做出平庸之物的恐惧。你会看到早期工作本身的本质。&lt;/p&gt;&#xA;&lt;p&gt;奇怪的是，过于严厉地评判早期工作的问题的解决方案是意识到我们对它的态度本身就是早期工作。把一切都放在同一标准是一个粗略的第1版。我们已经在进化更好的习俗，我们已经能看到回报会有多大的迹象。&lt;/p&gt;&#xA;&lt;h3 id=&#34;注释&#34;&gt;注释&lt;/h3&gt;&#xA;&lt;p&gt;[1] 这个假设可能过于保守。有一些证据表明，历史上湾区吸引的是不同类型的人，比如纽约市。&lt;/p&gt;&#xA;&lt;p&gt;[2] 他们最喜欢的一个是 Theranos。但 Theranos 股权表最显著的特征是硅谷公司的缺席。记者被 Theranos 愚弄了，但硅谷投资者没有。&lt;/p&gt;</description>
    </item>
    <item>
      <title>时髦问题</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/fp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/fp/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/fp.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;时髦问题&#34;&gt;时髦问题&lt;/h1&gt;&#xA;&lt;p&gt;2019年12月&lt;/p&gt;&#xA;&lt;p&gt;我在许多不同领域都看到了相同的模式：尽管很多人在这个领域努力工作，但只有一小部分可能性空间被探索过，因为他们都在做相似的事情。&lt;/p&gt;&#xA;&lt;p&gt;即使在决定做什么工作时，最聪明、最有想象力的人也出奇地保守。那些在其他方面做梦也不会想到追求时髦的人，却被吸引去解决时髦问题。&lt;/p&gt;&#xA;&lt;p&gt;如果你想尝试解决不时髦的问题，最好的去处之一是那些人们认为已经被完全探索过的领域：散文、Lisp、风险投资——你可能在这里注意到一个模式。如果你能找到一个进入一个很大但显然已经过时领域的新方法，你发现的任何东西的价值都会因其巨大的表面积而倍增。&lt;/p&gt;&#xA;&lt;p&gt;防止被吸引去做与其他人相同的事情的最佳保护可能是真正热爱你正在做的事情。然后，即使你犯了与其他人相同的错误，认为它太边缘而不重要，你也会继续做这件事。&lt;/p&gt;&#xA;&lt;p&gt;日文翻译&lt;/p&gt;&#xA;&lt;p&gt;阿拉伯文翻译&lt;/p&gt;&#xA;&lt;p&gt;法文翻译&lt;/p&gt;</description>
    </item>
    <item>
      <title>更优</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/better/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/better/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/better.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;更优&#34;&gt;更优&lt;/h1&gt;&#xA;&lt;p&gt;更优的贝叶斯过滤&lt;/p&gt;&#xA;&lt;p&gt;2003年1月&lt;/p&gt;&#xA;&lt;p&gt;（本文是在2003年垃圾邮件会议上的演讲。它描述了我在改进《垃圾邮件计划》中描述的算法性能方面所做的工作，以及我未来的计划。）&lt;/p&gt;&#xA;&lt;p&gt;我在这里要介绍的第一个发现是研究论文的懒惰评估算法。随便写你想写的内容，不要引用任何以前的工作，愤怒的读者会发送给你所有你应该引用的论文的参考文献。我在《垃圾邮件计划》[1]登上Slashdot后发现了这个算法。&lt;/p&gt;&#xA;&lt;p&gt;垃圾邮件过滤是文本分类的一个子集，这是一个已经成熟的领域，但是关于贝叶斯垃圾邮件过滤本身的第一篇论文似乎是在1998年同一会议上发表的两篇，一篇是Pantel和Lin的[2]，另一篇是微软研究院的一个小组[3]。&lt;/p&gt;&#xA;&lt;p&gt;当我听说这项工作时，我有点惊讶。如果人们在四年前就已经开始研究贝叶斯过滤，为什么不是每个人都在使用它呢？当我阅读这些论文时，我找到了原因。Pantel和Lin的过滤器是两个中更有效的，但它只捕获了92%的垃圾邮件，有1.16%的误报率。&lt;/p&gt;&#xA;&lt;p&gt;当我尝试编写贝叶斯垃圾邮件过滤器时，它捕获了99.5%的垃圾邮件，误报率低于0.03%[4]。当两个人尝试相同的实验得到截然不同的结果时，总是令人担忧。在这里尤其令人担忧，因为这两组数字可能会得出相反的结论。不同的用户有不同的要求，但我认为对于许多人来说，92%的过滤率和1.16%的误报率意味着过滤不是一个可接受的解决方案，而99.5%的过滤率和低于0.03%的误报率意味着它是可接受的。&lt;/p&gt;&#xA;&lt;p&gt;那么为什么我们会得到如此不同的数字呢？我没有尝试重现Pantel和Lin的结果，但是通过阅读论文，我看到了五个可能解释这种差异的原因。&lt;/p&gt;&#xA;&lt;p&gt;一个是他们用很少的数据训练他们的过滤器：160封垃圾邮件和466封非垃圾邮件。过滤器的性能在这么小的数据集上应该还在提升。所以他们的数字可能甚至不能准确衡量他们算法的性能，更不用说一般的贝叶斯垃圾邮件过滤了。&lt;/p&gt;&#xA;&lt;p&gt;但我认为最重要的区别可能是他们忽略了邮件头。对于任何从事垃圾邮件过滤工作的人来说，这似乎是一个错误的决定。然而，在我尝试编写的第一个过滤器中，我也忽略了邮件头。为什么？因为我想让问题保持整洁。那时我对邮件头了解不多，它们在我看来充满了随机的东西。这里有一个教训给过滤器编写者：不要忽略数据。你会觉得这个教训太明显了，不需要提及，但我已经不得不学习了好几次。&lt;/p&gt;&#xA;&lt;p&gt;第三，Pantel和Lin对词干进行了提取，意味着他们将例如&amp;quot;mailing&amp;quot;和&amp;quot;mailed&amp;quot;都简化为根词&amp;quot;mail&amp;quot;。他们可能觉得他们被迫这样做是因为他们的语料库很小，但如果是这样，这是一种过早的优化。&lt;/p&gt;&#xA;&lt;p&gt;第四，他们计算概率的方式不同。他们使用了所有的标记，而我只使用15个最显著的。如果你使用所有的标记，你往往会错过较长的垃圾邮件，就是那种有人告诉你他们的生活故事直到他们从某个多层次营销计划中致富的类型。而且这样的算法很容易被垃圾邮件发送者欺骗：只需添加一大块随机文本来平衡垃圾邮件术语。&lt;/p&gt;&#xA;&lt;p&gt;最后，他们没有针对误报进行偏置。我认为任何垃圾邮件过滤算法都应该有一个方便的旋钮，你可以转动它来降低误报率，代价是降低过滤率。我通过将非垃圾邮件语料库中标记的出现次数加倍来实现这一点。我认为将垃圾邮件过滤视为一个直接的文本分类问题是个坏主意。你可以使用文本分类技术，但解决方案可以也应该反映文本是邮件这一事实，特别是垃圾邮件。邮件不仅仅是文本；它有结构。垃圾邮件过滤不仅仅是分类，因为误报比漏报要糟糕得多，你应该将它们视为不同类型的错误。而且错误的来源不仅仅是随机变化，而是一个活跃的人类垃圾邮件发送者积极工作以击败你的过滤器。&lt;/p&gt;&#xA;&lt;h2 id=&#34;标记&#34;&gt;标记&lt;/h2&gt;&#xA;&lt;p&gt;在Slashdot文章之后我听说的另一个项目是Bill Yerazunis的CRM114[5]。这证明了我刚才提到的设计原则的反例。它是一个直接的文本分类器，但它是如此惊人的有效，以至于它甚至不知道自己在做什么的情况下几乎完美地过滤垃圾邮件。&lt;/p&gt;&#xA;&lt;p&gt;一旦我理解了CRM114的工作原理，似乎我最终将不得不从基于单个词的过滤转向这样的方法。但是首先，我想，我会看看我用单个词能走多远。答案是，惊人的远。&lt;/p&gt;&#xA;&lt;p&gt;我主要在研究更智能的标记化。在当前的垃圾邮件上，我已经能够达到接近CRM114的过滤率。这些技术与Bill的技术大多是正交的；最优的解决方案可能包含两者。&lt;/p&gt;&#xA;&lt;p&gt;《垃圾邮件计划》使用了非常简单的标记定义。字母、数字、破折号、撇号和美元符号是组成字符，其他都是标记分隔符。我也忽略了大小写。&lt;/p&gt;&#xA;&lt;p&gt;现在我有一个更复杂的标记定义：保留大小写。感叹号是组成字符。句号和逗号如果出现在两个数字之间则是组成字符。这让我能够完整地获得IP地址和价格。像$20-25这样的价格范围产生两个标记，$20和$25。出现在To、From、Subject和Return-Path行中，或者url中的标记会相应地被标记。例如，Subject行中的&amp;quot;foo&amp;quot;变成&amp;quot;Subject*foo&amp;quot;。（星号可以是任何你不允许作为组成字符的字符。）这样的措施增加了过滤器的词汇量，使其更有区分力。例如，在当前的过滤器中，Subject行中的&amp;quot;free&amp;quot;有98%的垃圾邮件概率，而正文中的相同标记只有65%的垃圾邮件概率。&lt;/p&gt;&#xA;&lt;p&gt;以下是一些当前的概率[6]：&lt;/p&gt;&#xA;&lt;p&gt;Subject&lt;em&gt;FREE 0.9999&#xA;free!! 0.9999&#xA;To&lt;/em&gt;free 0.9998&#xA;Subject&lt;em&gt;free 0.9782&#xA;free! 0.9199&#xA;Free 0.9198&#xA;Url&lt;/em&gt;free 0.9091&#xA;FREE 0.8747&#xA;From*free 0.7636&#xA;free 0.6546&lt;/p&gt;&#xA;&lt;p&gt;在《垃圾邮件计划》过滤器中，所有这些标记都会有相同的概率，0.7602。那个过滤器识别了大约23,000个标记。当前的一个识别了大约187,000个。&lt;/p&gt;&#xA;&lt;p&gt;拥有更大的标记宇宙的缺点是有更多未命中的机会。将你的语料库分散到更多的标记上与使其变小的效果相同。例如，如果你将感叹号视为组成字符，那么你可能最终没有带有七个感叹号的free的垃圾邮件概率，即使你知道只有两个感叹号的free有99.99%的概率。&lt;/p&gt;&#xA;&lt;p&gt;对此的一个解决方案是我称之为退化的方法。如果你找不到标记的精确匹配，就将其视为不太具体的版本。我认为终端感叹号、大写字母以及出现在五个标记上下文中的任何一个使标记更具体。例如，如果我找不到&amp;quot;Subject&lt;em&gt;free!&amp;ldquo;的概率，我会查找&amp;quot;Subject&lt;/em&gt;free&amp;rdquo;、&amp;ldquo;free!&amp;ldquo;和&amp;quot;free&amp;quot;的概率，并取离0.5最远的那个。&lt;/p&gt;&#xA;&lt;p&gt;以下是过滤器在Subject行中看到&amp;quot;FREE!!!&amp;ldquo;且没有其概率时考虑的替代方案[7]：&lt;/p&gt;&#xA;&lt;p&gt;Subject&lt;em&gt;Free!!!&#xA;Subject&lt;/em&gt;free!!!&#xA;Subject&lt;em&gt;FREE!&#xA;Subject&lt;/em&gt;Free!&#xA;Subject&lt;em&gt;free!&#xA;Subject&lt;/em&gt;FREE&#xA;Subject&lt;em&gt;Free&#xA;Subject&lt;/em&gt;free&#xA;FREE!!!&#xA;Free!!!&#xA;free!!!&#xA;FREE!&#xA;Free!&#xA;free!&#xA;FREE&#xA;Free&#xA;free&lt;/p&gt;&#xA;&lt;p&gt;如果你这样做，一定要考虑首字母大写以及全大写和全小写的版本。垃圾邮件倾向于有更多的祈使语气句子，而在这些句子中，第一个词是动词。所以首字母大写的动词比全小写时有更高的垃圾邮件概率。在我的过滤器中，&amp;ldquo;Act&amp;quot;的垃圾邮件概率是98%，而&amp;quot;act&amp;quot;只有62%。&lt;/p&gt;&#xA;&lt;p&gt;如果你增加过滤器的词汇量，你可能会根据你旧的&amp;quot;相同&amp;quot;定义多次计算相同的词。从逻辑上讲，它们不再是相同的标记了。但如果这仍然困扰你，让我从经验补充，你似乎多次计算的词往往正是你想要的。&lt;/p&gt;&#xA;&lt;p&gt;更大词汇量的另一个影响是，当你查看传入的邮件时，你会发现更多有趣的标记，即那些概率远离0.5的标记。我使用15个最有趣的来决定邮件是否为垃圾邮件。但是当你使用这样的固定数字时，你可能会遇到问题。如果你发现很多最大有趣的标记，结果可能取决于决定同等有趣标记排序的随机因素。处理这个问题的一种方法是将一些视为比其他更有趣。&lt;/p&gt;&#xA;&lt;p&gt;例如，标记&amp;quot;dalco&amp;quot;在我的垃圾邮件语料库中出现3次，在我的合法邮件语料库中从未出现。标记&amp;quot;Url*optmails&amp;rdquo;（意思是url中的&amp;quot;optmails&amp;rdquo;）出现1223次。然而，按照我过去计算标记概率的方式，两者都会有相同的垃圾邮件概率，即0.99的阈值。&lt;/p&gt;&#xA;&lt;p&gt;这感觉不对。有理论论据支持给这两个标记显著不同的概率（Pantel和Lin这样做），但我还没有尝试过。但至少似乎如果我们发现超过15个标记只出现在一个语料库或另一个中，我们应该优先考虑出现次数多的。所以现在有两个阈值。对于只出现在垃圾邮件语料库中的标记，如果它们出现超过10次，概率是0.9999，否则是0.9998。在规模范围的另一端，对于只在合法邮件语料库中找到的标记也是如此。&lt;/p&gt;</description>
    </item>
    <item>
      <title>更改你的名字</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/name/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/name/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/name.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;更改你的名字&#34;&gt;更改你的名字&lt;/h1&gt;&#xA;&lt;p&gt;2015年8月&lt;/p&gt;&#xA;&lt;p&gt;如果你的美国创业公司叫 X，但你没有 x.com，你可能应该改个名字。&lt;/p&gt;&#xA;&lt;p&gt;原因不仅仅是人们找不到你。对于有移动应用的公司来说，拥有正确的域名名称对获取用户来说已经不像以前那么关键了。没有拥有你名字的 .com 域名的问题在于它显示了软弱。除非你大到名声在你之前，一个边缘域名暗示你是一家边缘公司。而（正如 Stripe 所示）拥有 x.com 即使与你所做的事情无关也显示了实力。&lt;/p&gt;&#xA;&lt;p&gt;即使是优秀的创始人也可能对此否认。他们的否认源于两个非常强大的力量：身份认同和缺乏想象力。&lt;/p&gt;&#xA;&lt;p&gt;X 就是我们，创始人想。没有比这更好的名字了。这两个都是错误的。&lt;/p&gt;&#xA;&lt;p&gt;你可以通过退后一步来解决这个问题。想象一下你把公司叫了别的名字。如果你这样做了，你肯定会像对现在的名字一样依恋那个名字。切换到你现在的名字的想法会令人反感。[1]&lt;/p&gt;&#xA;&lt;p&gt;你现在的名字并没有什么内在的伟大之处。你对它的几乎所有依恋都来自于它与你的联系。[2]&lt;/p&gt;&#xA;&lt;p&gt;消除第二个否认来源的方法——你无法想到其他潜在名字的能力——是承认你不擅长命名。命名是一项完全独立的技能，与成为一名优秀创始人所需的技能不同。你可以成为一名伟大的创业创始人，但在为公司想名字方面却毫无希望。&lt;/p&gt;&#xA;&lt;p&gt;一旦你承认了这一点，你就不再相信没有其他可以称呼你的名字。有很多其他潜在的名字一样好或更好；你只是想不出来。&lt;/p&gt;&#xA;&lt;p&gt;你如何找到它们？一个答案是解决你不擅长的问题的默认方法：找到其他能想出名字的人。但对于公司名称，还有另一种可能的方法。事实证明，几乎任何不是明显坏名字的单词或词对都是足够好的名字，这样的域名数量如此之大，你可以找到很多便宜甚至未被占用的。所以列个清单，试着买一些。这就是 Stripe 所做的。（他们的搜索还发现了 parse.com，他们的 Parse 朋友采用了这个域名。）&lt;/p&gt;&#xA;&lt;p&gt;我知道为初创公司命名是一项与其他技能正交的独特技能，因为我恰好拥有这项技能。当我在运营 YC 并与创业公司进行更多办公时间时，我经常帮助他们找到新名字。80% 的情况下，我们可以在 20 分钟的办公时间内找到至少一个好名字。&lt;/p&gt;&#xA;&lt;p&gt;现在当我进行办公时间时，我必须专注于更重要的问题，比如公司在做什么。我告诉他们什么时候需要改名字。但我知道控制他们的力量是多么强大，所以我知道大多数人都不会听。[3]&lt;/p&gt;&#xA;&lt;p&gt;当然，有些创业公司在没有拥有其名字的 .com 域名的情况下取得了成功。有些创业公司尽管犯了各种不同的错误还是成功了。但这个错误比大多数错误更不可原谅。如果你有足够的纪律来承认问题，这可以在几天内解决。&lt;/p&gt;&#xA;&lt;p&gt;按估值计算，前 20 名 YC 公司中 100% 拥有其名字的 .com 域名。前 50 名中有 94% 拥有。但当前批次中只有 66% 的公司拥有其名字的 .com 域名。这表明大多数人还有教训要学习，无论如何。&lt;/p&gt;&#xA;&lt;p&gt;注释&lt;/p&gt;&#xA;&lt;p&gt;[1] 顺便说一句，这个思维实验也适用于国籍和宗教。&lt;/p&gt;&#xA;&lt;p&gt;[2] 你对一个已成为你身份一部分的名字的喜爱不是直接表现的，这很容易被忽视，而是表现为一系列对其内在质量的虚假信念。（这也同样适用于国籍和宗教。）&lt;/p&gt;&#xA;&lt;p&gt;[3] 有时创始人知道没有他们名字的 .com 域名是个问题，但错觉会在后来的一步中袭击他们，相信他们将能够购买它，尽管没有证据表明它在出售。除非所有者已经告诉你要价，否则不要相信域名是出售的。&lt;/p&gt;&#xA;&lt;p&gt;感谢 Sam Altman、Jessica Livingston 和 Geoff Ralston 阅读本文草稿。&lt;/p&gt;</description>
    </item>
    <item>
      <title>最佳文章</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/best/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/best/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/best.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;最佳文章&#34;&gt;最佳文章&lt;/h1&gt;&#xA;&lt;p&gt;2024年3月&lt;/p&gt;&#xA;&lt;p&gt;尽管标题如此，但这并不是要成为最好的文章。我的目标是弄清楚最好的文章会是什么样子。&lt;/p&gt;&#xA;&lt;p&gt;它会写得很好，但你可以写好任何主题。让它与众不同的是它所写的内容。&lt;/p&gt;&#xA;&lt;p&gt;显然有些主题会比其他更好。它可能不会是今年的口红颜色。但它也不会是关于崇高主题的空洞谈论。好文章必须令人惊讶。它必须告诉人们一些他们还不知道的事情。&lt;/p&gt;&#xA;&lt;p&gt;最好的文章应该是在你能告诉人们一些令人惊讶的事情的最重要主题上。&lt;/p&gt;&#xA;&lt;p&gt;这听起来可能很明显，但它有一些意想不到的后果。一个是科学像大象踏入划艇一样进入画面。例如，达尔文在1844年写的一篇文章中首次描述了自然选择的想法。谈谈一个你能告诉人们令人惊讶事情的重要主题。如果那是对一篇伟大文章的测试，那么这无疑是1844年写的最好的一篇。确实，在任何给定时间，最好的可能文章通常是描述可能做出的最重要科学或技术发现的那一篇。&lt;/p&gt;&#xA;&lt;p&gt;另一个意想不到的后果：我在开始写这篇文章时想象最好的文章会是相当永恒的——你在1844年能写的最好的文章和现在能写的最好的文章会大体相同。但事实上相反的情况似乎是真的。也许最好的绘画在这个意义上是永恒的。但现在写一篇介绍自然选择的文章不会令人印象深刻。现在最好的文章会是描述我们还不知道的伟大发现的那一篇。&lt;/p&gt;&#xA;&lt;p&gt;如果如何写出最好可能文章的问题归结为如何做出伟大发现的问题，那么我开始时问错了问题。也许这个练习表明我们不应该浪费时间写文章，而是专注于在某个特定领域做出发现。但我对文章以及能用它们做什么感兴趣，所以我想看看是否有其他我可以问的问题。&lt;/p&gt;&#xA;&lt;p&gt;有，而且表面上它几乎与我开始时的那个问题相同。我不应该问&amp;quot;最好的文章会是什么？&amp;ldquo;而应该问&amp;quot;如何写出好文章？&amp;ldquo;虽然这些似乎只是措辞不同，但它们的答案不同。正如我们所见，第一个问题的答案并不是真正关于文章写作的。第二个问题迫使它必须是。&lt;/p&gt;&#xA;&lt;p&gt;写文章，在最好的情况下，是一种发现思想的方式。如何做到这一点？如何通过写作来发现？&lt;/p&gt;&#xA;&lt;p&gt;文章通常应该以我称之为问题的东西开始，尽管我的意思非常宽泛：它在语法上不一定要是问题，只是起到问题作用的东西，即在某种程度上引发一些反应。&lt;/p&gt;&#xA;&lt;p&gt;你如何获得这个初始问题？随机选择一些听起来重要的主题并开始攻击可能行不通。专业交易员只有在他们所谓的优势时才会交易——一个令人信服的故事，说明为什么在某类交易中他们会赢多输少。同样，除非你有一个切入点——对它的一些新见解或处理方法，否则你不应该攻击一个主题。&lt;/p&gt;&#xA;&lt;p&gt;你不需要有一个完整的论点；你只需要某种可以探索的空白。事实上，仅仅对其他人认为理所当然的事情有疑问就足够了。&lt;/p&gt;&#xA;&lt;p&gt;如果你遇到一个足够令人困惑的问题，即使它看起来不是很重要，也值得探索。许多重要的发现都是通过拉扯一个最初看起来微不足道的线索而做出的。它们怎么都是雀鸟？&lt;/p&gt;&#xA;&lt;p&gt;一旦你有了问题，然后呢？你开始大声思考它。不是真正大声，而是像你说话时那样，用特定的词语串来回应。这个初始反应通常是错误或不完整的。写作将你的想法从模糊转化为糟糕。但这是向前的一步，因为一旦你能看到缺陷，你就可以修复它。&lt;/p&gt;&#xA;&lt;p&gt;也许初学写作的人对以错误或不完整的东西开始感到震惊，但你不应该，因为这就是文章写作有效的原因。强迫自己承诺特定的词语串给你一个起点，如果错了，当你重读时你会看到。至少一半的文章写作是重读你写的东西并问这是否正确和完整？重读时你必须非常严格，不仅因为你想保持诚实，而且因为你的反应与真理之间的差距往往是新思想需要发现的迹象。&lt;/p&gt;&#xA;&lt;p&gt;对你所写的东西严格的奖励不仅仅是改进。当你拿一个大致正确的答案并试图使它完全正确时，有时你会发现你不能，原因是你依赖一个错误的假设。当你丢弃它时，答案变得完全不同。&lt;/p&gt;&#xA;&lt;p&gt;理想情况下，对问题的反应是两件事：一个向真理收敛过程的第一步，以及额外问题来源（在我非常宽泛的意义上）。所以过程递归地继续，反应引发反应。&lt;/p&gt;&#xA;&lt;p&gt;通常一个问题有几种可能的反应，这意味着你正在遍历一棵树。但文章是线性的，不是树形的，这意味着你必须在每个点选择一个分支来跟随。你如何选择？通常你应该跟随提供普遍性和新颖性最大组合的那一个。我没有有意识地对分支进行这样的排名；我只是跟随看起来最令人兴奋的那个；但普遍性和新颖性是使分支令人兴奋的原因。&lt;/p&gt;&#xA;&lt;p&gt;如果你愿意做大量重写，你不必猜对。你可以跟随一个分支，看看结果如何，如果不够好，就剪掉并回溯。我一直这样做。在这篇文章中，我已经剪掉了一个17段的子树，此外还有无数较短的子树。也许我会在最后重新附加它，或者把它浓缩成脚注，或者把它变成自己的文章；我们等着瞧。&lt;/p&gt;&#xA;&lt;p&gt;一般来说你想快速剪掉。写作（以及软件和绘画）中最危险的诱惑之一是保留不正确的东西，仅仅因为它包含一些好点子或花费了你很多精力。&lt;/p&gt;&#xA;&lt;p&gt;此时抛出的最令人惊讶的新问题是初始问题真的重要吗？如果思想空间高度连接，它应该不重要，因为你应该能够从任何问题跳到最有价值的问题，只需要几步。我们看到它高度连接的证据，例如，痴迷于某个主题的人能够将任何对话转向它。但这只有在你知道你想去哪里时才有效，而在文章中你不知道。这就是重点。你不想成为固执的对话者，否则你所有的文章都会是关于同一个主题。&lt;/p&gt;&#xA;&lt;p&gt;初始问题重要的另一个原因是你通常感觉有义务坚持它。当我决定跟随哪个分支时，我不考虑这个。我只是跟随新颖性和普遍性。坚持问题是在后来强制的，当我注意到我走得太远时必须回溯。但我认为这是最优解。你不希望当时对新颖性和普遍性的追求受到约束。跟着它走，看看你得到什么。&lt;/p&gt;&#xA;&lt;p&gt;由于初始问题确实约束了你，在最好的情况下，它为你将写的文章质量设定了上限。如果你在初始问题引发的思维链上尽可能做得好，初始问题本身是唯一有变化空间的地方。&lt;/p&gt;&#xA;&lt;p&gt;让这使你过于保守会是一个错误，因为你无法预测一个问题会通向哪里。如果你做得正确，就不是，因为做得正确意味着做出发现，根据定义你无法预测那些。所以应对这种情况的方法不是对你选择的初始问题保持谨慎，而是写大量文章。文章就是为了冒险。&lt;/p&gt;&#xA;&lt;p&gt;几乎任何问题都能给你一篇好文章。确实，我费了些力气才在第三段想出一个足够没有前途的主题，因为任何听到最好的文章不能关于x的文章作家的第一反应就是尝试写它。但如果大多数问题能产生好文章，只有一些能产生伟大的文章。&lt;/p&gt;&#xA;&lt;p&gt;我们能预测哪些问题会产生伟大的文章吗？考虑到我写文章的时间有多长，这个问题感觉多么新奇令人担忧。&lt;/p&gt;&#xA;&lt;p&gt;我在初始问题中喜欢的一件事是令人愤慨性。我喜欢在某种程度上看起来顽皮的问题——例如，看起来违反直觉或过度雄心或异端。最好是三者兼具。这篇文章就是一个例子。写关于最好的文章意味着存在这样的事情，伪知识分子会将其斥为简化的，尽管它必然可以从一篇文章比另一篇更好这一可能性得出。而且思考如何做如此雄心勃勃的事情接近于实际做它，足以保持你的注意力。&lt;/p&gt;&#xA;&lt;p&gt;我喜欢以眼中的光芒开始一篇文章。这可能只是我的品味，但有一个方面可能不是：要在某个主题上写一篇真正好的文章，你必须对它感兴趣。好作家可以写好任何主题，但要达到文章存在理由的新颖见解，你必须关心。&lt;/p&gt;&#xA;&lt;p&gt;如果关心它是一个好的初始问题的标准之一，那么最优问题因人而异。这也意味着如果你关心很多不同的事情，你更可能写出伟大的文章。你越好奇，你好奇的事物集合与能产生伟大文章的主题集合之间可能的重叠就越大。&lt;/p&gt;&#xA;&lt;p&gt;伟大的初始问题还会有什么其他品质？如果它在很多不同领域有影响可能很好。而且我发现如果人们认为它已经被彻底探索过，这是一个好迹象。但事实是，我几乎没有考虑过如何选择初始问题，因为我很少这样做。我很少选择写什么主题；我只是开始思考某件事，有时它变成一篇文章。&lt;/p&gt;&#xA;&lt;p&gt;我会停止写关于我碰巧正在思考的任何东西的文章，而是开始系统地处理某个生成的主题列表吗？这听起来不太有趣。然而我想写好文章，如果初始问题重要，我应该关心它。&lt;/p&gt;&#xA;&lt;p&gt;也许答案是早一步：写任何跳入你脑海的东西，但试图确保跳入你脑海的东西是好的。事实上，现在我想起来，这必须是答案，因为仅仅一个主题列表如果你对它们没有任何优势就毫无用处。要开始写文章，你需要一个主题加上对它的一些初始见解，而你不能系统生成那些。要是能就好了。&lt;/p&gt;&#xA;&lt;p&gt;不过，你可能让自己有更多。头脑中出来的想法质量取决于输入什么，你可以在两个维度上改进它：广度和深度。&lt;/p&gt;&#xA;&lt;p&gt;你不可能学习一切，所以获得广度意味着学习彼此非常不同的主题。当人们告诉我在Hay的图书购买旅行时，他们问我买什么书，我回答时通常感到有点不好意思，因为这些主题看起来像一堆无关主题的清单。但也许这在这个行业中实际上是最优的。&lt;/p&gt;&#xA;&lt;p&gt;你也可以通过与人们交谈，通过做和建造东西，通过去地方和看事情来获得想法。我认为与新交谈不如与能让你有新想法的人交谈重要。我和Robert Morris谈一个下午比与20个新的聪明人交谈获得更多新想法。我知道是因为Y Combinator的一个办公时间块就是这样的。&lt;/p&gt;&#xA;&lt;p&gt;广度来自阅读、交谈和观看，深度来自做。真正学习某个领域的方法是必须在其中解决问题。虽然这可能采取写作的形式，但我怀疑要成为一个好文章家，你也必须做或做过其他类型的工作。这对大多数其他领域可能不成立，但文章写作不同。你可以一半时间做其他工作，净收益还是正向的，只要它是困难的。&lt;/p&gt;&#xA;&lt;p&gt;我不是把这作为一个配方提出，而是对已经在做的人的鼓励。如果你到目前为止一生都在做其他事情，你已经完成一半了。当然，要写得好你必须喜欢它，如果你喜欢写作，你可能已经花了至少一些时间做它。&lt;/p&gt;&#xA;&lt;p&gt;我所说的关于初始问题的一切也适用于你在写作文章时遇到的问题。它们是同一件事；文章的每个子树通常是一篇较短的文章，就像Calder活动装置的每个子树是一个较小的活动装置一样。所以任何能给你好初始问题的技巧也能给你好整篇文章。&lt;/p&gt;&#xA;&lt;p&gt;在某个时刻，问题和反应的循环达到感觉自然的结束。这有点可疑；不是每个答案都应该暗示更多问题吗？我认为发生的事情是你开始感到满足。一旦你覆盖了足够有趣的领域，你开始失去对新问题的胃口。这同样好，因为读者可能也感到满足了。停止问问题不是懒惰，因为你可以转而问一篇新文章的初始问题。&lt;/p&gt;&#xA;&lt;p&gt;这就是思想连接性的最终阻力来源：你一路上做出的发现。如果你从问题A开始发现足够多，你永远不会到达问题B。虽然如果你继续写文章，你会通过消耗这些发现逐渐解决这个问题。所以奇怪的是，写大量文章使得思想空间似乎更加高度连接。&lt;/p&gt;&#xA;&lt;p&gt;当一个子树结束时，你可以做两件事之一。你可以停止，或者通过回到你之前跳过的问题来使用立体主义技巧将分离的子树首尾相接。通常在这一点需要一些技巧使文章连续流动，但这次不是。这次我实际上需要这种现象的例子。例如，我们之前发现最好的可能文章通常不会像最好的绘画那样永恒。这似乎足够令人惊讶，值得进一步调查。&lt;/p&gt;&#xA;&lt;p&gt;文章永恒有两种意义：关于永恒重要的事情，以及对读者总是有相同的影响。在艺术中，这两种意义融合在一起。对古希腊人看起来美丽的艺术对我们来说仍然看起来美丽。但对于文章，这两种意义分歧，因为文章教导，你不能教导人们已经知道的事情。自然选择当然是永恒重要的事情，但一篇解释它的文章对我们不可能有对达尔文同时代人那样的影响，正是因为他的思想如此成功，每个人都知道它们。&lt;/p&gt;&#xA;&lt;p&gt;我在开始写这篇文章时想象最好的可能文章在更严格的、常青的意义上是永恒的：它会包含一些深刻的、永恒的智慧，对亚里士多德和费曼同样有吸引力。这似乎不是真的。但如果最好的可能文章通常不会在这种更严格的意义上是永恒的，那么写出这样的文章需要什么？&lt;/p&gt;&#xA;&lt;p&gt;那个答案结果非常奇怪：要成为常青类型的永恒，一篇文章必须无效，在这个意义上它的发现没有被同化到我们的共同文化中。否则对于第二代读者来说其中就没有新东西。如果你想不仅在现在而且在未来也让读者惊讶，你必须写不会粘住的文章——无论多么好，都不会成为未来人们在你读之前学习的一部分文章。&lt;/p&gt;&#xA;&lt;p&gt;我可以想象几种方法做到这一点。一种是写人们永远不会学习的东西。例如，雄心勃勃的人追逐各种类型奖品是一个长期模式，只有后来，可能太晚了，才意识到其中一些不如他们想象的那么有价值。如果你写这个，你可以确信未来读者的传送带会被它惊讶。&lt;/p&gt;&#xA;&lt;p&gt;同样，如果你写没有经验的人过度做事情的倾向——例如，年轻工程师产生过度复杂的解决方案。有些错误人们只有通过犯它们才能学会避免。其中任何一个都应该是永恒的主题。&lt;/p&gt;&#xA;&lt;p&gt;有时我们理解缓慢不仅仅是因为我们迟钝或否认，而是因为我们被故意欺骗。成人对孩子撒谎很多事情，当你成年时，他们不会把你拉到一边给你一份清单。他们不记得告诉了你什么谎言，而且大多数都是隐含的。所以只要成人继续说这些谎言，反驳这样的谎言将是惊讶的来源。&lt;/p&gt;&#xA;&lt;p&gt;有时是系统对你撒谎。例如，大多数国家的教育系统训练你通过黑客攻击测试来获胜。但这不是在最重要的现实世界测试中获胜的方式，经过几十年的训练，这对现实世界的新来者来说很难掌握。帮助他们克服这种制度性谎言只要制度仍然破碎就会有效。&lt;/p&gt;&#xA;&lt;p&gt;另一种永恒的配方是写读者已经知道的事情，但比文化能传达的详细得多。&amp;ldquo;每个人都知道&amp;quot;有孩子可以是有回报的。但直到你有了孩子，你才知道这采取什么确切形式，即使如此，你可能从未把你所知道的许多事情用语言表达出来。&lt;/p&gt;&#xA;&lt;p&gt;我已经写了所有这些类型的主题。但我这样做不是故意尝试写在这种更严格意义上永恒的文章。事实上，这依赖于一个人的思想不粘住这一事实表明，不值得故意尝试。是的，你应该写关于永恒重要主题的文章，但如果你做得足够好，你的结论粘住了，后代发现你的文章显而易见而不是新颖，那就更好了。你已经进入了达尔文领域。&lt;/p&gt;&#xA;&lt;p&gt;写关于永恒重要主题的文章是某种更普遍东西的一个例子：适用性的广度。而且有比时间性更多的广度类型——例如，适用于许多不同领域。所以广度是最终目标。&lt;/p&gt;&#xA;&lt;p&gt;我已经在追求它。广度和新颖性是我一直追求的两个东西。但我很高兴我理解永恒性适合哪里。&lt;/p&gt;&#xA;&lt;p&gt;我现在更好地理解了很多东西在哪里。这篇文章是文章写作的一种指南。我开始时希望得到关于主题的建议；如果你假设写作好，区分最好文章的唯一东西是它的主题。我确实得到了关于主题的建议：发现自然选择。是的，那会很好。但当你退后一步问，不做像那样的伟大发现，你能做的最好的是什么，结果证明是关于程序的。最终，文章的质量是其中发现的思想的函数，你获得它们的方式是对问题撒大网，然后对答案非常严格。&lt;/p&gt;&#xA;&lt;p&gt;这张文章写作地图最引人注目的特征是所需的灵感和努力的交替条纹。问题依赖灵感，但答案可以通过纯粹的坚持获得。你不必第一次就得到正确答案，但没有借口最终不得到正确答案，因为你可以一直重写直到你得到。而且这不仅仅是理论可能性。这是我工作方式的相当准确的描述。我现在正在重写。&lt;/p&gt;&#xA;&lt;p&gt;但虽然我希望我可以说写出伟大的文章主要依赖于努力，在极限情况下是灵感造成差异。在极限情况下，问题是更难获得的东西。那个池子没有底。&lt;/p&gt;&#xA;&lt;p&gt;如何获得更多问题？那是所有问题中最重要的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>有机的创业想法</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/organic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/organic/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/organic.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;有机的创业想法&#34;&gt;有机的创业想法&lt;/h1&gt;&#xA;&lt;p&gt;2010年4月&lt;/p&gt;&#xA;&lt;p&gt;想创办初创公司？获得 Y Combinator 的资助。&lt;/p&gt;&#xA;&lt;p&gt;想出创业想法的最好方法是问自己这个问题：你希望有人为你做什么？&lt;/p&gt;&#xA;&lt;p&gt;有两种类型的创业想法：那些从你自己的生活中有机生长出来的，以及那些你从远处决定将对除你之外的其他用户群体必要的想法。苹果是第一种类型。苹果的发生是因为Steve Wozniak想要一台电脑。与大多数想要电脑的人不同，他能设计一台，所以他做了。而且由于很多其他人也想要同样的东西，苹果能够卖出足够的电脑来让公司运转起来。顺便说一句，他们今天仍然依赖这个原则。iPhone是Steve Jobs想要的手机。[1]&lt;/p&gt;&#xA;&lt;p&gt;我们自己的初创公司Viaweb是第二种类型。我们制作了建立在线商店的软件。我们自己不需要这个软件。我们不是直销商。当我们开始时，我们甚至不知道我们的用户被称为&amp;quot;直销商&amp;quot;。但我们开始公司时相对较老（我30岁，Robert Morris 29岁），所以我们见过足够多的情况知道用户需要这种类型的软件。[2]&lt;/p&gt;&#xA;&lt;p&gt;这两种类型的想法之间没有明确的界限，但最成功的初创公司似乎更接近苹果类型而不是Viaweb类型。当Bill Gates为Altair编写第一个Basic解释器时，他在写一些他会使用的东西，Larry和Sergey编写Google的第一个版本时也是如此。&lt;/p&gt;&#xA;&lt;p&gt;有机的想法通常比编造的那种更可取，但当创始人年轻时尤其如此。预测其他人想要什么需要经验。我们在Y Combinator看到的最糟糕的想法来自年轻的创始人制作他们认为其他人想要的东西。&lt;/p&gt;&#xA;&lt;p&gt;所以如果你想创办初创公司但还不知道要做什么，我鼓励你最初专注于有机的想法。你日常生活中缺少或有什么问题？有时如果你只是问这个问题，你会立即得到答案。对Bill Gates来说，你只能用机器语言为Altair编程，这显然是有问题的。&lt;/p&gt;&#xA;&lt;p&gt;你可能需要站在自己之外一点来看问题，因为你往往会习惯它并想当然。不过你可以肯定它存在。总是有伟大的想法就在我们眼前。2004年，哈佛本科生仍然使用印刷在纸上的Facebook，这是很荒谬的。当然，这类东西应该在线。&lt;/p&gt;&#xA;&lt;p&gt;现在有同样明显的想法 lying around。你忽略它们的原因与你在2004年忽略建立Facebook的想法的原因相同：有机的创业想法最初通常不像创业想法。我们现在知道Facebook非常成功，但把自己放回2004年。把本科生的档案放在网上不会看起来像什么创业想法。事实上，它最初也不是一个创业想法。今年冬天Mark在YC晚宴上发言时说，他写Facebook的第一个版本时并没有试图创办公司。这只是一个项目。当Woz开始开发Apple I时也是如此。他没有认为自己在创办公司。如果这些人认为他们在创办公司，他们可能会被诱惑做一些更&amp;quot;严肃&amp;quot;的事情，那将是一个错误。&lt;/p&gt;&#xA;&lt;p&gt;所以如果你想出有机的创业想法，我鼓励你更多地关注想法部分，而不是创业部分。只修复看似有问题的事情，无论这个问题是否看起来重要到可以建立一个公司。如果你继续追求这样的线索，很难不最终做出对很多人有价值的东西，当你这样做时，惊喜，你有了一家公司。[3]&lt;/p&gt;&#xA;&lt;p&gt;如果你最初生产的东西被其他人视为玩具而 dismiss，不要灰心。事实上，这是一个好兆头。这可能是为什么其他人一直忽略这个想法的原因。第一台微型计算机被视为玩具。第一架飞机，第一辆汽车也是如此。在这一点上，当有人带着用户喜欢但我们能想象论坛巨魔视为玩具的东西来找我们时，这使我们特别可能投资。&lt;/p&gt;&#xA;&lt;p&gt;虽然年轻创始人在想出编造的想法时处于劣势，但他们是有机想法的最佳来源，因为他们处于技术的前沿。他们使用最新的东西。他们刚刚决定使用什么，为什么不呢？因为他们使用最新的东西，他们处于首先发现有价值的可修复问题的位置。&lt;/p&gt;&#xA;&lt;p&gt;没有什么比刚刚变得可解决的未满足需求更有价值了。如果你发现一些可以为很多人修复的问题，你就发现了一个金矿。就像真正的金矿一样，你仍然必须努力工作才能从中提炼出黄金。但至少你知道矿脉在哪里，那是困难的部分。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 这表明了一种预测苹果将会薄弱领域的方法：Steve Jobs不使用的东西。例如，我怀疑他对游戏很感兴趣。&lt;/p&gt;&#xA;&lt;p&gt;[2] 回顾起来，我们应该成为直销商。如果我再做Viaweb，我会开设我们自己的在线商店。如果我们这样做了，我们会更好地理解用户。我鼓励任何开始初创公司的人成为其用户之一，无论这看起来多么不自然。&lt;/p&gt;&#xA;&lt;p&gt;[3] 可能的例外：很难与开源软件直接竞争。你可以为程序员构建东西，但必须有一些可以收费的部分。&lt;/p&gt;&#xA;&lt;p&gt;感谢Sam Altman、Trevor Blackwell和Jessica Livingston阅读本文草稿。&lt;/p&gt;</description>
    </item>
    <item>
      <title>权力</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/pow/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/pow/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/pow.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;权力&#34;&gt;权力&lt;/h1&gt;&#xA;&lt;p&gt;2017年1月&lt;/p&gt;&#xA;&lt;p&gt;那些有权势但缺乏魅力的人往往会被人讨厌。他们的权势使他们成为批评的目标，而他们又没有足够的魅力来化解这些批评。这就是希拉里·克林顿的问题。对于任何更擅长建设而不是应酬的CEO来说，这也往往是个问题。然而，建设型CEO（像希拉里一样）可能是最适合这个职位的人。&lt;/p&gt;&#xA;&lt;p&gt;我认为这个问题没有任何解决方案。这是人性。我们最多只能认识到这种情况正在发生，并理解成为批评的磁石有时并不表示某人是个错误的人选，反而说明他们是正确的人选。&lt;/p&gt;</description>
    </item>
    <item>
      <title>杰西卡·利文斯顿</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/jessica/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/jessica/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/jessica.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;杰西卡利文斯顿&#34;&gt;杰西卡·利文斯顿&lt;/h1&gt;&#xA;&lt;p&gt;2015年11月&lt;/p&gt;&#xA;&lt;p&gt;几个月前一篇关于Y Combinator的文章说早期它是一场&amp;quot;独角戏&amp;quot;。可悲的是，读到这种东西很常见。但这种描述的问题不仅是不公平。它还是误导性的。YC最新颖的大部分内容都归功于杰西卡·利文斯顿。如果你不了解她，你就不了解YC。所以让我告诉你一些关于杰西卡的事情。&lt;/p&gt;&#xA;&lt;p&gt;YC有4位创始人。杰西卡和我某天晚上决定创办它，第二天我们招募了我的朋友罗伯特·莫里斯和特雷弗·布莱克威尔。杰西卡和我日常运营YC，罗伯特和特雷弗阅读申请并与我们一起进行面试。&lt;/p&gt;&#xA;&lt;p&gt;当我们开始YC时，杰西卡和我已经在约会。起初我们试图对此表现得&amp;quot;专业&amp;quot;，意思是试图隐藏它。回想起来这似乎很荒谬，我们很快就放弃了这种伪装。而杰西卡和我是一对夫妻这是YC成为现在样子的重要原因。YC感觉像一个家庭。早期的创始人大多年轻。我们每周一起吃一次晚饭，前几年由我做饭。我们的第一个建筑曾经是私人住宅。整体氛围与沙山路风险投资公司的办公室惊人地不同，而且完全是更好的方面。有一种每个人走进来都能感受到的真实性。这不仅仅意味着人们信任我们。这是灌输给创业公司的完美品质。真实性是YC在创始人中寻找的最重要的事情之一，不仅因为伪造者和机会主义者令人讨厌，而且因为真实性是最成功的创业公司与其他公司区别开来的主要因素之一。&lt;/p&gt;&#xA;&lt;p&gt;早期的YC是一个家庭，杰西卡是它的母亲。她定义的文化是YC最重要的创新之一。文化在任何组织中都很重要，但在YC，文化不仅仅是我们构建产品时的行为方式。在YC，文化就是产品。&lt;/p&gt;&#xA;&lt;p&gt;杰西卡在另一个意义上也是母亲：她有最终决定权。我们作为组织做的一切都先经过她——资助谁，对公众说什么，如何与其他公司打交道，雇佣谁，一切。&lt;/p&gt;&#xA;&lt;p&gt;在我们有孩子之前，YC或多或少就是我们的生活。工作时间和非工作时间之间没有真正的区别。我们一直在谈论YC。虽然有些企业让它们感染你的私人生活可能会很乏味，但我们喜欢这样。我们创办YC是因为这是我们感兴趣的事情。而我们试图解决的一些问题难度无穷。如何识别好的创始人？你可以谈论这个问题多年，我们确实这么做了；我们仍然在这样做。&lt;/p&gt;&#xA;&lt;p&gt;我有些事情比杰西卡做得好，她有些事情比我做得好。她最擅长的事情之一是判断人。她是那些具有品格X光视觉的罕见个体之一。她几乎可以立即看穿任何类型的伪造者。她在YC内的绰号是社交雷达，她的这种特殊能力对于使YC成为现在的样子至关重要。你选择创业公司的阶段越早，你越是在选择创始人。后期阶段的投资者可以试用产品并查看增长数字。在YC投资的阶段，通常既没有产品也没有数字。&lt;/p&gt;&#xA;&lt;p&gt;其他人认为YC对技术未来有一些特殊见解。大多时候我们拥有苏格拉底声称的那种见解：我们至少知道我们一无所知。使YC成功的是能够选择好的创始人。我们认为Airbnb是个坏主意。我们资助它是因为我们喜欢创始人。&lt;/p&gt;&#xA;&lt;p&gt;在面试期间，罗伯特、特雷弗和我会用技术问题轰炸申请人。杰西卡主要观察。很多申请人可能把她看作某种秘书，特别是早期，因为她是出去迎接每个新群体的人，而且她问的问题不多。她对此不在意。如果人们不注意她，她更容易观察人。但面试后，我们三个人会转向杰西卡问&amp;quot;社交雷达说什么？&amp;quot;[1]&lt;/p&gt;&#xA;&lt;p&gt;面试时有社交雷达不仅是我们选择会成功的创始人的方式。也是我们选择好人的方式。起初我们这样做是因为情不自禁。想象一下拥有品格X光视觉会是什么感觉。与坏人在一起会让人无法忍受。所以我们拒绝资助那些品格有疑问的创始人，即使我们认为他们会成功。&lt;/p&gt;&#xA;&lt;p&gt;虽然我们最初出于自我放纵这样做，但结果证明对YC非常有价值。我们在开始时没有意识到，但我们选择的人将成为YC校友网络。一旦我们选择了他们，除非他们做了真正令人发指的事情，他们将成为其中的一部分终生。有些人现在认为YC的校友网络是其最有价值的特性。我个人认为YC的建议也相当不错，但校友网络肯定是最有价值的特性之一。对于这么大的群体，信任和互助水平是显著的。而杰西卡是主要原因。&lt;/p&gt;&#xA;&lt;p&gt;（正如我们后来学到的，拒绝那些品格有疑问的人可能几乎没有成本，因为创始人的好坏和他们做得如何不是正交的。如果坏创始人成功了，他们倾向于早卖。最成功的创始人几乎都是好人。）&lt;/p&gt;&#xA;&lt;p&gt;如果杰西卡对YC如此重要，为什么没有更多人意识到这一点？部分原因是我是个作家，作家总是获得不成比例的关注。YC的品牌最初是我的品牌，我们的申请人是读过我文章的人。但还有另一个原因：杰西卡讨厌关注。与记者交谈让她紧张。演讲的想法让她瘫痪。甚至在我们的婚礼上她也不舒服，因为新娘总是注意力的中心。[2]&lt;/p&gt;&#xA;&lt;p&gt;她讨厌关注不仅仅是因为她害羞，而是因为它干扰了社交雷达。她无法做自己。当每个人都在看着你时，你无法观察人。&lt;/p&gt;&#xA;&lt;p&gt;关注让她担忧的另一个原因是她讨厌吹嘘。在她做的任何公开可见的事情中，她最大的恐惧（在明显的恐惧即它会糟糕之后）是它会显得炫耀。她说过于谦虚是女性的常见问题。但在她的情况下，这不仅仅是如此。她对炫耀的厌恶如此强烈，几乎是一种恐惧症。&lt;/p&gt;&#xA;&lt;p&gt;她也讨厌争吵。她做不到；她只是关闭。不幸的是，作为组织的公众人物有很多争吵。&lt;/p&gt;&#xA;&lt;p&gt;所以虽然杰西卡比任何人都使YC独特，但使她能够做到这一点的品质意味着她倾向于被从YC历史中写出去。每个人都买了PG创办YC而他妻子只是有点帮助的说法。甚至YC的仇恨者也买这个说法。几年前当人们攻击我们没有资助更多女性创始人（比实际存在的多）时，他们都把YC视为与PG相同。承认杰西卡在YC的中心作用会破坏叙事。&lt;/p&gt;&#xA;&lt;p&gt;杰西卡对人们指责她的公司性别歧视感到愤怒。我从未见她对任何事情如此愤怒。但她没有反驳他们。没有公开。私下有很多脏话。她写了三篇关于女性创始人问题的独立文章。但她永远无法让自己发表其中任何一篇。她看到了这场辩论中的恶毒程度，她退缩了。[3]&lt;/p&gt;&#xA;&lt;p&gt;这不仅仅是因为她不喜欢争吵。她对品格如此敏感，以至于即使与不诚实的人争吵也让她反感。与点击诱饵记者或推特巨魔混在一起的想法对她来说不仅可怕，而且令人厌恶。&lt;/p&gt;&#xA;&lt;p&gt;但杰西卡知道她作为成功的女性创始人的例子会鼓励更多女性创办公司，所以去年她做了YC从未做过的事情，雇佣了一家公关公司来为她安排一些采访。在她做的第一次采访中，记者忽视了她对创业公司的见解，把它变成了一个耸人听闻的故事，说某个家伙在她等着在酒吧见面的地方试图与她搭讪。杰西卡感到羞辱，部分是因为那家伙没有做错什么，但更多是因为这个故事把她当作一个仅仅因为是女性而重要的受害者，而不是湾区最有知识的投资者之一。&lt;/p&gt;&#xA;&lt;p&gt;之后她告诉公关公司停止。&lt;/p&gt;&#xA;&lt;p&gt;你不会在媒体上听到关于杰西卡取得的成就。所以让我告诉你杰西卡取得了什么成就。Y Combinator根本上是一个人的联结，像一所大学。它不制造产品。定义它的是人。杰西卡比任何人都更精心策划和培育了这群人。从这个意义上说，她字面上创造了YC。&lt;/p&gt;&#xA;&lt;p&gt;杰西卡比任何人都更了解创业公司创始人的品质。她庞大的数据集和X光视觉在这方面是完美的风暴。创始人的品质是创业公司表现的最佳预测因素。而创业公司反过来又是成熟经济体增长的最重要来源。&lt;/p&gt;&#xA;&lt;p&gt;最了解成熟经济体增长最重要因素的人——那就是杰西卡·利文斯顿。这听起来不像是一个应该更出名的人吗？&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] Harj Taggar提醒我，虽然杰西卡问的问题不多，但往往是重要的问题：&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;她总是善于嗅出团队或他们决心的任何危险信号，并以解除武装的方式提出正确的问题，这通常揭示了比创始人意识到的更多。&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;[2] 或者更准确地说，虽然她喜欢以获得对她所做事情的关注的方式获得关注，但她不喜欢以实时被观看的方式获得关注。不幸的是，不仅对她，而且对很多人来说，你获得多少前者很大程度上取决于你获得多少后者。&lt;/p&gt;&#xA;&lt;p&gt;顺便说一句，如果你在公共活动中看到杰西卡，你永远不会猜到她讨厌关注，因为（a）她非常有礼貌，（b）当她紧张时，她通过更多微笑来表达。&lt;/p&gt;&#xA;&lt;p&gt;[3] 像杰西卡这样的人的存在不仅是主流媒体需要学会承认的事情，也是女权主义者需要学会承认的事情。有不成功的女性不喜欢争吵。这意味着如果关于女性的公开对话由争吵组成，她们的声音将被沉默。&lt;/p&gt;&#xA;&lt;p&gt;有一种格莱欣定律的对话。如果对话达到某种不文明程度，更有思想的人开始离开。没有人比杰西卡更了解女性创始人。但不可能有人听到她坦率地谈论这个话题。她曾经试探性地涉足这个水域，反应如此暴力，以至于她决定&amp;quot;再也不&amp;quot;。&lt;/p&gt;&#xA;&lt;p&gt;感谢Sam Altman、Paul Buchheit、Patrick Collison、Daniel Gackle、Carolynn Levy、Jon Levy、Kirsty Nathoo、Robert Morris、Geoff Ralston和Harj Taggar阅读本文草稿。是的，还有杰西卡·利文斯顿，她让我删掉的内容出奇地少。&lt;/p&gt;</description>
    </item>
    <item>
      <title>梯子之后</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/ladder/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/ladder/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/ladder.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;梯子之后&#34;&gt;梯子之后&lt;/h1&gt;&#xA;&lt;p&gt;2005年8月&lt;/p&gt;&#xA;&lt;p&gt;三十年前，人们应该沿着公司阶梯一路向上。现在这条规则不那么适用了。我们这一代想要提前获得报酬。我们不再为大公司开发产品以期望获得工作保障作为回报，而是在创业公司中自己开发产品，然后把它卖给大公司。至少我们想要期权。&lt;/p&gt;&#xA;&lt;p&gt;除其他外，这种转变造成了经济不平等迅速增加的表象。但实际上，这两种情况并不像经济统计中看起来那么不同。&lt;/p&gt;&#xA;&lt;p&gt;经济统计具有误导性，因为它们忽略了安全工作的价值。一个不会被解雇的轻松工作是值钱的；交换两者是最常见的腐败形式之一。闲职实际上是一种年金。只不过闲职不会出现在经济统计中。如果它们出现了，那么在实践中社会主义国家有显著的财富差距就会很清楚，因为它们通常有一类主要靠资历支付且永远不会被解雇的强大官僚。&lt;/p&gt;&#xA;&lt;p&gt;虽然不是闲职，但公司阶梯上的职位是真正有价值的，因为大公司努力不解雇人，并且主要基于资历从内部提拔。公司阶梯上的职位价值类似于公司估值中非常真实的&amp;quot;商誉&amp;quot;元素。这意味着人们可以期望未来的高薪工作。&lt;/p&gt;&#xA;&lt;p&gt;公司阶梯衰落的主要原因之一是始于1980年代的收购趋势。为什么要浪费时间爬一个可能在到达顶峰之前就消失的梯子？&lt;/p&gt;&#xA;&lt;p&gt;而且，并非巧合的是，公司阶梯是早期公司掠夺者如此成功的原因之一。不仅经济统计忽略了安全工作的价值。公司资产负债表也是如此。将1980年代的公司分割并出售其零件有利可图的原因之一是，它们没有正式承认对那些做过好工作并期望在时机成熟时获得高薪管理职位作为回报的员工的隐性债务。&lt;/p&gt;&#xA;&lt;p&gt;在电影《华尔街》中，戈登·盖柯嘲笑一家副总裁过多的公司。但该公司可能并不像看起来那么腐败；那些副总裁的舒适工作可能是对早期工作的报酬。&lt;/p&gt;&#xA;&lt;p&gt;我更喜欢新模式。一方面，将工作作为奖励似乎是个坏计划。很多优秀的工程师因此变成了糟糕的管理者。而且旧制度意味着人们必须处理更多的公司政治，以保护他们在阶梯职位上投入的工作。&lt;/p&gt;&#xA;&lt;p&gt;新系统的主要缺点是它涉及更多风险。如果你在创业公司而不是大公司中开发想法，在你完成之前，任何数量的随机因素都可能让你沉没。但也许老一辈会嘲笑我说我们做事的方式风险更大。毕竟，大公司内部的项目总是因为高层的任意决定而被取消。我父亲的整个行业（增殖反应堆）就是这样消失的。&lt;/p&gt;&#xA;&lt;p&gt;无论好坏，公司阶梯的想法可能永远消失了。新模式似乎更具流动性，也更有效率。但在财务上，它的变化比人们想象的要小。我们的父辈没有那么愚蠢。&lt;/p&gt;&#xA;&lt;p&gt;罗马尼亚语翻译 | 日语翻译&lt;/p&gt;</description>
    </item>
    <item>
      <title>模仿</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/copy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/copy/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/copy.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;模仿&#34;&gt;模仿&lt;/h1&gt;&#xA;&lt;h2 id=&#34;模仿你喜欢的东西&#34;&gt;模仿你喜欢的东西&lt;/h2&gt;&#xA;&lt;p&gt;2006年7月&lt;/p&gt;&#xA;&lt;p&gt;当我在高中时，我花了很多时间模仿糟糕的作家。我们在英语课上学习的大多是小说，所以我认为那是写作的最高形式。&lt;/p&gt;&#xA;&lt;p&gt;错误一。&lt;/p&gt;&#xA;&lt;p&gt;似乎最受推崇的故事是那些人们以复杂方式受苦的故事。任何有趣或引人入胜的东西都理所当然地值得怀疑，除非它古老到难以理解，比如莎士比亚或乔叟。&lt;/p&gt;&#xA;&lt;p&gt;错误二。&lt;/p&gt;&#xA;&lt;p&gt;理想的媒介似乎是短篇小说，我后来了解到它生命周期相当短暂，大致与杂志出版的高峰期重合。但由于它们的大小使它们非常适合在高中课堂使用，我们读了很多，这给我们留下了短篇小说正在蓬勃发展的印象。&lt;/p&gt;&#xA;&lt;p&gt;错误三。&lt;/p&gt;&#xA;&lt;p&gt;因为它们如此之短，所以真的不需要发生什么；你只能展示一个随机截断的生活片段，这被认为是先进的。&lt;/p&gt;&#xA;&lt;p&gt;错误四。&lt;/p&gt;&#xA;&lt;p&gt;结果是我写了很多故事，其中什么都没发生，只是有人以看似深刻的方式不开心。&lt;/p&gt;&#xA;&lt;p&gt;大学的大部分时间我是哲学专业的。我对发表在哲学期刊上的论文印象很深。它们的排版如此精美，语气令人着迷——时而随意，时而技术到缓冲区溢出。一个人会走在街上，突然模态性本身就会出现在他面前。我从没有真正理解这些论文，但我想我以后会抽时间更仔细地重读它们。在此期间，我尽力模仿它们。我现在可以看到，这是一个注定失败的努力，因为它们并没有真正说什么。例如，没有哲学家反驳过另一个，因为没有人说过足够确定的东西来反驳。不用说，我的模仿也没有说什么。&lt;/p&gt;&#xA;&lt;p&gt;在研究生院，我仍然在浪费时间模仿错误的东西。当时有一种时髦的程序叫做专家系统，其核心是叫做推理引擎的东西。我看了看这些东西的功能，想&amp;quot;我可以用一千行代码写出那个。&amp;ldquo;然而，著名教授们正在写关于它们的书，创业公司正在以年薪一份的价格销售它们。多么好的机会，我想；这些令人印象深刻的东西对我来说似乎很容易；我一定很敏锐。错了。这只是一个时尚。教授们写的关于专家系统的书现在被忽略了。它们甚至不在通向任何有趣事物的道路上。而为它们支付如此之多费用的客户很大程度上是那些为螺丝刀和马桶座支付数千美元的政府机构。&lt;/p&gt;&#xA;&lt;p&gt;如何避免模仿错误的东西？只模仿你真正喜欢的东西。这在所有三种情况下都会救了我。我不喜欢我们在英语课上必须读的短篇小说；我从哲学论文中学不到任何东西；我自己没有使用专家系统。我相信这些东西是好的，因为它们受到钦佩。&lt;/p&gt;&#xA;&lt;p&gt;很难将你喜欢的东西和你印象深刻的东西分开。一个技巧是忽略包装。每当我在博物馆看到一幅令人印象深刻的画时，我会问自己：如果我在车库拍卖中发现它，脏兮兮的，没有画框，不知道是谁画的，我会为它付多少钱？如果你在博物馆里尝试这个实验，你会发现你会得到一些真正令人震惊的结果。不要因为这个数据点是异常值就忽略它。&lt;/p&gt;&#xA;&lt;p&gt;找出你喜欢的东西的另一种方法是看看你作为有罪恶感的乐趣喜欢什么。人们喜欢的很多东西，特别是如果他们年轻而有雄心，他们喜欢主要是因为喜欢它们的美德感。99%读《尤利西斯》的人都在想&amp;quot;我正在读《尤利西斯》&amp;quot;。有罪恶感的乐趣至少是纯粹的。当你感觉不够有美德时，你读什么？当你读一本书时，你感到悲伤只剩下半本，而不是因为你已经读了一半而印象深刻，那是什么？那是你真正喜欢的东西。&lt;/p&gt;&#xA;&lt;p&gt;即使当你发现真正好的东西来模仿时，还有另一个陷阱需要避免。小心地模仿使它们变得好的东西，而不是它们的缺陷。很容易被引入模仿缺陷，因为它们更容易看到，当然也更容易模仿。例如，十八和十九世纪的大多数画家使用棕色调的颜色。他们是在模仿文艺复兴时期的伟大画家，那些画在当时已经因为灰尘而变成棕色。那些画后来被清理了，显示出鲜艳的色彩；当然，他们的模仿者仍然是棕色的。&lt;/p&gt;&#xA;&lt;p&gt;顺便说一句，是绘画治愈了我模仿错误东西的习惯。研究生院读到一半时，我决定尝试成为一名画家，艺术世界如此明显地腐败，以至于它挣断了轻信的缰绳。这些人使哲学教授看起来像数学家一样一丝不苟。显然，做好工作 xor 成为内部人士的选择如此明显，我被迫看到这种区别。在某种程度上，几乎每个领域都存在这种区别，但直到那时我设法避免面对它。&lt;/p&gt;&#xA;&lt;p&gt;这是我从绘画中学到的最有价值的东西之一：你必须自己弄清楚什么是好的。你不能信任权威。他们在这件事上会对你说谎。&lt;/p&gt;</description>
    </item>
    <item>
      <title>欢迎来到Lisp</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/acl2txtt1748944359/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/acl2txtt1748944359/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/acl2txtt1748944359.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;欢迎来到lisp&#34;&gt;欢迎来到Lisp&lt;/h1&gt;&#xA;&lt;p&gt;本章旨在让你尽快开始编程。到本章结束时，你将了解足够的Common Lisp知识来开始编写程序。&lt;/p&gt;&#xA;&lt;h2 id=&#34;21-形式&#34;&gt;2.1 形式&lt;/h2&gt;&#xA;&lt;p&gt;对于Lisp来说尤其如此，你通过使用它来学习它，因为Lisp是一种交互式语言。任何Lisp系统都包含一个称为toplevel的交互式前端。你将Lisp表达式输入到toplevel中，系统会显示它们的值。Lisp通常会显示一个提示符来告诉你它在等待你输入内容。许多Common Lisp实现使用&amp;gt;作为toplevel提示符。这就是我们在这里要使用的。&lt;/p&gt;&#xA;&lt;p&gt;最简单的Lisp表达式之一是整数。如果我们在提示符后输入1，&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt; 1&#xA;1&#xA;&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;系统将打印它的值，然后是另一个提示符，表示它准备好接受更多输入。在这种情况下，显示的值与我们输入的相同。像1这样的数字被称为求值为自身。&lt;/p&gt;&#xA;&lt;p&gt;当我们输入需要一些工作来求值的表达式时，生活变得更加有趣。例如，如果我们想要将两个数字相加，我们输入类似这样的内容：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt; (+ 2 3)&#xA;5&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在表达式(+ 2 3)中，+被称为运算符，数字2和3被称为参数。在日常生活中，我们会将这个表达式写为2 + 3，但在Lisp中，我们将+运算符放在前面，后面跟着参数，整个表达式用一对括号括起来：(+ 2 3)。这被称为前缀表示法，因为运算符在前。&lt;/p&gt;&#xA;&lt;p&gt;这种写表达式的方式起初可能看起来很奇怪，但实际上这种表示法是Lisp最棒的特点之一。例如，如果我们想要将三个数字相加，在普通表示法中我们必须使用+两次，2 + 3 + 4，而在Lisp中我们只需添加另一个参数：(+ 2 3 4)&lt;/p&gt;&#xA;&lt;p&gt;我们通常使用+的方式是，它必须恰好有两个参数：一个在左边，一个在右边。前缀表示法的灵活性意味着，在Lisp中，+可以接受任意数量的参数，包括无参数：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt; (+)&#xA;0&#xA;&amp;gt; (+ 2)&#xA;2&#xA;&amp;gt; (+ 2 3)&#xA;5&#xA;&amp;gt; (+ 2 3 4)&#xA;9&#xA;&amp;gt; (+ 2 3 4 5)&#xA;14&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;因为运算符可以接受不同数量的参数，我们需要括号来表示表达式的开始和结束。表达式可以嵌套。也就是说，表达式中的参数本身可能是复杂的表达式：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt; (/ (- 7 1) (- 4 2))&#xA;3&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;用英语来说，这是七减一，除以四减二。&lt;/p&gt;&#xA;&lt;p&gt;Lisp表示法的另一个美妙之处是：这就是全部了。所有Lisp表达式要么是原子，比如1，要么是列表，由零个或多个用括号括起来的表达式组成。这些都是有效的Lisp表达式：&lt;/p&gt;</description>
    </item>
    <item>
      <title>正确的固执</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/persistence/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/persistence/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/persistence.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;正确的固执&#34;&gt;正确的固执&lt;/h1&gt;&#xA;&lt;p&gt;2024年7月&lt;/p&gt;&#xA;&lt;p&gt;成功的人往往很执着。新想法一开始往往行不通，但他们不会被吓倒。他们不断尝试，最终找到可行的方法。&lt;/p&gt;&#xA;&lt;p&gt;另一方面，单纯的固执是失败的根源。固执的人很讨厌。他们不听劝告。他们撞得头破血流却一事无成。&lt;/p&gt;&#xA;&lt;p&gt;但这两者之间真的有什么区别吗？执着的人和固执的人实际上行为不同吗？还是他们做着同样的事情，我们只是根据他们最终是否正确而将其标记为执着或固执？&lt;/p&gt;&#xA;&lt;p&gt;如果这是唯一的区别，那么这种区分就没有什么可学的。告诉某人要执着而不是固执，只是告诉他们要正确而不是错误，他们已经知道这一点。而如果执着和固执实际上是不同类型的行为，那么将它们区分开来就很有价值。[1]&lt;/p&gt;&#xA;&lt;p&gt;我和很多有决心的人交谈过，在我看来，他们是不同类型的行为。我经常在谈话后离开时想着&amp;quot;哇，那个人真有决心&amp;quot;或者&amp;quot;该死，那个人真固执&amp;quot;，我不认为我只是在谈论他们是否看起来正确。这是其中的一部分，但不是全部。&lt;/p&gt;&#xA;&lt;p&gt;固执的人有一些恼人的特质，不仅仅是因为犯了错误。他们不听劝告。而这对所有有决心的人来说并不都是如此。我想不出有谁比科利森兄弟更有决心，当你向他们指出问题时，他们不仅会听，而且带着一种近乎掠夺性的强度倾听。他们的船底有洞吗？可能没有，但如果有，他们想知道。&lt;/p&gt;&#xA;&lt;p&gt;大多数成功人士也是如此。当你不同意他们时，他们从未如此投入。而固执的人不想听你说话。当你指出问题时，他们的目光呆滞，回答听起来像在讨论教义的教条主义者。[2]&lt;/p&gt;&#xA;&lt;p&gt;执着和固执之所以看起来相似，是因为他们都很难被阻止。但他们在不同的意义上很难被阻止。执着的人就像引擎无法减速的船。固执的人就像舵无法转动的船。[3]&lt;/p&gt;&#xA;&lt;p&gt;在退化的情况下，它们无法区分：当解决问题只有一种方法时，你唯一的选择是是否放弃，执着和固执都说不。这大概就是为什么这两种情况在流行文化中经常被混淆。它假设问题很简单。但随着问题变得更加复杂，我们可以看出它们之间的区别。执着的人更看重决策树中高处的要点，而不是下方的次要要点，而固执的人则在整个树上 indiscriminately 地喷洒&amp;quot;不要放弃&amp;quot;。&lt;/p&gt;&#xA;&lt;p&gt;执着的人执着于目标。固执的人执着于他们如何实现目标的想法。&lt;/p&gt;&#xA;&lt;p&gt;更糟糕的是，这意味着他们往往会执着于最初解决问题的想法，尽管这些想法最少受到解决问题经验的影响。所以固执的人不仅仅是执着于细节，而且不成比例地可能执着于错误的细节。&lt;/p&gt;&#xA;&lt;p&gt;他们为什么会这样？固执的人为什么会固执？一种可能是他们不知所措。他们能力不强。他们接手了一个难题。他们立即陷入了困境。所以他们就像在摇晃的船只甲板上的人一样抓住最近的手柄。&lt;/p&gt;&#xA;&lt;p&gt;这是我最初的理论，但经过检验，它站不住脚。如果固执仅仅是因为不知所措的结果，你可以通过让执着的人解决更难的问题来让他们变得固执。但事实并非如此。如果你给科利森兄弟一个极其困难的问题来解决，他们不会变得固执。如果有什么变化，他们会变得不那么固执。他们会知道必须对任何事情持开放态度。&lt;/p&gt;&#xA;&lt;p&gt;同样，如果固执是由情况引起的，固执的人在解决更简单的问题时会停止固执。但他们不会。如果固执不是由情况引起的，那么它一定来自内心。它必须是一个人性格的特征。&lt;/p&gt;&#xA;&lt;p&gt;固执是对改变自己想法的反射性抵抗。这与愚蠢并不完全相同，但它们密切相关。随着相反证据的增加，对自己想法的反射性抵抗变成一种诱发的愚蠢。固执是一种不放弃的形式，容易被愚蠢的人实践。你不必考虑复杂的权衡；你只需站稳脚跟。它在一定程度上是有效的。&lt;/p&gt;&#xA;&lt;p&gt;固执对简单问题有效这一事实是一个重要线索。执着和固执不是对立面。它们之间的关系更像我们可以进行的两种呼吸类型之间的关系：有氧呼吸，以及我们从最遥远祖先那里继承的无氧呼吸。无氧呼吸是一个更原始的过程，但它有其用途。当你突然从威胁中跳开时，你使用的就是这个。&lt;/p&gt;&#xA;&lt;p&gt;固执的最佳量不是零。如果你对挫折的最初反应是不假思索的&amp;quot;我不会放弃&amp;quot;，这可能是好事，因为这有助于防止恐慌。但不假思索只能带你走这么远。一个人越向固执的连续体发展，解决难题的可能性就越小。[4]&lt;/p&gt;&#xA;&lt;p&gt;固执是一件简单的事情。动物也有。但事实证明，执着有一个相当复杂的内部结构。&lt;/p&gt;&#xA;&lt;p&gt;区分执着者的一个特质是他们的精力。冒着过于强调词语的风险，他们执着而不仅仅是抵抗。他们不断尝试事物。这意味着执着的人也必须有想象力。要不断尝试事物，你必须不断想出要尝试的事物。&lt;/p&gt;&#xA;&lt;p&gt;精力和想象力是一个美妙的组合。各自都能从对方那里得到最好的东西。精力为想象力产生的想法创造了需求，从而产生更多，而想象力为精力提供了去处。[5]&lt;/p&gt;&#xA;&lt;p&gt;仅仅拥有精力和想象力是相当罕见的。但要解决难题，你还需要另外三个品质：韧性、良好的判断力和对某种目标的专注。&lt;/p&gt;&#xA;&lt;p&gt;韧性意味着不会因挫折而摧毁士气。一旦问题达到一定规模，挫折是不可避免的，所以如果你不能从中恢复，你只能在小规模上做好工作。但韧性与固执不同。韧性意味着挫折不能改变你的士气，而不是它们不能改变你的想法。&lt;/p&gt;&#xA;&lt;p&gt;事实上，执着经常要求一个人改变自己的想法。这就是良好判断力的用武之地。执着的人相当理性。他们专注于期望值。正是这一点，而不是鲁莽，让他们能够在不太可能成功的事情上工作。&lt;/p&gt;&#xA;&lt;p&gt;不过，执着者在一个点上经常是非理性的：在决策树的顶端。当他们在两个期望值大致相等的问题之间选择时，选择通常归结为个人偏好。事实上，他们经常将项目故意分为很宽的期望值带，以确保他们想要工作的项目仍然符合条件。&lt;/p&gt;&#xA;&lt;p&gt;经验上，这似乎不是问题。在决策树顶端非理性是可以的。一个原因是我们人类会在我们喜欢的问题上更努力地工作。但还有一个更微妙的因素：我们对问题的偏好不是随机的。当我们喜欢一个其他人不喜欢的问题时，往往是因为我们潜意识地注意到它比他们意识到的更重要。&lt;/p&gt;&#xA;&lt;p&gt;这 leads to 我们的第五个品质：需要有一些总体目标。如果你像我一样，小时候只是想要做一些伟大的事情。理论上这应该是最强大的动力，因为它包括所有可能做的事情。但实际上它不太有用，正是因为它包括太多。它没有告诉你现在要做什么。&lt;/p&gt;&#xA;&lt;p&gt;所以在实践中，你的精力和想象力、韧性和良好判断力必须指向一些相当具体的目标。不要太具体，否则你可能会错过你正在寻找的附近的一个伟大发现，但也不要太一般，否则它不会起激励作用。[6]&lt;/p&gt;&#xA;&lt;p&gt;当你看执着的内部结构时，它根本不像固执。它要复杂得多。五个不同的品质——精力、想象力、韧性、良好的判断力和对目标的专注——结合起来产生一种现象，在导致你不放弃的意义上有点像固执。但你不放弃的方式完全不同。你不是仅仅抵抗变化，而是被精力和韧性驱动向目标，通过想象力发现的路径并由判断力优化。如果决策树中低处的任何点的期望值下降足够，你会在那点上让步，但精力和韧性不断推动你向你在更高处选择的任何方向前进。&lt;/p&gt;&#xA;&lt;p&gt;考虑到它的构成，正确的固执比错误的固执罕见得多，或者说它获得的结果好得多，这并不奇怪。任何人都可以固执。事实上，孩子、醉汉和傻瓜最擅长。而很少有足够多的人拥有产生正确固执的所有五个品质，但当他们拥有时，结果就是神奇的。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;注释&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;[1] 我将用&amp;quot;执着&amp;quot;表示好的固执，用&amp;quot;固执&amp;quot;表示坏的固执，但我不能声称我只是遵循当前的用法。传统观点几乎不区分好的和坏的固执，用法相应地不严格。我可以为好的类型发明一个新词，但似乎只是扩展&amp;quot;执着&amp;quot;更好。&lt;/p&gt;&#xA;&lt;p&gt;[2] 在某些领域，人们可以通过固执而成功。一些政治领导人因此而臭名昭著。但这在需要通过外部测试的情况下行不通。事实上，以固执著称的政治领导人以获得权力而闻名，而不是以善用权力而闻名。&lt;/p&gt;&#xA;&lt;p&gt;[3] 执着者的舵会有一些阻力，因为改变方向有成本。&lt;/p&gt;&#xA;&lt;p&gt;[4] 固执的人有时确实成功解决了难题。一种方式是通过运气：就像停走的时钟一天对两次，他们抓住一些任意的想法，结果证明是正确的。另一种是当他们的固执抵消了其他形式的错误时。例如，如果一个领导者有过度谨慎的下属，他们对成功可能性的估计总是偏向同一个方向。所以如果他在每个边界情况下盲目地说&amp;quot;无论如何都要推进&amp;quot;，他通常会证明是正确的。&lt;/p&gt;&#xA;&lt;p&gt;[5] 如果你停在那里，只有精力和想象力，你会得到艺术家或诗人的传统漫画。&lt;/p&gt;&#xA;&lt;p&gt;[6] 从小的一侧开始犯错。如果你没有经验，你不可避免地会在一侧或另一侧犯错，如果你在使目标太宽的一侧犯错，你将一事无成。而如果你在小的一侧犯错，你至少会向前移动。然后，一旦你开始移动，就扩大目标。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;感谢&lt;/strong&gt; 特雷弗·布莱克威尔、杰西卡·利文斯顿、杰基·麦克多诺、考特尼·皮普金、哈尔吉·塔加尔和加里·谭阅读草稿。&lt;/p&gt;</description>
    </item>
    <item>
      <title>正统特权</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/orth/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/orth/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/orth.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;正统特权&#34;&gt;正统特权&lt;/h1&gt;&#xA;&lt;p&gt;2020年7月&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;很少有人能够平静地表达与他们的社会环境偏见不同的意见。大多数人甚至无法形成这样的意见。&amp;quot;——爱因斯坦&lt;/p&gt;&#xA;&lt;p&gt;最近有很多关于特权的讨论。虽然这个概念被过度使用，但其中确实有道理，特别是特权会让你盲目这个观点——你无法看到那些生活与你非常不同的人能够看到的事情。&lt;/p&gt;&#xA;&lt;p&gt;但这种盲目性最普遍的例子之一是我没有看到被明确提到的。我称之为正统特权：一个人的思想越传统，他们就越觉得每个人都表达自己的意见是安全的。&lt;/p&gt;&#xA;&lt;p&gt;他们表达意见是安全的，因为他们意见的来源是目前可以接受的信念。所以在他们看来，对每个人都必须是安全的。他们真的无法想象会有真实的陈述会让你陷入麻烦。&lt;/p&gt;&#xA;&lt;p&gt;然而，在历史的每一个时刻，都有真实的事情说出来会让你陷入麻烦。我们是第一个不是这样的时代吗？那将是多么令人惊讶的巧合。&lt;/p&gt;&#xA;&lt;p&gt;当然，至少应该默认假设我们的时代并不独特，现在有你不能说真实的事情，就像一直以来一样。你会这么想。但即使面对如此压倒性的历史证据，大多数人还是会在这个问题上凭直觉行事。&lt;/p&gt;&#xA;&lt;p&gt;在最极端的情况下，患有正统特权的人不仅否认有任何你不能说真实的事情，而且仅仅因为你这样说就会指责你为异端。虽然如果你的时代有不止一个异端，这些指控会奇怪地不确定：你要么是x主义者，要么是y主义者。&lt;/p&gt;&#xA;&lt;p&gt;与这些人打交道令人沮丧，但重要的是要意识到他们是认真的。他们不是假装认为一个想法既不正统又真实是不可能的。世界在他们看来确实是这样。&lt;/p&gt;&#xA;&lt;p&gt;事实上，这是一种特别顽固的特权形式。人们可以通过更多地了解他们所不了解的东西来克服大多数形式特权引起的盲目性。但他们不能仅仅通过学习更多来克服正统特权。他们必须变得更加独立思考。如果这真的发生，也不会在一次对话的时间范围内发生。&lt;/p&gt;&#xA;&lt;p&gt;也许有可能说服一些人相信正统特权必须存在，即使他们感觉不到，就像一个人可以说暗物质一样。也许有些人可以说服，例如，认为这是历史上第一个没有什么你不能说真实的事情的时点是非常不可能的，即使他们无法想象具体的例子。&lt;/p&gt;&#xA;&lt;p&gt;但总的来说，我认为对这种特权说&amp;quot;检查你的特权&amp;quot;是行不通的，因为处于这种特权人口中的人没有意识到他们处于其中。在传统思想的人看来，他们并不是传统思想的人。在他们看来，他们只是对的。事实上，他们往往特别确定这一点。&lt;/p&gt;&#xA;&lt;p&gt;也许解决方案是诉诸礼貌。如果有人说他们能听到你听不到的高音噪音，相信他们的话才是礼貌的，而不是要求不可能产生的证据，或者干脆否认他们听到任何东西。想象那会显得多么无礼。同样，如果有人说他们能想到真实但不能说的事情，即使你自己想不出任何例子，相信他们的话才是礼貌的。&lt;/p&gt;&#xA;&lt;p&gt;感谢Sam Altman、Trevor Blackwell、Patrick Collison、Antonio Garcia-Martinez、Jessica Livingston、Robert Morris、Michael Nielsen、Geoff Ralston、Max Roser和Harj Taggar阅读本文草稿。&lt;/p&gt;</description>
    </item>
    <item>
      <title>泡沫</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/bubble/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/bubble/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/bubble.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;泡沫&#34;&gt;泡沫&lt;/h1&gt;&#xA;&lt;p&gt;泡沫的正确之处&lt;/p&gt;&#xA;&lt;p&gt;2004年9月&lt;/p&gt;&#xA;&lt;p&gt;（本文源自ICFP 2004的特邀演讲。）&lt;/p&gt;&#xA;&lt;p&gt;我在互联网泡沫中有一排前排座位，因为我在1998年和1999年在雅虎工作。有一天，当股票交易在200美元左右时，我坐下来计算我认为价格应该是多少。我得到的答案是12美元。我走到下一个隔间告诉我的朋友Trevor。&amp;ldquo;十二！&amp;ldquo;他说。他试图听起来愤怒，但没有完全做到。他知道我们的估值是疯狂的。&lt;/p&gt;&#xA;&lt;p&gt;雅虎是一个特例。不仅仅是我们的市盈率是假的。我们一半的收益也是假的。当然不是安然那种方式。财务人员在报告收益方面似乎一丝不苟。使我们的收益虚假的是，雅虎实际上是庞氏骗局的中心。投资者看着雅虎的收益，对自己说，这里证明互联网公司可以赚钱。所以他们投资于承诺成为下一个雅虎的新创业公司。一旦这些创业公司拿到钱，他们用钱做什么？在雅虎上购买数百万美元的广告来推广他们的品牌。结果：本季度对创业公司的资本投资在下季度显示为雅虎收益——刺激了新一轮的创业公司投资。&lt;/p&gt;&#xA;&lt;p&gt;就像在庞氏骗局中一样，这个系统似乎的回报只是对它的最新一轮投资。使它不是庞氏骗局的是它是无意的。至少，我认为是。风险投资行业相当乱伦， presumably有一些人处于能够意识到发生了什么并从中获利的位置。&lt;/p&gt;&#xA;&lt;p&gt;一年后游戏结束了。从2000年1月开始，雅虎的股价开始崩溃，最终失去了95%的价值。&lt;/p&gt;&#xA;&lt;p&gt;但请注意，即使市值被削减了所有脂肪，雅虎仍然价值连城。即使在2001年3月和4月的宿醉估值中，雅虎的人还是在短短六年内创建了一家价值约80亿美元的公司。&lt;/p&gt;&#xA;&lt;p&gt;事实是，尽管我们在泡沫期间听到的关于&amp;quot;新经济&amp;quot;的种种胡言乱语，但有一个核心的真理。要得到一个真正的大泡沫，你需要这个：在中心有坚实的东西，这样即使是聪明人也会被吸引进来。（艾萨克·牛顿和乔纳森·斯威夫特都在1720年的南海泡沫中赔了钱。）&lt;/p&gt;&#xA;&lt;p&gt;现在钟摆已经摆向另一边。现在任何在泡沫期间变得时髦的东西都不合时宜。但这是一个错误——比相信1999年每个人说的话更大的错误。从长远来看，泡沫正确的地方将比它错误的地方更重要。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-零售风险投资&#34;&gt;1. 零售风险投资&lt;/h2&gt;&#xA;&lt;p&gt;在泡沫的过度之后，现在在公司有收益之前将其上市被认为是可疑的。但这个想法本身并没有什么内在错误。在早期阶段将公司上市只是零售风险投资：不是去风险投资公司寻求最后一轮融资，而是去公开市场。&lt;/p&gt;&#xA;&lt;p&gt;到泡沫结束时，没有收益就上市的公司被嘲笑为&amp;quot;概念股&amp;rdquo;，好像投资它们本质上是愚蠢的。但投资概念并不愚蠢；这是风险投资家所做的，其中最好的远非愚蠢。&lt;/p&gt;&#xA;&lt;p&gt;还没有收益的公司股票是有价值的。市场可能需要一段时间来学习如何评估这类公司，就像它在20世纪初必须学习如何评估普通股票一样。但市场擅长解决这类问题。如果市场最终做得比现在的风险投资家更好，我不会感到惊讶。&lt;/p&gt;&#xA;&lt;p&gt;早期上市不会是每个公司的正确计划。当然，它可能会造成破坏——分散管理层的注意力，或者让早期员工突然变富。但就像市场将学习如何评估创业公司一样，创业公司将学习如何最小化上市的损害。&lt;/p&gt;&#xA;&lt;h2 id=&#34;2-互联网&#34;&gt;2. 互联网&lt;/h2&gt;&#xA;&lt;p&gt;互联网确实是一件大事。这是即使聪明人也被泡沫愚弄的原因之一。显然它将产生巨大影响。足以在两年内使纳斯达克公司的价值翻三倍？事实证明，没有。但在当时很难确定。[1]&lt;/p&gt;&#xA;&lt;p&gt;同样的事情发生在密西西比和南海泡沫期间。驱动它们的是有组织公共金融的发明（南海公司，尽管其名称，实际上是英格兰银行的竞争对手）。从长远来看，这确实是一件大事。&lt;/p&gt;&#xA;&lt;p&gt;认识到一个重要趋势比弄清楚如何从中获利更容易。投资者似乎总是犯的错误是过于字面地理解趋势。由于互联网是新的重要事物，投资者认为公司越互联网化越好。因此出现了Pets.Com这样的笑话。&lt;/p&gt;&#xA;&lt;p&gt;事实上，从大趋势中赚到的大部分钱都是间接赚的。在铁路繁荣期间赚钱最多的不是铁路本身，而是两边的公司，比如卡内基的钢铁厂，它制造铁轨，以及标准石油，它使用铁路将石油运到东海岸，在那里可以运往欧洲。&lt;/p&gt;&#xA;&lt;p&gt;我认为互联网将产生巨大影响，而且到目前为止我们所见到的与即将到来的相比根本不算什么。但大多数赢家只会间接是互联网公司；每有一个谷歌，就会有十个捷蓝航空。&lt;/p&gt;&#xA;&lt;h2 id=&#34;3-选择&#34;&gt;3. 选择&lt;/h2&gt;&#xA;&lt;p&gt;为什么互联网会产生巨大影响？一般论点是新的沟通方式总是会产生巨大影响。它们很少发生（直到工业时代只有语言、写作和印刷），但当它们发生时，它们总会引起大轰动。&lt;/p&gt;&#xA;&lt;p&gt;具体论点之一，或者其中之一，是互联网给我们更多选择。在&amp;quot;旧&amp;quot;经济中，向人们展示信息的高成本意味着他们只有狭窄的选择范围。通往消费者的微小、昂贵的管道被恰当地称为&amp;quot;渠道&amp;rdquo;。控制渠道，你就可以按照你的条件喂给他们你想给的东西。而且不仅仅是依赖这一原则的大公司。同样，工会、传统新闻媒体以及艺术和文学机构也是如此。获胜不取决于做好工作，而取决于获得对某些瓶颈的控制。&lt;/p&gt;&#xA;&lt;p&gt;有迹象表明这种情况正在改变。谷歌每月有超过8200万独立用户，年收入约30亿美元。[2] 然而，你见过谷歌广告吗？这里有些事情正在发生。&lt;/p&gt;&#xA;&lt;p&gt;诚然，谷歌是一个极端案例。人们很容易转向新的搜索引擎。尝试一个新的搜索引擎需要很少的努力，不需要花钱，而且很容易看出结果是否更好。所以谷歌不必做广告。在他们这样的业务中，做到最好就足够了。&lt;/p&gt;&#xA;&lt;p&gt;互联网令人兴奋的是它正在将一切朝那个方向转变。如果你想通过制造最好的东西来获胜，困难的部分是开始。最终每个人都会通过口碑了解到你是最好的，但你如何活到那个时候？而正是在这个关键阶段，互联网的影响最大。首先，互联网让任何人几乎零成本找到你。其次，它极大地加速了口碑传播声誉的速度。总之，这意味着在许多领域，规则将是：建造它，他们就会来。制造伟大的东西并把它放在网上。这与上个世纪的获胜秘诀有很大的不同。&lt;/p&gt;&#xA;&lt;h2 id=&#34;4-青年&#34;&gt;4. 青年&lt;/h2&gt;&#xA;&lt;p&gt;互联网泡沫方面，新闻媒体似乎最着迷的是一些创业创始人的年轻。这也是一个将持续的趋势。26岁的人之间有巨大的标准差。有些人只适合入门级工作，但有些人已经准备好统治世界，如果他们能找到人处理文书工作。&lt;/p&gt;&#xA;&lt;p&gt;26岁的人可能不太擅长管理人员或处理SEC事务。那些需要经验。但那些也是商品，可以交给某个副手。CEO最重要的素质是他对公司未来的愿景。他们下一步将建造什么？而在那方面，有26岁的人可以与任何人竞争。&lt;/p&gt;&#xA;&lt;p&gt;1970年，公司总裁意味着至少五十多岁的人。如果他有技术人员为他工作，他们被对待就像赛马场：珍贵，但没有权力。但随着技术变得越来越重要，极客的力量也随之增长以反映这一点。现在，CEO有一个聪明人可以咨询技术事务是不够的。 increasingly，他自己必须是那个人。&lt;/p&gt;&#xA;&lt;p&gt;像往常一样，商业 clinging to old forms. 风险投资家似乎仍然想安装一个看起来合法的发言者作为CEO。但 increasingly公司的创始人是真正的权力，而风险投资家安装的灰头发人更像音乐团体的经理而不是将军。&lt;/p&gt;&#xA;&lt;h2 id=&#34;5-非正式&#34;&gt;5. 非正式&lt;/h2&gt;&#xA;&lt;p&gt;在纽约，泡沫产生了戏剧性的后果：西装过时了。它们使人显得老。所以在1998年，强大的纽约类型突然穿着开领衬衫、卡其裤和椭圆形金属丝眼镜，就像圣克拉拉的家伙。&lt;/p&gt;&#xA;&lt;p&gt;钟摆摆回了一点，部分是由于服装行业的恐慌反应。但我赌开领衬衫。这不像看起来那么 frivolous 一个问题。衣服很重要，所有极客都能感觉到，尽管他们可能没有意识地意识到。&lt;/p&gt;&#xA;&lt;p&gt;如果你是一个极客，你可以通过问自己如何感觉关于一个让你穿西装打领带去工作的公司来理解衣服有多重要。这个主意听起来很可怕，不是吗？事实上，可怕的程度远远超过穿这种衣服的 mere 不适。一个让程序员穿西装的公司会有一些 deeply 错误的地方。&lt;/p&gt;&#xA;&lt;p&gt;而错误的地方在于一个人的外表表现比一个人的想法质量更重要。这就是形式主义的问题。打扮本身并不那么坏。问题是它绑定的受体：打扮不可避免地成为好想法的替代品。技术上无能的商业类型被称为&amp;quot;西装&amp;quot;并非巧合。&lt;/p&gt;&#xA;&lt;p&gt;极客不只是碰巧穿着非正式。他们做得太一致了。有意识或无意识地，他们穿着非正式作为防止愚蠢的预防措施。&lt;/p&gt;&#xA;&lt;h2 id=&#34;6-极客&#34;&gt;6. 极客&lt;/h2&gt;&#xA;&lt;p&gt;服装只是反形式主义战争中最可见的战场。极客倾向于避免任何形式的 formality。他们对工作头衔，例如，或任何其他权威的附属物不感兴趣。&lt;/p&gt;&#xA;&lt;p&gt;事实上，这几乎就是极客的定义。我最近发现自己在和一个来自好莱坞的人交谈，他正在策划一个关于极客的节目。我认为如果我解释什么是极客会有用。我想出的是：一个不在营销自己上花费任何精力的人。&lt;/p&gt;&#xA;&lt;p&gt;换句话说，极客是专注于实质内容的人。那么极客和技术之间有什么联系？大致是你无法愚弄自然。在技术问题上，你必须得到正确的答案。如果你的软件错误计算了太空探测器的路径，你无法通过说你的代码是爱国的，或前卫的，或人们在非技术领域使用的任何其他遁词来摆脱困境。&lt;/p&gt;&#xA;&lt;p&gt;随着技术在经济中变得越来越重要，极客文化也随之兴起。极客已经比我小时候酷多了。当我在1980年代中期上大学时，&amp;ldquo;极客&amp;quot;仍然是一种侮辱。主修计算机科学的人通常试图隐瞒这一点。现在女性问我她们在哪里可以遇到极客。（脑海中浮现的答案是&amp;quot;Usenix&amp;rdquo;，但这就像从消防栓喝水一样。）&lt;/p&gt;&#xA;&lt;p&gt;我对为什么极客文化变得越来越被接受没有幻想。不是因为人们意识到实质比营销更重要。是因为极客变得富有。但这不会改变。&lt;/p&gt;</description>
    </item>
    <item>
      <title>注意差距</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/gap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/gap/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/gap.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;注意差距&#34;&gt;注意差距&lt;/h1&gt;&#xA;&lt;p&gt;2004年5月&lt;/p&gt;&#xA;&lt;p&gt;当人们对某件事足够在意并努力把它做好时，做得最好的人往往会远远超过其他人。莱昂纳多和二流的同时代人如博尔戈尼奥之间存在巨大差距。你可以看到雷蒙德·钱德勒和普通侦探小说作家之间的同样差距。顶级职业棋手可以与普通俱乐部棋手下万局比赛而不输一局。&lt;/p&gt;&#xA;&lt;p&gt;像下棋、绘画或写小说一样，赚钱是一项非常专业的技能。但出于某种原因，我们以不同的方式对待这项技能。当少数人在下棋或写小说方面超越其他人时，没有人抱怨，但当少数人赚的钱比其他人多时，我们就会看到社论说这是错误的。&lt;/p&gt;&#xA;&lt;p&gt;为什么？这种变化模式似乎与其他任何技能没有什么不同。是什么导致人们在技能是赚钱时反应如此强烈？&lt;/p&gt;&#xA;&lt;p&gt;我认为我们将赚钱视为不同的原因有三个：我们童年时期学到的误导性财富模型；直到最近，大多数财富积累的方式不光彩；以及对收入巨大差异对社会有害的担忧。据我所知，第一个是错误的，第二个已经过时，第三个经证明是错误的。难道在现代社会中，收入差异实际上是健康的标志吗？&lt;/p&gt;&#xA;&lt;h2 id=&#34;财富的爸爸模型&#34;&gt;财富的爸爸模型&lt;/h2&gt;&#xA;&lt;p&gt;我五岁时认为电是由插座创造的。我没有意识到外面有发电站在发电。同样，大多数孩子没有意识到财富是必须创造的东西。它似乎是从父母那里流出来的东西。&lt;/p&gt;&#xA;&lt;p&gt;由于遇到财富的环境，孩子们往往会误解财富。他们把财富和金钱混淆。他们认为财富的数量是固定的。他们认为财富是由权威机构分配的（因此应该平均分配），而不是必须创造的东西（可能是不平等地创造）。&lt;/p&gt;&#xA;&lt;p&gt;事实上，财富不是金钱。金钱只是一种方便的交易方式，将一种形式的财富换成另一种。财富是潜在的东西——我们购买的商品和服务。当你旅行到一个富有或贫穷的国家时，你不必查看人们的银行账户来判断你在哪种国家。你可以看到财富——在建筑和街道中，在人们的衣服和健康中。&lt;/p&gt;&#xA;&lt;p&gt;财富从哪里来？人们创造它。当大多数人生活在农场时，这更容易理解，他们用自己的双手制造许多他们想要的东西。然后你可以在房屋、畜群和谷仓中看到每个家庭创造的财富。当时也很明显，世界的财富不是像派片一样必须分享的固定数量。如果你想要更多财富，你可以创造它。&lt;/p&gt;&#xA;&lt;p&gt;今天仍然如此，尽管很少有人直接为自己创造财富（除了一些残余的家务劳动）。我们大多为其他人创造财富以换取金钱，然后用这些金钱换取我们想要的财富形式。[1]&lt;/p&gt;&#xA;&lt;p&gt;因为孩子们无法创造财富，所以他们拥有的一切都必须被给予他们。当财富是被给予的东西时，当然它似乎应该被平均分配。[2] 在大多数家庭中确实如此。孩子们确保这一点。当一个兄弟姐妹得到比另一个多时，他们会哭喊&amp;quot;不公平&amp;quot;。&lt;/p&gt;&#xA;&lt;p&gt;在现实世界中，你不能一直靠父母生活。如果你想要什么，你要么必须制造它，要么为别人做同等价值的事情，以便让他们给你足够的钱来购买它。在现实世界中，财富（除了像小偷和投机者这样的少数专家）是你必须创造的东西，而不是爸爸分配的东西。而且由于创造财富的能力和欲望因人而异，财富的创造并不平等。&lt;/p&gt;&#xA;&lt;p&gt;你通过做或制造人们想要的东西来获得报酬，那些赚更多钱的人通常只是更擅长做人们想要的事情。顶级演员比B级演员赚的钱多得多。B级演员可能几乎同样有魅力，但当人们去剧院查看上映的电影列表时，他们想要大牌明星拥有的那种额外的魅力。&lt;/p&gt;&#xA;&lt;p&gt;做人们想要的事情当然不是赚钱的唯一方法。你也可以抢劫银行，或索取贿赂，或建立垄断。这些伎俩造成了财富的一些变化，实际上也造成了一些最大的个人财富，但它们不是收入变化的根本原因。收入变化的根本原因，如奥卡姆剃刀所示，与所有其他人类技能变化的根本原因相同。&lt;/p&gt;&#xA;&lt;p&gt;在美国，大型上市公司的CEO的收入大约是普通人的100倍。[3] 篮球运动员的收入大约是128倍，棒球运动员是72倍。社论以惊恐的语气引用这种统计数据。但我毫不怀疑一个人可能比另一个人多100倍的生产力。在古罗马，奴隶的价格根据他们的技能相差50倍。[4] 这还没有考虑到动机，或者你可以从现代技术获得的额外生产力杠杆。&lt;/p&gt;&#xA;&lt;p&gt;关于运动员或CEO薪水的社论让我想起早期的基督教作家，他们从第一原则争论地球是否是圆的，而他们可以走出去查看。[5] 某人的工作价值多少不是一个政策问题。这是市场已经决定的东西。&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;他们真的值我们100个人吗？&amp;ldquo;社论作者问。取决于你所说的价值是什么意思。如果你的意思是人们会为他们的技能付多少钱，答案显然是肯定的。&lt;/p&gt;&#xA;&lt;p&gt;一些CEO的收入反映了一些不当行为。但是不是还有其他人的收入真正反映了他们创造的财富？史蒂夫·乔布斯拯救了一个处于末期衰落的公司。而且不仅仅是转型专家那样通过削减成本；他必须决定苹果的下一个产品应该是什么。几乎没有人能够做到这一点。而且无论CEO的情况如何，很难看出任何人如何能够争辩说职业篮球运动员的薪水不反映供求关系。&lt;/p&gt;&#xA;&lt;p&gt;原则上，一个人真的可能比另一个人创造更多的财富，这似乎不太可能。这个谜团的关键是重新审视那个问题，他们真的值我们100个人吗？篮球队会用他们的一个球员换取100个随机的人吗？如果你用100个随机的人组成的委员会取代史蒂夫·乔布斯，苹果的下一个产品会是什么样子？[6] 这些事情不是线性扩展的。也许CEO或职业运动员只有普通人的十倍（无论这意味着什么）技能和决心。但它集中在一个个体身上，这就是全部区别。&lt;/p&gt;&#xA;&lt;p&gt;当说一种工作报酬过高而另一种报酬过低时，我们到底在说什么？在自由市场中，价格由买家想要什么决定。人们比诗歌更喜欢棒球，所以棒球运动员比诗人赚得多。因此，说某种工作报酬过低就等同于说人们想要错误的东西。&lt;/p&gt;&#xA;&lt;p&gt;当然，人们想要错误的东西。对此感到惊讶似乎很奇怪。说某种工作报酬过薄是不公正的，这似乎更奇怪。[7] 那么你就是在说人们想要错误的东西是不公正的。人们更喜欢真人秀和玉米狗而不是莎士比亚和蒸蔬菜，这是可悲的，但不公正吗？这似乎像说蓝色是重的，或者说向上是圆的。&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;不公正&amp;quot;这个词在这里的出现是爸爸模型 unmistakable 光谱特征。否则这个想法为什么会出现在这个奇怪的语境中？而如果说话者仍然在爸爸模型下运作，将财富视为从共同来源流出并必须分享的东西，而不是通过做其他人想要的事情产生的东西，这正是在注意到一些人比其他人赚得多时你会得到的。&lt;/p&gt;&#xA;&lt;p&gt;当我们谈论&amp;quot;收入不平等分配&amp;quot;时，我们也应该问，这些收入来自哪里？[8] 谁创造了它所代表的财富？因为在收入仅仅根据人们创造多少财富而变化的程度上，分配可能是不平等的，但几乎不是不公正的。&lt;/p&gt;&#xA;&lt;h2 id=&#34;偷窃它&#34;&gt;偷窃它&lt;/h2&gt;&#xA;&lt;p&gt;我们倾向于发现巨大财富差距令人担忧的第二个原因是，在人类历史的大部分时间里，积累财富的通常方式是偷窃它：在牧业社会中通过掠夺牲畜；在农业社会中通过在战争时期夺取他人的财产，在和平时期向他们征税。&lt;/p&gt;&#xA;&lt;p&gt;在冲突中，获胜一方会收到从失败一方没收的财产。在1060年代的英格兰，当征服者威廉将 defeated 盎格鲁-撒克逊贵族的财产分配给他的追随者时，冲突是军事的。到1530年代，当亨利八世将修道院的财产分配给他的追随者时，这主要是政治性的。[9] 但原则是相同的。确实，同样的原则现在在津巴布韦也在起作用。&lt;/p&gt;&#xA;&lt;p&gt;在更有组织的社会，如中国，统治者和他的官员使用征税而不是没收。但在这里我们也看到同样的原则：致富的方式不是创造财富，而是服务于一个足够强大可以占有财富的统治者。&lt;/p&gt;&#xA;&lt;p&gt;随着中产阶级的兴起，这开始在欧洲改变。现在我们认为中产阶级是既不富也不穷的人，但最初他们是一个独特的群体。在封建社会，只有两个阶级：战士贵族和为他们工作的农奴。中产阶级是一个新的第三群体，他们住在城镇，通过制造业和贸易维持生计。&lt;/p&gt;&#xA;&lt;p&gt;从十世纪和十一世纪开始，小贵族和前农奴在城镇中联合起来，这些城镇逐渐变得足够强大，可以无视当地的封建领主。[10] 像农奴一样，中产阶级主要通过创造财富谋生。（在热那亚和比萨这样的港口城市，他们也从事海盗活动。）但与农奴不同，他们有创造大量财富的动力。农奴创造的任何财富都属于他的主人。制造比你能够隐藏的更多的财富没有多大意义。而城镇居民的独立性使他们能够保留他们创造的任何财富。&lt;/p&gt;&#xA;&lt;p&gt;一旦通过创造财富致富成为可能，整个社会开始变得非常富裕。我们拥有的一切几乎都是由中产阶级创造的。确实，在工业社会中，其他两个阶级已经有效地消失，他们的名字被赋予了中产阶级的两端。（在词的原始意义上，比尔·盖茨是中产阶级。）&lt;/p&gt;&#xA;&lt;p&gt;但直到工业革命，财富创造才明确地取代腐败成为致富的最佳方式。至少在英格兰，只有当有其他、更快的致富方式开始出现时，腐败才变得不合时尚（并且实际上才开始被称为&amp;quot;腐败&amp;rdquo;）。&lt;/p&gt;&#xA;&lt;p&gt;十七世纪的英格兰很像今天的第三世界，政府职位是公认的致富途径。那个时期的巨大财富更多地来源于我们现在称之为腐败的东西，而不是商业。[11] 到十九世纪，这种情况发生了变化。贿赂仍然存在，就像到处都有一样，但政治那时已经留给了那些更多地由虚荣心而不是贪婪驱动的人。技术使得创造财富比偷窃财富更快。十九世纪富人的原型不是朝臣，而是工业家。&lt;/p&gt;&#xA;&lt;p&gt;随着中产阶级的兴起，财富不再是零和游戏。乔布斯和沃兹尼亚克不必让我们变穷来使自己变富。恰恰相反：他们创造了使我们的生活在物质上更丰富的东西。他们必须这样做，否则我们不会为他们付钱。&lt;/p&gt;&#xA;&lt;p&gt;但由于世界历史的大部分时间致富的主要途径是偷窃它，我们倾向于怀疑富人。理想主义的大学生发现他们无意识保存的童年财富模型得到了过去著名作家的证实。这是错误与过时的结合。&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;每一笔巨大财富背后，都有一桩犯罪，&amp;ldquo;巴尔扎克写道。但他没有。他实际上说的是，没有明显原因的巨大财富可能是由于执行得足够好而被遗忘的犯罪。如果我们谈论的是1000年的欧洲，或者今天大部分第三世界，标准的错误引用就会完全正确。但巴尔扎克生活在十九世纪的法国，那里的工业革命已经进展顺利。他知道你可以在不偷窃的情况下致富。毕竟，他自己作为一个受欢迎的小说家就是这样做的。[12]&lt;/p&gt;&#xA;&lt;p&gt;只有少数国家（绝非巧合，也是那些最富有的国家）达到了这个阶段。在大多数国家，腐败仍然占上风。在大多数国家，致富的最快途径是偷窃它。因此当我们在一个富国看到收入差异增加时，有一种担忧它正在滑向成为另一个委内瑞拉的倾向。我认为相反的情况正在发生。我认为你看到的是一个领先委内瑞拉整整一步的国家。&lt;/p&gt;&#xA;&lt;h2 id=&#34;技术的杠杆&#34;&gt;技术的杠杆&lt;/h2&gt;&#xA;&lt;p&gt;技术会增加贫富差距吗？它肯定会增加生产者和不生产者之间的差距。这就是技术的全部意义所在。有了拖拉机，一个精力充沛的农民一天可以耕种的土地是他用一组马可以耕种的六倍。但前提是他掌握了一种新的农业。&lt;/p&gt;&#xA;&lt;p&gt;我在自己的时代亲眼看到技术的杠杆作用明显增长。在高中时，我通过修剪草坪和在巴斯金-罗宾斯舀冰淇淋来赚钱。这是当时唯一可用的那种工作。现在高中生可以编写软件或设计网站。但只有一些人会；其他人仍然会舀冰淇淋。&lt;/p&gt;&#xA;&lt;p&gt;我非常清楚地记得1985年改进的技术使我有可能购买自己的电脑。几个月内，我使用它作为自由程序员来赚钱。几年前，我不能做到这一点。几年前，没有自由程序员这样的东西。但苹果创造了财富，以强大、廉价的计算机形式，程序员立即开始使用它来创造更多。&lt;/p&gt;&#xA;&lt;p&gt;正如这个例子所暗示的，技术提高我们生产能力的速度可能是指数级的，而不是线性的。所以我们应该预期随着时间推移，个人生产力的变化会不断增加。这会增加贫富差距吗？取决于你指的是哪个差距。&lt;/p&gt;&#xA;&lt;p&gt;技术应该增加收入差距，但它似乎会减少其他差距。一百年前，富人的生活与普通人不同。他们住在满是仆人的房子里，穿着精心制作的不舒服的衣服，乘坐由需要自己的房子和仆人的马队拉的马车旅行。现在，由于技术，富人的生活更像普通人。&lt;/p&gt;&#xA;&lt;p&gt;汽车就是为什么的一个好例子。有可能购买价值数十万美元的昂贵手工汽车。但没有多大意义。公司通过制造大量普通汽车比制造少量昂贵汽车赚更多钱。因此，制造大批量汽车的公司可以在其设计上花费更多。如果你购买定制汽车，总会有些东西在坏。现在购买定制汽车的唯一目的是广告你能买得起。&lt;/p&gt;&#xA;&lt;p&gt;或者考虑手表。五十年前，花很多钱买手表你可以获得更好的性能。当手表有机芯时，昂贵的手表走时更准。现在不再是这样了。自从石英机芯发明以来，普通的天美时表比价值数十万美元的百达翡丽更准确。[13] 确实，像昂贵的汽车一样，如果你决心花很多钱买手表，你必须忍受一些不便：除了走时不准，机械手表还必须上弦。&lt;/p&gt;&#xA;&lt;p&gt;技术唯一不能便宜化的是品牌。这正是为什么我们越来越多地听到它的原因。品牌是随着富人和穷人之间的实质性差异蒸发而留下的残留物。但你东西上的标签是什么比起拥有它和不拥有它来说是小得多的事情。在1900年，如果你保持一辆马车，没有人问它是哪一年或什么品牌。如果你有一辆，你就是富人。如果你不富有，你就坐公共汽车或步行。现在即使是最贫穷的美国人也开车汽车，只有因为我们被广告训练得如此好，我们甚至能够识别特别昂贵的。[14]&lt;/p&gt;&#xA;&lt;p&gt;同样的模式在一个又一个行业中上演。如果对某物有足够的需求，技术将使它足够便宜以大量销售，大批量生产的版本即使不是更好，至少更方便。[15] 富人最喜欢的没有比便利更的东西了。我认识的富人驾驶同样的汽车，穿同样的衣服，有同样类型的家具，吃与我其他朋友同样的食物。他们的房子在不同的社区，或者如果在同一社区，大小不同，但在里面生活是相似的。房子使用相同的建筑技术建造，包含几乎相同的物品。做昂贵和定制的事情不方便。&lt;/p&gt;&#xA;&lt;p&gt;富人也更像其他人一样度过他们的时间。伯特里·伍斯特似乎早已消失。现在，大多数足够富有不工作的人无论如何都工作。不仅仅是社会压力让他们这样做；无所事事是孤独和令人沮丧的。&lt;/p&gt;&#xA;&lt;p&gt;我们也没有一百年前的社会区别。那个时期的小说和礼仪手册现在读起来像描述一些奇怪的部落社会。&amp;ldquo;关于友谊的延续&amp;hellip;&amp;ldquo;比顿的《家庭管理手册》(1880)暗示，&amp;ldquo;在某些情况下，主妇在承担家庭责任时可能有必要放弃在她生活早期开始的许多友谊。&amp;ldquo;嫁给富人的女人被期望放弃没有的朋友。如果你今天那样做，你似乎是个野蛮人。你也会有一个非常无聊的生活。人们仍然倾向于某种程度的自我隔离，但更多地是基于教育而不是财富。[16]&lt;/p&gt;&#xA;&lt;p&gt;在物质和社会方面，技术似乎正在缩小富人和穷人之间的差距，而不是扩大它。如果列宁在雅虎、英特尔或思科这样的公司的办公室走动，他会认为共产主义已经获胜。每个人都穿着同样的衣服，有同样类型的办公室（或者更确切地说，隔间）和同样的家具，用名字而不是尊称称呼对方。一切似乎完全如他所预测的那样，直到他查看他们的银行账户。哎呀。&lt;/p&gt;&#xA;&lt;p&gt;如果技术增加那个差距是个问题吗？到目前为止似乎不是。虽然它增加了收入差距，但它似乎减少了大多数其他差距。&lt;/p&gt;</description>
    </item>
    <item>
      <title>洗衣</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/laundry/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/laundry/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/laundry.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;洗衣&#34;&gt;洗衣&lt;/h1&gt;&#xA;&lt;p&gt;2004年10月&lt;/p&gt;&#xA;&lt;p&gt;这是&amp;quot;散文时代&amp;quot;的早期草稿。我保留了它以显示散文如何演变——红色文本是最终保留的内容，灰色是被删除的内容。&lt;/p&gt;&#xA;&lt;p&gt;[这篇文章最终成为《散文的时代》。]&lt;/p&gt;&#xA;&lt;h2 id=&#34;红色文本保留内容&#34;&gt;红色文本（保留内容）&lt;/h2&gt;&#xA;&lt;p&gt;在英语课程中学到的东西的一个令人沮丧的方面是，散文与散文之间的相似之处如此之少。高中老师希望你写一篇组织良好的五段文章。大学老师希望你展示你掌握了这个主题，即把所有事实都放在那里，不要太多原创想法。学术期刊的编辑希望你遵循一种形式，其中引言用一段总结你将要说的内容，正文详细说明，结论总结你所说的内容。&lt;/p&gt;&#xA;&lt;p&gt;如果你问一个随机的英语老师&amp;quot;什么是散文？&amp;quot;，最可能的答案会是&amp;quot;一种表达你想法的书面作品&amp;quot;，但这个答案是如此模糊，以至于毫无用处。我们使用这个词的频率太高，不能让它如此模糊。我怀疑大多数人会说，他们在高中和大学写作课程中学到的写作类型与他们在杂志中读到的散文类型之间没有太大关系。&lt;/p&gt;&#xA;&lt;p&gt;散文这个词的意思是&amp;quot;尝试&amp;quot;。散文是你试图找出某事的书面记录。一篇散文不一定有固定的形式。它更像是一次谈话，但这次你有机会思考你说的话，可以修改它们以使它们尽可能准确。&lt;/p&gt;&#xA;&lt;p&gt;在蒙田的时代，这个词的意思更接近现在的&amp;quot;实验&amp;quot;。但蒙田是那种在实验过程中会告诉你他在想什么的科学家。你会看到他尝试不同的方法，有时会犯错误。这会让现代读者感到不安，因为现代散文作者很少这样公开他们的写作过程。他们就像已经完成实验的科学家，正在告诉你结果。&lt;/p&gt;&#xA;&lt;p&gt;散文最接近的比喻可能是非虚构作品。但散文不是非虚构作品。散文可以包含任何内容。它可以包含故事、个人经历、事实、观点等等。唯一的要求是它应该尝试弄清楚某事。&lt;/p&gt;&#xA;&lt;p&gt;如果你问人们为什么写作，他们可能会说&amp;quot;为了表达自己&amp;quot;。但这是一个相当空洞的答案。你为什么想表达自己？表达自己的哪一部分？你选择表达自己而不是沉默或用棍子击打某人的原因是什么？&lt;/p&gt;&#xA;&lt;p&gt;我认为一个更好的答案可能是&amp;quot;为了弄清楚我在想什么&amp;quot;。写作是思考的一种形式。你不是已经有想法然后写下来；你通过写作来弄清楚你的想法。&lt;/p&gt;&#xA;&lt;p&gt;大多数人在写作时并没有完全意识到这一点。他们被教导写作是关于&amp;quot;表达自己&amp;quot;，但他们从未被教导这到底意味着什么。&lt;/p&gt;&#xA;&lt;p&gt;散文不是你写下来的东西；它是你通过写作发现的东西。&lt;/p&gt;&#xA;&lt;p&gt;如果你把散文看作是思考的一种形式，而不是表达你已经思考过的东西，那么很多事情都会变得清晰。例如，为什么散文往往如此个人化？因为思考是非常个人化的。为什么它们往往如此随意？因为思考是随意的。&lt;/p&gt;&#xA;&lt;p&gt;学校教授的写作与真实写作之间的主要区别在于，学校教授的写作是&amp;quot;表达你自己&amp;quot;的表演，而真实写作是思考的过程。&lt;/p&gt;&#xA;&lt;p&gt;在学校里，你被教导写作是为了展示你已经知道的东西。你被教导要有一个论点，然后用证据支持它。但真实写作不是关于展示你已经知道的东西；它是关于发现你不知道的东西。&lt;/p&gt;&#xA;&lt;p&gt;散文的真正目的不是说服；而是探索。如果你探索得足够好，说服可能会随之而来，但那只是副产品。&lt;/p&gt;&#xA;&lt;p&gt;散文的另一个特点是它们往往相当长。这是有原因的。思考需要时间。你不能期望在几段内真正探索一个复杂的话题。你需要时间尝试不同的方法，犯错误，然后纠正它们。&lt;/p&gt;&#xA;&lt;h2 id=&#34;灰色文本删除内容&#34;&gt;灰色文本（删除内容）&lt;/h2&gt;&#xA;&lt;p&gt;写作课程教授的散文类型实际上是一种相当新的发明。它始于19世纪后期，当时大学开始更多地重视研究。教授们需要一种方式来评估学生是否完成了他们的阅读作业，所以他们发明了这种形式的写作，主要目的是展示你阅读了材料。&lt;/p&gt;&#xA;&lt;p&gt;这种写作形式如此成功，以至于它成为了写作教学的标准。但它与散文的传统几乎没有关系。&lt;/p&gt;&#xA;&lt;p&gt;在蒙田的时代，散文是你对某个话题的想法的记录。它不一定有固定的形式。它可能包含故事、事实、引用、个人经历，任何有助于你理解该话题的内容。&lt;/p&gt;&#xA;&lt;p&gt;现代学术文章与此完全相反。它有严格的形式规则，并且只关心事实和逻辑。个人经历被严格禁止。&lt;/p&gt;&#xA;&lt;p&gt;我认为这两种写作都有其用途。学术文章在科学和其他需要客观性的领域很有用。但散文在探索复杂话题方面更有用，特别是那些涉及人类经验的话题。&lt;/p&gt;&#xA;&lt;p&gt;问题是学校只教授一种类型的写作，然后期望学生用这种形式写所有内容。&lt;/p&gt;&#xA;&lt;p&gt;这就像教人只用锤子，然后期望他们建造房子。锤子很有用，但你还需要其他工具。&lt;/p&gt;&#xA;&lt;p&gt;散文写作工具箱应该包含许多不同的工具：故事、事实、个人经历、引用、问题、想法等等。&lt;/p&gt;&#xA;&lt;p&gt;但最重要的是，散文应该允许思考的过程可见。读者应该看到作家尝试不同的方法，犯错误，然后纠正他们。&lt;/p&gt;&#xA;&lt;p&gt;这要求一种学校不鼓励的脆弱性。在学校里，你被教导要自信，要有一个论点，然后用证据支持它。展示不确定或犯错误是弱点的表现。&lt;/p&gt;&#xA;&lt;p&gt;但在真正的散文写作中，不确定和犯错误是过程的一部分。事实上，它们是必不可少的。如果你不犯错误，你可能没有真正探索话题。&lt;/p&gt;&#xA;&lt;p&gt;我想这就是为什么散文如此个人化的原因。思考是非常个人化的。没有两个人会以完全相同的方式思考同一个话题。所以当你写一篇散文时，你本质上是在邀请读者见证你的思考过程。&lt;/p&gt;&#xA;&lt;p&gt;当然，这要求作者对自己的思考过程感到舒适。很多人不习惯这样做。他们被教导要隐藏他们的思考过程，只展示最终结果。&lt;/p&gt;&#xA;&lt;p&gt;但最终，我认为真正的散文写作比学术写作更有价值，因为它更接近真实的思考方式。&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;注：这篇文章包含了蒙田关于散文写作的一些观点，以及我对现代写作教育的批评。&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>温和派</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/mod/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/mod/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/mod.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;温和派&#34;&gt;温和派&lt;/h1&gt;&#xA;&lt;h2 id=&#34;两种温和派&#34;&gt;两种温和派&lt;/h2&gt;&#xA;&lt;p&gt;2019年12月&lt;/p&gt;&#xA;&lt;p&gt;成为政治温和派有两种截然不同的方式：有意为之和偶然使然。有意为之的温和派是骑墙派，故意选择介于左右极端之间的中间立场。偶然的温和派平均而言最终处于中间位置，因为他们对每个问题都独立思考，而极右和极左几乎是同等错误的。&lt;/p&gt;&#xA;&lt;p&gt;你可以通过他们意见的分布来区分有意为之和偶然使然的温和派。如果在某个问题上极左的意见是0，极右的意见是100，那么有意为之的温和派在每个问题上的意见都将接近50。而偶然的温和派的意见将散布在一个广泛的范围内，但与有意为之的温和派一样，平均约为50。&lt;/p&gt;&#xA;&lt;p&gt;有意为之的温和派与极左和极右的人相似，因为他们的意见在某种意义上不是自己的。思想家的决定性特征，无论是左派还是右派，都是批量获取意见。你不能挑挑拣拣。你对税收的意见可以从你对性的意见中预测出来。虽然有意为之的温和派似乎与思想家相反，但他们的信念（尽管在这种情况下&amp;quot;立场&amp;quot;这个词可能更准确）也是批量获得的。如果中间意见向右或向左转变，有意为之的温和派必须随之转变。否则他们就不再是温和派了。&lt;/p&gt;&#xA;&lt;p&gt;另一方面，偶然的温和派不仅选择自己的答案，还选择自己的问题。他们可能根本不在乎左右两派都认为非常重要的问题。因此，你只能从偶然温和派关心的问题和左右两派关心的问题的交集来衡量他们的政治立场，而这个交集有时可能小到可以忽略不计。&lt;/p&gt;&#xA;&lt;p&gt;说&amp;quot;如果你不支持我们，你就是反对我们&amp;quot;不仅仅是一种操纵性的修辞技巧，而且常常是错误的。&lt;/p&gt;&#xA;&lt;p&gt;温和派有时被贬斥为懦夫，特别是被极左派。但是，虽然称有意为之的温和派为懦夫可能是准确的，但公开成为偶然的温和派需要最大的勇气，因为你会受到左右两派的攻击，而且你没有作为大团体正统成员的安慰来支持你。&lt;/p&gt;&#xA;&lt;p&gt;我认识的最令人印象深刻的人几乎都是偶然的温和派。如果我认识很多职业运动员或娱乐界人士，情况可能不同。站在极左或极右不会影响你跑得有多快或唱得有多好。但从事思想工作的人必须独立思考才能做好工作。&lt;/p&gt;&#xA;&lt;p&gt;或者更准确地说，你必须对你使用的思想独立思考。你可能在政治上盲目教条，但仍然是一个优秀的数学家。在20世纪，很多非常聪明的人是马克思主义者——只是没有人在马克思主义涉及的学科上是聪明的。但如果你在工作中使用的思想与你时代的政治相交，你有两个选择：成为偶然的温和派，或者平庸。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 理论上，一方完全正确而另一方完全错误是可能的。事实上，思想家必须始终相信情况就是如此。但历史上很少如此。&lt;/p&gt;&#xA;&lt;p&gt;[2] 出于某种原因，极右派倾向于忽视温和派，而不是像鄙视叛教者那样鄙视他们。我不确定为什么。也许这意味着极右派不如极左派意识形态化。或者他们更自信，或更顺从，或者只是更无组织。我只是不知道。&lt;/p&gt;&#xA;&lt;p&gt;[3] 持有异端意见并不意味着你必须公开表达它们。如果你不表达，可能更容易持有它们。&lt;/p&gt;&#xA;&lt;p&gt;感谢 Austen Allred、Trevor Blackwell、Patrick Collison、Jessica Livingston、Amjad Masad、Ryan Petersen 和 Harj Taggar 阅读本文的草稿。&lt;/p&gt;&#xA;&lt;h2 id=&#34;日语翻译&#34;&gt;日语翻译&lt;/h2&gt;</description>
    </item>
    <item>
      <title>猛烈的极客</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/fn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/fn/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/fn.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;猛烈的极客&#34;&gt;猛烈的极客&lt;/h1&gt;&#xA;&lt;p&gt;2021年5月&lt;/p&gt;&#xA;&lt;p&gt;大多数人认为极客是安静、谦逊的人。在普通的社交场合中他们确实如此——就像明星四分卫发现自己身处物理学研讨会中一样安静谦逊。原因也是一样的：他们是离水的鱼。但极客表面上的谦逊是一种错觉，这是因为当非极客观察他们时，通常是在普通的社交场合。事实上，一些极客相当猛烈。&lt;/p&gt;&#xA;&lt;p&gt;猛烈的极客是一个小而有趣的群体。他们通常极具竞争性——我想说，比极具竞争性的非极客还要更具竞争性。竞争对他们来说更个人化。部分原因可能是他们情感上不够成熟，无法与竞争保持距离，但也因为他们参与的竞争种类中随机性较少，因此他们更有理由将结果个人化。&lt;/p&gt;&#xA;&lt;p&gt;猛烈的极客也往往有些过于自信，尤其是在年轻时。看起来对自己的能力产生误判可能是个缺点，但经验表明并非如此。在一定程度上，自信是自我实现的预言。&lt;/p&gt;&#xA;&lt;p&gt;你在大多数猛烈极客身上发现的另一个品质是智慧。不是所有极客都聪明，但猛烈的极客至少都是中等聪明的。如果不是这样，他们就不会有成为猛烈极客的信心。[1]&lt;/p&gt;&#xA;&lt;p&gt;极客特质和独立思维之间也有天然的联系。如果不有些社交笨拙，就很难有独立思维，因为传统信念经常是错误的，或者至少是任意的。任何既有独立思维又有雄心的人都不会浪费精力去适应。而猛烈极客的独立思维显然是积极型而非消极型的：他们会被规则惹恼，而不是梦幻般地 unaware of them.&lt;/p&gt;&#xA;&lt;p&gt;我不太确定为什么猛烈极客缺乏耐心，但大多数人似乎都是。你首先在对话中注意到这一点，他们倾向于打断你。这只是令人讨厌的，但在更有前途的猛烈极客中，这与对解决问题更深层次的不耐心有关。也许猛烈极客的竞争性和不耐心不是分离的品质，而是单一内在驱动力的两种表现。&lt;/p&gt;&#xA;&lt;p&gt;当你以足够数量结合所有这些品质时，结果相当可怕。猛烈极客行动中最生动的例子可能是詹姆斯·沃森的《双螺旋》。书的第一句话是&amp;quot;我从未见过弗朗西斯·克里克保持谦虚的态度&amp;quot;，他接着描绘的克里克形象是典型的猛烈极客：聪明、社交笨拙、竞争性强、独立思维、过于自信。但他隐含地描绘的自己也是如此。事实上，他缺乏社交意识使两幅画像更加真实，因为他直言不讳地陈述了各种圆滑的人会隐藏的意见和动机。而且从故事中可以清楚地看出，克里克和沃森的猛烈极客特质对他们的成功至关重要。他们的独立思维使他们考虑大多数人忽略的方法，他们的过度自信让他们从事只理解一半的问题（他们实际上被一位著名的内部人士描述为&amp;quot;小丑&amp;quot;），而他们的不耐心和竞争性使他们比其他两个小组抢先找到了答案，否则那些小组会在下一年，如果不是下几个月的话找到答案。[2]&lt;/p&gt;&#xA;&lt;p&gt;可能存在猛烈极客这个想法对许多普通人来说是陌生的，甚至对一些年轻的极客也是如此。特别是在早期，极客在普通社交场合花费太多时间，而做真正工作的时间太少，以至于他们获得的关于自己笨拙的证据比关于自己力量的证据多得多。因此，有些人读到对猛烈极客的描述时会意识到&amp;quot;嗯，那是我&amp;quot;。而我现在要转向的就是你，年轻的猛烈极客。&lt;/p&gt;&#xA;&lt;p&gt;我有一些好消息，也有一些坏消息。好消息是，你的猛烈特质将在解决难题方面给你很大帮助。不仅仅是极客传统上解决的科学和技术问题。随着世界进步，通过获得正确答案而赢得胜利的事情数量增加了。最近变富成为了其中之一：美国最富有的8个人中有7个现在是猛烈的极客。&lt;/p&gt;&#xA;&lt;p&gt;事实上，在商业中成为猛烈极客可能比在极客传统学术领域更有帮助。在那里，猛烈似乎是可选的。例如，达尔文似乎并不特别猛烈。而在没有猛烈特质的情况下，不可能成为超过一定规模公司的CEO，所以既然极客可以在商业中获胜，猛烈的极客将越来越垄断真正的大成功。&lt;/p&gt;&#xA;&lt;p&gt;坏消息是，如果不加以运用，你的猛烈特质将变成苦涩，你将成为知识游乐场恶霸：暴躁的系统管理员、论坛喷子、黑粉、新思想的扼杀者。&lt;/p&gt;&#xA;&lt;p&gt;如何避免这种命运？从事雄心勃勃的项目。如果你成功，它会带来一种中和苦涩的满足感。但你不需要成功就能感受到这一点；仅仅从事困难的项目就给大多数猛烈极客某种满足感。而对那些没有感觉的人，至少让他们忙碌。[3]&lt;/p&gt;&#xA;&lt;p&gt;另一个解决方案可能是以某种方式关闭你的猛烈特质，通过致力于冥想或心理治疗之类的事情。也许这对某些人来说是正确的答案。我不知道。但这对我来说似乎不是最优解决方案。如果你得到一把锋利的刀，在我看来最好是使用它，而不是为了割伤自己而钝化它的边缘。&lt;/p&gt;&#xA;&lt;p&gt;如果你确实选择雄心勃勃的路线，你将有顺风推动你。从来没有比现在更好的成为极客的时机。在过去的一个世纪里，我们看到了权力从交易者到技术人员的持续转移——从有魅力到有能力的转移——我没有看到任何会结束这种转移的迹象。至少不会直到极客自己通过带来技术奇点而结束它。&lt;/p&gt;&#xA;&lt;h3 id=&#34;注释&#34;&gt;注释&lt;/h3&gt;&#xA;&lt;p&gt;[1] 成为极客就是社交笨拙，有两种不同的方式：玩和每个人一样的游戏，但玩得很差，或者玩不同的游戏。聪明的极客是后一种类型。&lt;/p&gt;&#xA;&lt;p&gt;[2] 使猛烈极客如此有效的品质也可能使他们非常令人讨厌。猛烈的极客最好记住这一点，并且（a）尽量控制它，（b）寻找那些获得正确答案比保持社会和谐更重要的组织和工作类型。实际上这意味着在困难问题上工作的小组。幸运的是，这是最有趣的环境类型。&lt;/p&gt;&#xA;&lt;p&gt;[3] 如果成功中和了苦涩，为什么有些至少中等成功的人仍然相当苦涩？因为人们潜在的苦涩程度取决于他们性格中自然的苦涩程度和他们的雄心程度：天生非常苦涩的人在成功中和了其中一些后仍然剩下很多，而非常有雄心的人需要比例上更多的成功来满足那种雄心。&lt;/p&gt;&#xA;&lt;p&gt;所以最坏的情况是某人既天生苦涩又极具雄心，却只是中等成功。&lt;/p&gt;&#xA;&lt;p&gt;感谢特雷弗·布莱克威尔、史蒂夫·布兰克、帕特里克·克里森、杰西卡·利文斯顿、阿姆贾德·马萨德和罗伯特·莫里斯阅读本文的草稿。&lt;/p&gt;</description>
    </item>
    <item>
      <title>现在人们如何变富</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/richnow/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/richnow/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/richnow.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;现在人们如何变富&#34;&gt;现在人们如何变富&lt;/h1&gt;&#xA;&lt;p&gt;2021年4月&lt;/p&gt;&#xA;&lt;p&gt;从1982年开始，《福布斯》杂志每年都会发布美国最富有人士名单。如果我们将1982年的100位最富有人士与2020年的100位最富有人士进行比较，我们会注意到一些巨大差异。&lt;/p&gt;&#xA;&lt;p&gt;1982年，最常见的财富来源是继承。在最富有的100人中，有60人是从祖先那里继承的。光是杜邦家族的继承人就有10位。到2020年，继承人的数量已经减半，仅占最大100笔财富中的27笔。&lt;/p&gt;&#xA;&lt;p&gt;为什么继承人的比例会下降？不是因为继承税增加了。事实上，在这段时间内，继承税显著减少。继承人比例下降的原因不是继承大财富的人少了，而是靠自己创造财富的人多了。&lt;/p&gt;&#xA;&lt;p&gt;人们如何创造这些新财富？大约3/4是通过创办公司，1/4是通过投资。在2020年的73笔新财富中，56笔来自创始人或早期员工的股权（52位创始人，2位早期员工，和2位创始人妻子），17笔来自管理投资基金。&lt;/p&gt;&#xA;&lt;p&gt;1982年的100位最富有的美国人中没有基金经理。对冲基金和私募股权公司在1982年就存在，但它们的创始人都没有足够富裕进入前100名。有两件事发生了变化：基金经理发现了产生高回报的新方法，并且更多投资者愿意信任他们并把钱交给他们。[1]&lt;/p&gt;&#xA;&lt;p&gt;但现在新财富的主要来源是创办公司，当你看数据时，你会发现那里也有很大变化。人们现在通过创办公司比1982年时获得更多财富，因为这些公司做的事情不同。&lt;/p&gt;&#xA;&lt;p&gt;1982年，有两个主要的财富来源：石油和房地产。在1982年的40笔新财富中，至少24笔主要是由于石油或房地产。现在只有少数是：在2020年的73笔新财富中，4笔是由于房地产，只有2笔是由于石油。&lt;/p&gt;&#xA;&lt;p&gt;到2020年，最大的新财富来源是所谓的&amp;quot;科技&amp;quot;公司。在73笔新财富中，大约30笔来自这类公司。这些在最富有的人中特别常见：2020年前10名财富中有8笔是这类新财富。&lt;/p&gt;&#xA;&lt;p&gt;可以说，把科技作为一个类别有点误导。亚马逊真的不是零售商，特斯拉也不是汽车制造商吗？既是又不是。也许在50年后，当我们称之为科技的东西被认为是理所当然的，把这两家企业放在同一类别可能就不合适了。但至少在目前，它们确实有某种共同点使它们与众不同。哪个零售商会启动AWS？哪个汽车制造商是由同时拥有火箭公司的人经营的？&lt;/p&gt;&#xA;&lt;p&gt;前100名财富背后的科技公司也形成了一个差异化的群体，因为它们都是风险投资家愿意投资的公司，而其他大部分都不是。这样做是有原因的：这些大多是依靠更好的技术获胜的公司，而不仅仅是有一个真正有动力和擅长做交易的CEO。&lt;/p&gt;&#xA;&lt;p&gt;在某种程度上，科技公司的崛起代表了一种质的变化。1982年《福布斯》400富豪榜中的石油和房地产大亨们不是通过更好的技术获胜的。他们是通过真正有动力和擅长做交易而获胜的。[2] 事实上，这种致富方式如此古老，甚至早于工业革命。在16和17世纪，在欧洲王室（名义上）服务中致富的朝臣们通常也是真正有动力和擅长做交易的。&lt;/p&gt;&#xA;&lt;p&gt;那些只看基尼系数而不深入了解的人回顾1982年的世界，把它当作美好的旧时光，因为那时致富的人没有现在那么富有。但如果你深入了解他们是如何致富的，旧时光看起来就不那么好了。在1982年，最富有的100人中有84%是通过继承、开采自然资源或做房地产交易致富的。这真的比最富有的人通过创办科技公司致富的世界好吗？&lt;/p&gt;&#xA;&lt;p&gt;为什么人们创办的新公司比以前多得多，而且他们从中致富这么多？第一个问题的答案，奇怪的是，这个问题本身表述不当。我们不应该问人们为什么要创办公司，而是问为什么他们又开始创办公司了。[3]&lt;/p&gt;&#xA;&lt;p&gt;1892年，《纽约先驱论坛报》编制了美国所有百万富翁的名单。他们找到了4047位。那时有多少人是继承财富的？只有大约20%，比今天继承人的比例还少。当你调查新财富的来源时，1892年看起来更像今天。休·罗科夫发现&amp;quot;许多最富有的人&amp;hellip;&amp;hellip;从大规模生产的新技术中获得了最初的优势&amp;quot;。[4]&lt;/p&gt;&#xA;&lt;p&gt;所以这里的异常不是2020年，而是1982年。真正的问题是为什么1982年很少有人通过创办公司致富。答案是，即使在《先驱论坛报》名单编制时，一股整合浪潮正在席卷美国经济。在19世纪末和20世纪初，像J.P.摩根这样的金融家将数千家较小的公司合并成几家具有巨大规模经济优势的巨型公司。正如迈克尔·林德所写，到第二次世界大战结束时，&amp;ldquo;经济的主要部门要么被组织成政府支持的卡特尔，要么被少数寡头垄断企业主导。&amp;quot;[5]&lt;/p&gt;&#xA;&lt;p&gt;1960年，现在创办创业公司的大多数人会去这些公司工作。在1890年和2020年，你可以通过创办自己的公司致富，但在1960年，这真的不是一个可行的选择。你无法打破寡头垄断来接触市场。所以1960年的有声望的道路不是创办自己的公司，而是在现有公司的企业阶梯上向上爬。[6]&lt;/p&gt;&#xA;&lt;p&gt;让每个人都成为公司员工减少了经济不平等（以及每一种其他变化），但如果你把20世纪中期作为正常的模型，在这方面你会得到一个非常误导的模型。J.P.摩根的经济结果只是一个阶段，从1970年代开始，它开始解体。&lt;/p&gt;&#xA;&lt;p&gt;为什么会解体？部分原因是衰老。那些在1930年看起来是规模和效率典范的大公司，到1970年已经变得松散和臃肿。到1970年，经济的刚性结构充满了各种群体建造的舒适巢穴，以保护自己免受市场力量影响。在卡特政府期间，联邦政府意识到有些不对劲，并开始在一个称为&amp;quot;放松管制&amp;quot;的过程中，废除支持寡头垄断的政策。&lt;/p&gt;&#xA;&lt;p&gt;但是，解体J.P.摩根经济的不仅仅是内部衰退。还有来自外部的压力，以新技术的形式，特别是微电子学。设想所发生的事情的最好方式是想象一个顶部有一层冰的池塘。最初，从底部到表面的唯一途径是绕过边缘。但随着冰层变弱，你开始能够直接从中部突破。&lt;/p&gt;&#xA;&lt;p&gt;池塘的边缘是纯粹的科技：那些实际上自称从事电子或软件业务的公司。当你在1990年使用&amp;quot;创业公司&amp;quot;这个词时，你指的就是这个意思。但现在创业公司正在直接从冰层中部突破，取代像零售商、电视网络和汽车公司这样的现有企业。[7]&lt;/p&gt;&#xA;&lt;p&gt;但是，尽管J.P.摩根经济的解体在技术意义上创造了一个新世界，但在社会意义上，这是回归常态。如果你只追溯到20世纪中期，人们通过创办自己的公司致富似乎是一个近期现象。但如果你看得更远，你会意识到这实际上是默认情况。所以我们在未来应该期望的更多相同情况。事实上，我们应该期望创始人的数量和财富都会增长，因为每十年创办创业公司都变得更容易。&lt;/p&gt;&#xA;&lt;p&gt;创办创业公司变得更容易的部分原因是社会。社会正在（重新）接受这个概念。如果你现在创办一个，你的父母不会像一代前那样惊慌，关于如何做的知识也广泛得多。但现在创办创业公司更容易的主要原因是它更便宜。技术已经降低了构建产品和获取客户的成本。&lt;/p&gt;&#xA;&lt;p&gt;创办创业公司成本的降低反过来改变了创始人和投资者之间的力量平衡。过去，创办创业公司意味着建造工厂，你需要投资者的许可才能做。但现在投资者比创始人更需要创始人，加上可用风险资本数量的增加，这推高了估值。[8]&lt;/p&gt;&#xA;&lt;p&gt;因此，创办创业公司成本的降低通过两种方式增加了富人的数量：这意味着更多的人创办它们，而且那些能够以更好条件筹集资金的人。&lt;/p&gt;&#xA;&lt;p&gt;但还有第三个因素在起作用：公司本身更有价值，因为新成立的公司比过去增长得更快。技术不仅使构建和分销东西变得更便宜，而且也变得更快。&lt;/p&gt;&#xA;&lt;p&gt;这个趋势已经运行了很长时间。IBM，成立于1896年，用了45年才达到10亿美元（2020年价值）的收入。惠普，成立于1939年，用了25年。微软，成立于1975年，用了13年。现在快速增长公司的标准是7或8年。[9]&lt;/p&gt;&#xA;&lt;p&gt;快速增长对创始人股票的价值有双重影响。公司的价值是其收入和增长率的函数。所以如果公司增长更快，你不仅更早达到10亿美元收入，而且当达到那个点时，公司比如果增长较慢时更有价值。&lt;/p&gt;&#xA;&lt;p&gt;这就是为什么创始人现在有时如此年轻就如此富有。创办创业公司的低初始成本意味着创始人可以年轻开始，而今天公司的快速增长意味着如果他们成功，几年后他们可能会令人惊讶地富有。&lt;/p&gt;&#xA;&lt;p&gt;现在创办和发展公司比以往任何时候都更容易。这意味着更多的人创办它们，那些这样做的人从投资者那里获得更好的条件，由此产生的公司变得更有价值。一旦你理解了这些机制是如何运作的，以及创业公司在20世纪大部分时间被压制，你就不必求助于一些模糊的里根时期国家右转来解释为什么美国的基尼系数在增加。当然基尼系数在增加。有更多的人创办更有价值的公司，怎么可能不增加呢？&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 投资公司在1978年劳工部的一项监管变更允许养老基金投资于它们后迅速增长，但这种增长的影响在1982年的前100名财富中还没有显现出来。&lt;/p&gt;&#xA;&lt;p&gt;[2] 乔治·米切尔值得一提作为一个例外。尽管他确实有动力且擅长做交易，他还是第一个想出如何使用水力压裂从页岩中获取天然气的人。&lt;/p&gt;&#xA;&lt;p&gt;[3] 当我说人们创办更多公司时，我指的是那种旨在变得非常大的公司。实际上，在过去几十年中，新公司的总数有所下降。但绝大多数公司是小型零售和服务企业。所以关于新企业数量减少的统计数据意味着人们开办的鞋店和理发店减少了。&lt;/p&gt;&#xA;&lt;p&gt;当人们看到一个标记为&amp;quot;创业公司&amp;quot;的图表在下降时，他们有时会感到困惑，因为&amp;quot;创业公司&amp;quot;这个词有两种意思：（1）创立公司，（2）一种设计为快速增长的特殊类型公司。统计数据指的是第一种意思的创业公司，而不是第二种。&lt;/p&gt;&#xA;&lt;p&gt;[4] 罗科夫，休。&amp;ldquo;镀金时代的巨大财富。&amp;ldquo;NBER工作文件14555，2008年。&lt;/p&gt;&#xA;&lt;p&gt;[5] 林德，迈克尔。《应许之地》。哈珀柯林斯，2012年。&lt;/p&gt;&#xA;&lt;p&gt;20世纪中期的高税率也可能阻止了人们创办自己的公司。创办自己的公司是有风险的，当风险没有得到回报时，人们选择安全。&lt;/p&gt;&#xA;&lt;p&gt;但这不仅仅是因果关系。20世纪中期的寡头垄断和高税率是一体的。较低的税收不仅仅是企业家精神的原因，也是结果：20世纪中期通过房地产和石油勘探致富的人游说并获得巨大的税收漏洞，使他们的有效税率低得多，并且如果通过新技术发展大公司更常见，做这些事的人可能也会为自己的漏洞游说。&lt;/p&gt;&#xA;&lt;p&gt;[6] 这就是为什么20世纪中期确实致富的人经常从石油勘探或房地产致富的原因。那是经济中不易于整合的两个大领域。&lt;/p&gt;&#xA;&lt;p&gt;[7] 纯科技公司曾经被称为&amp;quot;高科技&amp;quot;创业公司。但现在创业公司可以从冰层中部突破，我们不需要为边缘起一个单独的名字，而&amp;quot;高科技&amp;quot;这个词具有明显的复古声音。&lt;/p&gt;&#xA;&lt;p&gt;[8] 较高的估值意味着你要么出售较少的股票来获得一定数量的钱，要么为一定数量的股票获得更多的钱。典型的创业公司两者都会做一些。显然，如果你保留更多股票，你会更富有，但如果你筹集更多钱，你也应该更富有，因为（a）它应该使公司更成功，（b）你应该能够在下一轮之前持续更长时间，或者甚至不需要一轮。注意所有这些&amp;quot;应该&amp;rdquo;。在实践中，很多钱从这些漏洞中溜走。&lt;/p&gt;&#xA;&lt;p&gt;似乎现在创业公司筹集的大额融资轮与创办它变得更便宜的说法相矛盾。但这里没有矛盾；筹集最多资金的创业公司是那些出于选择而这样做的人，目的是增长更快，而不是那些因为需要钱生存而这样做的人。没有什么比不需要钱更能让人们把钱给你了。&lt;/p&gt;&#xA;&lt;p&gt;你可能会想，在近两个世纪里一直站在劳动一方与资本斗争后，极左会对劳动最终胜利感到高兴。但他们似乎没有人感到高兴。你几乎可以听到他们说&amp;quot;不，不，不是那样。&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;[9] IBM于1911年通过合并三家公司创建，其中最重要的是赫尔曼·霍尔瑞斯的制表机公司，成立于1896年。1941年其收入为6000万美元。&lt;/p&gt;&#xA;&lt;p&gt;惠普1964年的收入为1.25亿美元。&lt;/p&gt;&#xA;&lt;p&gt;微软1988年的收入为5.9亿美元。&lt;/p&gt;&#xA;&lt;p&gt;感谢特雷弗·布莱克威尔、杰西卡·利文斯顿、鲍勃·莱斯科、罗伯特·莫里斯、拉斯·罗伯茨和亚历克斯·塔巴罗克阅读本文草稿，以及乔恩·埃里希曼提供增长数据。&lt;/p&gt;</description>
    </item>
    <item>
      <title>用13句话讲清楚创业</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/13sentences/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/13sentences/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/13sentences.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;用13句话讲清楚创业&#34;&gt;用13句话讲清楚创业&lt;/h1&gt;&#xA;&lt;p&gt;想创业吗？申请Y Combinator融资。观看本文的写作过程。2009年2月&lt;/p&gt;&#xA;&lt;p&gt;我经常告诉创业者一个我从Paul Buchheit那里学到的原则：让少数人非常满意，比让很多人半满意要好。最近我告诉一个记者，如果我只能告诉创业者10件事，这会是其中之一。然后我想：其他9件会是什么？&lt;/p&gt;&#xA;&lt;p&gt;当我列出清单时，发现有13条：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;选择好的联合创始人。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;联合创始人对创业公司来说，就像位置对房地产一样。你可以改变房子的任何方面，除了它的位置。在创业公司中，你可以轻易改变你的想法，但改变联合创始人很难。[1] 而创业公司的成功几乎总是其创始人的函数。&lt;/p&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;快速发布。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;快速发布的原因并不是说尽早将产品推向市场至关重要，而是直到你发布，你才真正开始着手处理它。发布教会你本应该构建什么。在你明白之前，你都在浪费时间。所以无论你用什么发布，其主要价值都是作为吸引用户的借口。&lt;/p&gt;&#xA;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;让你的想法进化。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;这是快速发布的第二部分。快速发布并迭代。把创业公司当作仅仅是实现某个绝妙初始想法的事情是个大错误。就像写文章一样，大多数想法都是在实现过程中出现的。&lt;/p&gt;&#xA;&lt;ol start=&#34;4&#34;&gt;&#xA;&lt;li&gt;理解你的用户。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;你可以将创业公司创造的财富想象成一个矩形，一边是用户数量，另一边是你改善他们生活的程度。[2] 第二个维度是你最能控制的。实际上，第一个维度的增长将取决于你在第二个维度上做得如何。就像在科学中，困难的部分不是回答问题，而是提出问题：困难的部分是看到用户缺乏的新东西。你越了解他们，做到这一点的机会就越大。这就是为什么这么多成功的创业公司都制造了创始人自己需要的东西。&lt;/p&gt;&#xA;&lt;ol start=&#34;5&#34;&gt;&#xA;&lt;li&gt;最好让少数用户喜欢你，而不是让很多人无感。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;理想情况下，你希望让大量用户喜欢你，但你不能指望一蹴而就。最初你必须在满足所有潜在用户子集的需求，或满足所有潜在用户需求子集之间做出选择。选择前者。在用户数量上扩展比在满意度上扩展更容易。也许更重要的是，你更难欺骗自己。如果你认为你距离好产品还有85%的路要走，你怎么知道不是70%？或者10%？而知道你有多少用户是很容易的。&lt;/p&gt;&#xA;&lt;ol start=&#34;6&#34;&gt;&#xA;&lt;li&gt;提供令人惊讶的好客户服务。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;客户习惯于被虐待。他们打交道的大多数公司都是准垄断企业，能够逃脱糟糕的客户服务。你对可能性的看法已经被这些经历无意识地降低了。尝试使你的客户服务不仅好，而且令人惊讶的好。想方设法让人们快乐。他们会感到惊喜的；你会看到的。在创业公司的最早阶段，提供难以扩展的客户服务是值得的，因为这是了解用户的一种方式。&lt;/p&gt;&#xA;&lt;ol start=&#34;7&#34;&gt;&#xA;&lt;li&gt;你会得到你衡量的东西。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;这是我从Joe Kraus那里学到的。[3] 仅仅衡量某件事就有一种不可思议的改善它的倾向。如果你想让你的用户数量增加，在你的墙上贴一大张纸，每天标出用户数量。当它上升时你会感到高兴，下降时会失望。很快你就会开始注意到是什么让数字上升，你会开始做更多这样的事情。推论：小心你衡量什么。&lt;/p&gt;&#xA;&lt;ol start=&#34;8&#34;&gt;&#xA;&lt;li&gt;少花钱。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;我无法强调创业公司保持廉价有多么重要。大多数创业公司在制造出人们想要的东西之前就失败了，最常见的失败形式是资金耗尽。所以保持廉价与快速迭代（几乎）是可以互换的。[4] 但这不仅仅是这些。廉价文化就像锻炼保持人们年轻一样，能让公司保持年轻。&lt;/p&gt;&#xA;&lt;ol start=&#34;9&#34;&gt;&#xA;&lt;li&gt;实现拉面盈利。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&amp;ldquo;拉面盈利&amp;quot;意味着创业公司的收入刚好足以支付创始人的生活费用。这不是商业模式的快速原型（尽管它可以是），而更像是一种黑客投资过程的方式。一旦你实现拉面盈利，你与投资者的关系就完全改变了。这对士气也很棒。&lt;/p&gt;&#xA;&lt;ol start=&#34;10&#34;&gt;&#xA;&lt;li&gt;避免分心。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;没有什么比分心更能扼杀创业公司了。最糟糕的类型是那些付钱的：日常工作、咨询、有利可图的副项目。创业公司可能具有更多的长期潜力，但你总是会中断在它上面的工作，去接那些现在付钱给你的人的电话。矛盾的是，融资就是这种类型的分心，所以也要尽量减少它。&lt;/p&gt;&#xA;&lt;ol start=&#34;11&#34;&gt;&#xA;&lt;li&gt;不要气馁。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;虽然创业公司直接死亡的原因往往是资金耗尽，但根本原因通常是缺乏专注。要么公司由愚蠢的人经营（这无法通过建议修复），要么人们聪明但变得气馁。开始创业公司是一个巨大的精神负担。理解这一点，并有意识地努力不被它压垮，就像你在拿起重箱子时要小心弯曲膝盖一样。&lt;/p&gt;&#xA;&lt;ol start=&#34;12&#34;&gt;&#xA;&lt;li&gt;不要放弃。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;即使你气馁了，也不要放弃。仅仅通过不放弃，你就能走得比你想象的远得多。这在所有领域都不成立。有很多人无论坚持多久都无法成为优秀的数学家。但创业公司不是这样的。纯粹的努力通常就足够了，只要你不断调整你的想法。&lt;/p&gt;&#xA;&lt;ol start=&#34;13&#34;&gt;&#xA;&lt;li&gt;交易会失败。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;我们从Viaweb学到的最有用的技能之一是不抱太大希望。我们可能有20个各种类型的交易失败了。在前10个左右之后，我们学会将交易视为我们应该忽略直到它们终止的后台进程。开始依赖交易完成对士气来说是非常危险的，不仅因为它们经常不完成，而且因为这使它们更不可能完成。&lt;/p&gt;&#xA;&lt;p&gt;当把它缩减到13句话时，我问自己如果只能保留一个，我会选择哪一个。&lt;/p&gt;&#xA;&lt;p&gt;理解你的用户。这就是关键。创业公司的基本任务是创造财富；你最能控制的财富维度是你改善用户生活的程度；而其中最难的部分是知道为他们制造什么。一旦你知道要制造什么，制造它就只是努力的问题，大多数像样的黑客都有能力做到。&lt;/p&gt;&#xA;&lt;p&gt;理解你的用户是这个清单中一半原则的一部分。这就是要早期发布，以了解你的用户。发展你的想法是理解你的用户的体现。很好地理解你的用户会倾向于推动你制造让少数人深度满意的东西。拥有令人惊讶的好客户服务的最重要原因是它帮助你理解你的用户。而理解你的用户甚至会确保你的士气，因为当其他一切都崩溃时，只要有十个用户喜欢你，你就会继续前进。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 严格来说，没有时间机器是不可能的。&lt;/p&gt;&#xA;&lt;p&gt;[2] 实际上，它更像一个参差不齐的梳子。&lt;/p&gt;&#xA;&lt;p&gt;[3] Joe认为是惠普的创始人之一首先说的，但他不记得是哪一个。&lt;/p&gt;&#xA;&lt;p&gt;[4] 如果市场停滞不前，它们是可互换的。既然不是，工作速度快一倍比拥有两倍时间更好。&lt;/p&gt;&#xA;&lt;hr&gt;</description>
    </item>
    <item>
      <title>疯狂的新想法</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/newideas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/newideas/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/newideas.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;疯狂的新想法&#34;&gt;疯狂的新想法&lt;/h1&gt;&#xA;&lt;p&gt;2021年5月&lt;/p&gt;&#xA;&lt;p&gt;有一种观点我非常害怕在公开场合表达。如果我认识的某个既是领域专家又是通情达理的人提出了一个听起来荒谬的想法，我会非常不愿意说&amp;quot;这永远不会成功&amp;quot;。&lt;/p&gt;&#xA;&lt;p&gt;任何研究过思想史，特别是科学史的人都知道，大事就是这样开始的。有人提出了一个听起来疯狂的想法，大多数人 dismiss 它，然后它逐渐占领了世界。&lt;/p&gt;&#xA;&lt;p&gt;大多数听起来荒谬的想法事实上是坏的，可以安全地 dismiss。但当它们是由通情达理的领域专家提出时就不是了。如果提出这个想法的人是通情达理的，那么他们知道这听起来多么荒谬。然而他们还是提出了它。这表明他们知道一些你不知道的事情。如果他们有深厚的领域专业知识，那很可能就是来源。[1]&lt;/p&gt;&#xA;&lt;p&gt;这样的想法不仅仅不能安全地 dismiss，而且特别可能是有趣的。当普通人提出一个听起来荒谬的想法时，它的荒谬性是他们无能的证据。但当一个通情达理的领域专家这样做时，情况就相反了。这里有一种类似有效市场的东西：平均来说，看起来最疯狂的想法，如果正确，将产生最大的影响。所以如果你能消除提出荒谬想法的人是无能的理论，它的荒谬性就从它很无聊的证据变成了它很令人兴奋的证据。[2]&lt;/p&gt;&#xA;&lt;p&gt;这样的想法并不保证成功。但它们不必成功。它们只需要是足够好的赌注——具有足够高的期望值。我认为平均来说它们是。我认为如果你赌上所有由通情达理的领域专家提出的听起来荒谬的想法，你最终会净赚。&lt;/p&gt;&#xA;&lt;p&gt;原因是每个人都太保守了。&amp;ldquo;范式&amp;quot;这个词被过度使用了，但这是一个值得使用的情况。每个人都过于受当前范式的束缚。即使那些有新想法的人最初也低估了它们。这意味着在它们达到公开提出的阶段之前，它们已经经过了过于严格的过滤。[3]&lt;/p&gt;&#xA;&lt;p&gt;对这种想法的明智回应不是发表声明，而是提出问题，因为这里有一个真正的谜团。为什么这个聪明且通情达理的人提出了一个似乎如此错误的想法？是他们错了，还是你错了？你们中必须有一个。如果你是那个错了的人，那最好是知道这一点，因为这意味着你的世界观模型中有一个漏洞。但即使他们错了，了解为什么也应该是有趣的。专家陷入的陷阱是你也必须担心的。&lt;/p&gt;&#xA;&lt;p&gt;这一切似乎很明显。然而，显然有很多人不分享我对 dismiss 新想法的恐惧。他们为什么这样做？为什么现在看起来像个混蛋，以后看起来像个傻瓜，而不是仅仅保留判断？&lt;/p&gt;&#xA;&lt;p&gt;他们这样做的一个原因是嫉妒。如果你提出了一个激进的新想法并且它成功了，你的声誉（可能还有你的财富）将成比例地增加。如果这种情况发生，有些人会嫉妒，这种潜在的嫉妒会传播成一种你必须错误的信念。&lt;/p&gt;&#xA;&lt;p&gt;人们 dismiss 新想法的另一个原因是这是显得老练的简单方法。当一个新想法首次出现时，它通常看起来相当弱小。它只是一个刚孵化的小鸡。相比之下，公认的智慧是一只完全成熟的鹰。所以很容易对新想法发动毁灭性的攻击，任何这样做的人在那些不理解这种不对称性的人看来会很聪明。&lt;/p&gt;&#xA;&lt;p&gt;这种现象因从事新想法的人和攻击他们的人所获得的回报差异而加剧。从事新想法的回报是根据结果的价值来加权的。所以值得从事只有10%成功机会的事情，如果它能使事情变得好10倍以上。而攻击新想法的回报大致是恒定的；无论目标如何，这种攻击看起来大致同样聪明。&lt;/p&gt;&#xA;&lt;p&gt;当他们既得利益在旧想法中时，人们也会攻击新想法。例如，达尔文的一些最严厉的批评者是牧师，这并不奇怪。人们在某些想法上建立了整个职业生涯。当有人声称这些想法是错误或过时的，他们会感到受到威胁。&lt;/p&gt;&#xA;&lt;p&gt;最低级的 dismiss 是纯粹的派系主义：自动 dismiss 与反对派系相关的任何想法。最低级的是因为提出者是谁而 dismiss 一个想法。&lt;/p&gt;&#xA;&lt;p&gt;但导致通情达理的人 dismiss 新想法的主要事情，与阻止人们提出新想法的原因是一样的：当前范式的普遍存在。它不仅影响我们的思维方式；它是我们构建思想的乐高积木。跳出当前范式是只有少数人能做到的。即使他们通常也必须首先抑制他们的直觉，就像一个在云层中飞行的飞行员必须相信他的仪器而不是他的平衡感。[4]&lt;/p&gt;&#xA;&lt;p&gt;范式不仅定义我们现在的思维。它们还吸干了导致它们的面包屑痕迹，使我们对新想法的标准变得不可能高。当前范式对我们这些后代来说看起来如此完美，以至于我们想象它一定在被发现时就被完全接受了——无论教会对日心模型怎么看，天文学家一定在哥白尼提出它时就信服了。事实上，远非如此。哥白尼在1532年出版了日心模型，但直到17世纪中期科学舆论的天平才转向它。[5]&lt;/p&gt;&#xA;&lt;p&gt;很少有人理解新想法在首次出现时看起来多么弱小。所以如果你想自己有新想法，你能做的最有价值的事情之一就是了解它们在出生时的样子。阅读新想法是如何发生的，并试图让自己进入当时人们的头脑。当新想法只完成一半，甚至拥有它的人也只是半信半疑地认为它是正确的时候，事情对他们来说是什么样子的？&lt;/p&gt;&#xA;&lt;p&gt;但你不必停留在历史上。你现在可以观察到周围正在诞生的新想法。只要寻找一个通情达理的领域专家提出一些听起来错误的观点。&lt;/p&gt;&#xA;&lt;p&gt;如果你既善良又聪明，你不仅不会攻击这样的人，还会鼓励他们。拥有新想法是孤独的事情。只有尝试过的人才知道有多孤独。这些人需要你的帮助。如果你帮助他们，你很可能在这个过程中学到一些东西。&lt;/p&gt;&#xA;&lt;p&gt;笔记&lt;/p&gt;&#xA;&lt;p&gt;[1] 这种领域专业知识可能在另一个领域。事实上，这种交叉往往特别有希望。&lt;/p&gt;&#xA;&lt;p&gt;[2] 我并不声称这个原则在数学、工程和硬科学之外延伸很远。例如，在政治中，听起来疯狂的想法通常和听起来一样坏。虽然可以说这不是例外，因为提出它们的人实际上不是领域专家；政治家是政治策略的领域专家，比如如何当选和如何通过立法，而不是政策所作用的世界。也许没有人能是。&lt;/p&gt;&#xA;&lt;p&gt;[3] 这种&amp;quot;范式&amp;quot;的意义由Thomas Kuhn在他的《科学革命的结构》中定义，但我也推荐他的《哥白尼革命》，在那里你可以看到他在工作中发展这个想法。&lt;/p&gt;&#xA;&lt;p&gt;[4] 这是为什么有点阿斯伯格症的人可能在发现新想法方面有优势的一个原因。他们总是在靠仪器飞行。&lt;/p&gt;&#xA;&lt;p&gt;[5] Hall, Rupert. From Galileo to Newton. Collins, 1963. 这本书特别擅长进入同时代人的头脑。&lt;/p&gt;&#xA;&lt;p&gt;感谢 Trevor Blackwell, Patrick Collison, Suhail Doshi, Daniel Gackle, Jessica Livingston, and Robert Morris 阅读本文草稿。&lt;/p&gt;</description>
    </item>
    <item>
      <title>百年编程语言</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/hundred/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/hundred/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/hundred.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;百年编程语言&#34;&gt;百年编程语言&lt;/h1&gt;&#xA;&lt;p&gt;2003年4月&lt;/p&gt;&#xA;&lt;p&gt;（本文源于在PyCon 2003的主题演讲。）&lt;/p&gt;&#xA;&lt;p&gt;很难预测一百年后的生活会是什么样子。我们只能确定几件事。我们知道每个人都会驾驶飞行汽车，区划法律将会放宽以允许建造数百层高的建筑，大部分时间都会是黑暗的，女性都会接受武术训练。在这里，我想聚焦于这个图景中的一个细节。他们会用什么样的编程语言来编写控制那些飞行汽车的软件？&lt;/p&gt;&#xA;&lt;p&gt;思考这个问题之所以有价值，并不是因为我们真的能用到这些语言，而是因为，如果我们幸运的话，我们会使用从现在到那个时间点的路径上的语言。&lt;/p&gt;&#xA;&lt;p&gt;我认为，像物种一样，语言会形成进化树，到处都有死胡同分支。我们已经看到这种情况正在发生。Cobol尽管曾经流行，但似乎没有任何知识后代。它是一个进化死胡同——尼安德特人式的语言。&lt;/p&gt;&#xA;&lt;p&gt;我预测Java也会有类似的命运。人们有时给我写信说，&amp;ldquo;你怎么能说Java不会成为一种成功的语言？它已经是成功的语言了。&amp;ldquo;我承认它是，如果你用关于它的书籍所占用的书架空间（特别是关于它的单本书籍），或者相信必须学习它才能找到工作的本科生数量来衡量成功的话。当我说Java不会成为成功的语言时，我的意思更具体：Java将是一个进化死胡同，就像Cobol一样。&lt;/p&gt;&#xA;&lt;p&gt;这只是一个猜测。我可能是错的。我在这里的重点不是批评Java，而是提出进化树的问题，让人们思考，语言X在树的哪个位置？问这个问题的原因不仅仅是为了让我们的鬼魂在一百年后说我告诉过你这样。这是因为靠近主要分支是寻找现在适合编程的语言的有用启发式方法。&lt;/p&gt;&#xA;&lt;p&gt;在任何给定的时间，你可能最幸福地处于进化树的主要分支上。即使仍然有很多尼安德特人，成为其中的一员也一定很糟糕。克罗马农人会不断过来殴打你并偷走你的食物。&lt;/p&gt;&#xA;&lt;p&gt;我想知道一百年后语言会是什么样子，这样我就知道现在应该赌树的哪个分支。&lt;/p&gt;&#xA;&lt;p&gt;语言的进化与物种的进化不同，因为分支可以融合。例如，Fortran分支似乎正在与Algol的后代融合。理论上这对物种也是可能的，但不太可能发生在比细胞更大的生物上。&lt;/p&gt;&#xA;&lt;p&gt;语言更有可能融合，部分是因为可能性空间较小，部分是因为突变不是随机的。语言设计师有意地融合其他语言的思想。&lt;/p&gt;&#xA;&lt;p&gt;对于语言设计师来说，思考编程语言的进化可能导致的方向特别有用，因为他们可以相应地引导。在这种情况下，&amp;ldquo;停留在主分支上&amp;quot;不仅仅是选择好语言的方法。它成为做出正确语言设计决策的启发式方法。&lt;/p&gt;&#xA;&lt;p&gt;任何编程语言都可以分为两部分：一组扮演公理角色的基本运算符，以及语言的其余部分，原则上可以用这些基本运算符来编写。&lt;/p&gt;&#xA;&lt;p&gt;我认为基本运算符是语言长期生存的最重要因素。其余的你可以改变。这就像买房子的规则，你首先应该考虑位置。其他的一切你都可以稍后修复，但你不能修复位置。&lt;/p&gt;&#xA;&lt;p&gt;我认为不仅公理要选择得好，而且数量要少。数学家一直对公理有这样的感觉——越少越好——我认为他们抓住了要点。&lt;/p&gt;&#xA;&lt;p&gt;至少，仔细审视语言的核心，看看是否有任何可以剔除的公理，这必须是一个有用的练习。我在我作为一个邋遢人的漫长职业生涯中发现，冗余会产生冗余，我看到这种情况不仅发生在软件中，也发生在床下和房间角落。&lt;/p&gt;&#xA;&lt;p&gt;我有一种预感，进化树的主要分支通过那些具有最小、最干净核心的语言。你能在语言本身中编写的语言部分越多越好。&lt;/p&gt;&#xA;&lt;p&gt;当然，即使问一百年后编程语言会是什么样子，我也做出了一个很大的假设。一百年后我们还会编写程序吗？我们不会只是告诉计算机我们想要它们做什么吗？&lt;/p&gt;&#xA;&lt;p&gt;到目前为止，那个部门没有太多进展。我猜测一百年后人们仍会使用我们能识别的程序来告诉计算机做什么。可能有些我们现在通过编写程序来解决的问题，一百年后你不必编写程序来解决，但我认为仍会有大量我们今天所做的那种编程。&lt;/p&gt;&#xA;&lt;p&gt;认为任何人都能预测任何技术在一百年后会是什么样子可能显得 presumptuous。但请记住，我们背后已经有将近五十年的历史。当我们考虑到语言在过去五十年中进化得多么缓慢时，展望一百年是一个可以把握的想法。&lt;/p&gt;&#xA;&lt;p&gt;语言进化缓慢是因为它们并不是真正的技术。语言是符号。程序是你希望计算机为你解决问题的形式化描述。所以编程语言的进化速度更像数学符号的进化速度，而不是交通或通信的进化速度。数学符号确实在进化，但没有你在技术中看到的巨大飞跃。&lt;/p&gt;&#xA;&lt;p&gt;无论一百年后计算机由什么制成，似乎可以安全地预测它们会比现在快得多。如果摩尔定律继续发挥作用，它们将快74 quintillion（73,786,976,294,838,206,464）倍。这很难想象。事实上，速度部门最可能的预测可能是摩尔定律将停止工作。任何应该每十八个月翻一番的东西似乎最终都会遇到某种基本限制。但我毫不怀疑计算机会快得多。即使它们最终只快一百倍，这也应该大大改变编程语言的基本规则。除此之外，还会有更多空间给现在被认为是慢的语言，即那些不能产生非常高效代码的语言。&lt;/p&gt;&#xA;&lt;p&gt;然而，有些应用仍然需要速度。我们想用计算机解决的有些问题是计算机创造的；例如，你必须处理视频图像的速度取决于另一台计算机生成它们的速度。还有另一类问题本身就具有无限吸收计算周期的能力：图像渲染、密码学、模拟。&lt;/p&gt;&#xA;&lt;p&gt;如果一些应用可以变得越来越低效，而其他应用继续要求硬件能够提供的所有速度，更快的计算机将意味着语言必须覆盖更广泛的效率范围。我们已经看到这种情况正在发生。按照过去几十年的标准，一些流行新语言的当前实现惊人地浪费。&lt;/p&gt;&#xA;&lt;p&gt;这不仅仅是编程语言发生的事情。这是一个普遍的历史趋势。随着技术的改进，每一代人都能做前一代人认为是浪费的事情。三十年前的人会对我们如此随意地打长途电话感到惊讶。一百年前的人会更惊讶有一天一个包裹会通过孟菲斯从波士顿旅行到纽约。&lt;/p&gt;&#xA;&lt;p&gt;我已经可以告诉你未来一百年更快的硬件将给我们的所有额外周期会发生什么。它们几乎都会被浪费掉。&lt;/p&gt;&#xA;&lt;p&gt;我学习编程时计算机能力很稀缺。我记得取出我Basic程序中的所有空格，使它们能适合4K TRS-80的内存。想到所有这些惊人低效的软件一遍又一遍地烧掉周期做同样的事情，我觉得有点恶心。但我认为我的直觉在这里是错的。我就像一个长大的穷人，即使是为了重要的事情也不能忍受花钱，比如去看医生。&lt;/p&gt;&#xA;&lt;p&gt;有些浪费确实是令人厌恶的。例如，SUVs即使运行在永远不会耗尽且不产生污染的燃料上，也可能是令人厌恶的。SUVs之所以令人厌恶，是因为它们是一个令人厌恶的问题的解决方案。（如何使小型货车看起来更阳刚。）但并非所有浪费都是坏的。现在我们有了支持它的基础设施，计算你的长途通话分钟数开始显得吝啬。如果你有资源，更优雅的思考方式是把所有电话通话视为一类事情，无论对方在哪里。&lt;/p&gt;&#xA;&lt;p&gt;有好浪费，也有坏浪费。我对好浪费感兴趣——那种通过花费更多，我们可以获得更简单设计的浪费。我们将如何利用新、更快的硬件给我们带来的浪费周期的机会？&lt;/p&gt;&#xA;&lt;p&gt;对速度的渴望在我们这些拥有可怜计算机的人心中根深蒂固，以至于需要 conscious 努力来克服它。在语言设计中，我们应该有意识地寻找可以用效率换取哪怕是最小的便利增加的情况。&lt;/p&gt;&#xA;&lt;p&gt;大多数数据结构的存在是因为速度。例如，今天的许多语言既有字符串也有列表。在语义上，字符串或多或少是列表的一个子集，其中元素是字符。那么为什么你需要单独的数据类型呢？你真的不需要。字符串的存在仅仅是为了效率。但是用使程序运行得更快的hack来使语言的语义变得混乱是很蹩脚的。在语言中拥有字符串似乎是一个过早优化的例子。&lt;/p&gt;&#xA;&lt;p&gt;如果我们将语言的核心视为一组公理，那么仅仅为了效率而增加不增加表达能力的额外公理肯定是令人厌恶的。效率很重要，但我认为这不是获得它的正确方法。&lt;/p&gt;&#xA;&lt;p&gt;我认为解决这个问题的正确方法是将程序的含义与实现细节分开。不要同时拥有列表和字符串，只拥有列表，同时有某种方式给编译器优化建议，使其能够在必要时将字符串布置为连续的字节。&lt;/p&gt;&#xA;&lt;p&gt;由于速度在程序的大部分中都不重要，你通常不需要费心处理这种微观管理。随着计算机变得越来越快，这一点会越来越真实。&lt;/p&gt;&#xA;&lt;p&gt;少说实现细节也应该使程序更灵活。规范在程序编写过程中会改变，这不仅是不可避免的，而且是可取的。&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;essay&amp;quot;这个词来自法语动词&amp;quot;essayer&amp;rdquo;，意思是&amp;quot;尝试&amp;rdquo;。essay在原始意义上是你写来试图弄清楚某些东西的东西。这在软件中也会发生。我认为一些最好的程序是essay，从这个意义上说，作者们在开始时并不知道他们确切地想要写什么。&lt;/p&gt;&#xA;&lt;p&gt;Lisp黑客们已经知道灵活使用数据结构的价值。我们倾向于编写程序的第一版本，使其用列表做所有事情。这些初始版本可能如此惊人地低效，以至于需要conscious努力不去思考它们在做什么，就像，至少对我而言，吃牛排需要conscious努力不去思考它来自哪里。&lt;/p&gt;&#xA;&lt;p&gt;一百年后的程序员最寻找的，最重要的是一种语言，你可以用最少的努力组合成一个令人难以置信的低效版本1程序。至少，这是我们现在会描述的方式。他们会说他们想要一种易于编程的语言。&lt;/p&gt;&#xA;&lt;p&gt;低效的软件并不令人厌恶。令人厌恶的是让程序员做不必要工作的语言。浪费程序员时间是真正的低效，而不是浪费机器时间。随着计算机变得越来越快，这一点会变得越来越清晰。&lt;/p&gt;&#xA;&lt;p&gt;我认为摆脱字符串已经是我们可以忍受思考的事情了。我们在Arc中这样做了，这似乎是一个胜利；一些用正则表达式描述会很尴尬的操作可以很容易地描述为递归函数。&lt;/p&gt;&#xA;&lt;p&gt;这种数据结构扁平化会走多远？我能想到甚至让我这个思想开明的人感到震惊的可能性。例如，我们会摆脱数组吗？毕竟，它们只是哈希表的一个子集，其中键是整数向量。我们会用列表替换哈希表本身吗？&lt;/p&gt;&#xA;&lt;p&gt;还有比这更令人震惊的前景。例如，McCarthy在1960年描述的Lisp没有数字。从逻辑上讲，你不需要有一个单独的数字概念，因为你可以用列表来表示它们：整数n可以表示为n个元素的列表。你可以用这种方式做数学。这只是令人难以忍受的低效。&lt;/p&gt;&#xA;&lt;p&gt;实际上没有人提议在实践中用列表实现数字。事实上，McCarthy的1960年论文在当时根本不打算实现。这是一个理论练习，试图创建一个更优雅的图灵机替代方案。当有人意外地拿走这篇论文并将其翻译成工作的Lisp解释器时，数字肯定不是用列表表示的；它们像所有其他语言一样用二进制表示。&lt;/p&gt;&#xA;&lt;p&gt;编程语言能否走得那么远，以至于摆脱数字作为基本数据类型？我问这个与其说是作为一个严肃的问题，不如说是作为一种与未来玩胆小鬼游戏的方式。这就像不可抗拒的力量遇到不可移动的物体的假设情况——这里，一个令人难以想象的低效实现遇到令人难以想象的巨大资源。我看不出为什么不。未来是相当长的。如果我们能做些什么来减少核心语言中公理的数量，那么随着t趋向无穷大，这似乎是值得押注的一方。如果这个想法在一百年后似乎仍然难以忍受，也许在一千年后不会。&lt;/p&gt;&#xA;&lt;p&gt;为了明确这一点，我并不是建议所有数值计算实际上都会使用列表进行。我建议核心语言，在关于实现的任何额外符号之前，应该这样定义。在实践中，任何想做任何数量数学的程序可能会用二进制表示数字，但这将是一种优化，而不是核心语言语义的一部分。&lt;/p&gt;&#xA;&lt;p&gt;燃烧周期的另一种方法是在应用程序和硬件之间拥有多层软件。这也是我们已经看到正在发生的趋势：许多最近的语言被编译成字节码。Bill Woods曾经告诉我，根据经验法则，每层解释成本在速度上要付出10倍的代价。这种额外的代价给你带来灵活性。&lt;/p&gt;&#xA;&lt;p&gt;Arc的第一个版本就是这种多层次缓慢的极端情况，相应的好处。它是一个经典的&amp;quot;元循环&amp;quot;解释器，在Common Lisp之上编写，与McCarthy原始Lisp论文中定义的eval函数有明显的家族相似性。整个事情只有几百行代码，所以非常容易理解和改变。我们使用的Common Lisp，CLisp，本身在字节码解释器之上运行。所以我们有两层解释，其中一层（顶层）惊人地低效，而语言是可用的。我承认勉强可用，但是可用的。&lt;/p&gt;&#xA;&lt;p&gt;即使在应用程序内部，将软件编写为多层也是一种强大的技术。自底向上编程意味着将程序编写为一系列层，每一层都作为其上一层的语言。这种方法往往产生更小、更灵活的程序。它也是通往圣杯可重用性的最佳途径。语言按定义是可重用的。你能将应用程序的更多部分推入用于编写这类应用程序的语言中，你的软件就会有更多部分是可重用的。&lt;/p&gt;&#xA;&lt;p&gt;不知何故，可重用性的想法在20世纪80年代与面向对象编程联系在一起，似乎没有任何相反的证据能够动摇它。但是虽然一些面向对象的软件是可重用的，使其可重用的是其自底向上性，而不是其面向对象性。考虑库：它们是可重用的因为它们是语言，无论它们是否以面向对象风格编写。&lt;/p&gt;&#xA;&lt;p&gt;顺便说一下，我不预测面向对象编程的消亡。虽然我认为它对好的程序员没有太多提供，除了在某些特定领域，它对大组织来说是不可抗拒的。面向对象编程提供了一种可持续的方式来编写意大利面条式代码。它让你能够将程序累积为一系列补丁。大组织总是倾向于以这种方式开发软件，我期望一百年后也会如此。既然我们在谈论未来，我们最好谈谈并行计算，因为这是这个想法似乎存在的地方。也就是说，无论你什么时候谈论，并行计算似乎都是未来要发生的事情。&lt;/p&gt;&#xA;&lt;p&gt;未来会赶上它吗？人们谈论并行计算作为即将发生的事情至少有20年了，到目前为止它还没有太多影响编程实践。或者说有吗？芯片设计师现在必须考虑它，试图在多cpu计算机上编写系统软件的人也必须考虑。&lt;/p&gt;&#xA;&lt;p&gt;真正的问题是，抽象的阶梯上并行会走多远？一百年后它甚至会影响应用程序员吗？或者它会是编译器作者思考的事情，但在应用程序源代码中通常是不可见的？&lt;/p&gt;&#xA;&lt;p&gt;似乎很可能的一件事是，大多数并行机会被浪费。这是我对我们得到的大部分额外计算机能力将被浪费的更一般预测的一个特例。我期望，就像底层硬件的惊人速度一样，并行将是如果你明确要求它就可以使用的东西，但通常不被使用。这意味着我们一百年后拥有的那种并行不会，除非在特殊应用中，是大规模并行。我期望对于普通程序员来说，它更像是能够分叉出最终并行运行的进程。&lt;/p&gt;&#xA;&lt;p&gt;这将像要求数据结构的特定实现一样，是你对程序进行优化时相当晚才做的事情。版本1通常会忽略从并行计算中获得的任何优势，就像它们会忽略从数据的特定表示中获得的任何优势一样。&lt;/p&gt;&#xA;&lt;p&gt;除了特殊类型的应用程序，并行不会渗透到一百年后编写的程序中。如果确实如此，那将是过早优化。&lt;/p&gt;&#xA;&lt;p&gt;一百年后会有多少种编程语言？最近似乎有大量的新编程语言。部分原因是更快的硬件使程序员能够在速度和便利性之间做出不同的权衡，取决于应用。如果这是一个真正的趋势，我们一百年后拥有的硬件只会增加它。&lt;/p&gt;&#xA;&lt;p&gt;然而一百年后可能只有几种广泛使用的语言。我说这个的部分原因是乐观：似乎，如果你做得很好，你可以制作一种理想的语言来编写慢速版本1，然而通过给编译器正确的优化建议，也能在必要时产生非常快的代码。所以，既然我乐观，我预测尽管它们在可接受和最大效率之间会有巨大差距，一百年后的程序员将拥有能够跨越大部分差距的语言。&lt;/p&gt;&#xA;&lt;p&gt;随着这个差距扩大，性能分析器将变得越来越重要。现在对性能分析的关注很少。许多人似乎仍然相信获得快速应用程序的方法是编写生成快速代码的编译器。随着可接受和最大性能之间的差距扩大，获得快速应用程序的方法是拥有一个从可接受到最大的良好指南，这一点将变得越来越清晰。&lt;/p&gt;</description>
    </item>
    <item>
      <title>看见随机性</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/randomness/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/randomness/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/randomness.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;看见随机性&#34;&gt;看见随机性&lt;/h1&gt;&#xA;&lt;p&gt;2006年4月，修订于2009年8月&lt;/p&gt;&#xA;&lt;p&gt;柏拉图引用苏格拉底的话说&amp;quot;未经审视的生活不值得过。&amp;ldquo;他的部分意思是人类的适当角色是思考，正如食蚁兽的适当角色是将鼻子伸入蚁丘。&lt;/p&gt;&#xA;&lt;p&gt;许多古代哲学都具有这种特质——我不是在贬义——类似于大一新生深夜在公共休息室里的那种对话：我们的目的是什么？嗯，我们人类与其他动物明显不同，就像食蚁兽一样。在我们的情况下， distinguishing特征是理性思考的能力。所以显然这就是我们应该做的，一个不这样做的人就是没有做好做人的工作——还不如动物。现在我们会给出不同的答案。至少，苏格拉底那个年纪的人会。我们会问为什么我们甚至假设生活中有一个&amp;quot;目的&amp;rdquo;。我们可能比其他人更适合某些事情；我们做我们适应的事情可能会更快乐；但为什么要假设目的呢？&lt;/p&gt;&#xA;&lt;p&gt;思想史是逐渐抛弃一切都是关于我们的假设的历史。不，事实证明，地球不是宇宙的中心——甚至不是太阳系的中心。不，事实证明，人类不是以上帝的形象创造的；他们只是众多物种中的一个，不仅从猿类，而且从微生物进化而来。即使&amp;quot;我&amp;quot;的概念，如果你仔细审视，也会发现边缘模糊。&lt;/p&gt;&#xA;&lt;p&gt;我们是事物中心的想法很难抛弃。如此困难以至于可能还有更多可以抛弃的地方。理查德·道金斯在最近几十年中通过自私基因的概念朝这个方向又迈出了一步。不，事实证明，我们甚至不是主角：我们只是我们的基因建造来四处旅行的最新型号交通工具。而生孩子是我们的基因奔向救生艇。阅读那本书使我的大脑脱离了以前的思维方式，就像达尔文的《物种起源》首次出现时一定是那样。&lt;/p&gt;&#xA;&lt;p&gt;（现在很少有人能体验到达尔文同时代人在《物种起源》首次出版时的感受，因为现在每个人要么被教导接受进化论是理所当然的，要么将其视为异端。没有人作为成年人第一次遇到自然选择的想法。）&lt;/p&gt;&#xA;&lt;p&gt;所以如果你想发现迄今为止被忽视的事情，一个真正好的地方是我们的盲点：在我们自然的、天真的信念，即一切都是关于我们的。如果你这样做，准备好会遇到激烈的反对。&lt;/p&gt;&#xA;&lt;p&gt;相反，如果你必须在两个理论之间选择，选择那个不以你为中心的理论。&lt;/p&gt;&#xA;&lt;p&gt;这个原则不仅适用于重大思想。它在日常生活中也有效。例如，假设你在冰箱里保存了一块蛋糕，有一天你回家发现你的室友吃了它。两种可能的理论：&lt;/p&gt;&#xA;&lt;p&gt;a) 你的室友故意这样做来让你不安。他知道你在保存那块蛋糕。&lt;/p&gt;&#xA;&lt;p&gt;b) 你的室友饿了。&lt;/p&gt;&#xA;&lt;p&gt;我选择b。没有人知道是谁说了&amp;quot;不要用恶意来解释可以用无能解释的事情&amp;quot;，但这是一个强大的思想。它更一般的版本是我们对希腊人的回答：不要在没有目的的地方看到目的。或者更好的是，积极版本：看见随机性。&lt;/p&gt;&#xA;&lt;p&gt;韩文翻译&lt;/p&gt;</description>
    </item>
    <item>
      <title>真有好品味这回事吗？</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/goodtaste/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/goodtaste/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/goodtaste.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;真有好品味这回事吗&#34;&gt;真有好品味这回事吗？&lt;/h1&gt;&#xA;&lt;p&gt;2021年11月&lt;/p&gt;&#xA;&lt;p&gt;（本文源自剑桥联盟的一次演讲。）&lt;/p&gt;&#xA;&lt;p&gt;当我还是个孩子的时候，我会说没有这回事。我父亲这样告诉我。有些人喜欢某些东西，另一些人喜欢其他东西，谁说得对谁呢？&lt;/p&gt;&#xA;&lt;p&gt;不存在好品味这回事似乎如此明显，以至于我只是通过间接证据才意识到我父亲是错的。这就是我在这里要给你的：一个归谬法的证明。如果我们从不存在好品味这回事的前提开始，我们最终会得到明显错误的结论，因此前提一定是错的。&lt;/p&gt;&#xA;&lt;p&gt;我们最好先说清楚什么是好品味。有一个狭义的意义，指的是美学判断，还有一个更广泛的意义，指的是任何种类的偏好。最有力的证明将是展示品味在最狭义的意义上存在，所以我将要谈论艺术中的品味。如果你喜欢的艺术比我喜欢的艺术更好，那么你的品味比我好。&lt;/p&gt;&#xA;&lt;p&gt;如果不存在好品味这回事，那么也不存在好艺术这回事。因为如果存在好艺术这回事，很容易判断两个人中谁的品味更好。给他们看很多他们从未见过的艺术家的作品，要求他们选择最好的，谁选择了更好的艺术谁就有更好的品味。&lt;/p&gt;&#xA;&lt;p&gt;所以如果你想抛弃好品味的概念，你也必须抛弃好艺术的概念。这意味着你必须抛弃人们擅长创作艺术的可能性。这意味着艺术家无法擅长他们的工作。不仅是视觉艺术家，还有任何意义上的艺术家。你不可能有好演员，或者好小说家，或者好作曲家，或者好舞蹈家。你可以有受欢迎的小说家，但没有好的小说家。&lt;/p&gt;&#xA;&lt;p&gt;我们没有意识到如果抛弃好品味的概念我们必须走多远，因为我们甚至没有辩论最明显的情况。但这不仅意味着我们不能说两个著名画家中哪个更好。这意味着我们不能说任何画家比随机选择的八岁孩子更好。&lt;/p&gt;&#xA;&lt;p&gt;这就是我意识到我父亲错的方式。我开始学习绘画。这就像我做过的其他工作一样：你可以做得好，或者做得差，如果你努力，你可以变得更好。很明显，列奥纳多和贝利尼在这方面比我好得多。我们之间的差距不是想象的。他们是如此优秀。如果他们可以是优秀的，那么艺术可以是优秀的，毕竟还是存在好品味这回事。&lt;/p&gt;&#xA;&lt;p&gt;既然我已经解释了如何证明存在好品味这回事，我也应该解释为什么人们认为不存在。有两个原因。一个是关于品味总是有这么多分歧。大多数人对艺术的反应是一团未经验证的冲动。艺术家著名吗？主题吸引人吗？这是他们应该喜欢的艺术类型吗？它挂在著名的博物馆里，还是在一本昂贵的书中复制？在实践中，大多数人对艺术的反应被这样的外来因素主导。&lt;/p&gt;&#xA;&lt;p&gt;而那些声称有好品味的人经常是错误的。一代所谓专家赞赏的绘画与几代人后赞赏的经常如此不同。很容易得出结论认为那里根本没有真实的东西。只有当你隔离这种力量时，例如通过尝试绘画并将你的作品与贝利尼的比较，你才能看到它确实存在。&lt;/p&gt;&#xA;&lt;p&gt;人们怀疑艺术可以是好的另一个原因是，在艺术中似乎没有这种好的空间。论证是这样的。想象几个人在看一件艺术品并判断它有多好。如果好艺术真的是物体的一种属性，它应该以某种方式在物体中。但它似乎不在；它似乎发生在每个观察者的头脑中。如果他们意见不一致，你如何在他们之间选择？&lt;/p&gt;&#xA;&lt;p&gt;这个谜题的解决方案是意识到艺术的目的是作用于其人类观众，而人类有很多共同点。就物体作用的东西以同样方式反应的程度而言，这可以说是物体具有相应属性的意义。如果一个粒子相互作用的一切都表现得好像该粒子具有质量m，那么它就具有质量m。所以&amp;quot;客观&amp;quot;和&amp;quot;主观&amp;quot;的区别不是二元的，而是程度问题，取决于主体有多少共同点。相互作用的粒子在一个极端，但与艺术相互作用的人并不完全在另一个极端；他们的反应不是随机的。&lt;/p&gt;&#xA;&lt;p&gt;因为人们对艺术的反应不是随机的，艺术可以被设计用来作用于人，并且根据其效果好坏而好坏。就像疫苗一样。如果有人在谈论疫苗赋予免疫力的能力，反对说赋予免疫力实际上不是疫苗的属性，因为获得免疫力是发生在每个人免疫系统中的事情，这似乎非常轻率。当然，人们的免疫系统各不相同，在一个身上有效的疫苗可能在另一个人身上无效，但这并不意味着谈论疫苗的有效性是没有意义的。&lt;/p&gt;&#xA;&lt;p&gt;艺术的情况当然更混乱。你不能像对疫苗那样简单地通过投票来测量有效性。你必须想象具有深厚艺术知识、头脑足够清晰能够忽略艺术家名声等外来影响的主体的反应。即使那样你仍然会看到一些分歧。人们确实有差异，判断艺术很难，特别是当代艺术。作品或人们判断它们的能力都没有完全的顺序。但两者都同样明确有部分顺序。所以虽然不可能有完美的品味，但有可能有好品味。&lt;/p&gt;&#xA;&lt;p&gt;感谢剑桥联盟邀请我，感谢Trevor Blackwell、Jessica Livingston和Robert Morris阅读本文的草稿。&lt;/p&gt;</description>
    </item>
    <item>
      <title>真诚</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/earnest/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/earnest/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/earnest.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;真诚&#34;&gt;真诚&lt;/h1&gt;&#xA;&lt;p&gt;2020年12月&lt;/p&gt;&#xA;&lt;p&gt;Jessica和我在谈论创业公司时有一些有特殊意义的词汇。我们能给创始人的最高赞美就是形容他们为&amp;quot;真诚&amp;quot;。这本身并不是成功的保证。你可能很真诚但没有能力。但当创始人既强大（我们的另一个词汇）又真诚时，他们就几乎势不可挡了。&lt;/p&gt;&#xA;&lt;p&gt;真诚听起来像是一个无聊的，甚至是维多利亚式的美德。硅谷的人们会关心这个似乎有点不合时宜。为什么这如此重要？&lt;/p&gt;&#xA;&lt;p&gt;当你说某人真诚时，你在陈述他们的动机。这意味着他们既是为了正确的理由做事，也在尽力而为。如果我们把动机想象成向量，这意味着方向和大小都是正确的。虽然这些当然是相关的：当人们为了正确的理由做事时，他们会更努力。[1]&lt;/p&gt;&#xA;&lt;p&gt;在硅谷动机如此重要的原因是那里有太多人动机不纯。创办一家成功的创业公司会让你富有和出名。所以很多试图创办创业公司的人是为了这些理由。那是为了什么？不是为了解决问题本身。这就是真诚的根源。[2]&lt;/p&gt;&#xA;&lt;p&gt;这也是极客的标志。确实，当人们形容自己是&amp;quot;x极客&amp;quot;时，他们的意思是他们因为x本身而对x感兴趣，而不是因为对x感兴趣很酷，或者因为他们能从中得到什么。他们在说他们如此关心x，以至于愿意为了x而牺牲显得很酷。&lt;/p&gt;&#xA;&lt;p&gt;对某事的真正兴趣是一个非常强大的动力源——对有些人来说，是最强大的动力源。[3] 这就是为什么Jessica和我在创始人中寻找这个的原因。但作为力量的源泉，它也是脆弱性的源泉。关心会限制你。真诚的人不容易以同样的方式回应嘲讽的玩笑，也不能摆出虚无的冷漠酷相。他们太关心了。他们注定要当那个老实人。这在你的青少年时期是一个真正的劣势，那时嘲讽的玩笑和虚无的冷漠往往占上风。但后来它变成了优势。&lt;/p&gt;&#xA;&lt;p&gt;现在人们普遍认为，高中时的极客孩子后来成了酷孩子的老板。但人们误解了为什么会这样。不仅仅是因为极客更聪明，还因为他们更真诚。当问题变得比高中时给的假问题更难时，关心它们就开始变得重要了。&lt;/p&gt;&#xA;&lt;p&gt;它总是重要吗？真诚的人总是赢吗？不总是。在政治中，在犯罪中，或者在类似于犯罪的某些类型商业中，如赌博、人身伤害法、专利流氓等，它可能不那么重要。在学术领域的虚假端也不重要。虽然我了解得不够多无法确定，但在某些类型的幽默中可能不重要：完全愤世嫉俗但仍然非常有趣可能是可能的。[4]&lt;/p&gt;&#xA;&lt;p&gt;看看我提到的领域列表，有一个明显的模式。除了幽默可能例外，这些都是我会像瘟疫一样避免的工作类型。所以这可以成为一个有用的启发式方法来决定在哪个领域工作：真诚有多重要？这反过来大概可以从顶层的极客数量推断出来。&lt;/p&gt;&#xA;&lt;p&gt;与&amp;quot;极客&amp;quot;一起，另一个往往与真诚相关的词是&amp;quot;天真&amp;quot;。真诚的人往往看起来天真。不仅仅是他们没有其他人那样的动机。他们往往没有完全理解这种动机的存在。或者他们可能知道这种动机存在，但因为感觉不到，就忘记了它们。[5]&lt;/p&gt;&#xA;&lt;p&gt;不仅在动机上略微天真是有效的，而且，信不信由你，在你正在处理的问题上也是如此。天真的乐观主义可以弥补快速变化对既定信念造成的位腐。你冲进某个问题说&amp;quot;这能有多难？&amp;quot;，然后在解决后你发现它直到最近还是无法解决的。&lt;/p&gt;&#xA;&lt;p&gt;天真对于任何想要显得老练的人来说都是一个障碍，这也是为什么准知识分子发现很难理解硅谷的原因之一。自从奥斯卡·王尔德在1895年写下《认真的重要性》以来，对这样的人来说，除了在引号中使用&amp;quot;真诚&amp;quot;这个词外，一直是不安全的。然而当你聚焦硅谷，直接进入Jessica Livingston的大脑时，她的X光视觉正在创始人中寻找的就是这个。真诚！谁能想到呢？当赚大钱的创始人说他们创办公司是为了让世界更美好时，记者们简直不敢相信。这种情况似乎就是为嘲笑而生的。这些创始人怎么能如此天真，没有意识到他们听起来多么不可信？&lt;/p&gt;&#xA;&lt;p&gt;虽然那些问这个问题的人没有意识到，但这不是修辞问题。&lt;/p&gt;&#xA;&lt;p&gt;当然，很多创始人都是在假装，特别是那些小人物，以及即将成为小人物的人。但不是所有人。有相当数量的创始人确实对他们正在解决的问题感兴趣，主要是为了问题本身。&lt;/p&gt;&#xA;&lt;p&gt;为什么不应该有呢？我们毫不怀疑人们会因为历史、数学甚至旧巴士票本身而对它们感兴趣。为什么不可能有因为自动驾驶汽车或社交网络本身而对它们感兴趣的人呢？当你从这一侧看问题时，显然会有这样的人。而且，对某事有深厚的兴趣是不是会成为巨大能量和韧性的源泉？在其他每个领域都是如此。&lt;/p&gt;&#xA;&lt;p&gt;问题其实是我们为什么对商业有盲点。如果你了解足够的历史，答案就很明显。在历史上大部分时间里，赚大钱并不是很有智力上的趣味性。在前工业时代，它离抢劫不远，商业的某些领域仍然保留着这种特征，只是使用律师而不是士兵。&lt;/p&gt;&#xA;&lt;p&gt;但在商业的其他领域，工作是真正有趣的。亨利·福特花了很多时间处理有趣的技术问题，在过去几十年里，这个方向的趋势一直在加速。现在通过做自己感兴趣的事情赚大钱比50年前容易多了。这可能才是创业公司代表的最重要变化，而不是它们增长的速度。虽然确实，工作真正有趣是它能如此快速完成的一个很大原因。[6]&lt;/p&gt;&#xA;&lt;p&gt;你能想象比智力好奇心和金钱之间的关系变化更重要的变化吗？这是世界上两个最强大的力量，在我的一生中，它们变得更加一致。看着这样的事情实时发生，你怎么能不被迷住呢？&lt;/p&gt;&#xA;&lt;p&gt;我本想写一篇关于真诚的一般性文章，现在我又开始谈论创业公司了。但我想至少它提供了一个在野外发现的x极客的例子。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 不真诚的方式有很多种：巧妙地愤世嫉俗，表面上的才华横溢，显著的德行，酷，老练，正统，势利，欺凌，迎合，追逐利益。这种模式表明真诚不是一个连续体的一端，而是一个可以多维度达不到的目标。&lt;/p&gt;&#xA;&lt;p&gt;我注意到的关于这个列表的另一件事是它听起来像是人们在Twitter上行为方式的列表。无论社交媒体还有什么作用，它都是不真诚方式的生动目录。&lt;/p&gt;&#xA;&lt;p&gt;[2] 在硅谷，人们的动机和任何其他地方一样复杂。即使是主要受金钱驱动的创始人也往往对他们正在解决的问题至少有些兴趣，即使是最关心解决问题的创始人也喜欢变得富有的想法。但不同创始人的动机相对比例有很大差异。&lt;/p&gt;&#xA;&lt;p&gt;当我说&amp;quot;错误&amp;quot;动机时，我不是说道德上错误。为了赚钱而创办创业公司在道德上没有错。我只是说那些创业公司做得不好。&lt;/p&gt;&#xA;&lt;p&gt;[3] 对大多数人来说，最强大的动力可能是家庭。但对有些人来说，智力好奇心是第一位的。在他（精彩的）自传中，Paul Halmos明确表示，对数学家来说，数学必须先于任何其他事情，包括家庭。这至少暗示对他来说确实如此。&lt;/p&gt;&#xA;&lt;p&gt;[4] 有趣的是，正如&amp;quot;极客&amp;quot;这个词即使在作为隐喻使用时也暗示真诚，&amp;ldquo;政治&amp;quot;这个词暗示相反。不仅在现实政治中真诚似乎是个障碍，在办公室政治和学术政治中也是如此。&lt;/p&gt;&#xA;&lt;p&gt;[5] 在大多数欧洲国家，显得天真比在美国是个更大的社交错误，这可能是创业公司在那里不太常见的更微妙原因之一。创始人文化与老练的愤世嫉俗完全不相容。&lt;/p&gt;&#xA;&lt;p&gt;欧洲最真诚的部分是斯堪的纳维亚，不出所料，这也是人均成功创业公司数量最高的地区。&lt;/p&gt;&#xA;&lt;p&gt;[6] 商业中很多都是繁琐工作，而且可能永远如此。但即使是教授也很大程度上是繁琐工作。收集不同工作的繁琐比率统计会很有趣，但我怀疑它们很少低于30%。&lt;/p&gt;&#xA;&lt;p&gt;感谢Trevor Blackwell、Patrick Collison、Suhail Doshi、Jessica Livingston、Mattias Ljungman、Harj Taggar和Kyle Vogt阅读本文草稿。&lt;/p&gt;</description>
    </item>
    <item>
      <title>硬件复兴</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/hw/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/hw/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/hw.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;硬件复兴&#34;&gt;硬件复兴&lt;/h1&gt;&#xA;&lt;p&gt;想要创业？获得Y Combinator的投资。&lt;/p&gt;&#xA;&lt;p&gt;2012年10月&lt;/p&gt;&#xA;&lt;p&gt;Y Combinator早期、广泛关注的优势之一是我们比大多数人更早看到趋势。而最近一批中最引人注目的趋势之一是大量硬件创业公司。在84家公司中，有7家在制造硬件。总的来说，它们比那些不是硬件公司的公司做得更好。&lt;/p&gt;&#xA;&lt;p&gt;它们当然面临投资者的抵制。投资者对硬件有根深蒂固的偏见。但投资者的意见是一个滞后指标。最好的创始人比最好的投资者更善于看到未来，因为最好的创始人正在创造未来。&lt;/p&gt;&#xA;&lt;p&gt;推动这一趋势的不是单一力量。硬件在众筹网站上表现出色。平板电脑的普及使得制造由它们控制甚至 incorporating 它们的新东西成为可能。电动机已经改进。各种类型的无线连接现在被认为是理所当然的。制造东西变得越来越直接。Arduinos、3D打印、激光切割机和更容易接触到的CNC铣床使硬件原型制作更容易。随着客户越来越多地在线购买，零售商的瓶颈作用减小。&lt;/p&gt;&#xA;&lt;p&gt;我能回答的一个问题是为什么硬件突然变得酷。它一直都很酷。物理的东西很棒。它们只是不像软件那样是创办快速增长业务的绝佳方式。但这个规则可能不是永久性的。它甚至没有那么古老；它只追溯到大约1990年。也许软件的优势将被证明是暂时的。黑客喜欢制造硬件，客户喜欢购买它。所以如果硬件发布的便利性即使接近软件发布的便利性，我们会看到更多的硬件创业公司。&lt;/p&gt;&#xA;&lt;p&gt;这不是第一次某个东西在不是坏主意之前一直是坏主意。这也不会是第一次投资者从创始人那里学到这个教训。&lt;/p&gt;&#xA;&lt;p&gt;所以如果你想从事硬件工作，不要因为担心投资者会歧视你而阻止你这样做。特别是，不要因为担心而阻止你向Y Combinator申请硬件创意，因为我们对硬件创业公司特别感兴趣。&lt;/p&gt;&#xA;&lt;p&gt;我们知道下一个史蒂夫·乔布斯有空间。但几乎可以肯定，第一个&amp;lt;你的名字&amp;gt;也有空间。&lt;/p&gt;&#xA;&lt;p&gt;感谢Sam Altman、Trevor Blackwell、David Cann、Sanjay Dastoor、Paul Gerhardt、Cameron Robertson、Harj Taggar和Garry Tan阅读本文草稿。&lt;/p&gt;&#xA;&lt;p&gt;在&amp;quot;软件吞噬世界&amp;quot;的同时的硬件复兴？&lt;/p&gt;</description>
    </item>
    <item>
      <title>简洁即力量</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/power/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/power/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/power.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;简洁即力量&#34;&gt;简洁即力量&lt;/h1&gt;&#xA;&lt;p&gt;2002年5月&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;通过代数符号将大量意义压缩到一个小空间中，这是另一个有助于我们习惯性推理的因素。&amp;rdquo; - 查尔斯·巴贝奇，引自艾弗森的图灵奖演讲&lt;/p&gt;&#xA;&lt;p&gt;在LL1邮件列表上关于《书呆子的复仇》所提出问题的讨论中，保罗·普雷斯科德写了一些让我印象深刻的话。Python的目标是规范性和可读性，而不是简洁性。表面上看来，这对编程语言来说似乎是一个相当不利的评价。据我所知，简洁性=力量。如果是这样，那么替换后我们得到Python的目标是规范性和可读性，而不是力量。这似乎不是一个你想要做出的权衡（如果这确实是一个权衡的话）。这几乎等同于说Python的目标不是作为一种有效的编程语言。&lt;/p&gt;&#xA;&lt;p&gt;简洁性等于力量吗？在我看来，这是一个重要的问题，可能是对任何对语言设计感兴趣的人来说最重要的问题，直接面对这个问题会很有用。我还不确定答案是否是简单的&amp;quot;是&amp;quot;，但这似乎是一个很好的开始假设。&lt;/p&gt;&#xA;&lt;h2 id=&#34;假设&#34;&gt;假设&lt;/h2&gt;&#xA;&lt;p&gt;我的假设是简洁性就是力量，或者足够接近，除了在病态的例子中，你可以将它们视为相同。&lt;/p&gt;&#xA;&lt;p&gt;在我看来，简洁性就是编程语言的意义所在。计算机对于直接用机器语言被告知要做什么同样满意。我认为我们开发高级语言的主要原因是获得杠杆作用，这样我们就可以用高级语言的10行代码来表达（更重要的是思考）需要1000行机器语言才能完成的事情。换句话说，高级语言的主要目的是使源代码更小。&lt;/p&gt;&#xA;&lt;p&gt;如果更小的源代码是高级语言的目的，而某种东西的力量是它实现其目的的程度，那么编程语言力量的衡量标准就是它使你的程序变得多小。&lt;/p&gt;&#xA;&lt;p&gt;相反，不能使你的程序更小的语言在编程语言应该做的事情上做得不好，就像一把不好切的刀或难以辨认的印刷品。&lt;/p&gt;&#xA;&lt;h2 id=&#34;衡量标准&#34;&gt;衡量标准&lt;/h2&gt;&#xA;&lt;p&gt;但是从什么意义上来说更小呢？代码大小最常见的衡量标准是代码行数。但我认为这个衡量标准最常见是因为它最容易测量。我不认为有人真正相信它是程序长度的真正测试。不同的语言对于在一行中放多少内容有不同的约定；在C语言中，很多行只有一个或两个分隔符。&lt;/p&gt;&#xA;&lt;p&gt;另一个简单的测试是程序中的字符数，但这也不是很好；一些语言（例如Perl）只是使用比其他语言更短的标识符。&lt;/p&gt;&#xA;&lt;p&gt;我认为程序大小的更好衡量标准是元素的数量，其中元素是如果你画一个表示源代码的树，会成为不同节点的任何东西。变量或函数的名称是一个元素；整数或浮点数是一个元素；一段字面文本是一个元素；模式元素或格式指令是一个元素；新块是一个元素。有一些边界情况（-5是两个元素还是一个？）但我认为大多数情况对每种语言都是相同的，所以它们不会对比较产生太大影响。&lt;/p&gt;&#xA;&lt;p&gt;这个衡量标准需要充实，在特定语言的情况下可能需要解释，但我认为它试图衡量正确的东西，即程序拥有的部分数量。我认为在这个练习中你会画的树就是你为了构思程序而必须在头脑中构建的东西，它的大小与你必须做的工作量成正比，无论是写还是读。&lt;/p&gt;&#xA;&lt;h2 id=&#34;设计&#34;&gt;设计&lt;/h2&gt;&#xA;&lt;p&gt;这种衡量标准可以让我们比较不同的语言，但至少对我而言，这不是它的主要价值。简洁性测试的主要价值是作为设计语言的指导。语言之间最有用的比较是同一种语言的两个潜在变体之间的比较。我能在语言中做什么来使程序更短？&lt;/p&gt;&#xA;&lt;p&gt;如果程序的概念负荷与其复杂性成正比，而给定的程序员可以容忍固定的概念负荷，那么这与问&amp;quot;我能做什么来让程序员完成最多工作？&amp;ldquo;是相同的。这在我看来与问&amp;quot;我如何设计一种好的语言？&amp;ldquo;是相同的。&lt;/p&gt;&#xA;&lt;p&gt;（顺便说一句，没有什么比设计语言更能明显地证明&amp;quot;所有语言都是等价的&amp;quot;这个老生常谈是错误的了。当你设计一种新语言时，你不断地比较两种语言——如果我做了x的语言，如果我没做x的语言——来决定哪个更好。如果这真是一个无意义的问题，你不妨抛硬币。）&lt;/p&gt;&#xA;&lt;p&gt;以简洁性为目标似乎是寻找新想法的好方法。如果你能做一些让许多不同程序更短的事情，这可能不是巧合：你可能发现了一个有用的新抽象。你甚至可以编写一个程序来帮助搜索源代码中的重复模式。在其他语言中，那些以简洁性著称的语言是寻找新想法的地方：Forth、Joy、Icon。&lt;/p&gt;&#xA;&lt;h2 id=&#34;比较&#34;&gt;比较&lt;/h2&gt;&#xA;&lt;p&gt;据我所知，第一个写这些相关文章的人是弗雷德·布鲁克斯在《人月神话》中。他写道，无论使用什么语言，程序员每天似乎生成大致相同数量的代码。我在二十出头第一次读到这个时，这是一个很大的惊喜，似乎有巨大的含义。这意味着（a）让软件写得更快的方法是使用更简洁的语言，（b）花功夫这样做的人可以把不这样做的竞争对手远远甩在后面。&lt;/p&gt;&#xA;&lt;p&gt;布鲁克斯的假设，如果它是真的，似乎处于黑客精神的核心。从那以后的几年里，我密切关注我能得到的关于这个问题的任何证据，从正式研究到个人项目的轶事。我没有看到任何与他相矛盾的证据。&lt;/p&gt;&#xA;&lt;p&gt;我还没有看到我认为决定性的证据，我也不期望看到。像卢茨·普雷克特尔对编程语言的比较这样的研究，虽然产生了我期望的那种结果，但往往使用太短的问题，无法成为有意义的测试。语言的更好测试是在需要一个月编写的程序中发生什么。而真正的测试，如果你像我一样相信语言的主要目的是为了便于思考（而不仅仅是在你思考完后告诉计算机要做什么），是你能用它写出什么新东西。所以任何需要满足预定义规范的语言比较都在测试稍微错误的东西。&lt;/p&gt;&#xA;&lt;p&gt;语言的真正测试是你发现和解决新问题的能力，而不是你用它解决别人已经制定的问题的能力。这是两个完全不同的标准。在艺术中，像刺绣和马赛克这样的媒介，如果你事先知道你想制作什么，效果很好，但如果你不知道，就绝对糟糕。当你想在制作过程中发现图像时——就像你必须处理像人物图像这样复杂的东西一样——你需要使用更流动的媒介，如铅笔、水墨或油画。实际上，挂毯和马赛克的制作方式是先制作一幅画，然后复制它。（&amp;ldquo;卡通&amp;quot;这个词最初用来描述用于这个目的的画。）&lt;/p&gt;&#xA;&lt;p&gt;这意味着我们永远不可能对编程语言的相对力量有准确的比较。我们会有精确的比较，但不会有准确的比较。特别是，为了比较语言而进行的明确研究，因为它们可能会使用小问题，并且必须使用预定义的问题，往往会低估更强大语言的力量。&lt;/p&gt;&#xA;&lt;p&gt;来自现场的报告，虽然它们必然不如&amp;quot;科学&amp;quot;研究精确，但可能更有意义。例如，爱立信的乌尔夫·维格进行了一项研究，结论是Erlang比C++简洁4-10倍，开发软件的速度也相应更快：爱立信内部开发项目之间的比较表明，包括软件开发的所有阶段在内的每行/小时生产力相似，几乎与使用的语言（Erlang、PLEX、C、C++或Java）无关。区分不同语言的成为源代码量。该研究还明确处理了布鲁克斯书中只是隐含的一点（因为他测量的是调试代码的行数）：用更强大语言编写的程序往往有更少的错误。这本身就成为一个目的，在网络交换机等应用中，可能比程序员的生产力更重要。&lt;/p&gt;&#xA;&lt;h2 id=&#34;味道测试&#34;&gt;味道测试&lt;/h2&gt;&#xA;&lt;p&gt;最终，我认为你必须凭直觉行事。用这种语言编程感觉如何？我认为找到（或设计）最好语言的方法是对语言让你思考的出色程度变得高度敏感，然后选择/设计感觉最好的语言。如果某些语言功能笨拙或限制性，别担心，你会知道的。&lt;/p&gt;&#xA;&lt;p&gt;这种高度敏感是有代价的。你会发现你无法忍受在笨拙的语言中编程。我觉得在没有宏的语言中编程是无法忍受的限制性，就像习惯动态类型的人发现必须回到必须声明每个变量类型、不能制作不同类型对象列表的语言中编程是无法忍受的限制性一样。我不是唯一一个这样的人。我知道许多Lisp黑客都经历过这种情况。事实上，编程语言相对力量的最准确衡量标准可能是了解该语言的人愿意接受任何使用该语言的工作的百分比，不管应用领域如何。&lt;/p&gt;&#xA;&lt;h2 id=&#34;限制性&#34;&gt;限制性&lt;/h2&gt;&#xA;&lt;p&gt;我认为大多数黑客都知道语言感觉限制性是什么意思。当你有这种感觉时发生了什么？我认为这与当你想走的街道被封锁，你必须绕很长的路才能到达你想去的地方时的感觉相同。你有想说的话，但语言不允许你说。&lt;/p&gt;&#xA;&lt;p&gt;这里真正发生的事情，我认为，是限制性语言是一种不够简洁的语言。问题不仅仅是你不能说你计划说的话。而是语言让你绕的弯路更长。试试这个思维实验。假设你想写某个程序，语言不允许你按计划的方式表达它，而是强迫你用某种更短的方式写程序。至少对我来说，这不会感觉很有限制性。这就像你想走的街道被封锁，十字路口的警察给你指了一条捷径而不是绕路。太好了！&lt;/p&gt;&#xA;&lt;p&gt;我认为限制性的感觉大部分（百分之九十？）来自于被迫使你在语言中写的程序比你头脑中的更长。限制性主要是缺乏简洁性。所以当一种语言感觉有限制性时，这（大部分）意味着它不够简洁，而当一种语言不够简洁时，它会感觉有限制性。&lt;/p&gt;&#xA;&lt;h2 id=&#34;可读性&#34;&gt;可读性&lt;/h2&gt;&#xA;&lt;p&gt;我开始引用的引言提到了另外两个品质，规范性和可读性。我不确定性规范性是什么，或者规范和可读的代码比仅仅可读的代码有什么优势，如果有的话。但我想我知道可读性是什么意思，我认为它也与简洁性有关。&lt;/p&gt;&#xA;&lt;p&gt;我们必须小心区分单行代码的可读性和整个程序的可读性。重要的是后者。我同意Basic的一行代码可能比Lisp的一行代码更易读。但用Basic编写的程序行数会比用Lisp编写的相同程序多（特别是当你进入格林斯彭之地时）。阅读Basic程序的总工作量肯定会更大。总工作量 = 每行工作量 × 行数&lt;/p&gt;&#xA;&lt;p&gt;我不像确信力量与简洁性成正比那样确信可读性与简洁性成正比，但简洁性肯定是可读性的一个因素（在数学意义上；见上面的公式）。所以，说语言的目标是可读性而不是简洁性可能甚至没有意义；这就像说目标是可读性，而不是可读性。&lt;/p&gt;&#xA;&lt;p&gt;每行可读性对第一次遇到语言的用户来说，意味着源代码看起来不具威胁性。所以每行可读性可能是一个好的营销决策，即使它是一个糟糕的设计决策。它与让人们分期付款的非常成功的技术同构：不是用高昂的前期价格吓唬他们，而是告诉他们低月付款。分期付款对买方来说是净亏损，而每行可读性对程序员来说可能也是如此。买方将进行很多很多低月付款；而程序员将阅读很多很多单独可读的行。&lt;/p&gt;&#xA;&lt;p&gt;这种权衡比编程语言更早。如果你习惯于阅读小说和报纸文章，你第一次阅读数学论文的经历可能会令人沮丧。阅读一页可能需要半小时。然而，我很确定符号不是问题，尽管感觉上可能是。数学论文难读是因为思想难。如果你用散文表达相同的思想（正如数学家在发展出简洁的符号之前必须做的那样），它们不会更容易读，因为论文会增长到一本书的大小。&lt;/p&gt;&#xA;&lt;h2 id=&#34;到什么程度&#34;&gt;到什么程度？&lt;/h2&gt;&#xA;&lt;p&gt;许多人拒绝了简洁性=力量的想法。我认为与其简单地争论它们相同或不同，不如问：简洁性在多大程度上等于力量？因为很明显，简洁性是高级语言重要目的的大部分。如果不是全部，那么它们还有什么其他目的，相对而言，这些其他功能有多重要？&lt;/p&gt;&#xA;&lt;p&gt;我提出这个不仅仅是为了让辩论更加文明。我真的想知道答案。如果有的话，语言什么时候会因为过于简洁而对自己不利？&lt;/p&gt;&#xA;&lt;p&gt;我开始的假设是，除了在病态的例子中，我认为简洁性可以被视为等同于力量。我的意思是，在任何任何人会设计的语言中，它们都是相同的，但如果有人想要设计一种语言来明确反驳这个假设，他们可能能够做到。实际上，我甚至不确定这一点。&lt;/p&gt;&#xA;&lt;h2 id=&#34;语言而不是程序&#34;&gt;语言，而不是程序&lt;/h2&gt;&#xA;&lt;p&gt;我们应该清楚我们讨论的是语言的简洁性，而不是单个程序的简洁性。单个程序当然可能写得太密集。&lt;/p&gt;&#xA;&lt;p&gt;我在《On Lisp》中写过这个。一个复杂的宏可能需要节省自身长度的许多倍才能证明其合理性。如果编写某个复杂的宏每次使用都能为你节省十行代码，而宏本身是十行代码，那么如果你使用超过一次，你就会在行数上获得净节省。但这可能仍然是一个坏举动，因为宏定义比普通代码更难读。你可能需要使用宏十次或二十次才能在可读性上获得净改善。&lt;/p&gt;&#xA;&lt;p&gt;我确信每种语言都有这样的权衡（虽然我怀疑随着语言变得更强大，赌注会更高）。每个程序员肯定都见过一些聪明人使用可疑的编程技巧使代码略微缩短的例子。&lt;/p&gt;&#xA;&lt;p&gt;所以对此没有争论——至少，不是我争论。单个程序当然可能因为过于简洁而对自己不利。问题是，语言会吗？语言能强迫程序员编写在元素上很短但以整体可读性为代价的代码吗？&lt;/p&gt;&#xA;&lt;p&gt;很难想象语言过于简洁的一个原因是，如果有一些过于紧凑的方式来表达某些东西，可能也会有更长的表达方式。例如，如果你觉得使用大量宏或高阶函数的Lisp程序太密集，如果你愿意，你可以编写与Pascal同构的代码。如果你不想在Arc中将对高阶函数的调用表示为阶乘（rec zero 1 * 1-），你也可以写出递归定义：(rfn fact (x) (if (zero x) 1 (* x (fact (1- x)))))&lt;/p&gt;</description>
    </item>
    <item>
      <title>精通</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/ace/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/ace/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/ace.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;精通&#34;&gt;精通&lt;/h1&gt;&#xA;&lt;p&gt;精通 2020年12月&lt;/p&gt;&#xA;&lt;p&gt;当我决定接下来要写什么时，我惊讶地发现我计划写的两篇独立的文章实际上是同一篇。&lt;/p&gt;&#xA;&lt;p&gt;第一篇是关于如何在Y Combinator面试中表现出色。关于这个话题已经写了太多废话，我多年来一直想写点东西告诉创始人真相。&lt;/p&gt;&#xA;&lt;p&gt;第二篇是关于政客们有时说的一句话——成为亿万富翁的唯一方法就是剥削人——以及为什么这是错误的。&lt;/p&gt;&#xA;&lt;p&gt;继续读下去，你会同时学到这两点。&lt;/p&gt;&#xA;&lt;p&gt;我知道政客们是错的，因为我的工作就是预测哪些人会成为亿万富翁。我想我可以诚实地说，我对此的了解不亚于任何人。如果成为亿万富翁的关键——亿万富翁的定义特征——是剥削人，那么我作为一个专业的亿万富翁探员，肯定会意识到这一点，并寻找擅长此道的人，就像NFL探员在接球手中寻找速度一样。&lt;/p&gt;&#xA;&lt;p&gt;但是剥削人的能力根本不是Y Combinator所寻找的。事实上，这与他们寻找的相反。我会告诉你他们到底寻找什么，通过解释如何说服Y Combinator资助你，你可以亲眼看看。&lt;/p&gt;&#xA;&lt;p&gt;YC最重要的寻找的是了解某些用户群体并能制造他们想要的东西的创始人。这一点如此重要，以至于它是YC的座右铭：&amp;ldquo;制造人们想要的东西。&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;大公司可以在某种程度上向不愿意的客户强行推销不合适的产品，但创业公司没有这种能力。创业公司必须通过制造真正让客户满意的东西来谋生。否则它永远无法起步。&lt;/p&gt;&#xA;&lt;p&gt;事情在这里变得困难，无论对你作为创始人还是对试图决定是否资助你的YC合伙人来说都是如此。在市场经济中，制造人们想要但还没有的东西是困难的。这就是市场经济的伟大之处。如果其他人既知道这种需求又能够满足它，他们早就会去做了，你的创业公司就没有空间了。&lt;/p&gt;&#xA;&lt;p&gt;这意味着你在YC面试中的谈话必须是关于新事物的：要么是新需求，要么是满足需求的新方法。而且不仅仅是新的，还是不确定的。如果确定存在需求并且你能够满足它，这种确定性将反映在庞大且快速增长的收入中，你就不会寻求种子资金了。&lt;/p&gt;&#xA;&lt;p&gt;所以YC合伙人必须猜测你是否发现了真正的需求，以及你是否能够满足它。这就是他们在这个工作中的角色：专业的猜测者。他们有1001种启发式方法来做这件事，我不会告诉你所有方法，但我很乐意告诉你最重要的，因为这些无法伪造；&amp;ldquo;破解&amp;quot;它们的唯一方法是做你作为创始人应该做的事情。&lt;/p&gt;&#xA;&lt;p&gt;合伙人首先要弄清楚的通常是，你正在制造的东西是否会成为很多人想要的东西。它不一定是现在很多人想要的东西。产品和市场都会发展，并相互影响。但最终必须有巨大的市场。这就是合伙人试图弄清楚的：是否有通往巨大市场的路径？[1]&lt;/p&gt;&#xA;&lt;p&gt;有时很明显会有巨大市场。如果Boom能够成功制造出客机，国际航空公司将不得不购买它。但通常并不明显。通往巨大市场的道路通常是通过增长一个小市场。这个想法足够重要，值得为此创造一个术语，所以让我们称这些小但可增长的市场为&amp;quot;幼虫市场&amp;rdquo;。&lt;/p&gt;&#xA;&lt;p&gt;幼虫市场的完美例子可能是1976年苹果成立时的市场。1976年，没有多少人想要自己的电脑。但越来越多的人开始想要一个，直到现在地球上每个10岁的孩子都想要一台电脑（但称之为&amp;quot;手机&amp;quot;）。&lt;/p&gt;&#xA;&lt;p&gt;理想的组合是那些&amp;quot;生活在未来&amp;quot;的创始人群体，从某种变化的领先边缘意义上来说，并且正在建造他们自己想要的东西。大多数超级成功的创业公司都是这种类型。史蒂夫·沃兹尼亚克想要一台电脑。马克·扎克伯格想与他的大学朋友在线互动。拉里和谢尔盖想在网上找到东西。所有这些创始人都在制造他们和同伴想要的东西，而且他们处于变革领先边缘的事实意味着将来会有更多人想要这些东西。&lt;/p&gt;&#xA;&lt;p&gt;但虽然理想的幼虫市场是自己和同伴，但这不是唯一类型。幼虫市场也可能是区域性的，例如。你建造一些东西来服务一个地点，然后扩展到其他地方。&lt;/p&gt;&#xA;&lt;p&gt;初始市场的关键特征是它存在。这似乎是一个显而易见的点，但缺乏它是大多数创业想法的最大缺陷。必须有一些人现在就想要你正在建造的东西，如此迫切以至于他们愿意使用它，即使有错误，尽管你是一家他们从未听说过的小公司。不需要很多人，但必须有一些。只要你有一些用户，就有直接的方法获得更多：构建他们想要的新功能，寻找更多像他们一样的人，让他们把你推荐给朋友，等等。但这些技术都需要一些初始的用户群体。&lt;/p&gt;&#xA;&lt;p&gt;所以这是YC合伙人在面试中几乎肯定会深入探讨的一点。你的第一批用户会是谁，你怎么知道他们想要这个？如果我必须根据单个问题决定是否资助创业公司，那就是&amp;quot;你怎么知道人们想要这个？&amp;quot;&lt;/p&gt;&#xA;&lt;p&gt;最有说服力的回答是&amp;quot;因为我和我的朋友想要它。&amp;ldquo;当后面跟着你已经建立了一个原型的消息时更好，尽管它很粗糙，你的朋友正在使用它，而且它正在通过口碑传播。如果你能这样说并且没有撒谎，合伙人会从默认拒绝转向默认接受。意思是除非有一些其他不合格的缺陷，否则你就被录取了。&lt;/p&gt;&#xA;&lt;p&gt;然而，这是一个很难达到的标准。Airbnb没有达到。他们有第一部分。他们制造了自己想要的东西。但它没有传播。所以如果你没有达到这个令人信服的黄金标准，不要感到难过。如果Airbnb没有达到，那肯定太高了。&lt;/p&gt;&#xA;&lt;p&gt;在实践中，如果YC合伙人觉得你对用户需求有深刻的理解，他们会满意的。Airbnb确实做到了这一点。他们能够告诉我们所有关于主人和客人的动机。他们从第一手经验中知道，因为他们是第一批主人。我们问不出他们不知道答案的问题。我们自己作为用户对这个想法并不很兴奋，但我们知道这并不能证明什么，因为有很多成功的创业公司我们作为用户并不兴奋。我们能够对自己说：&amp;ldquo;他们似乎知道自己在说什么。也许他们发现了什么。它还没有增长，但也许他们能够在YC期间弄清楚如何让它增长。&amp;ldquo;他们确实做到了，大约在批次开始三周后。&lt;/p&gt;&#xA;&lt;p&gt;在YC面试中你能做的最好的事情就是教合伙人了解你的用户。所以如果你想为面试做准备，最好的方法之一就是去和你的用户交谈，确切地了解他们在想什么。这本来就是你应该做的事情。&lt;/p&gt;&#xA;&lt;p&gt;这听起来可能奇怪地轻信，但YC合伙人想依靠创始人告诉他们关于市场的事情。想想VC通常如何判断一个想法的潜在市场。他们自己通常不是领域专家，所以他们把这个想法转发给专家，征求他们的意见。YC没有时间这样做，但如果YC合伙人能够说服自己创始人既（a）知道自己在说什么又（b）没有撒谎，他们就不需要外部领域专家。他们在评估自己的想法时可以利用创始人自己作为领域专家。&lt;/p&gt;&#xA;&lt;p&gt;这就是为什么YC面试不是推销。为了让尽可能多的创始人有机会获得资助，我们把面试尽可能缩短：10分钟。合伙人没有足够的时间通过推销中的间接证据来弄清楚你是否知道自己在说什么并且没有撒谎。他们需要深入并问你问题。没有时间进行顺序访问。他们需要随机访问。[2]&lt;/p&gt;&#xA;&lt;p&gt;我听过的关于如何在YC面试中成功的最糟糕的建议是，你应该控制面试并确保传达你想要的信息。换句话说，把面试变成推销。〈详细的粗话〉。当人们试图这样做时真的很烦人。你问他们一个问题，他们不回答，而是传达一些明显是预先准备好的推销块。它很快就会吃掉10分钟。&lt;/p&gt;&#xA;&lt;p&gt;除了现任或前任YC合伙人，没有人能给你关于在YC面试中该做什么的准确建议。仅仅被面试过的人，即使成功了，也不知道这一点，但面试根据合伙人最想知道的事情采取各种不同的形式。有时完全是关于创始人的，有时完全是关于想法的。有时是想法的某个非常狭窄的方面。创始人有时离开面试时抱怨他们没有完全解释他们的想法。是的，但他们解释得足够了。&lt;/p&gt;&#xA;&lt;p&gt;由于YC面试由问题组成，做好它的方法就是很好地回答它们。其中一部分是坦率地回答它们。合伙人不期望你知道一切。但如果你不知道问题的答案，不要试图胡扯过关。合伙人像大多数经验丰富的投资者一样，是专业的胡扯探测器，而你（希望）是业余的胡扯者。如果你试图胡扯他们并失败，他们甚至可能不会告诉你你失败了。所以诚实比试图说服他们更好。如果你不知道问题的答案，说你不知道，告诉他们你会如何去找，或者告诉他们一些相关问题的答案。&lt;/p&gt;&#xA;&lt;p&gt;例如，如果你被问及什么可能出错，最糟糕的答案是&amp;quot;没有什么。&amp;ldquo;这不会让他们相信你的想法是无懈可击的，而是会让他们相信你是个傻瓜或骗子。最好详细说明可怕的细节。当你问什么可能出错时，专家就是这样做的。合伙人知道你的想法是有风险的。这就是在这个阶段一个好赌注的样子：巨大结果的微小概率。&lt;/p&gt;&#xA;&lt;p&gt;如果他们问竞争对手也是如此。竞争对手很少是杀死创业公司的原因。执行不力才是。但你应该知道你的竞争对手是谁，坦率地告诉YC合伙人你的相对优势和劣势。因为YC合伙人知道竞争对手不会杀死创业公司，他们不会因为竞争对手而对你太不利。然而，如果你似乎不知道竞争对手，或者最小化他们构成的威胁，他们会对你不利。他们可能不确定你是无知还是撒谎，但他们不需要确定。&lt;/p&gt;&#xA;&lt;p&gt;合伙人不期望你的想法是完美的。这是种子投资。在这个阶段，他们只能期望有希望的假设。但他们确实期望你深思熟虑和诚实。所以如果试图让你的想法显得完美让你显得油嘴滑舌或无知，你就为了不需要的东西牺牲了需要的东西。&lt;/p&gt;&#xA;&lt;p&gt;如果合伙人充分相信有通往大市场的路径，下一个问题是你是否能够找到它。这又取决于三件事：创始人的总体素质，他们在这个领域的专业知识，以及他们之间的关系。创始人有多坚定？他们擅长建造东西吗？他们是否足够坚韧，在出问题时继续前进？他们的友谊有多牢固？&lt;/p&gt;&#xA;&lt;p&gt;虽然Airbnb在想法方面只做得还行，但在这个方面做得非常出色。他们通过制造奥巴马和麦凯恩主题的早餐麦片为自己融资的故事是我们决定资助他们的最重要因素。当时他们没有意识到，但对他们来说似乎无关紧要的故事实际上是证明他们作为创始人素质的极好证据。这表明他们足智多谋、坚定，并且能够一起工作。&lt;/p&gt;&#xA;&lt;p&gt;不过，不仅仅是麦片故事显示了这一点。整个面试表明他们在乎。他们这样做不仅仅是为了钱，也不是因为创业公司很酷。他们如此努力在这家公司工作的原因是因为这是他们的项目。他们发现了一个有趣的新想法，就是无法放手。&lt;/p&gt;&#xA;&lt;p&gt;这听起来很平凡，但这是最强大的动力，不仅在创业公司中，而且在大多数雄心勃勃的事业中：对你正在建造的东西真正感兴趣。这才是真正驱动亿万富翁的，或者至少是通过创业成为亿万富翁的那些人。公司是他们的项目。&lt;/p&gt;&#xA;&lt;p&gt;关于亿万富翁，很少有人意识到的一点是，他们所有人本可以更早停止。他们可以被收购，或者找到其他人来运营公司。许多创始人确实这样做了。那些变得真正富有的是那些继续工作的人。让他们继续工作的不仅仅是钱。让他们继续工作的原因与任何其他人在如果愿意就可以停止时仍然工作的原因相同：没有其他他们更愿意做的事情。&lt;/p&gt;&#xA;&lt;p&gt;这才是成为亿万富翁的人的定义特征，而不是剥削人。所以这就是YC在创始人中寻找的：真实性。人们创办创业公司的动机通常是混合的。他们通常这样做是出于赚钱的欲望、想要看起来很酷、对问题真正感兴趣以及不愿意为别人工作的一些组合。后两者比前两者是更强大的动力。创始人想要赚钱或看起来很酷是可以的。大多数人都这样。但如果创始人似乎这样做只是为了赚钱或看起来很酷，他们不太可能在大规模上成功。为了钱而做的创始人会接受第一个足够大的收购要约，而为了看起来很酷而做的创始人会很快发现有很多不那么痛苦的方式看起来很酷。[3]&lt;/p&gt;&#xA;&lt;p&gt;Y Combinator确实看到那些行事方式是剥削人的创始人。YC对他们来说是磁铁，因为他们想要YC品牌。但当YC合伙人发现这样的人时，他们会拒绝他们。如果坏人能成为好的创始人，YC合伙人将面临道德困境。幸运的是他们不会，因为坏人成为不好的创始人。这种剥削类型的创始人不会大规模成功，实际上甚至可能小规模也不成功，因为他们总是走捷径。他们认为YC本身就是一个捷径。&lt;/p&gt;&#xA;&lt;p&gt;他们的剥削通常从自己的联合创始人开始，这是灾难性的，因为联合创始人的关系是公司的基础。然后转移到用户身上，这也是灾难性的，因为成功的创业公司想要作为初始用户的早期采用者是最难愚弄的。这种创始人最好希望欺骗的大厦能摇摇晃晃地维持下去，直到某个收购者被欺骗购买它。但这种收购永远不会很大。[4]&lt;/p&gt;&#xA;&lt;p&gt;如果专业的亿万富翁探员知道剥削人不是要寻找的技能，为什么一些政客认为这是亿万富翁的定义特征？&lt;/p&gt;&#xA;&lt;p&gt;我认为他们从一种感觉开始，即一个人拥有比另一个人多得多的钱是错误的。这种感觉从何而来是可以理解的。它在我们的DNA中，甚至在其他物种的DNA中。&lt;/p&gt;&#xA;&lt;p&gt;如果他们只是说当一个人拥有比其他人多得多的钱时让他们感觉不好，谁会不同意呢？这让我也感觉不好，我认为赚很多钱的人有道义责任用它来造福公共利益。他们犯的错误是从感觉一些其他人比其他人富有得多跳到结论认为没有合法的方法赚非常多的钱。现在我们进入了不仅可证伪而且是错误的陈述。&lt;/p&gt;&#xA;&lt;p&gt;当然有一些人通过做坏事变得富有。但也有很多行为不良的人并没有从中赚那么多钱。你的行为有多恶劣和你赚多少钱之间没有相关性——事实上，可能是负相关。&lt;/p&gt;&#xA;&lt;p&gt;这种废话的最大危险可能甚至不是它使政策偏离方向，而是它误导了雄心勃勃的人。你能想象破坏社会流动性的更好方法吗？告诉贫困孩子致富的方法是剥削人，而富有的孩子从看着前一代人做中知道它是如何真正完成的。&lt;/p&gt;&#xA;&lt;p&gt;我会告诉你它是如何真正完成的，所以你至少可以告诉你的孩子真相。一切都是关于用户的。成为亿万富翁最可靠的方法是创办一家快速发展的公司，而快速发展的方法是制造用户想要的东西。新成立的创业公司别无选择，只能让用户满意，否则它们甚至无法起步。但这永远不会停止成为指引星，更大的公司忽视它会危及自身。停止让用户满意，最终其他人会这样做。&lt;/p&gt;&#xA;&lt;p&gt;YC面试中合伙人想知道的是关于用户的事情，当我和我们十年前资助的现在是亿万富翁的创始人交谈时我想知道的也是关于用户的事情。用户想要什么？你能为他们建造什么新东西？成为亿万富翁的创始人总是渴望谈论这个话题。这就是他们成为亿万富翁的方式。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] YC合伙人在这方面有如此多的实践，他们有时能看到创始人自己还没有看到的路径。合伙人不试图显得怀疑，就像交易中的买家经常做的那样以增加他们的杠杆作用。虽然创始人觉得他们的工作是说服合伙人他们想法的潜力，但这些角色并不经常颠倒，创始人离开面试时觉得他们的想法比他们意识到的有更多潜力。&lt;/p&gt;&#xA;&lt;p&gt;[2] 实际上，7分钟就足够了。你很少在第8分钟改变主意。但10分钟在社会上很方便。&lt;/p&gt;&#xA;&lt;p&gt;[3] 我自己在第一次创业公司中接受了第一个足够大的收购要约，所以我不责怪创始人这样做。为了赚钱而创办创业公司没有错。你需要以某种方式赚钱，对某些人来说创业公司是最有效的方法。我只是说这些不是真正变得很大的创业公司。&lt;/p&gt;&#xA;&lt;p&gt;[4] 无论如何，现在不是。互联网泡沫期间有一些大的，确实也有一些大的IPO。&lt;/p&gt;&#xA;&lt;p&gt;感谢特雷弗·布莱克威尔、杰西卡·利文斯顿、罗伯特·莫里斯、杰夫·拉尔斯顿和哈尔吉·塔加阅读本文的草稿。&lt;/p&gt;&#xA;&lt;hr&gt;</description>
    </item>
    <item>
      <title>经济不平等</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/ineq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/ineq/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/ineq.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;经济不平等&#34;&gt;经济不平等&lt;/h1&gt;&#xA;&lt;p&gt;2016年1月&lt;/p&gt;&#xA;&lt;p&gt;自1970年代以来，美国的经济不平等急剧增加。特别是，富人变得富裕得多。几乎所有写这个话题的人都说经济不平等应该减少。&lt;/p&gt;&#xA;&lt;p&gt;我对这个问题感兴趣是因为我是一个名为Y Combinator的公司的创始人之一，该公司帮助人们创办创业公司。几乎根据定义，如果一个创业公司成功，其创始人就会变得富有。这意味着通过帮助创业公司创始人，我一直在帮助增加经济不平等。如果经济不平等应该减少，我就不应该帮助创始人。没有人应该。&lt;/p&gt;&#xA;&lt;p&gt;但这听起来不对。这里发生了什么？这里发生的是，虽然经济不平等是一个单一指标（或者更确切地说，是两个：收入变化和财富变化），但它有多种原因。其中许多原因是坏的，比如税收漏洞和药物成瘾。但有些是好的，比如拉里·佩奇和谢尔盖·布林创办了你用来在网上找东西的公司。&lt;/p&gt;&#xA;&lt;p&gt;如果你想理解经济不平等——更重要的是，如果你真的想修复它的坏方面——你必须剖析其组成部分。然而，几乎所有关于这个主题的写作趋势都是相反的：将经济不平等的所有方面挤压在一起，好像它是一个单一现象。&lt;/p&gt;&#xA;&lt;p&gt;有时这样做是出于意识形态原因。有时是因为作者只有非常高层次的数据，因此从中得出结论，就像 proverbial drunk 在路灯下寻找钥匙，而不是在他丢钥匙的地方，因为那里的光线更好。有时是因为作者不理解不平等的关键方面，比如技术在财富创造中的作用。很多时候，也许大多数时候，关于经济不平等的写作结合了所有三个方面。&lt;/p&gt;&#xA;&lt;h2 id=&#34;饼的错误&#34;&gt;饼的错误&lt;/h2&gt;&#xA;&lt;p&gt;人们对经济不平等最常犯的错误是把它当作单一现象。其中最天真的版本是基于饼的错误：富人通过从穷人那里拿钱而变得富有。&lt;/p&gt;&#xA;&lt;p&gt;通常这是人们开始的假设，而不是通过检查证据得出的结论。有时饼的错误被明确表述：&amp;quot;&amp;hellip;&amp;hellip;顶层的人正在攫取国家收入中越来越大的份额——如此大的份额，以至于留给其他人的份额减少了&amp;hellip;&amp;hellip;&amp;quot;[1] 其他时候更无意识。但无意识的形式非常普遍。我认为这是因为我们在一个饼的错误实际上真实的世界中长大。对孩子来说，财富是一个固定的饼，被分享出去，如果一个人得到更多，那是以另一个人为代价的。需要有意识的努力来提醒自己现实世界不是那样运作的。&lt;/p&gt;&#xA;&lt;p&gt;在现实世界中，你既可以创造财富，也可以从他人那里夺取财富。木工创造财富。他做一把椅子，你愿意为此给他钱。高频交易者不会。他只有在交易的另一端有人亏损一美元时才赚一美元。&lt;/p&gt;&#xA;&lt;p&gt;如果一个社会中的富人通过从穷人那里夺取财富而变得富有，那么你就有了经济不平等的退化情况，其中贫困的原因与财富的原因相同。但不平等的实例不一定是退化情况的实例。如果一个木工做了5把椅子而另一个一个也没做，第二个木工会有更少的钱，但不是因为任何人从他那里拿走了任何东西。&lt;/p&gt;&#xA;&lt;p&gt;即使足够老练知道饼错误的人也被描述经济不平等为一个分位数收入或财富与另一个的比率的习惯引向它。很容易从谈论收入从一个分位数转移到另一个分位数，作为一种比喻，滑向相信这确实是正在发生的事情。&lt;/p&gt;&#xA;&lt;p&gt;除了在退化情况下，经济不平等不能用比率甚至曲线来描述。在一般情况下，它包括人们变穷的多种方式，以及人们变富的多种方式。这意味着要理解一个国家的经济不平等，你必须去寻找个别贫穷或富有的人，并找出原因。[2]&lt;/p&gt;&#xA;&lt;h2 id=&#34;理解变化&#34;&gt;理解变化&lt;/h2&gt;&#xA;&lt;p&gt;如果你想理解经济不平等的变化，你应该问那些人在情况不同时会做什么。这是我知道富人不是都通过某种将财富从其他人转移给他们的新系统而变得更富有的方法之一。当你对创业公司创始人使用&amp;quot;本会&amp;quot;方法时，你会发现大多数人在1960年经济不平等较低时会做什么，是加入大公司或成为教授。在马克·扎克伯格创办Facebook之前，他的默认期望是他最终会在微软工作。他和大多数其他创业公司创始人比20世纪中叶会更富有的原因不是因为国家在里根政府期间采取了某种右转，而是因为技术进步使得创办一个快速增长的新公司变得容易得多。&lt;/p&gt;&#xA;&lt;p&gt;传统经济学家似乎奇怪地不愿意研究个人人类。对他们来说似乎有一条规则，一切都必须从统计开始。所以他们给你关于财富和收入变化的非常精确的数字，然后接着是对根本原因的最天真推测。&lt;/p&gt;&#xA;&lt;p&gt;但是，虽然有许多人通过各种形式的寻租行为变富，有许多人通过玩零和游戏变富，但也有相当数量的人通过创造财富变富。而创造财富，作为经济不平等的来源，与夺取财富不同——不仅在道德上，而且在实践上也是如此，在它更难根除的意义上。一个原因是生产力变化正在加速。个人创造财富的速率取决于他们可用的技术，而技术呈指数级增长。创造财富是如此顽固的不平等来源的另一个原因是它可以扩展以容纳很多人。&lt;/p&gt;&#xA;&lt;h2 id=&#34;不平等的不可避免性&#34;&gt;不平等的不可避免性&lt;/h2&gt;&#xA;&lt;p&gt;我完全支持关闭致富的歪门邪道。但这不会消除财富的巨大变化，因为只要你留开放通过创造财富致富的选择，想要致富的人就会这样做。&lt;/p&gt;&#xA;&lt;p&gt;大多数变富的人往往相当有驱动力。无论他们其他缺点如何，懒惰通常不是其中之一。假设新政策使在金融领域发财变得困难。那些目前进入金融领域发家致富的人会继续这样做，但对普通工资感到满足，这似乎合理吗？他们进入金融领域的原因不是因为他们热爱金融，而是因为他们想致富。如果剩下的致富唯一方式是创办创业公司，他们就会创办创业公司。他们在这方面也会做得很好，因为决心是创业公司成功的主要因素。[3] 虽然对于世界来说，如果想致富的人从玩零和游戏转向创造财富可能是一件好事，但这不仅不会消除财富的巨大变化，甚至可能加剧它们。在零和游戏中，上升至少有一个限制。此外，许多新的创业公司将创造进一步加速生产力变化的新技术。&lt;/p&gt;&#xA;&lt;p&gt;生产力变化远非经济不平等的唯一来源，但它是其不可减少的核心，在这个意义上，当你消除所有其他来源时，你会留下这个。如果你这样做，这个核心将会很大，因为它将扩展到包括所有难民的努力。此外，它周围将有一个巨大的鲍莫尔光晕：任何能够通过为自己创造财富而致富的人都必须得到足够的报酬以防止他们这样做。&lt;/p&gt;&#xA;&lt;p&gt;你不能在不阻止人们致富的情况下防止财富的巨大变化，而你不能在不阻止他们创办创业公司的情况下做到这一点。&lt;/p&gt;&#xA;&lt;p&gt;所以让我们明确这一点。消除财富的巨大变化意味着消除创业公司。这似乎不是一个明智的举动。特别是因为它只意味着你在自己的国家消除了创业公司。有抱负的人已经已经移动到世界各地以推进他们的职业生涯，而且创业公司现在可以在任何地方运营。所以如果你使在你的国家通过创造财富致富变得不可能，想要这样做的人只会离开并到其他地方做。这肯定会给你一个更低的基尼系数，以及一个关于小心你要求什么的教训。[4]&lt;/p&gt;&#xA;&lt;p&gt;我认为上升的经济不平等是那些不选择更糟事情的国家的必然命运。我们在20世纪中期有40年的时间说服了一些人 otherwise。但正如我在《重新碎片化》中解释的，那是一个反常现象——一种独特的情况组合，不仅在经济上而且在文化上压缩了美国社会。[5]&lt;/p&gt;&#xA;&lt;p&gt;虽然从那时起我们看到的一些经济不平等增长是由于各种不良行为，但个人创造财富的能力同时有了巨大增长。创业公司几乎完全是这个时期的产物。即使在创业公司世界，过去10年也发生了质的变化。技术使创办创业公司的成本降低了很多，以至于创始人现在对投资者有上风。创始人被稀释得更少，现在他们保留董事会控制权也很常见。两者都进一步增加了经济不平等，前者是因为创始人拥有更多股票，后者是因为，正如投资者所了解的，创始人往往比投资者更擅长运营他们的公司。&lt;/p&gt;&#xA;&lt;p&gt;虽然表面表现发生变化，但潜在力量非常非常古老。我们在硅谷看到的生产力加速已经发生了数千年。如果你看石器工具的历史，技术在中石器时代已经在加速。加速度太慢，在一个生命周期内无法察觉。这就是指数曲线最左部分的特点。但这是相同的曲线。&lt;/p&gt;&#xA;&lt;p&gt;你不想以与这条曲线不兼容的方式设计你的社会。技术的进化是历史上最强大的力量之一。&lt;/p&gt;&#xA;&lt;p&gt;路易斯·布兰代斯说&amp;quot;我们可以有民主，或者我们可以有财富集中在少数人手中，但我们不能两者兼得。&amp;ldquo;这听起来合理。但如果我必须在忽略他和忽略一个已经运行了数千年的指数曲线之间选择，我会赌这条曲线。忽略任何已经运行了数千年的趋势是危险的。但指数增长，尤其是，往往会咬你。&lt;/p&gt;&#xA;&lt;h2 id=&#34;与不平等共存&#34;&gt;与不平等共存&lt;/h2&gt;&#xA;&lt;p&gt;如果加速的生产力变化总是会产生经济不平等的一些基线增长，那么花一些时间思考那个未来会是一个好主意。你能有一个财富差异很大的健康社会吗？它会是什么样子？&lt;/p&gt;&#xA;&lt;p&gt;注意思考那个想法感觉多么新颖。到目前为止的公共对话专门集中在减少经济不平等的必要性上。我们几乎没有考虑如何与它共存。&lt;/p&gt;&#xA;&lt;p&gt;我有希望我们能够做到。布兰代斯是镀金时代的产物，从那以后情况发生了变化。现在更难隐藏不当行为了。而且现在变富你不必像铁路或石油大亨那样购买政客。[6] 我在硅谷周围看到的巨大财富集中似乎并没有破坏民主。&lt;/p&gt;&#xA;&lt;p&gt;美国有很多问题以经济不平等为症状。我们应该修复那些问题。在这个过程中我们可能会减少经济不平等。但我们不能从症状开始，并希望修复根本原因。[7]&lt;/p&gt;&#xA;&lt;p&gt;最明显的是贫困。我确信大多数想要减少经济不平等的人这样做主要是为了帮助穷人，而不是为了伤害富人。[8] 确实，有相当数量的人只是在说减少经济不平等时马虎，而他们的意思是减少贫困。但这种情况最好是精确地说明我们想要什么。贫困和经济不平等不是同一的。当城市因为你无法支付账单而关掉你的水时，拉里·佩奇的净资产与你的相比没有任何区别。他可能只比你富有几倍，而你的水被关掉仍然是一个同样大的问题。&lt;/p&gt;&#xA;&lt;p&gt;与贫困密切相关的是缺乏社会流动性。我自己看到过：你不必长大富有或甚至中上层阶级才能作为创业公司创始人变富，但很少有成功的创始人长大极度贫困。但再次，这里的问题不简单地是经济不平等。拉里·佩奇长大的家庭和成功的创业公司创始人家庭之间有巨大的财富差异，但这并没有阻止他加入他们的行列。阻碍社会流动性的不是经济不平等本身，而是孩子在长得足够贫穷时出错的一些特定组合。&lt;/p&gt;&#xA;&lt;h2 id=&#34;关注真正的问题&#34;&gt;关注真正的问题&lt;/h2&gt;&#xA;&lt;p&gt;硅谷最重要的原则之一是&amp;quot;你衡量什么就得到什么。&amp;ldquo;这意味着如果你选择专注于某个数字，它往往会改善，但你必须选择正确的数字，因为只有你选择的那个会改善；另一个概念上看似相邻的可能不会。例如，如果你是一名大学校长，你决定专注于毕业率，那么你会提高毕业率。但只是毕业率，而不是学生学习多少。如果你为了提高毕业率而使课程更容易，学生可能会学得更少。&lt;/p&gt;&#xA;&lt;p&gt;经济不平等与以它为症状的各种问题相距足够远，以至于我们可能只会击中我们瞄准的两个中的哪一个。如果我们瞄准经济不平等，我们不会修复这些问题。所以我说让我们瞄准这些问题。&lt;/p&gt;&#xA;&lt;p&gt;例如，让我们攻击贫困，并在过程中必要时损害财富。这比攻击财富并希望你会因此修复贫困更有可能起作用。[9] 如果有人通过欺骗消费者或游说政府获得反竞争法规或税收漏洞而变富，那么让我们阻止他们。不是因为它造成经济不平等，而是因为这是偷窃。[10]&lt;/p&gt;&#xA;&lt;p&gt;如果你只有统计数据，似乎那就是你需要修复的东西。但在经济不平等这样广泛的统计措施背后，有些事情是好的，有些是坏的，有些是有巨大动量的历史趋势，其他是随机事故。如果我们想修复统计数据背后的世界，我们必须理解它，并将我们的努力集中在它们会做得最 good 的地方。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 斯蒂格利茨，约瑟夫。《不平等的代价》。诺顿，2012年。第32页。&lt;/p&gt;&#xA;&lt;p&gt;[2] 特别是因为经济不平等是异常值的问题，而异常值不成比例地可能通过经济学家通常不考虑的事情方式到达他们那里的位置，比如工资和生产力，而是通过，比如说，最终站在&amp;quot;毒品战争&amp;quot;的错误一边。&lt;/p&gt;&#xA;&lt;p&gt;[3] 决心是决定成功与失败的最重要因素，在创业公司中成功与失败往往明显分化。但要创造一个极其成功的创业公司需要更多的决心。虽然大多数创始人对致富的想法开始时感到兴奋，但纯粹唯利是图的创始人通常会接受大多数成功创业公司在上升过程中获得的大型收购提议。进入下一阶段的创始人往往是由使命感驱动的。他们对公司的依恋就像艺术家或作家对其作品的依恋。但很难在一开始预测哪些创始人会这样做。这不简单地是他们初始态度的函数。创办公司改变了人。&lt;/p&gt;&#xA;&lt;p&gt;[4] 在阅读本文的草稿后，理查德·佛罗里达告诉我他曾如何与一群欧洲人交谈&amp;quot;他们说他们想让欧洲更具创业精神，更像硅谷。我说根据定义，这会给你们更多不平等。他们认为我疯了——他们无法处理这个。&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;[5] 经济不平等在全球范围内一直在减少。但这主要是由于以前统治所有较贫穷国家的盗贼统治的侵蚀。一旦政治上竞争环境更加公平，我们将看到经济不平等开始再次上升。美国是领头羊。我们在这里面临的情况，世界其他地方迟早也会面临。&lt;/p&gt;&#xA;&lt;p&gt;[6] 有些人仍然通过购买政客变富。我的观点是这不再是先决条件。&lt;/p&gt;&#xA;&lt;p&gt;[7] 除了以经济不平等为症状的问题外，还有那些以它为原因的问题。但在大多数如果不是所有情况下，经济不平等不是主要原因。通常有一些不公正允许经济不平等转化为其他形式的不平等，那种不公正是我们需要修复的。例如，美国的警察对待穷人比富人更差。但解决方案不是让人们更富有。是让警察更公平地对待人们。否则他们将继续虐待在其他方面软弱的人。&lt;/p&gt;</description>
    </item>
    <item>
      <title>编程语言修复了什么</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/fix/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/fix/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/fix.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;编程语言修复了什么&#34;&gt;编程语言修复了什么&lt;/h1&gt;&#xA;&lt;p&gt;凯文·凯勒her建议了一种比较编程语言的有趣方式：用每种语言所要解决的问题来描述它。令人惊讶的是，有多少语言可以用这种方式很好地描述。&lt;/p&gt;&#xA;&lt;p&gt;Algol：汇编语言太底层了。&lt;/p&gt;&#xA;&lt;p&gt;Pascal：Algol没有足够的数据类型。&lt;/p&gt;&#xA;&lt;p&gt;Modula：Pascal对于系统编程来说太弱了。&lt;/p&gt;&#xA;&lt;p&gt;Simula：Algol在模拟方面不够好。&lt;/p&gt;&#xA;&lt;p&gt;Smalltalk：Simula中的一切都不是对象。&lt;/p&gt;&#xA;&lt;p&gt;Fortran：汇编语言太底层了。&lt;/p&gt;&#xA;&lt;p&gt;Cobol：Fortran太吓人了。&lt;/p&gt;&#xA;&lt;p&gt;PL/1：Fortran没有足够的数据类型。&lt;/p&gt;&#xA;&lt;p&gt;Ada：每种现有语言都缺少某些东西。&lt;/p&gt;&#xA;&lt;p&gt;Basic：Fortran太吓人了。&lt;/p&gt;&#xA;&lt;p&gt;APL：Fortran在操作数组方面不够好。&lt;/p&gt;&#xA;&lt;p&gt;J：APL需要自己的字符集。&lt;/p&gt;&#xA;&lt;p&gt;C：汇编语言太底层了。&lt;/p&gt;&#xA;&lt;p&gt;C++：C太底层了。&lt;/p&gt;&#xA;&lt;p&gt;Java：C++是一个混乱的东西。而且微软要打压我们。&lt;/p&gt;&#xA;&lt;p&gt;C#：Java被Sun控制着。&lt;/p&gt;&#xA;&lt;p&gt;Lisp：图灵机是描述计算的笨拙方式。&lt;/p&gt;&#xA;&lt;p&gt;Scheme：MacLisp是一个混乱的东西。&lt;/p&gt;&#xA;&lt;p&gt;T：Scheme没有库。&lt;/p&gt;&#xA;&lt;p&gt;Common Lisp：Lisp有太多方言。&lt;/p&gt;&#xA;&lt;p&gt;Dylan：Scheme没有库，而且Lisp语法太吓人了。&lt;/p&gt;&#xA;&lt;p&gt;Perl：Shell脚本/awk/sed不够像编程语言。&lt;/p&gt;&#xA;&lt;p&gt;Python：Perl是一个混乱的东西。&lt;/p&gt;&#xA;&lt;p&gt;Ruby：Perl是一个混乱的东西，而且Lisp语法太吓人了。&lt;/p&gt;&#xA;&lt;p&gt;Prolog：编程不够像逻辑。&lt;/p&gt;</description>
    </item>
    <item>
      <title>美国</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/america/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/america/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/america.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;美国&#34;&gt;美国&lt;/h1&gt;&#xA;&lt;h2 id=&#34;为什么创业公司在美国聚集&#34;&gt;为什么创业公司在美国聚集&lt;/h2&gt;&#xA;&lt;p&gt;2006年5月&lt;/p&gt;&#xA;&lt;p&gt;（本文源自于Xtech会议的主题演讲。）&lt;/p&gt;&#xA;&lt;p&gt;创业公司会聚集在某些地方。硅谷和波士顿有很多，而芝加哥和迈阿密则很少。一个想要创业公司的国家可能也需要复制形成这些聚集地的任何条件。&lt;/p&gt;&#xA;&lt;p&gt;我曾声称秘诀是有一所优秀的大学靠近聪明人喜欢的城镇。如果你在美国建立起这些条件，创业公司将像水滴凝结在冰冷的金属上一样不可避免地形成。但当我考虑在另一个国家复制硅谷需要什么时，很明显美国是一个特别潮湿的环境。创业公司在这里更容易形成。&lt;/p&gt;&#xA;&lt;p&gt;在另一个国家尝试创建硅谷绝不是毫无希望的。不仅有与硅谷匹敌的空间，还有超越它的空间。但如果你想做到这一点，你必须理解创业公司在美国获得的优势。&lt;/p&gt;&#xA;&lt;h3 id=&#34;1-美国允许移民&#34;&gt;1. 美国允许移民。&lt;/h3&gt;&#xA;&lt;p&gt;例如，我怀疑是否可能在日本复制硅谷，因为硅谷最显著的特征之一就是移民。那里有一半的人说话带有口音。而日本人不喜欢移民。当考虑如何创建日本硅谷时，我怀疑他们无意识地将问题框定为如何创建一个只由日本人组成的硅谷。这种框定问题的方式几乎注定失败。&lt;/p&gt;&#xA;&lt;p&gt;硅谷必须成为聪明人和雄心勃勃的人的圣地，如果你不让人进入，你就不能拥有圣地。&lt;/p&gt;&#xA;&lt;p&gt;当然，说美国比日本更开放移民并没有什么了不起的。移民政策是一个竞争对手可能做得更好的领域。&lt;/p&gt;&#xA;&lt;h3 id=&#34;2-美国是一个富裕的国家&#34;&gt;2. 美国是一个富裕的国家。&lt;/h3&gt;&#xA;&lt;p&gt;我可以看到有一天印度会产生硅谷的竞争对手。显然他们有合适的人才：你可以从当前硅谷中的印度人数量看出来。印度本身的问题在于它仍然太贫穷。&lt;/p&gt;&#xA;&lt;p&gt;在贫穷国家，我们认为理所当然的东西缺失了。我一个访问印度的朋友在火车站的台阶上扭伤了脚踝。当她转身看发生了什么事时，她发现台阶的高度都不同。在工业化国家，我们一辈子都在走台阶，却从未想过这个问题，因为有一种基础设施可以防止建造这样的楼梯。&lt;/p&gt;&#xA;&lt;p&gt;美国从未像现在某些国家那样贫穷。美国城市的街道上从未有过成群的乞丐。所以我们没有关于从成群乞丐阶段发展到硅谷阶段需要什么的数据。你能同时拥有两者，还是必须在拥有硅谷之前有某种基线繁荣？&lt;/p&gt;&#xA;&lt;p&gt;我怀疑经济发展存在某种速度限制。经济是由人组成的，而态度每代只能改变一定数量。[1]&lt;/p&gt;&#xA;&lt;h3 id=&#34;3-美国还不是警察国家&#34;&gt;3. 美国还不是警察国家。&lt;/h3&gt;&#xA;&lt;p&gt;我可以看到另一个想要拥有硅谷的国家是中国。但我怀疑他们也还不能做到。中国似乎仍然是一个警察国家，尽管现在的统治者相比前任似乎开明，但即使是开明的专制也只能让你在经济强国道路上走一部分。&lt;/p&gt;&#xA;&lt;p&gt;它可以为你建立工厂来制造其他地方设计的东西。但是，它能为你带来设计师吗？想象力能在人们不能批评政府的地方蓬勃发展吗？想象力意味着拥有奇特的想法，而在技术上拥有奇特想法很难不在政治上也拥有奇特想法。而且，许多技术思想确实具有政治含义。所以，如果你压制异议，反压力将传播到技术领域。[2]&lt;/p&gt;&#xA;&lt;p&gt;新加坡将面临类似的问题。新加坡似乎非常意识到鼓励创业公司的重要性。但是，虽然积极的政府干预可能使港口高效运行，但它不能诱使创业公司出现。一个禁止嚼口香糖的国家距离创建旧金山还有很长的路要走。&lt;/p&gt;&#xA;&lt;p&gt;你需要旧金山吗？是否可能存在一条通过服从和合作而不是个人主义走向创新的替代路线？有可能，但我打赌不会。大多数富有想象力的人似乎都分享某种刺人的独立性，无论何时何地。你可以在第欧根尼告诉亚历山大离开他的光和两千年后费曼在洛斯阿拉莫斯撬保险箱中看到这一点。[3] 富有想象力的人不想追随或领导。当每个人都能做自己想做的事情时，他们最有生产力。&lt;/p&gt;&#xA;&lt;p&gt;具有讽刺意味的是，在所有富裕国家中，美国最近失去了最多的公民自由。但我还不太担心。我希望现任政府下台后，美国文化自然的开放性会重新确立。&lt;/p&gt;&#xA;&lt;h3 id=&#34;4-美国大学更好&#34;&gt;4. 美国大学更好。&lt;/h3&gt;&#xA;&lt;p&gt;你需要一所优秀的大学来孕育硅谷，到目前为止，美国以外还很少。我问了几个美国计算机科学教授，他们最钦佩欧洲的哪些大学，他们基本上都说&amp;quot;剑桥&amp;quot;，然后停顿了很久，试图想出其他的。似乎没有多少其他地方的大学能与美国最好的大学相比，至少在技术方面。&lt;/p&gt;&#xA;&lt;p&gt;在某些国家，这是 deliberate 政策的结果。德国和荷兰政府，也许是出于对精英主义的恐惧，试图确保所有大学在质量上大致相等。缺点是没有一个特别好的。最好的教授被分散了，而不是像在美国那样集中。这可能使他们效率较低，因为他们没有好同事来激励他们。这也意味着没有一所大学足够好到可以作为圣地，吸引外国人才并导致创业公司在其周围形成。&lt;/p&gt;&#xA;&lt;p&gt;德国的情况很奇怪。德国人发明了现代大学，直到1930年代，他们的大学是世界上最好的。现在他们没有一所突出的大学。当我思考这个问题时，我发现自己在想：&amp;ldquo;我能理解德国大学在1930年代排斥犹太人后是如何衰退的。但它们现在肯定应该恢复过来了。&amp;rdquo; 然后我意识到：也许不会。德国剩下的犹太人很少，我认识的大多数犹太人都不想搬到那里。如果你拿任何一所伟大的美国大学并移除犹太人，你会有一些相当大的空白。所以也许在德国尝试建立硅谷是毫无希望的，因为你无法建立你需要作为种子的大学水平。[4]&lt;/p&gt;&#xA;&lt;p&gt;美国大学自然竞争，因为许多是私立的。要复制美国大学的质量，你可能也必须复制这一点。如果大学由中央政府控制，互相拉扯会将它们都拉向平均水平：新的X研究所最终会落在一个有影响力政治家所在地区的大学，而不是它应该在的地方。&lt;/p&gt;&#xA;&lt;h3 id=&#34;5-在美国你可以解雇员工&#34;&gt;5. 在美国你可以解雇员工。&lt;/h3&gt;&#xA;&lt;p&gt;我认为在欧洲创建创业公司的最大障碍之一是对就业的态度。众所周知，严格的劳动法伤害了每家公司，但对创业公司尤其如此，因为创业公司最少时间可以浪费在官僚麻烦上。&lt;/p&gt;&#xA;&lt;p&gt;解雇员工的困难对创业公司来说是一个特殊问题，因为他们没有冗余。每个人都必须做好自己的工作。&lt;/p&gt;&#xA;&lt;p&gt;但问题不仅仅是某个创业公司可能在解雇他们需要的人方面遇到问题。跨行业和国家，表现和就业保障之间存在强烈的负相关。演员和导演在每部电影结束时都会被解雇，所以他们每次都必须交付产品。初级教授在几年后默认被解雇，除非大学选择授予他们终身教职。职业运动员知道如果他们只是打了几场坏比赛就会被拉下场。在规模的另一端（至少在美国）是汽车工人、纽约市教师和公务员，他们都几乎不可能被解雇。趋势如此明显，你必须故意视而不见才能看不到。&lt;/p&gt;&#xA;&lt;p&gt;表现不是一切，你会说？那么，汽车工人、教师和公务员比演员、教授和职业运动员更快乐吗？&lt;/p&gt;&#xA;&lt;p&gt;欧洲公众舆论显然会容忍在他们真正关心表现的行业中被解雇的人。不幸的是，他们唯一足够关心的行业到目前为止是足球。但这至少是一个先例。&lt;/p&gt;&#xA;&lt;h3 id=&#34;6-在美国工作与就业的关联较少&#34;&gt;6. 在美国，工作与就业的关联较少。&lt;/h3&gt;&#xA;&lt;p&gt;在欧洲和日本等更传统的地方，问题比就业法更深。更危险的是它们反映的态度：雇员是一种仆人，雇主有责任保护他们。在美国过去也是如此。在1970年，你仍然应该在大公司找到工作，理想情况下你会为它工作一辈子。作为回报，公司会照顾你：他们会努力不解雇你，支付你的医疗费用，并在你年老时支持你。&lt;/p&gt;&#xA;&lt;p&gt;就业逐渐摆脱了这种家长式的色彩，变成了一种简单的经济交换。但新模式的重要性不仅仅是它使创业公司更容易成长。更重要的是，我认为它使人们更容易创办创业公司。&lt;/p&gt;&#xA;&lt;p&gt;即使在美国，大多数大学毕业的孩子仍然认为他们应该找工作，好像你不能成为某人的雇员就无法富有成效一样。但你越少将工作与就业等同，创办创业公司就越容易。当你将职业视为一系列不同类型的工作，而不是对单个雇主的终身服务时，创办自己公司的风险就更小，因为你只替换一个部分，而不是丢弃整个事情。&lt;/p&gt;&#xA;&lt;p&gt;旧观念如此强大，即使最成功的创业创始人也不得不与之斗争。苹果公司成立一年后，史蒂夫·沃兹尼亚克仍然没有离开惠普。他仍然计划在那里工作一辈子。当乔布斯找到人为苹果提供严肃的风险投资，条件是沃兹辞职时，他最初拒绝了，辩称他在惠普工作时设计了Apple I和Apple II，没有理由他不能继续。&lt;/p&gt;&#xA;&lt;h3 id=&#34;7-美国不太挑剔&#34;&gt;7. 美国不太挑剔。&lt;/h3&gt;&#xA;&lt;p&gt;如果有任何监管企业的法律，你可以假设初创创业公司会违反大部分法律，因为他们不知道法律是什么，也没有时间找出答案。&lt;/p&gt;&#xA;&lt;p&gt;例如，美国的许多创业公司开始于实际上合法经营企业的地方。惠普、苹果和谷歌都是在车库里运营的。更多的创业公司，包括我们的，最初是在公寓里运营的。如果反对这些事情的法律被真正执行，大多数创业公司就不会发生。&lt;/p&gt;&#xA;&lt;p&gt;在更挑剔的国家，这可能是一个问题。如果休利特和帕卡德试图在瑞士的车库里经营一家电子公司，隔壁的老太太会向市政当局举报他们。&lt;/p&gt;&#xA;&lt;p&gt;但其他国家最糟糕的问题可能仅仅是启动公司所需的努力。我的一个朋友在90年代初在德国开了一家公司，震惊地发现，在许多其他规定中，你需要2万美元的资本才能注册。这就是为什么我没有在Apfel笔记本电脑上输入这个的原因。乔布斯和沃兹尼亚克在一家由出售大众巴士和惠普计算器资助的公司里无法拿出那么多钱。我们也不能启动Viaweb。[5]&lt;/p&gt;&#xA;&lt;p&gt;给那些想要鼓励创业公司的政府一个提示：阅读现有创业公司的故事，然后尝试模拟在你的国家会发生什么。当你遇到会杀死苹果公司的事情时，将其剪除。&lt;/p&gt;&#xA;&lt;p&gt;创业公司是边缘的。它们由穷人和 timid 的人启动；它们在边缘的空间和业余时间开始；它们由本应该做其他事情的人启动；虽然是企业，但它们的创始人通常对企业一无所知。年轻的创业公司是脆弱的。一个严重修剪边缘的社会会将它们全部杀死。&lt;/p&gt;&#xA;&lt;h3 id=&#34;8-美国有庞大的国内市场&#34;&gt;8. 美国有庞大的国内市场。&lt;/h3&gt;&#xA;&lt;p&gt;在开始阶段支持创业公司的是推出他们初始产品的前景。成功的公司因此使第一个版本尽可能简单。在美国，他们通常开始时只为当地市场制造东西。&lt;/p&gt;&#xA;&lt;p&gt;这在美国有效，因为当地市场有3亿人。在瑞典就不会那么有效。在小国家，创业公司有更艰巨的任务：他们必须从一开始就进行国际销售。&lt;/p&gt;&#xA;&lt;p&gt;欧盟的部分目的是模拟单一的、庞大的国内市场。问题是居民仍然说许多不同的语言。所以瑞典的软件创业公司相对于美国的创业公司仍然处于不利地位，因为他们从一开始就必须处理国际化问题。值得注意的是，欧洲最近最著名的创业公司Skype，从事的是一个本质上国际化的领域。&lt;/p&gt;&#xA;&lt;p&gt;然而，无论好坏，看起来欧洲将在几十年内说一种单一的语言。当我在1990年在意大利学习时，很少有意大利人说英语。现在所有受过教育的人似乎都应该说英语——而欧洲人不喜欢显得没有受过教育。这大概是一个禁忌话题，但如果目前的趋势继续下去，法语和德语最终会走爱尔兰语和卢森堡语的路：它们会在家里和古怪的民族主义者中说。&lt;/p&gt;&#xA;&lt;h3 id=&#34;9-美国有风险投资&#34;&gt;9. 美国有风险投资。&lt;/h3&gt;&#xA;&lt;p&gt;在美国创业公司更容易启动，因为资金更容易获得。现在美国以外有一些风险投资公司，但创业资金不仅来自风险投资公司。一个更重要的来源，因为它更个人化并且在过程中更早出现，是个人天使投资者的资金。如果谷歌没有首先从安迪·贝托尔斯海姆那里筹集十万美元，他们可能永远无法达到可以从风险投资基金筹集数百万美元的程度。而他可以帮助他们，因为他是太阳公司的创始人之一。这个模式在创业中心不断重复。正是这个模式使它们成为创业中心。&lt;/p&gt;</description>
    </item>
    <item>
      <title>老板</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/boss/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/boss/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/boss.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;老板&#34;&gt;老板&lt;/h1&gt;&#xA;&lt;p&gt;你本不该有老板&lt;/p&gt;&#xA;&lt;p&gt;想要创业吗？获得Y Combinator的资助。&lt;/p&gt;&#xA;&lt;p&gt;2008年3月，2008年6月修订&lt;/p&gt;&#xA;&lt;p&gt;技术倾向于将正常与自然分开。我们的身体不是被设计来吃富裕国家人们吃的食物，也不是来进行这么少的运动。我们的工作方式可能也有类似的问题：正常的工作对我们智力的伤害可能就像白面粉或糖对我们身体的伤害一样。&lt;/p&gt;&#xA;&lt;p&gt;在与创业创始人共事几年后，我开始怀疑这一点。我现在已经与200多个创始人合作过，我注意到在自己创业公司工作的程序员与在大组织工作的程序员之间有明显的区别。我不会说创始人看起来更快乐， necessarily；创业可能非常有压力。也许最好的说法是，他们在你的身体在长跑时比坐在沙发上吃甜甜圈时更快乐的意义上更快乐。&lt;/p&gt;&#xA;&lt;p&gt;虽然他们在统计上不正常，但创业创始人似乎在以对人类更自然的方式工作。&lt;/p&gt;&#xA;&lt;p&gt;去年我在非洲，看到很多以前只在动物园里见过的野生动物。它们看起来多么不同，这很了不起。特别是狮子。野外的狮子似乎有十倍的活力。它们就像是不同的动物。我怀疑为自己工作对人类来说感觉更好，就像生活在野外对像狮子这样广泛活动的捕食者来说一定感觉更好一样。动物园的生活更容易，但这不是它们被设计的生活。&lt;/p&gt;&#xA;&lt;h2 id=&#34;树&#34;&gt;树&lt;/h2&gt;&#xA;&lt;p&gt;在大公司工作有什么不自然的？问题的根源在于人类不是被设计在如此大的群体中工作。&lt;/p&gt;&#xA;&lt;p&gt;当你在野外看到动物时，你注意到的另一件事是，每个物种都在特定大小的群体中茁壮成长。一群黑斑羚可能有100只成年个体；狒狒可能20只；狮子很少10只。人类似乎也被设计在群体中工作，我读到的关于狩猎采集者的内容与组织研究和我的经验相符，表明理想的大小大致是：8人的群体工作良好；到20人时它们变得难以管理；50人的群体真的很笨拙。[1] 无论上限是多少，我们显然不是被设计在几百人的群体中工作。然而——由于与技术而非人性有关的原因——很多人在拥有数百或数千员工的公司工作。&lt;/p&gt;&#xA;&lt;p&gt;公司知道那么大的群体无法工作，所以它们将自己分成足够小以一起工作的单位。但为了协调这些，它们必须引入新的东西：老板。&lt;/p&gt;&#xA;&lt;p&gt;这些较小的群体总是按树状结构排列。你的老板是你的群体附着到树上的点。但是当你使用这个技巧将大群体分成小群体时，会发生一些奇怪的事情，我从未听有人明确提及。在你上一级的群体中，你的老板代表你的整个群体。10个经理的群体不仅仅是10个人以通常方式一起工作的群体。它真的是群体的群体。这意味着为了让10个经理的群体像只是10个个体一样一起工作，每个经理工作的群体必须像一个人一样工作——工人和经理之间只能分享相当于一个人的自由。&lt;/p&gt;&#xA;&lt;p&gt;在实践中，一群人永远无法像一个人一样行动。但在以这种方式分成群体的大组织中，压力总是在那个方向上。每个群体都尽力像人类被设计工作的小个体群体一样工作。创造它的目的就是如此。当你传播这种约束时，结果是每个人获得的行动自由与整个树的大小成反比。[2]&lt;/p&gt;&#xA;&lt;p&gt;任何在大组织工作过的人都感受到过这一点。即使你的群体只有10个人，你也能感受到在100名员工的公司和10,000名员工的公司工作的区别。&lt;/p&gt;&#xA;&lt;h2 id=&#34;玉米糖浆&#34;&gt;玉米糖浆&lt;/h2&gt;&#xA;&lt;p&gt;大组织中的10人群体是一种虚假的部落。你与之互动的人数大约是正确的。但缺少了一些东西：个人主动性。狩猎采集部落的自由度要高得多。领导者比部落其他成员有更多的权力，但他们通常不像老板那样告诉他们做什么和什么时候做。&lt;/p&gt;&#xA;&lt;p&gt;这不是你老板的错。真正的问题是在你上面的层级群体中，你的整个群体是一个虚拟的人。你的老板只是约束传递给你的方式。&lt;/p&gt;&#xA;&lt;p&gt;所以在大组织中的10人群体中工作同时感觉既对又错。表面上它感觉像是你被设计工作的群体类型，但缺少了一些重要的东西。大公司的工作就像高果糖玉米糖浆：它具有你喜欢的东西的一些品质，但灾难性地缺乏其他品质。&lt;/p&gt;&#xA;&lt;p&gt;确实，食物是解释通常工作方式有什么问题的绝佳隐喻。&lt;/p&gt;&#xA;&lt;p&gt;例如，在大公司工作是默认要做的事情，至少对程序员来说。能有多糟糕？嗯，食物很清楚地显示了这一点。如果你今天被随机放在美国的一个地方，你周围几乎所有的食物对你都是有害的。人类不是被设计来吃白面粉、精制糖、高果糖玉米糖浆和氢化植物油的。然而，如果你分析普通杂货店的内容，你可能会发现这四种成分占了大部分热量。&amp;ldquo;正常&amp;quot;食物对你非常糟糕。唯一吃人类被设计实际吃的东西的人是伯克利的几个穿Birkenstock鞋的怪人。&lt;/p&gt;&#xA;&lt;p&gt;如果&amp;quot;正常&amp;quot;食物对我们如此糟糕，为什么它如此普遍？主要有两个原因。一是它有更直接的吸引力。你可能在吃那个披萨一小时后感觉糟糕，但吃前几口感觉很好。另一个是规模经济。生产垃圾食品可以规模化；生产新鲜蔬菜不行。这意味着（a）垃圾食品可以非常便宜，（b）值得花很多钱来营销它。&lt;/p&gt;&#xA;&lt;p&gt;如果人们必须在便宜、大量营销、短期有吸引力的东西和昂贵、晦涩、长期有吸引力的东西之间选择，你认为大多数人会选择哪个？&lt;/p&gt;&#xA;&lt;p&gt;工作也是如此。普通的麻省理工学院毕业生想在谷歌或微软工作，因为它是一个公认的品牌，很安全，他们会立即得到高薪。这是他们午餐吃的披萨的工作等价物。缺点只有在以后才会显现，而且只是一种模糊的不适感。&lt;/p&gt;&#xA;&lt;p&gt;同时，创业公司的创始人和早期员工，就像伯克利的穿Birkenstock鞋的怪人：虽然只是人口的极少数，但他们是像人类被设计那样生活的人。在人工世界里，只有极端主义者自然地生活。&lt;/p&gt;&#xA;&lt;h2 id=&#34;程序员&#34;&gt;程序员&lt;/h2&gt;&#xA;&lt;p&gt;大公司工作的限制性对程序员来说尤其困难，因为编程的本质是构建新事物。销售人员每天做大致相同的推销；支持人员回答大致相同的问题；但一旦你写了一段代码，你就不需要再写它了。所以像程序员被设计那样工作的程序员总是在创造新事物。当你是一个组织的一部分，其结构给予每个人的自由与树的大小成反比时，当你做新事情时，你会面临阻力。&lt;/p&gt;&#xA;&lt;p&gt;这似乎是规模大的必然结果。即使在最聪明的公司也是如此。最近我与一个创始人交谈，他考虑一毕业就创业，但去了谷歌工作，因为他认为在那里会学到更多。他没有学到预期的那么多。程序员通过做来学习，而他想做的大多数事情，他都不能——有时因为公司不让他，但常常因为公司的代码不让他。在遗留代码的阻力、在如此大的组织中进行开发的开销，以及其他群体拥有的接口施加的限制之间，他只能尝试他想做的事情的一小部分。他说他在自己的创业公司学到了更多，尽管他必须做公司的所有杂事以及编程，因为至少当他编程时，他可以做任何他想做的事情。&lt;/p&gt;&#xA;&lt;p&gt;下游的障碍向上游传播。如果不允许你实现新想法，你就会停止有新想法。反之亦然：当你做任何你想做的事情时，你对做什么有更多的想法。所以为自己工作使你的大脑更强大，就像低限制排气系统使发动机更强大一样。&lt;/p&gt;&#xA;&lt;p&gt;为自己工作不一定要意味着创业，当然。但在大公司的常规工作和自己的创业公司之间做决定的程序员可能会在创业中学到更多。&lt;/p&gt;&#xA;&lt;p&gt;通过调整你工作的公司规模，你可以调整你获得的自由量。如果你创办公司，你将有最多的自由。如果你成为前10名员工之一，你将拥有几乎与创始人一样多的自由。即使是100人的公司也会感觉与1000人的公司不同。&lt;/p&gt;&#xA;&lt;p&gt;在小公司工作不确保自由。大组织的树状结构设置了自由的的上限，而不是下限。小公司的头可能仍然选择成为暴君。关键是大组织被其结构 compelled 成为暴君。&lt;/p&gt;&#xA;&lt;h2 id=&#34;后果&#34;&gt;后果&lt;/h2&gt;&#xA;&lt;p&gt;这对组织和个人都有真正的后果。一个是公司随着规模变大不可避免地会变慢，无论它们多么努力保持创业精神。这是每个大组织被迫采用的树状结构的结果。&lt;/p&gt;&#xA;&lt;p&gt;或者说，大组织只有避免树状结构才能避免变慢。而且由于人性限制了可以一起工作的群体规模，我能想象的更大群体避免树状结构的唯一方法是没有结构：让每个群体实际上是独立的，像市场经济组成部分那样一起工作。&lt;/p&gt;&#xA;&lt;p&gt;这可能值得探索。我怀疑已经有一些高度可分的业务倾向于这种方式。但我不知道有任何技术公司这样做。&lt;/p&gt;&#xA;&lt;p&gt;公司可以做的比构建自己为海绵少的一件事是：保持小规模。如果我是对的，那么在每个阶段保持公司尽可能小确实有回报。特别是技术公司。这意味着雇佣最好的人加倍重要。平庸的雇佣伤害你两次：他们完成的更少，但它们也使你变大，因为你需要更多人来解决给定的问题。&lt;/p&gt;&#xA;&lt;p&gt;对个人来说结果是一样的：瞄准小规模。在大组织工作总是会糟糕，组织越大，越糟糕。&lt;/p&gt;&#xA;&lt;p&gt;几年前我写的一篇文章中，我建议即将毕业的 seniors 在创办自己的公司之前为另一家公司工作几年。我现在要修改这个。如果你愿意，可以为另一家公司工作，但只在小公司，如果你想创办自己的创业公司，就继续吧。&lt;/p&gt;&#xA;&lt;p&gt;我建议大学毕业生不要立即创业的原因是我觉得大多数人会失败。而且他们会失败。但有雄心的程序员做自己的事情并失败比去大公司工作更好。当然他们会学到更多。他们甚至在财务上可能更好。很多二十出头的人陷入债务，因为他们的费用增长比离开学校时看起来如此高的工资更快。至少如果你创业并失败，你的净资产将是零而不是负数。[3]&lt;/p&gt;&#xA;&lt;p&gt;我们现在资助了这么多不同类型的创始人，我们有足够的数据看到模式，在大公司工作似乎没有好处。工作过几年的人确实比刚毕业的人看起来更好，但只是因为他们年长那么多。&lt;/p&gt;&#xA;&lt;p&gt;来自大公司的人往往看起来有点保守。很难说有多少是大公司使他们那样的，有多少是使他们首先在大公司工作的自然保守。但很大一部分肯定是学到的。我知道因为我看到它消失了。&lt;/p&gt;&#xA;&lt;p&gt;看到这种情况发生如此多次是让我相信为自己工作，或者至少为小群体工作，是程序员的自然生活方式的事情之一。到达Y Combinator的创始人经常有难民般的被压抑神态。三个月后他们 transformed：他们有如此多的信心，似乎长高了几英寸。[4] 这听起来很奇怪，他们似乎同时更担心和更快乐。这正是我描述野外狮子看起来的方式。&lt;/p&gt;&#xA;&lt;p&gt;看着员工转变为创始人使清楚两个人之间的差异主要是由于环境——特别是大公司的环境对程序员有毒。在他们自己创业公司工作的头几周，他们似乎活了过来，因为他们终于以人们被设计的方式工作了。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 当我说人类被 meant 或设计以某种方式生活时，我指的是通过进化。&lt;/p&gt;&#xA;&lt;p&gt;[2] 不仅仅是叶子受苦。约束向上和向下传播。所以经理也受到约束；他们不能只是做事情，而必须通过下属行动。&lt;/p&gt;&#xA;&lt;p&gt;[3] 不要用信用卡为你的创业融资。用债务为创业融资通常是愚蠢的举动，而信用卡债务是最愚蠢的。信用卡债务是个坏主意， period。它是邪恶公司为绝望和愚蠢的人设置的陷阱。&lt;/p&gt;&#xA;&lt;p&gt;[4] 我们资助的创始人曾经更年轻（最初我们鼓励本科生申请），前几次我看到这个时，我常想知道他们是否真的在身体上长高了。&lt;/p&gt;&#xA;&lt;p&gt;感谢Trevor Blackwell、Ross Boucher、Aaron Iba、Abby Kirigin、Ivan Kirigin、Jessica Livingston和Robert Morris阅读本文的草稿。&lt;/p&gt;</description>
    </item>
    <item>
      <title>股权方程式</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/equity/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/equity/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/equity.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;股权方程式&#34;&gt;股权方程式&lt;/h1&gt;&#xA;&lt;p&gt;2007年7月&lt;/p&gt;&#xA;&lt;p&gt;投资者想要给你钱来换取你创业公司的一定股份。你应该接受吗？你即将雇佣第一个员工。应该给他多少股票？&lt;/p&gt;&#xA;&lt;p&gt;这些是创始人面临的最难的问题之一。然而两个问题都有相同的答案：&lt;/p&gt;&#xA;&lt;p&gt;1/(1 - n)&lt;/p&gt;&#xA;&lt;p&gt;每当你在用公司的股票交换任何东西时，无论是金钱、员工还是与另一家公司的交易，决定是否进行的测试都是相同的。如果你用股票换取的东西能够足够改善你的平均结果，使得你剩下的(100 - n)%的股份比整个公司在交易前的价值还要高，那么你就应该放弃公司n%的股份。&lt;/p&gt;&#xA;&lt;p&gt;例如，如果一个投资者想购买你公司的一半股份，这项投资必须改善你的平均结果多少才能让你盈亏平衡？显然，它必须使公司价值翻倍：如果你用公司的一半股份换取某种能使公司平均结果翻倍以上的东西，你就净赚了。你拥有某个价值翻倍以上的东西的一半份额。&lt;/p&gt;&#xA;&lt;p&gt;在一般情况下，如果你放弃的公司比例是n，如果这项交易使公司的价值超过1/(1 - n)，那么这就是一个好交易。&lt;/p&gt;&#xA;&lt;p&gt;例如，假设Y Combinator提议资助你，换取你公司7%的股份。在这种情况下，n是.07，1/(1 - n)是1.075。所以如果你相信我们能使你的平均结果提高超过7.5%，你就应该接受这笔交易。如果我们使你的结果提高10%，你就净赚了，因为你持有的剩余.93股份价值.93 x 1.1 = 1.023。[1]&lt;/p&gt;&#xA;&lt;p&gt;股权方程式告诉我们的一件事是，至少在财务上，从顶级风险投资公司拿钱可以是一笔非常好的交易。Sequoia的Greg Mcadoo最近在YC晚宴上说，当Sequoia单独投资时，他们喜欢拿一家公司大约30%的股份。1/.7 = 1.43，这意味着如果他们能使你的结果提高超过43%，这笔交易就值得接受。对于一般的创业公司来说，这将是一个非凡的便宜交易。光是能够说他们得到了Sequoia的资助就能提高一般创业公司的前景超过43%，即使他们实际上从来没有拿到钱。&lt;/p&gt;&#xA;&lt;p&gt;Sequoia之所以是这么好的交易，是因为他们拿取的公司比例人为地偏低。他们甚至不试图为他们的投资获得市场价格；他们限制他们的持股量，给创始人留下足够的股份，让他们觉得公司仍然是他们的。&lt;/p&gt;&#xA;&lt;p&gt;问题是Sequoia每年收到大约6000份商业计划，资助其中大约20份，所以获得这个好交易的机会是300分之1。那些通过的公司不是一般的创业公司。&lt;/p&gt;&#xA;&lt;p&gt;当然，在风险投资交易中还有其他因素需要考虑。它从来不仅仅是金钱和股票的直接交易。但如果是的话，从顶级公司拿钱通常会是便宜货。&lt;/p&gt;&#xA;&lt;p&gt;在给员工股票时，你可以使用相同的公式，但它以相反的方式运作。如果i是公司增加某个新人后的平均结果，那么他们价值n，使得i = 1/(1 - n)。这意味着n = (i - 1)/i。&lt;/p&gt;&#xA;&lt;p&gt;例如，假设你只有两个创始人，你想雇佣一个额外的黑客，他非常优秀，你觉得他会使整个公司的平均结果提高20%。n = (1.2 - 1)/1.2 = .167。所以如果你用公司16.7%的股份交换他，你就会盈亏平衡。&lt;/p&gt;&#xA;&lt;p&gt;这并不意味着16.7%是给他的正确股票数量。股票不是雇佣某人的唯一成本：通常还有工资和开销。如果公司在这笔交易中仅仅盈亏平衡，就没有理由这样做。&lt;/p&gt;&#xA;&lt;p&gt;我认为要把工资和开销转换为股票，你应该将年费率乘以大约1.5。大多数创业公司要么快速增长，要么死亡；如果你死亡，你不必付钱给这个人；如果你快速增长，你将用明年的估值支付明年的工资，那应该是今年的3倍。如果你的估值每年增长3倍，新员工的工资和开销的总股票成本是当前估值的1.5年成本。[2]&lt;/p&gt;&#xA;&lt;p&gt;公司需要多少额外的利润作为交易的&amp;quot;激活能&amp;quot;？因为这实际上是公司雇佣的利润，市场将决定这一点：如果你是一个热门机会，你可以收取更多。&lt;/p&gt;&#xA;&lt;p&gt;让我们通过一个例子。假设公司想在上述新雇佣上赚取50%的&amp;quot;利润&amp;quot;。所以从16.7%中减去三分之一，我们得到11.1%作为他的&amp;quot;零售&amp;quot;价格。进一步假设他每年的工资和开销成本是6万美元，x 1.5 = 9万美元总额。如果公司的估值是200万美元，9万美元是4.5%。11.1% - 4.5% = 6.6%的报价。&lt;/p&gt;&#xA;&lt;p&gt;顺便说一下，注意早期员工拿低工资是多么重要。这直接来自于本可以给他们的股票。&lt;/p&gt;&#xA;&lt;p&gt;显然，这些数字有很大的变化空间。我不是说股票赠与现在可以简化为公式。最终你总是要猜测。但至少知道你在猜测什么。如果你基于直觉选择一个数字，或者使用风险投资公司提供的典型赠与规模表格，理解这些是什么的估计。&lt;/p&gt;&#xA;&lt;p&gt;更一般地说，当你做出任何涉及股权的决定时，用1/(1 - n)来检验它是否有意义。交易股权后你应该总是感觉更富有。如果交易没有足够增加你剩余股份的价值使你净赚，你就不会（或不应该）做这笔交易。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 这就是我们无法相信有人会认为Y Combinator是笔坏交易的原因。真的有人认为我们在三个月内无法将创业公司的前景提高7.5%吗？&lt;/p&gt;&#xA;&lt;p&gt;[2] 当前估值的明显选择是你上一轮融资的投后估值。然而，这可能低估了公司，因为（a）除非你的上一轮刚发生，公司可能价值更高，（b）早期融资的估值通常反映了投资者的其他一些贡献。&lt;/p&gt;&#xA;&lt;p&gt;感谢Sam Altman、Trevor Blackwell、Paul Buchheit、Hutch Fishman、David Hornik、Paul Kedrosky、Jessica Livingston、Gary Sabot和Joshua Schachter阅读本文草稿。&lt;/p&gt;</description>
    </item>
    <item>
      <title>自己的项目</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/own/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/own/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/own.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;自己的项目&#34;&gt;自己的项目&lt;/h1&gt;&#xA;&lt;p&gt;2021年6月&lt;/p&gt;&#xA;&lt;p&gt;几天前，在从学校回家的路上，我九岁的儿子告诉我他迫不及待想回家继续写他正在写的故事。这让我比听到他说的任何话都高兴——不仅因为他对自己的故事感到兴奋，还因为他发现了这种工作方式。做自己的项目与普通工作的不同，就像滑冰与行走的区别。它更有趣，但也更有效率。&lt;/p&gt;&#xA;&lt;p&gt;在这种意义上滑冰的人完成了多少伟大的工作？如果不是全部，那肯定是很大一部分。&lt;/p&gt;&#xA;&lt;p&gt;做自己的项目有特别之处。我不会说你更快乐。更好的词应该是兴奋或投入。当事情进展顺利时你很快乐，但通常不是。当我写散文时，大部分时间我都很担心和困惑：担心散文会写得很糟，困惑因为我在摸索一些我无法清楚看到的想法。我能用语言把它固定下来吗？最后通常可以，只要我花足够长的时间，但我从不确定；前几次尝试经常失败。&lt;/p&gt;&#xA;&lt;p&gt;当事情成功时你有快乐的时刻，但它们不会持续很久，因为然后你就要面对下一个问题。那么为什么要做呢？因为对于喜欢这种方式工作的人来说，没有其他感觉如此正确。你感觉自己像是栖息地里的动物，做着你注定要做的事情——不一定总是快乐，但清醒而充满活力。&lt;/p&gt;&#xA;&lt;p&gt;许多孩子体验了做自己的项目的兴奋。困难的部分是让这与成人后的工作汇合。我们的习俗使这变得更困难。我们对待&amp;quot;玩耍&amp;quot;和&amp;quot;爱好&amp;quot;与&amp;quot;工作&amp;quot;在质上不同。建树屋的孩子不清楚有一条（虽然很长的）从建筑或工程到树屋的直接路线。我们没有指出这条路线，而是隐藏它，通过含蓄地对待孩子做的事情与真实工作不同。[1]&lt;/p&gt;&#xA;&lt;p&gt;我们没有告诉孩子他们的树屋可能在通往成人工作的道路上，而是告诉他们道路通过学校。不幸的是，学校工作往往与做自己的项目非常不同。它通常既不是项目，也不是自己的。所以随着学校变得更严肃，做自己的项目即使能幸存，也只是旁边的一条细线。&lt;/p&gt;&#xA;&lt;p&gt;想到所有的高中生转身背弃建造树屋，乖乖坐在教室里学习达尔文或牛顿以通过考试，有点可悲，而使达尔文和牛顿出名的工作实际上在精神上更接近建造树屋而不是为考试学习。&lt;/p&gt;&#xA;&lt;p&gt;如果我必须选择我的孩子获得好成绩和做自己的雄心勃勃的项目之间，我会选择项目。不是因为我是溺爱的父母，而是因为我经历过另一端，我知道哪个更有预测价值。当我为Y Combinator挑选初创公司时，我不关心申请人的成绩。但如果他们做过自己的项目，我想了解那些项目的一切。[2]&lt;/p&gt;&#xA;&lt;p&gt;学校可能是现在的样子不可避免。我不是说我们必须重新设计它（虽然我不是说我们不），只是我们应该理解它对我们工作态度的影响——它引导我们走向尽责的埋头苦干式工作，经常用竞争作为诱饵，远离滑冰。&lt;/p&gt;&#xA;&lt;p&gt;偶尔学校工作会成为自己的项目。每当我必须写论文时，那就会成为我自己的项目——讽刺的是，除了英语课，因为英语课必须写的东西太虚假了。当我上大学开始上计算机科学课时，我必须写的程序成为我自己的项目。每当我在写作或编程时，我通常都在滑冰，从那时起一直如此。&lt;/p&gt;&#xA;&lt;p&gt;那么自己的项目的边界到底在哪里？这是一个有趣的问题，部分因为答案如此复杂，部分因为利害关系如此之大。工作可以是自己的有两种意义：1）你是自愿做，而不是仅仅因为有人告诉你做，2）你独立做。&lt;/p&gt;&#xA;&lt;p&gt;前者的边界相当清晰。非常关心自己工作的人通常对拉和被推之间的区别非常敏感，工作往往属于一类或另一类。但测试不仅仅是是否有人告诉你做某事。你可以选择做被告知做的事情。实际上，你可以比告诉你做的人更彻底地拥有它。&lt;/p&gt;&#xA;&lt;p&gt;例如，数学作业对大多数人来说是被告知做的事情。但对我父亲来说，他是个数学家，不是。我们大多数人认为数学书中的问题是测试或发展我们对每节解释的材料知识的方法。但对我父亲来说，问题是重要的部分，文本只是一种注释。每当他得到一本新的数学书时，对他来说就像得到了一个谜题：这是一套新的要解决的问题，他会立即开始解决所有问题。&lt;/p&gt;&#xA;&lt;p&gt;项目是自己的另一种意义——独立做——有更柔和的边界。它逐渐过渡到协作。有趣的是，它以两种不同方式过渡到协作。协作的一种方式是共享一个项目。例如，当两个数学家在一次对话中协作形成一个证明时。另一种方式是多个人做自己的独立项目，像拼图一样组合在一起。例如，当一个人写书的文本，另一个人做平面设计时。[3]&lt;/p&gt;&#xA;&lt;p&gt;这两条通向协作的路径当然可以结合。但在适当的条件下，做自己的项目的兴奋感可以保持相当长时间，才在大组织的湍急工作流中瓦解。实际上，成功组织的历史部分是保留这种兴奋感技术的历史。[4]&lt;/p&gt;&#xA;&lt;p&gt;制造原始Macintosh的团队是这种现象的很好例子。像Burrell Smith、Andy Hertzfeld、Bill Atkinson和Susan Kare这样的人不仅仅是听从命令。他们不是Steve Jobs打出的网球球，而是Steve Jobs释放的火箭。他们之间有很多协作，但他们似乎都 individually 感受到了做自己的项目的兴奋感。&lt;/p&gt;&#xA;&lt;p&gt;在Andy Hertzfeld关于Macintosh的书中，他描述了他们如何在晚餐后回到办公室，工作到深夜。从未经历过对他们兴奋的项目的工作 thrill 的人无法区分这种长时间工作与血汗工厂和锅炉房发生的工作，但它们处于光谱的两端。这就是为什么教条地坚持&amp;quot;工作/生活平衡&amp;quot;是错误的。实际上，&amp;ldquo;工作/生活&amp;quot;这个表达本身就体现了错误：它假设工作和生活是不同的。对于那些&amp;quot;工作&amp;quot;一词自动意味着尽责的埋头苦干式的人来说，它们确实如此。但对于滑冰者来说，工作和生活的关系用连字符比斜杠更好地表示。我不想做任何我不想让它占据我生活的工作。&lt;/p&gt;&#xA;&lt;p&gt;当然，当你制造像Macintosh这样的东西时，更容易达到这种动机水平。新事物很容易感觉像你自己的项目。这就是程序员倾向于重写不需要重写的东西，以及编写已经存在的东西的自己的版本的趋势的原因之一。这有时让经理们惊慌，按打字的总字符数衡量，这很少是最佳解决方案。但它不总是仅仅由傲慢或无知驱动。从头开始写代码也更有回报——如此有回报，以至于好的程序员最终净领先，尽管字符的惊人浪费。实际上，这可能是资本主义的优势之一，它鼓励这种重写。需要软件做某事的公司不能使用另一家公司已经写的来做这件事的软件，因此必须写自己的，这通常结果更好。[5]&lt;/p&gt;&#xA;&lt;p&gt;滑冰和解决新问题之间的自然对齐是初创公司回报如此之高的原因之一。未解决问题的市场价格不仅更高，你在解决它们时还能获得生产力折扣。实际上，你获得生产力的双重增加：当你在做clean-sheet设计时，更容易招募滑冰者，他们可以把所有时间都花在滑冰上。&lt;/p&gt;&#xA;&lt;p&gt;Steve Jobs从观察Steve Wozniak中知道一两件关于滑冰者的事情。如果你能找到合适的人，你只需要告诉他们在最高层次做什么。他们会处理细节。实际上，他们坚持这样。要让项目感觉像你自己的，你必须有足够的自主权。你不能按订单工作，或被官僚主义拖慢。&lt;/p&gt;&#xA;&lt;p&gt;确保自主权的一种方法是根本没有老板。有两种方法：自己做老板，以及在下班时间做项目。虽然它们在财务上处于规模的两端，但初创公司和开源项目有很多共同点，包括它们通常由滑冰者运营。实际上，从规模的一端到另一端有一个虫洞：发现初创公司想法的最好方法之一就是为了好玩而做项目。&lt;/p&gt;&#xA;&lt;p&gt;如果你的项目是赚钱的那种，很容易在它们上面工作。当它们不是时更难。通常最困难的部分是士气。这就是成年人比孩子更难的地方。孩子只是跳进去建造他们的树屋，不担心是否在浪费时间，或与其他树屋相比如何。坦率地说，我们可以从这里的孩子身上学到很多。大多数成年人为&amp;quot;真实&amp;quot;工作设定的高标准并不总是对我们有利。&lt;/p&gt;&#xA;&lt;p&gt;自己项目最重要的阶段在开始时：当你从认为做x可能很酷到实际做x。在这一点上，高标准不仅无用而且有害。有少数人开始太多新项目，但我怀疑更多的人因为害怕失败而不开始那些如果开始就会成功的项目。&lt;/p&gt;&#xA;&lt;p&gt;但如果我们作为孩子不能从我们的树屋在通往成人项目道路上的知识中受益，我们至少可以作为成年人从我们的项目在延伸回树屋的道路上受益。记得你作为孩子开始新事物时那种无所谓的自信吗？那将是重新获得的强大东西。&lt;/p&gt;&#xA;&lt;p&gt;如果作为成年人保留那种自信更难，我们至少往往更清楚我们在做什么。孩子从一种工作跳到或被赶到另一种工作，几乎没有意识到发生在他们身上的事情。而我们更了解不同类型的工作，对做什么有更多控制。理想情况下，我们可以两全其美：故意选择做自己的项目，并在开始新项目时无所谓的自信。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] &amp;ldquo;Hobby&amp;quot;是个奇怪的词。现在它意味着不是真实工作的工作——不会被评判的工作——但最初它只是意味着一种相当一般意义上的痴迷（甚至是政治观点），一个人隐喻地骑着一个儿童骑的木马。很难说它最近、更窄的意义是变好还是变坏。肯定有很多误报——很多最终变得重要但最初被视为仅仅是爱好的项目。但另一方面，这个概念为早期丑小鸭阶段的项目提供了宝贵的掩护。&lt;/p&gt;&#xA;&lt;p&gt;[2] 虎爸虎妈，就像父母经常做的那样，在打上一场战争。在旧时代，当成功的道路是在攀登某些预定义梯子时获得证书，成绩更重要。但他们的策略专注于成绩也好。如果他们入侵项目领域，从而通过强迫孩子做这种工作给他们带来对这种工作的厌恶，那将是多么可怕。成绩已经是一个 grim、虚假的世界，父母干涉不会造成太大伤害，但做自己的项目是更微妙、更私密的事情，很容易被损坏。&lt;/p&gt;&#xA;&lt;p&gt;[3] 在自己的项目上工作与与他人协作之间的复杂、逐渐的边界是关于&amp;quot;孤独天才&amp;quot;的想法有如此多分歧的原因之一。在实践中，人们以各种不同方式协作（或不协作），但孤独天才的想法绝对不是神话。它有一个与某种工作方式相关的核心真理。&lt;/p&gt;&#xA;&lt;p&gt;[4] 协作也很强大。最佳组织将以对彼此造成最小损害的方式结合协作和所有权。有趣的是，公司和大学部门从相反的方向接近这个理想：公司坚持协作，偶尔也设法既招募滑冰者又允许他们滑冰，大学部门坚持独立研究的能力（按惯例被视为滑冰，无论是否），他们雇佣的人按他们选择的程度协作。&lt;/p&gt;&#xA;&lt;p&gt;[5] 如果一家公司能以这样的方式设计其软件，使最好的新来的程序员总是得到clean sheet，它可以有一种永恒的青春。这可能不是不可能的。如果你有一个定义游戏规则足够清晰的软件骨架，个别程序员可以写自己的玩家。&lt;/p&gt;&#xA;&lt;p&gt;感谢Trevor Blackwell、Paul Buchheit、Andy Hertzfeld、Jessica Livingston和Peter Norvig阅读本文草稿。&lt;/p&gt;</description>
    </item>
    <item>
      <title>致命的困境</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/pinch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/pinch/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/pinch.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;致命的困境&#34;&gt;致命的困境&lt;/h1&gt;&#xA;&lt;p&gt;2014年12月&lt;/p&gt;&#xA;&lt;p&gt;许多创业公司在死亡前几个月都会经历这样一个阶段：虽然银行里有相当可观的资金，但每月也在大量亏损，收入增长要么不存在，要么平庸。公司有，比如说，6个月的运营资金。或者更残酷地说，6个月后就要破产。他们期望通过从投资者那里筹集更多资金来避免这种情况。[1]&lt;/p&gt;&#xA;&lt;p&gt;最后一句话是致命的。&lt;/p&gt;&#xA;&lt;p&gt;可能没有什么比创始人更容易自我欺骗的事情了，那就是投资者会有多大兴趣给他们额外资金。第一次说服投资者也很困难，但创始人预料到了这一点。第二次困扰他们的是三种力量的汇合：公司现在比第一次筹集资金时花费更多。投资者对已经筹集过资金的公司要求高得多。公司现在开始被视为失败。第一次筹集资金时，它既不是成功也不是失败；问这个问题为时过早。现在可以问这个问题了，而默认答案是失败，因为此时这是默认结果。&lt;/p&gt;&#xA;&lt;p&gt;我将把第一段描述的情况称为&amp;quot;致命的困境&amp;quot;。我尽量避免创造新词，但为这种情况起个名字可能会让创始人突然意识到自己正处于其中。&lt;/p&gt;&#xA;&lt;p&gt;致命困境如此危险的原因之一是它是自我强化的。创始人高估筹集更多资金的机会，因此对达到盈利松懈，这进一步降低了他们筹集资金的机会。&lt;/p&gt;&#xA;&lt;p&gt;既然你知道了致命困境，如何避免它？Y Combinator告诉筹集资金的创始人要表现得好像这是他们最后能得到的资金。因为这种情况的自我强化性质也反方向起作用：你越不需要进一步投资，就越容易获得。&lt;/p&gt;&#xA;&lt;p&gt;如果你已经陷入致命困境怎么办？第一步是重新评估筹集更多资金的可能性。现在，我将通过惊人的洞察力为你做这件事：可能性是零。[2]&lt;/p&gt;&#xA;&lt;p&gt;剩下三个选择：你可以关闭公司，你可以增加收入，你可以减少支出。&lt;/p&gt;&#xA;&lt;p&gt;如果你确信无论做什么公司都会失败，你应该关闭公司。那样至少你可以退还剩余的资金，并省去你本会花费在看着公司倒闭上的几个月时间。&lt;/p&gt;&#xA;&lt;p&gt;不过公司很少必须失败。我在这里真正做的是给你承认你已经放弃的选择。&lt;/p&gt;&#xA;&lt;p&gt;如果你不想关闭公司，那就剩下增加收入和减少支出。在大多数创业公司中，支出=人，减少支出=解雇人。[3] 决定解雇人通常很困难，但有一种情况不应该困难：当你已经知道应该解雇某些人但自己不愿承认时。如果是这样，现在就是时候了。&lt;/p&gt;&#xA;&lt;p&gt;如果这让你盈利，或者能够让你在剩余资金支持下达到盈利，你已经避免了直接危险。&lt;/p&gt;&#xA;&lt;p&gt;否则你有三个选择：你要么解雇优秀员工，要么让部分或所有员工暂时减薪，要么增加收入。&lt;/p&gt;&#xA;&lt;p&gt;让员工减薪是一个弱解决方案，只有在问题不太严重时才有效。如果你目前的轨迹几乎无法让你达到盈利，但通过略微减薪可以跨越门槛，你也许能够向大家说明这样做的理由。否则你可能只是在推迟问题，这对那些你提议减薪的人来说会很明显。[4]&lt;/p&gt;&#xA;&lt;p&gt;剩下两个选择，解雇优秀员工和赚更多钱。在试图平衡它们时，记住最终目标：成为一家成功的产品公司，即拥有大量人使用的单一产品。&lt;/p&gt;&#xA;&lt;p&gt;如果你的困境源于过度招聘，你应该更倾向于解雇人。如果你在甚至不知道要构建什么之前就雇佣了15个人，你创造了一个有缺陷的公司。你需要弄清楚你要构建什么，而用几个人而不是15个人来做可能更容易。另外，这15个人可能甚至不是你最终构建所需产品的人。所以解决方案可能是先收缩，然后确定成长方向。毕竟，如果你带着这15个人一起将公司开向地面，你并没有为他们做什么好事。他们最终都会失去工作，以及他们在这个注定失败的创业公司上花费的所有时间。&lt;/p&gt;&#xA;&lt;p&gt;而如果你只有几个人，最好专注于尝试赚更多钱。建议创业公司赚更多钱可能显得轻率，好像可以轻而易举地做到。通常创业公司已经在尽可能努力地销售其产品。我在这里建议的不是更努力地赚钱，而是尝试以不同方式赚钱。例如，如果你只有一个人在销售，其余人在写代码，考虑让所有人都从事销售。当你破产时，更多代码对你有什么用？如果你必须写代码来完成某笔交易，继续做；这源于所有人都从事销售。但只从事能最快获得最多收入的工作。&lt;/p&gt;&#xA;&lt;p&gt;另一种不同赚钱方式是销售不同的东西，特别是做更多咨询类工作。我说咨询类是因为从制作产品到纯咨询有一个长长的滑坡，你不必走很远就能开始为客户提供真正有吸引力的东西。虽然你的产品可能还不很有吸引力，但如果你是创业公司，你的程序员通常比客户拥有的程序员优秀得多。或者你可能拥有客户不理解的新领域专业知识。所以如果你将销售对话从&amp;quot;你想买我们的产品吗？&amp;ldquo;稍微改变为&amp;quot;你需要什么愿意付高价的？&amp;ldquo;你可能会发现突然从客户那里获得收入容易多了。&lt;/p&gt;&#xA;&lt;p&gt;不过，当你开始这样做时要毫不留情地唯利是图。你正在努力拯救公司免于死亡，所以要让客户大量快速付款。并在尽可能范围内避免咨询的最坏陷阱。理想情况可能是你为客户构建了精确定义的产品衍生版本，否则就是直接产品销售。你保留知识产权，不按小时计费。&lt;/p&gt;&#xA;&lt;p&gt;在最好的情况下，这种咨询类工作可能不仅仅是生存的手段，而可能成为定义你公司的那个无法扩展的东西。不要期望它会是这样，但当你深入了解个别用户需求时，要留意那些背后有广阔前景的狭窄机会。&lt;/p&gt;&#xA;&lt;p&gt;通常对定制工作的需求如此之大，除非你真的无能，否则在咨询滑坡的某个点上你总能生存。但我不是偶然使用&amp;quot;滑坡&amp;quot;这个词；客户对定制工作的无止境需求总会将你推向底部。所以虽然你可能生存，但现在的问题变成以最小损失和干扰生存。&lt;/p&gt;&#xA;&lt;p&gt;好消息是，许多成功的创业公司都经历了濒死体验并继续蓬勃发展。你只需要及时意识到自己濒临死亡。如果你处于致命困境中，你确实濒临死亡。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;注释&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;[1] 有少数公司在前一两年无法合理期望赚钱，因为他们构建的产品需要很长时间。对于这些公司，用&amp;quot;进展&amp;quot;代替&amp;quot;收入增长&amp;rdquo;。除非你的初始投资者事先同意你是这样的公司，否则你不是这些公司之一。坦率地说，即使是这些公司也希望自己不是，因为&amp;quot;进展&amp;quot;的非流动性使他们任由投资者摆布。&lt;/p&gt;&#xA;&lt;p&gt;[2] 致命困境有一个变体，你的现有投资者通过承诺投资更多来帮助你。或者说，你将他们解读为承诺投资更多，而他们认为他们只是在提到可能性。如果你有8个月或更少的运营资金，解决这个问题的方法是尝试现在就获得资金。那样你要么得到资金，在这种情况下（直接）问题解决，或者至少防止你的投资者帮助你继续对融资前景保持否认。&lt;/p&gt;&#xA;&lt;p&gt;[3] 显然，如果你有除了工资外的重要支出可以消除，现在就做。&lt;/p&gt;&#xA;&lt;p&gt;[4] 当然，除非问题的根源是你们给自己支付高工资。如果通过将创始人的工资削减到所需最低限度，你可以达到盈利，你应该这样做。但如果你需要读这篇文章才意识到这一点，这是个坏迹象。&lt;/p&gt;&#xA;&lt;p&gt;感谢山姆·奥特曼、保罗·布赫海特、杰西卡·利文斯顿和杰夫·拉尔斯顿阅读草稿。&lt;/p&gt;&#xA;&lt;p&gt;阿拉伯语翻译&lt;/p&gt;</description>
    </item>
    <item>
      <title>艺术如何能够优秀</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/goodart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/goodart/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/goodart.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;艺术如何能够优秀&#34;&gt;艺术如何能够优秀&lt;/h1&gt;&#xA;&lt;p&gt;2006年12月&lt;/p&gt;&#xA;&lt;p&gt;我从小就相信品味只是个人偏好的问题。每个人都有自己喜欢的东西，但没有人的偏好比其他人的更好。没有所谓的品味好这回事。&lt;/p&gt;&#xA;&lt;p&gt;就像我从小相信的很多事情一样，这结果是错误的，我将试图解释为什么。&lt;/p&gt;&#xA;&lt;p&gt;说没有品味好这回事的一个问题是，这也意味着没有好艺术这回事。如果存在好艺术，那么喜欢它的人就比不喜欢的人有更好的品味。所以如果你抛弃品味的概念，你也必须抛弃艺术是好作品的概念，以及艺术家擅长创作艺术的概念。&lt;/p&gt;&#xA;&lt;p&gt;正是扯动了这根线，解开了我对相对主义的童年信仰。当你试图创作东西时，品味就成为一个实际问题。你必须决定下一步该做什么。如果我改变那部分，画作会变得更好吗？如果没有更好这回事，那么你做什么都无所谓。事实上，你画不画都无所谓。你完全可以出去买一个现成的空白画布。如果没有好这回事，那将和西斯廷教堂的天花板一样伟大的成就。当然不那么费力，但如果你能用更少的努力达到同样的表现水平，肯定那更令人印象深刻，而不是更少。&lt;/p&gt;&#xA;&lt;p&gt;然而这似乎不太对，是吗？&lt;/p&gt;&#xA;&lt;h2 id=&#34;观众&#34;&gt;观众&lt;/h2&gt;&#xA;&lt;p&gt;我认为这个谜题的关键是记住艺术有观众。艺术有目的，这个目的就是吸引其观众。好艺术（像任何好东西一样）是特别能实现其目的的艺术。&amp;ldquo;吸引&amp;quot;的含义可以变化。有些艺术作品旨在震撼，有些旨在取悦；有些旨在突然出现在你面前，有些则安静地坐在背景中。但所有艺术都必须作用于观众，而且——这里是关键点——观众成员有共同点。&lt;/p&gt;&#xA;&lt;p&gt;例如，几乎所有人类都发现人脸引人入胜。这似乎是天生的。婴儿几乎从出生起就能识别人脸。事实上，人脸似乎与我们对它们的兴趣共同进化；脸是身体的广告牌。所以在其他条件相同的情况下，有人脸的绘画比没有人脸的更引人入胜。[1]&lt;/p&gt;&#xA;&lt;p&gt;人们容易相信品味仅仅是个人偏好的一个原因是，如果不是这样，你如何挑选出品味更好的人？有数十亿人，每个人都有自己的看法；你有什么理由更喜欢一个而不是另一个？[2]&lt;/p&gt;&#xA;&lt;p&gt;但如果观众有很多共同点，你就不必从随机的个人偏见集合中选择一个，因为这个集合不是随机的。所有人都发现人脸引人入胜——几乎可以说是定义如此：人脸识别在我们的DNA中。因此，拥有好艺术的概念，即做好本职工作的艺术，并不需要你挑选出几个人并将他们的意见标记为正确。无论你挑选谁，他们都会发现人脸引人入胜。&lt;/p&gt;&#xA;&lt;p&gt;当然，太空外星人可能不会发现人脸引人入胜。但他们可能有与我们共同的其他东西。最常见的例子来源是数学。我期望太空外星人在判断两个证明哪个更好时，大多数时间会与我们意见一致。Erdos这么认为。他把最优雅的证明称为来自上帝之书的东西，而上帝之书显然是普适的。[3]&lt;/p&gt;&#xA;&lt;p&gt;一旦你开始谈论观众，你就不必简单地争论品味标准是否存在或不存在。相反，品味是一系列同心圆，就像池塘中的涟漪。有些东西会吸引你和你的朋友，有些会吸引你这个年龄段的大多数人，有些会吸引大多数人，也许还有些会吸引大多数有感知能力的生物（无论这意味着什么）。&lt;/p&gt;&#xA;&lt;p&gt;图景比这稍微复杂一些，因为在池塘中间有重叠的涟漪集合。例如，可能有些东西特别吸引男性，或者来自某种文化的人。&lt;/p&gt;&#xA;&lt;p&gt;如果好艺术是吸引其观众的艺术，那么当你谈论艺术是好是坏时，你也必须说是为哪个观众。那么，简单地谈论艺术好或坏是没有意义的吗？不，因为一个观众是所有可能的人类集合。我认为当人们说一件艺术作品好时，他们隐含谈论的就是这个观众：他们的意思是它会吸引任何人类。[4]&lt;/p&gt;&#xA;&lt;p&gt;这是一个有意义的测试，因为虽然像任何日常概念一样，&amp;ldquo;人类&amp;quot;在边缘上是模糊的，但几乎所有人类都有很多共同点。除了我们对人脸的兴趣外，对我们几乎所有人来说，原色都有特别之处，因为它是我们眼睛工作方式的产物。大多数人类也会发现3D物体的图像引人入胜，因为这似乎也内置在我们的视觉感知中。[5] 在这之下还有边缘检测，这使得具有明确形状的图像比模糊的图像更引人入胜。&lt;/p&gt;&#xA;&lt;p&gt;当然，人类的共同点远不止这些。我的目标不是编一份完整的清单，只是表明这里有坚实的基础。人们的偏好不是随机的。所以一个在绘画上工作的艺术家试图决定是否改变某些部分时，不需要想&amp;quot;何必呢？我也可以抛硬币。&amp;ldquo;相反，他可以问&amp;quot;什么会让这幅画对人们更有趣？&amp;ldquo;而你无法通过出去买一个空白画布来等同于米开朗基罗的原因是西斯廷教堂的天花板对人们更有趣。&lt;/p&gt;&#xA;&lt;p&gt;许多哲学家很难相信艺术可能存在客观标准。似乎很明显，例如美是观察者头脑中发生的事情，而不是物体的一种属性。因此它是&amp;quot;主观的&amp;quot;而不是&amp;quot;客观的&amp;rdquo;。但事实上，如果你将美的定义缩小到在人类身上以某种方式起作用的东西，并且你观察到人类有多少共同点，结果证明它仍然是物体的一种属性。如果主体都反应相似，你就不必选择某种东西是主体的属性还是客体的属性。好艺术因此是物体的一种属性，就像对人类有毒是物体的一种属性一样：如果它以某种方式一致地影响人类，它就是好艺术。&lt;/p&gt;&#xA;&lt;h2 id=&#34;错误&#34;&gt;错误&lt;/h2&gt;&#xA;&lt;p&gt;那么我们能通过投票来找出最好的艺术是什么吗？毕竟，如果吸引人类是测试标准，我们应该能够直接问他们，对吗？&lt;/p&gt;&#xA;&lt;p&gt;嗯，不完全是。对于自然产品，这可能有效。我愿意吃世界人口投票认为最美味的苹果，我可能也愿意去参观他们投票认为最美丽的海滩，但不得不看他们投票认为最好的绘画将是一场冒险。&lt;/p&gt;&#xA;&lt;p&gt;人造东西是不同的。首先，艺术家不像苹果树，经常故意试图欺骗我们。有些技巧相当微妙。例如，任何艺术作品都通过其完成程度来设定期望。你不期望在看起来像快速素描的东西中有照片般的准确性。所以一个广泛使用的技巧，特别是在插画家中间，是故意使绘画或素描看起来比实际完成的更快。普通人看到它并想：多么惊人的技巧。这就像在谈话中说些聪明的话，仿佛是你临时想到的，而事实上你前一天就已经想好了。&lt;/p&gt;&#xA;&lt;p&gt;另一个远不那么微妙的影响是品牌。如果你去看蒙娜丽莎，你可能会失望，因为它被厚厚的玻璃墙隐藏着，周围是一群疯狂的人群在它前面自拍。你最多只能像在拥挤聚会上看到房间对面的朋友那样看到它。卢浮宫不妨用复制品代替它；没人能分辨出来。然而蒙娜丽莎是一幅小而暗的画。如果你找到从未见过它图像的人，让他们去一个博物馆，它和其他画挂在一起，标签上标着十五世纪未知艺术家的肖像，大多数人会走过而不多看一眼。&lt;/p&gt;&#xA;&lt;p&gt;对于普通人来说，品牌在艺术判断中主导所有其他因素。看到他们在复制品中认识的绘画是如此压倒性的，以至于他们作为对一幅绘画的反应被淹没了。&lt;/p&gt;&#xA;&lt;p&gt;当然，还有人们对自己玩的把戏。大多数成年人看艺术时担心如果他们不喜欢应该喜欢的东西，会被认为没有文化。这不仅影响他们声称喜欢什么；他们实际上让自己喜欢应该喜欢的东西。&lt;/p&gt;&#xA;&lt;p&gt;这就是为什么你不能只是投票。虽然吸引人们是一个有意义的测试，但在实践中你无法测量它，就像你不能在有磁铁坐在旁边的情况下用指南针找到北方一样。有如此强大的错误来源，如果你投票，你测量的只是错误。&lt;/p&gt;&#xA;&lt;p&gt;然而，我们可以从另一个方向接近我们的目标，就是使用我们自己作为实验对象。你是人类。如果你想知道人们对一件艺术品的基本反应会是什么，你至少可以通过消除自己判断中的错误来源来接近这一点。&lt;/p&gt;&#xA;&lt;p&gt;例如，虽然任何人最初对一幅著名绘画的反应都会被其名声扭曲，但有方法减少其影响。一个是反复回到这幅绘画前。几天后名声消逝，你可以开始把它看作一幅画。另一个是站近。从复制品中熟悉的绘画从十英尺外看更熟悉；靠近时你会看到在复制品中丢失的细节，因此你是第一次看到它们。&lt;/p&gt;&#xA;&lt;p&gt;有两种主要错误阻碍我们看到一件艺术作品：你从自己环境中带来的偏见，以及艺术家玩的把戏。把戏是容易纠正的。仅仅意识到它们通常就阻止它们起作用。例如，当我十岁时，我曾对看起来像闪亮金属的喷绘字母印象很深。但一旦你研究它是如何做的，你就会看到这是个相当蹩脚的把戏——属于那种依靠强烈推几个视觉按钮来暂时压倒观众的那种。这就像试图通过向某人喊叫来说服他们。&lt;/p&gt;&#xA;&lt;p&gt;不容易受把戏影响的方法是明确寻找并分类它们。当你注意到某种艺术有一丝不诚实气息时，停下来弄清楚发生了什么。当某人明显在迎合容易被欺骗的观众时，无论是制作闪亮东西来给十岁孩子留下印象的人，还是制作明显前卫东西来给准知识分子留下印象的人，学习他们如何做。一旦你看到足够多特定类型把戏的例子，你就开始成为把戏鉴赏家，就像专业魔术师一样。&lt;/p&gt;&#xA;&lt;p&gt;什么算作把戏？大致来说，这是以蔑视观众的方式做的事情。例如，1950年代设计法拉利的人可能是在设计他们自己欣赏的汽车。而我怀疑在通用汽车，营销人员告诉设计师：&amp;ldquo;买SUV的大多数人这样做是为了显得男子气，而不是为了越野驾驶。所以不用担心悬挂系统；只要让那家伙看起来尽可能大和强悍。&amp;rdquo; [6]&lt;/p&gt;&#xA;&lt;p&gt;我认为通过一些努力，你可以让自己几乎不受把戏影响。更难逃脱自己环境的影响，但你至少可以向那个方向移动。方法是在时间和空间上广泛旅行。如果你去看其他文化中人们喜欢的所有不同种类东西，并了解过去人们喜欢的所有不同东西，你可能会发现它改变了你喜欢的东西。我怀疑你是否能让自己成为一个完全普适的人，仅仅因为你只能在一个时间方向上旅行。但如果你发现一件艺术作品同样会吸引你的朋友、尼泊尔人和古希腊人，你可能找到了什么东西。&lt;/p&gt;&#xA;&lt;p&gt;我的主要观点不是如何拥有好品味，而是甚至可能存在这样的事情。而且我认为我已经证明了这一点。存在好艺术这回事。它是吸引人类观众的艺术，由于人类有很多共同点，他们感兴趣的东西不是随机的。既然存在好艺术，也就存在好品味这回事，就是识别它的能力。&lt;/p&gt;&#xA;&lt;p&gt;如果我们谈论的是苹果的品味，我会同意品味只是个人偏好。有些人喜欢某些种类的苹果，其他人喜欢其他种类的，但你如何说一种是对的，另一种是错的？[7]&lt;/p&gt;&#xA;&lt;p&gt;问题是，艺术不是苹果。艺术是人造的。它带有大量的文化包袱，此外，创作它的人经常试图欺骗我们。大多数人对艺术的判断被这些外来因素主导；他们就像试图在由等量苹果和墨西哥辣椒制成的菜中判断苹果的味道。他们尝到的只是辣椒。所以事实证明你可以挑选出一些人说他们比其他人有更好的品味：他们是那些真正尝到艺术像苹果的人。&lt;/p&gt;&#xA;&lt;p&gt;或者更平淡地说，他们是那些（a）难以欺骗，（b）不只是喜欢他们长大的环境中的东西的人。如果你能找到消除了所有这些判断影响的人，你可能仍然看到他们喜欢的东西有变化。但因为人类有这么多共同点，你也会发现他们同意很多事情。他们几乎都会更喜欢西斯廷教堂的天花板而不是空白画布。&lt;/p&gt;&#xA;&lt;h2 id=&#34;创造它&#34;&gt;创造它&lt;/h2&gt;&#xA;&lt;p&gt;我写这篇文章是因为我厌倦了听到&amp;quot;品味是主观的&amp;rdquo;，想要一劳永逸地推翻它。任何创作东西的人凭直觉都知道这不是真的。当你试图创作艺术时，懒惰的诱惑和任何其他工作一样大。当然做好工作很重要。然而你可以看到&amp;quot;品味是主观的&amp;quot;即使在艺术界也有多么大的影响力，通过它让人们谈论艺术好或坏时多么紧张。那些工作要求他们判断艺术的人，如策展人，大多使用委婉语，如&amp;quot;重要的&amp;quot;或&amp;quot;有意义的&amp;quot;或（危险地接近）&amp;ldquo;实现完善的&amp;rdquo;。[8]&lt;/p&gt;&#xA;&lt;p&gt;我并不幻想能够谈论艺术好或坏会导致谈论它的人说出更有用的话。事实上，&amp;ldquo;品味是主观的&amp;quot;找到如此受欢迎观众的一个原因是，历史上人们关于好品味所说的一般都是胡说八道。&lt;/p&gt;&#xA;&lt;p&gt;我想要解放好艺术的想法不是为了那些谈论艺术的人，而是为了那些创作它的人。现在，有抱负的孩子去艺术学校碰壁。他们到达时期望有一天能像他们在书中看到的著名艺术家一样好，而他们学到的第一件事是好的概念已经被退休了。相反，每个人都应该探索自己的个人愿景。[9]&lt;/p&gt;&#xA;&lt;p&gt;当我在艺术学校时，有一天我们在看一幅伟大十五世纪绘画的幻灯片，一个学生问&amp;quot;为什么艺术家现在不像那样绘画？&amp;ldquo;房间突然安静下来。虽然很少大声问出来，这个问题不舒服地潜伏在每个艺术学生的脑海后面。就像有人在菲利普莫里斯公司会议上提出肺癌话题一样。&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;嗯，&amp;ldquo;教授回答，&amp;ldquo;我们现在感兴趣的是不同的问题。&amp;ldquo;他是个相当不错的人，但在当时我不禁希望我能把他送回十五世纪的佛罗伦萨，向列奥纳多和他的同伴们亲自解释我们已经超越了他们早期、有限的艺术概念。想象一下那个对话。&lt;/p&gt;&#xA;&lt;p&gt;事实上，十五世纪佛罗伦萨艺术家创作如此伟大作品的原因之一是他们相信你能创作伟大的作品。[10] 他们竞争激烈，总是试图超越对方，就像今天的数学家或物理学家——也许就像任何真正擅长做任何事情的人。&lt;/p&gt;&#xA;&lt;p&gt;你能创作伟大作品的想法不仅仅是有用的错觉。他们实际上是对的。所以认识到可能存在好艺术的最重要后果是它解放艺术家去尝试创作它。对于今年到达艺术学校有抱负的孩子，希望有一天创作伟大作品，我说：当他们告诉你这是天真过时的抱负时不要相信。存在好艺术这回事，如果你尝试创作它，会有人注意的。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 当然，这并不是说好画必须有人脸，只是每个人的视觉钢琴上都有那个键。在某些情况下你想避免人脸，正是因为它们吸引如此多的注意力。但你可以通过人脸在广告中的普遍性来看它们普遍起作用。&lt;/p&gt;&#xA;&lt;p&gt;[2] 它容易相信的另一个原因是它让人们感觉良好。对孩子来说，这个想法就像毒品。在其他所有方面他们不断被告知他们有很多要学的东西。但在这点上他们是完美的。他们的意见和任何成年人一样有分量。你可能应该质疑你小时候相信的任何你如此想相信的东西。&lt;/p&gt;&#xA;&lt;p&gt;[3] 证明的优雅性可能是可量化的，意思是可能存在某种正式度量，结果与数学家的判断一致。也许值得尝试为证明制作一种形式语言，其中被认为更优雅的证明持续地更短（可能在宏扩展或编译之后）。&lt;/p&gt;&#xA;&lt;p&gt;[4] 也许有可能创作会吸引太空外星人的艺术，但我不会深入讨论，因为（a）太难回答，（b）如果我能确立好艺术是人类观众有意义的概念，我就满意了。&lt;/p&gt;&#xA;&lt;p&gt;[5] 如果早期抽象绘画似乎比后期的更有趣，可能是因为第一个抽象画家受过写生训练，因此他们的手倾向于做出用于表现物理事物的手势。实际上他们在说&amp;quot;scaramara&amp;quot;而不是&amp;quot;uebfgbsb&amp;rdquo;。&lt;/p&gt;&#xA;&lt;p&gt;[6] 这稍微复杂一些，因为有时艺术家通过模仿有把戏的艺术来无意识地使用把戏。&lt;/p&gt;&#xA;&lt;p&gt;[7] 我用苹果的味道来表述，因为如果人们能看到苹果，他们可以被欺骗。当我还是个孩子时，大多数苹果是一种叫红 Delicious 的品种，被培育成在商店里看起来吸引人，但味道不是很好。&lt;/p&gt;&#xA;&lt;p&gt;[8] 公平地说，策展人处境困难。如果他们处理当代艺术，他们必须在展览中包括他们认为坏的东西。这是因为什么被包括在展览中的测试基本上是市场价格，而对于当代艺术，这主要由成功的商人和他们的妻子决定。所以并不总是知识上的不诚实使策展人和经销商使用中性语言。&lt;/p&gt;&#xA;&lt;p&gt;[9] 实践中发生的是每个人都变得非常擅长谈论艺术。随着艺术本身变得更加随机，原本会投入到工作中的努力反而投入到听起来知识性理论中。&amp;ldquo;我的作品代表了城市环境中性别和性取向的探索&amp;quot;等等。不同的人在那个游戏中获胜。&lt;/p&gt;</description>
    </item>
    <item>
      <title>苹果的错误</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/apple/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/apple/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/apple.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;苹果的错误&#34;&gt;苹果的错误&lt;/h1&gt;&#xA;&lt;p&gt;2009年11月&lt;/p&gt;&#xA;&lt;p&gt;我认为苹果没有意识到App Store审批流程有多糟糕。或者说，我认为他们没有意识到这有多重要。&lt;/p&gt;&#xA;&lt;p&gt;苹果运营App Store的方式损害了他们在程序员中的声誉，超过了他们做过的任何其他事情。他们在程序员中的声誉曾经很好。过去你听到的关于苹果最常见的抱怨是，他们的粉丝盲目崇拜他们。App Store改变了这一点。现在很多程序员开始把苹果视为邪恶。&lt;/p&gt;&#xA;&lt;p&gt;苹果曾经与程序员之间的良好意愿有多少因为App Store而丧失了？三分之一？一半？而这还只是到目前为止。App Store是一个持续的因果报应泄露。&lt;/p&gt;&#xA;&lt;h2 id=&#34;苹果是如何陷入这个混乱局面的&#34;&gt;苹果是如何陷入这个混乱局面的？&lt;/h2&gt;&#xA;&lt;p&gt;他们的根本问题是他们不理解软件。&lt;/p&gt;&#xA;&lt;p&gt;他们对待iPhone应用就像对待他们通过iTunes销售的音乐一样。苹果是渠道；他们拥有用户；如果你想接触用户，你就必须按照他们的条件来做。唱片公司勉强同意了。但这种模式不适用于软件。中介拥有用户是行不通的。软件业在1980年代初期就认识到这一点，当时像VisiCorp这样的公司表明，虽然&amp;quot;软件&amp;quot;和&amp;quot;出版商&amp;quot;这两个词很契合，但基本概念并不契合。软件不像音乐或书籍。对于第三方来说，作为开发者和用户之间的中介太复杂了。然而，这正是苹果通过App Store试图成为的：软件出版商。而且是一个特别越界的出版商，有着挑剔的品味和严格执行的内部风格。&lt;/p&gt;&#xA;&lt;p&gt;如果软件出版在1980年行不通，那么在软件开发从少数大型发布演变为持续的小型发布流的今天，它就更行不通了。但苹果也不理解这一点。他们的产品开发模式来自硬件。他们工作直到认为产品完成，然后发布。对于硬件你必须这样做，但因为软件很容易改变，其设计可以从进化中受益。现在开发应用程序的标准方式是快速发布和迭代。这意味着每次发布新版本时都有漫长而随机的延迟是灾难性的。&lt;/p&gt;&#xA;&lt;p&gt;显然，苹果的态度是开发者在向App Store提交新版本时应该更加小心。他们会这么说。但尽管他们很强大，却不足以扭转技术的演变。程序员使用快速发布和迭代不是出于懒惰。他们使用它是因为它能产生最好的结果。通过阻碍这个过程，苹果让他们做糟糕的工作，程序员讨厌这一点，就像苹果自己讨厌一样。&lt;/p&gt;&#xA;&lt;p&gt;如果苹果在发现OS X中的严重错误时，不能立即发布软件更新，而是必须将代码提交给一个中介，这个中介将代码搁置一个月，然后因为它包含一个他们不喜欢的图标而拒绝它，苹果会喜欢吗？&lt;/p&gt;&#xA;&lt;p&gt;通过破坏软件开发，苹果得到了与他们意图相反的结果：当前在App Store中可用的应用版本往往是旧的和有错误的。一个开发者告诉我：&amp;ldquo;由于他们的流程，App Store充满了半成品应用程序。我几乎每天都制作一个新版本发布给测试用户。App Store上的版本感觉老旧和糟糕。&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;我相信很多开发者都有这种感觉：一种情绪是&amp;quot;我并不真正为App Store里的东西感到骄傲&amp;quot;，另一种情绪是&amp;quot;说真的，这是苹果的错。&amp;quot;&lt;/p&gt;&#xA;&lt;p&gt;另一个人写道：&amp;ldquo;我认为他们认为审批流程通过确保质量来帮助用户。实际上，像我们这样的错误总是能通过，然后需要4-8周才能让这个错误修复得到批准，让用户认为iPhone应用有时就是无法工作。对苹果来说更糟糕的是，这些应用在其他有即时审批流程的平台上工作得很好。&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;实际上，我认为苹果有第三个误解：所有关于App Store审批的抱怨都不是一个严重的问题。他们肯定听到开发者在抱怨。但合作伙伴和供应商总是在抱怨。如果他们不抱怨反而是个坏迹象；这意味着你对他们太宽松了。同时，iPhone的销售情况比以往任何时候都好。那么他们为什么需要修复任何东西呢？&lt;/p&gt;&#xA;&lt;p&gt;他们在短期内能够虐待开发者，是因为他们制造了如此出色的硬件。几天前我刚买了一台新的27英寸iMac。它很棒。屏幕太亮了，磁盘出奇地响，但它如此美丽，让你无法让自己在意。&lt;/p&gt;&#xA;&lt;p&gt;所以我买了它，但这次是带着疑虑买的。我感觉就像购买一个人权记录不佳的国家制造的东西时的感觉。这是新的。过去我从苹果买东西时是一种纯粹的快乐。哦，天啊！他们制造了这么棒的东西。这次感觉像是浮士德式的交易。他们制造了这么棒的东西，但他们却是如此混蛋。我真的想支持这家公司吗？&lt;/p&gt;&#xA;&lt;h2 id=&#34;苹果应该关心像我这样的人的想法吗&#34;&gt;苹果应该关心像我这样的人的想法吗？&lt;/h2&gt;&#xA;&lt;p&gt;如果他们疏远了一小部分用户，这有什么区别？&lt;/p&gt;&#xA;&lt;p&gt;有几个原因他们应该关心。一个是这些用户是他们想要作为员工的人。如果你的公司看起来邪恶，最好的程序员不会为你工作。从90年代开始，这对微软伤害很大。程序员开始为在那里工作感到尴尬。感觉像是出卖自己。当微软的人和其他程序员交谈并提到他们工作的地方时，有很多关于&amp;quot;投靠黑暗面&amp;quot;的自嘲笑话。&lt;/p&gt;&#xA;&lt;p&gt;但对微软来说真正的问题不是他们雇用的人的尴尬。而是他们从未得到的人。你知道谁得到了他们吗？谷歌和苹果。如果微软是帝国，他们就是反抗军联盟。谷歌和苹果今天比微软做得好得多，很大程度上是因为他们得到了更多最好的人才。&lt;/p&gt;&#xA;&lt;p&gt;为什么程序员对雇主的道德如此挑剔？部分原因是他们有能力挑剔。最好的程序员可以在任何他们想的地方工作。他们不必为他们有疑虑的公司工作。&lt;/p&gt;&#xA;&lt;p&gt;但我认为程序员挑剔的另一个原因是邪恶滋生愚蠢。一个通过行使权力获胜的组织开始失去通过做更好的工作获胜的能力。对于一个聪明人来说，在一个最好的想法不是获胜的想法的地方工作并不有趣。我认为谷歌如此热衷于&amp;quot;不作恶&amp;quot;的原因，与其说是为了给外界留下印象，不如说是为了预防自己变得傲慢。&lt;/p&gt;&#xA;&lt;p&gt;迄今为止，这对谷歌有效。他们变得更加官僚化，但除此之外，他们似乎坚持了原来的原则。苹果似乎不太如此。当你现在看著名的1984年广告时，更容易想象苹果是屏幕上的独裁者，而不是拿着锤子的女人。事实上，如果你阅读独裁者的演讲，它听起来与App Store的预言惊人地相似：&amp;ldquo;我们已经战胜了无原则的事实传播。我们已经在历史上第一次创造了一个纯粹思想的花园，每个工人都可以在那里不受矛盾和混乱真理的害虫侵扰而安全地绽放。&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;苹果应该关心程序员对他们的看法的另一个原因是，当你销售一个平台时，开发者决定你的成败。如果说有谁应该知道这一点，那应该是苹果。VisiCalc成就了Apple II。&lt;/p&gt;&#xA;&lt;p&gt;程序员为他们使用的平台构建应用程序。大多数应用程序——大多数创业公司，可能——都源自个人项目。苹果本身就是这样。苹果制造微型计算机是因为史蒂夫·沃兹尼亚克自己想要一个。他买不起小型计算机。微软同样开始为微型计算机制作解释器，因为比尔·盖茨和保罗·艾伦有兴趣使用它们。不构建创始人使用的东西的创业公司是罕见的。&lt;/p&gt;&#xA;&lt;p&gt;有这么多iPhone应用的主要原因是这么多程序员有iPhone。他们可能从文章中知道黑莓有这样那样的市场份额。但实际上就好像RIM不存在一样。如果他们要构建什么东西，他们希望自己能够使用它，这意味着构建iPhone应用。&lt;/p&gt;&#xA;&lt;p&gt;所以程序员继续开发iPhone应用，尽管苹果继续虐待他们。他们就像陷入虐待关系中的人。他们被iPhone如此吸引，无法离开。但他们在寻找出路。一个人写道：&amp;ldquo;虽然我确实很享受为iPhone开发，但他们在App Store上施加的控制并没有给我开发应用程序的动力。事实上，除非绝对必要，否则我不打算再制作任何iPhone应用程序。&amp;rdquo;&lt;/p&gt;&#xA;&lt;h2 id=&#34;有什么能打破这个循环吗&#34;&gt;有什么能打破这个循环吗？&lt;/h2&gt;&#xA;&lt;p&gt;到目前为止我见过的设备都不能。Palm和RIM没有希望。唯一可信的竞争者是Android。但Android是个孤儿；谷歌并不真正关心它，不像苹果关心iPhone那样。苹果关心iPhone就像谷歌关心搜索一样。&lt;/p&gt;&#xA;&lt;h2 id=&#34;手持设备的未来是由苹果锁定的吗&#34;&gt;手持设备的未来是由苹果锁定的吗？&lt;/h2&gt;&#xA;&lt;p&gt;这是一个令人担忧的前景。会有另一个像我们在1990年代那样的沉闷单一文化是件令人沮丧的事。1995年，为终端用户编写软件实际上等同于编写Windows应用程序。我们对这种前景的恐惧是推动我们开始构建Web应用程序的最大单一因素。&lt;/p&gt;&#xA;&lt;p&gt;至少我们现在知道要打破苹果的锁定需要什么。你必须让iPhone离开程序员的手。如果程序员使用其他设备进行移动网络访问，他们会开始为该设备开发应用程序。&lt;/p&gt;&#xA;&lt;p&gt;你如何制造一个比iPhone更受程序员喜爱的设备？你不可能制造出设计更好的设备。苹果在这方面没有留下空间。所以这个替代设备可能无法通过普遍吸引力获胜。它必须凭借对程序员特有的某种吸引力获胜。&lt;/p&gt;&#xA;&lt;p&gt;吸引程序员的一种方式是通过软件。如果你能想出一个程序员必须有但在iPhone受限制世界中不可能的应用程序，你大概能让他们转换。&lt;/p&gt;&#xA;&lt;p&gt;如果程序员开始使用手持设备作为开发机器，这肯定会发生——如果手持设备像笔记本电脑取代台式电脑一样取代笔记本电脑。你对开发机器需要的控制比苹果会让你对iPhone的控制更多。&lt;/p&gt;&#xA;&lt;p&gt;有人能制造一个你可以像手机一样放在口袋里，但同时又能作为开发机器工作的设备吗？很难想象它会是什么样子。但我已经学到了永远不要对技术说永远。按现在的标准，一个能作为开发机器工作的手机大小的设备并不比按1995年的标准iPhone本身看起来更神奇。&lt;/p&gt;&#xA;&lt;p&gt;我现在的开发机器是一台MacBook Air，我在办公室里用它连接外接显示器和键盘，旅行时单独使用。如果有半个大小的版本我会更喜欢。那仍然不足以像手机一样随身携带到处带着，但我们还在4倍左右的差距内。当然这个差距是可以弥合的。&lt;/p&gt;&#xA;&lt;p&gt;事实上，让我们把它变成一个RFS（需求说明书）。寻人：拿锤子的女人。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 当谷歌采用&amp;quot;不作恶&amp;quot;时，他们还如此之小，以至于没有人会期望他们如此。&lt;/p&gt;&#xA;&lt;p&gt;[2] 顺便说一句，1984年广告中的独裁者不是微软；是IBM。IBM在那些日子里看起来可怕得多，但他们比现在的苹果对开发者更友好。&lt;/p&gt;&#xA;&lt;p&gt;[3] 他甚至买不起显示器。这就是为什么Apple I使用电视机作为显示器。&lt;/p&gt;&#xA;&lt;p&gt;[4] 我交谈的几个人提到他们多么喜欢iPhone SDK。问题不是苹果的产品，而是他们的政策。幸运的是政策是软件；如果他们愿意，苹果可以立即改变它们。很方便，不是吗？&lt;/p&gt;&#xA;&lt;p&gt;感谢Sam Altman、Trevor Blackwell、Ross Boucher、James Bracy、Gabor Cselle、Patrick Collison、Jason Freedman、John Gruber、Joe Hewitt、Jessica Livingston、Robert Morris、Teng Siong Ong、Nikhil Pandit、Savraj Singh和Jared Tame阅读本文草稿。&lt;/p&gt;</description>
    </item>
    <item>
      <title>融合</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/convergence/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/convergence/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/convergence.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;融合&#34;&gt;融合&lt;/h1&gt;&#xA;&lt;h2 id=&#34;为什么电视输了&#34;&gt;为什么电视输了&lt;/h2&gt;&#xA;&lt;p&gt;2009年3月&lt;/p&gt;&#xA;&lt;p&gt;大约二十年前，人们注意到计算机和电视正在发生碰撞，并开始猜测它们融合时会产生什么。我们现在知道了答案：计算机。现在很清楚，即使使用&amp;quot;融合&amp;quot;这个词，我们也给了电视太多的信任。这与其说是融合，不如说是替代。人们可能仍然观看他们称之为&amp;quot;电视节目&amp;quot;的东西，但他们主要会在电脑上观看。&lt;/p&gt;&#xA;&lt;p&gt;是什么决定了计算机的胜利？四种力量，其中三种是可以预见的，一种则较难预见。&lt;/p&gt;&#xA;&lt;p&gt;一个可预见的胜利原因是互联网是一个开放平台。任何人都可以在上面构建任何他们想要的东西，市场选择胜者。因此，创新以黑客速度而非大公司速度发生。&lt;/p&gt;&#xA;&lt;p&gt;第二个是摩尔定律，它对互联网带宽发挥了通常的魔力。[1]&lt;/p&gt;&#xA;&lt;p&gt;计算机获胜的第三个原因是盗版。用户喜欢它不仅因为它是免费的，还因为它更方便。Bittorrent和YouTube已经训练了新一代观众，让他们知道观看节目的地方是在电脑屏幕上。[2]&lt;/p&gt;&#xA;&lt;p&gt;更令人惊讶的力量是一种特定类型的创新：社交应用。普通青少年孩子与朋友交谈的能力几乎是无限的。但他们不能一直与朋友在一起。我在高中的时候解决方案是电话。现在是社交网络、多人游戏和各种消息应用。接触它们所有的方式是通过计算机。[3]这意味着每个青少年孩子（a）想要一台连接互联网的计算机，（b）有动力学习如何使用它，（c）在它前面花费无数小时。&lt;/p&gt;&#xA;&lt;p&gt;这是最强大的力量。这就是让每个人都想要计算机的原因。技术迷们得到计算机是因为他们喜欢它们。然后游戏玩家们得到计算机来玩游戏。但让其他人都想要计算机的是与其他人联系：这就是让连奶奶和14岁女孩都想要计算机的原因。在几十年将静脉输液直接注入观众的过程中，娱乐行业的人们可以理解地将他们视为相当被动的。他们以为他们能够支配节目到达观众的方式。但他们低估了他们彼此联系的欲望的力量。&lt;/p&gt;&#xA;&lt;p&gt;Facebook杀死了电视。当然，这是极度简化的，但可能是你能用三个词得到的最接近真相的答案。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;电视网络似乎已经不情愿地看到事情的发展方向，并做出了回应，不情愿地将他们的内容放在网上。但他们仍在拖后腿。他们似乎仍然希望人们在电视上观看节目，就像把故事放在网上的报纸仍然似乎希望人们等到第二天早上阅读印刷在纸上的版本一样。他们都应该面对互联网是主要媒介的事实。&lt;/p&gt;&#xA;&lt;p&gt;如果他们早点这样做，他们会处于更有利的位置。当一个新的媒介出现，强大到足以让在位者感到紧张时，那么它可能强大到足以获胜，他们能做的最好的事情就是立即跳入。&lt;/p&gt;&#xA;&lt;p&gt;不管他们喜欢与否，重大的变化即将到来，因为互联网消解了广播媒体的两大基石：同步性和本地性。在互联网上，你不必向每个人发送相同的信号，也不必从本地源发送给他们。人们将在他们想要的时候观看他们想要的东西，并根据他们最强烈的共同兴趣进行分组。也许他们最强烈的共同兴趣将是他们的物理位置，但我猜不是。这意味着地方电视可能已经死了。它是旧技术施加的限制的产物。如果现在有人从头创建一个基于互联网的电视公司，他们可能有一些针对特定地区的节目的计划，但这不会是首要任务。&lt;/p&gt;&#xA;&lt;p&gt;同步性和本地性是联系在一起的。电视网络附属机构关心10点播放什么，因为这样可以给11点的本地新闻带来观众。然而，这种联系增加了更多的脆弱性而不是力量：人们不是在10点观看节目，因为他们想之后观看新闻。&lt;/p&gt;&#xA;&lt;p&gt;电视网络将对抗这些趋势，因为他们没有足够的灵活性来适应它们。他们受到地方附属机构的束缚，就像汽车公司受到经销商和工会的束缚一样。不可避免的是，运行网络的人将采取简单的路线，并试图让旧模式再运行几年，就像唱片公司所做的那样。&lt;/p&gt;&#xA;&lt;p&gt;《华尔街日报》最近的一篇文章描述了电视网络如何试图增加更多直播节目，部分原因是迫使观众同步观看电视，而不是在适合他们的时候观看录制的节目。他们不是提供观众想要的东西，而是试图强迫他们改变习惯以适应网络过时的商业模式。除非你有垄断或卡特尔来强制执行，否则这永远不会奏效，即使那样也只是暂时有效。&lt;/p&gt;&#xA;&lt;p&gt;网络喜欢直播节目的另一个原因是它们制作成本更低。在那里他们有正确的想法，但他们没有把它推到结论。直播内容可能比网络意识到的便宜得多，利用成本大幅下降的方法是增加数量。网络被看到这整个推理路线所阻止，因为他们仍然认为自己在广播业务中——向每个人发送一个信号。[4]&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;现在是创办任何与电视网络竞争的公司的好时机。这就是很多互联网初创公司在做的事情，尽管他们可能没有把这个作为明确的目标。人们每天只有这么多的休闲时间，而电视是以长时段为前提的（不像谷歌，以快速发送用户为荣），所以占用他们时间的任何东西都在与它竞争。但除了这样的间接竞争对手，我认为电视公司将面临越来越多的直接竞争对手。&lt;/p&gt;&#xA;&lt;p&gt;即使在有线电视中，长尾也被启动新频道必须跨越的门槛过早地截断了。在互联网上它会更长，并且在其中会有更多的流动性。在这个新世界中，现有的参与者将只拥有任何大公司在其市场中的优势。&lt;/p&gt;&#xA;&lt;p&gt;这将改变网络和节目制作人之间的权力平衡。网络曾经是守门人。他们分发你的作品，并在上面销售广告。现在制作节目的人可以自己分发。网络现在提供的主要价值是广告销售。这将使他们处于服务提供商而非出版商的位置。&lt;/p&gt;&#xA;&lt;p&gt;节目将发生更大的变化。在互联网上，没有理由保持他们当前的格式，甚至没有理由保持他们拥有单一格式的事实。确实，即将到来的更有趣的融合是在节目和游戏之间。但对于20年互联网上分发什么样的娱乐，我不敢做出任何预测，除了事情会变化很大。我们将得到最有想象力的人能创造出的任何东西。这就是互联网获胜的原因。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 感谢Trevor Blackwell提出这个观点。他补充说：&amp;ldquo;我记得在90年代初，电话公司高管在谈论融合时眼睛闪闪发光。他们认为大多数节目将按需提供，他们将实施它并赚很多钱。结果没有奏效。他们假设他们的本地网络基础设施对于视频点播至关重要，因为你不可能通过互联网从几个数据中心流式传输。当时（1992年）整个跨州互联网带宽都不足以支持一个视频流。但广域带宽比他们预期的增长更多，他们被iTunes和Hulu击败了。&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;[2] 版权所有者倾向于关注他们看到的盗版方面，即收入损失。因此他们认为推动用户这样做的是免费获得某些东西的愿望。但iTunes表明，如果你让事情变得容易，人们会为在线内容付费。盗版的一个重要因素只是它提供了更好的用户体验。&lt;/p&gt;&#xA;&lt;p&gt;[3] 或者实际上是一台计算机的手机。我没有对将取代电视的设备大小做出任何预测，只是它将有一个浏览器并通过互联网获取数据。&lt;/p&gt;&#xA;&lt;p&gt;[4] Emmett Shear写道：&amp;ldquo;我认为体育的长尾可能比其他类型内容的长尾更大。任何人都可以广播一场对约10,000人有趣的高中橄榄球比赛，即使制作质量不是很好。&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;感谢Sam Altman、Trevor Blackwell、Nancy Cook、Michael Seibel、Emmett Shear和Fred Wilson阅读本文的草稿。&lt;/p&gt;&#xA;&lt;h2 id=&#34;相关&#34;&gt;相关&lt;/h2&gt;&#xA;&lt;p&gt;日语翻译&lt;/p&gt;</description>
    </item>
    <item>
      <title>融资生存指南</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/fundraising/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/fundraising/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/fundraising.md&#34;&gt;English version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;融资生存指南&#34;&gt;融资生存指南&lt;/h1&gt;&#xA;&lt;p&gt;2008年8月&lt;/p&gt;&#xA;&lt;p&gt;融资是创业的第二难事。最难的事情是做出人们想要的东西：大多数死亡的创业公司都是因为没有做到这一点而死亡。但第二大死亡原因可能是融资的困难。融资是残酷的。&lt;/p&gt;&#xA;&lt;p&gt;它如此残酷的一个原因仅仅是市场的残酷性。一生中大部分时间都在学校或大公司度过的人可能没有接触过这一点。教授和老板通常对你有一定的责任感；如果你做出了英勇的努力但失败了，他们会给你一个机会。市场则不那么宽容。客户不关心你工作多努力，只关心你是否解决了他们的问题。&lt;/p&gt;&#xA;&lt;p&gt;投资者评估创业公司的方式是客户评估产品的方式，而不是老板评估员工的方式。如果你做出了英勇的努力但失败了，也许他们会投资你的下一个创业公司，但不会是这个。&lt;/p&gt;&#xA;&lt;p&gt;但从投资者那里融资比向客户销售更难，因为投资者太少了。没有什么比得上有效的市场。你不太可能有超过10个感兴趣的投资者；很难与更多的人交谈。所以任何一个投资者的行为随机性真的会影响到你。&lt;/p&gt;&#xA;&lt;p&gt;问题3：投资者非常随机。所有投资者，包括我们在内，按照普通标准都是不称职的。我们不断地对我们不理解的事情做出决定，而且往往是错的。&lt;/p&gt;&#xA;&lt;p&gt;然而，风险很大。不同类型投资者投资的金额从五千美元到五千万美元不等，但对于任何类型的投资者来说，这个金额通常看起来都很大。投资决策是大决策。&lt;/p&gt;&#xA;&lt;p&gt;这种组合——对他们不理解的事情做出重大决策——往往使投资者非常神经质。风险投资家以引导创始人而臭名昭著。一些更无耻的人是故意这样做的。但即使是最善意的投资者也可能表现出在日常生活中看起来疯狂的行为方式。有一天他们充满热情，似乎准备当场给你写支票；第二天他们就不回你的电话了。他们不是在和你玩游戏。他们只是下不了决心。[1]&lt;/p&gt;&#xA;&lt;p&gt;如果这还不够糟糕，这些 wildly fluctuating nodes 都连接在一起。创业投资者都相互认识，并且（尽管他们讨厌承认）他们对你的看法的最大因素是其他投资者的看法。[2] 谈论不稳定系统的配方。你得到了恐惧/贪婪平衡通常在市场中产生的阻尼的相反情况。没有人对一个因为其他人都讨厌而成为&amp;quot;便宜货&amp;quot;的创业公司感兴趣。&lt;/p&gt;&#xA;&lt;p&gt;所以因为玩家太少而导致的低效市场，因为他们行为不那么独立而加剧。结果是一个像某种原始的多细胞海洋生物的系统，在那里你刺激一个 extremity，整个东西都会猛烈收缩。&lt;/p&gt;&#xA;&lt;p&gt;Y Combinator 正在努力解决这个问题。我们正在努力增加投资者的数量，就像我们增加创业公司的数量一样。我们希望随着两者数量的增加，我们会得到更像有效市场的东西。当 t 趋近于无穷大时，演示日趋近于拍卖会。&lt;/p&gt;&#xA;&lt;p&gt;不幸的是，t 仍然离无穷大很远。创业公司现在在我们居住的不完美世界中应该做什么？最重要的事情是不要让融资让你沮丧。创业公司生或死取决于士气。如果你让融资的困难摧毁你的士气，它将成为一个自我实现的预言。&lt;/p&gt;&#xA;&lt;h3 id=&#34;自力更生-咨询&#34;&gt;自力更生（= 咨询）&lt;/h3&gt;&#xA;&lt;p&gt;一些可能的创始人现在可能在想，为什么还要与投资者打交道？如果融资如此痛苦，为什么要这样做？&lt;/p&gt;&#xA;&lt;p&gt;一个答案是显而易见的：因为你需要钱来生活。用创业公司自己的收入来融资原则上是个好主意，但你不能创造即时客户。无论你制造什么，你必须销售一定数量才能收支平衡。将你的销售增长到那个点需要时间，而且在尝试之前很难预测需要多长时间。&lt;/p&gt;&#xA;&lt;p&gt;例如，我们不能自力更生地建立 Viaweb。我们的软件收费相当高——每个用户每月大约140美元——但至少一年后我们的收入才能覆盖我们微薄的成本。我们没有足够的积蓄维持一年。&lt;/p&gt;&#xA;&lt;p&gt;如果你排除那些实际上是由创始人通过储蓄或日常工作资助的&amp;quot;自力更生&amp;quot;公司，其余的要么（a）真的很幸运，这很难按需做到，或者（b）开始时是咨询公司，然后逐渐转变为产品公司。&lt;/p&gt;&#xA;&lt;p&gt;咨询是你可以依靠的唯一选择。但咨询远不是免费的钱。它可能不像从投资者那里融资那么痛苦，但痛苦会分散在更长的时间段内。可能是几年。对于许多类型的创业公司来说，这种延迟可能是致命的。如果你正在处理如此独特以至于没有其他人可能想到的事情，你可以慢慢来。Joshua Schachter 在华尔街工作时逐渐在业余时间建立了 Delicious。他逃脱了惩罚，因为没有其他人意识到这是个好主意。但如果你在 Viaweb 大约同一时间构建像在线商店软件这样明显必要的东西，而且你在业余时间工作，同时将大部分时间花在客户工作上，你并不处于有利位置。&lt;/p&gt;&#xA;&lt;p&gt;自力更生在原则上听起来很棒，但这个看似 verdant 的领域很少有创业公司能够活着出来。仅仅因为自力更生的创业公司因此而出名这一事实就应该敲响警钟。如果它工作得这么好，那就会是常态。[3] 自力更生可能会变得更容易，因为创办公司正变得越来越便宜。但我认为我们永远不会达到大多数创业公司可以不需要外部资金的地步。技术往往会大幅降价，但生活费用不会。&lt;/p&gt;&#xA;&lt;p&gt;结果是，你可以选择你的痛苦：要么是融资的短暂尖锐痛苦，要么是咨询的慢性疼痛。对于给定的总痛苦量，融资是更好的选择，因为新技术通常现在比以后更有价值。&lt;/p&gt;&#xA;&lt;p&gt;但是，虽然对于大多数创业公司来说，融资将是较小的邪恶，但它仍然是一个相当大的邪恶——大到足以轻易杀死你。不仅仅是因为如果你融资失败你可能不得不关闭公司这个显而易见的原因，还因为融资过程本身可以杀死你。&lt;/p&gt;&#xA;&lt;p&gt;为了生存，你需要一套与说服投资者使用的技术大部分正交的技术，就像登山者需要知道生存技术，而这些技术与实际上下山所使用的技术大部分正交一样。&lt;/p&gt;&#xA;&lt;h3 id=&#34;1-保持低期望&#34;&gt;1. 保持低期望。&lt;/h3&gt;&#xA;&lt;p&gt;融资摧毁这么多创业公司士气的原因不仅仅是因为它很难，而是因为它比他们预期的要难得多。杀死你的是失望。你的期望越低，就越难感到失望。&lt;/p&gt;&#xA;&lt;p&gt;创业创始人往往是乐观的。这在技术中有时可能工作得很好，但这是接近融资的错误方式。最好假设投资者总会让你失望。收购方也是如此，顺便说一句。在 YC，我们的次要口头禅之一是&amp;quot;交易会失败&amp;quot;。无论你正在进行什么交易，都要假设它会失败。这个简单规则的预测能力是惊人的。&lt;/p&gt;&#xA;&lt;p&gt;随着交易的进展，会有一种倾向开始相信它会发生，然后依赖它发生。你必须抵抗这一点。把自己绑在桅杆上。这才是杀死你的原因。交易没有像大多数其他人类互动那样的轨迹，在那里共享计划随时间线性巩固。交易经常在最后一刻失败。通常对方直到最后一刻才真正思考他们想要什么。所以你不能使用你对共享计划的日常直觉作为指导。当涉及交易时，你必须有意识地关闭它们，变得病态地愤世嫉俗。&lt;/p&gt;&#xA;&lt;p&gt;这比听起来更难。当著名的投资者似乎有兴趣资助你时，这是非常令人高兴的。很容易开始相信融资会快速而直接。但几乎从来都不是这样。&lt;/p&gt;&#xA;&lt;h3 id=&#34;2-继续在你的创业公司上工作&#34;&gt;2. 继续在你的创业公司上工作。&lt;/h3&gt;&#xA;&lt;p&gt;在融资时继续在你的创业公司上工作，这听起来很明显。实际上这很难做到。大多数创业公司没有做到。&lt;/p&gt;&#xA;&lt;p&gt;融资有一种神秘的能力，可以吸走你所有的注意力。即使你每天只有一个与投资者的会议，不知何故那个会议会消耗你一整天。它不仅仅是实际会议的时间，还有往返的时间，之前准备的时间和之后思考的时间。&lt;/p&gt;&#xA;&lt;p&gt;在投资者会议上生存分心的最好方法可能是将公司分开：选择一个创始人处理投资者，而其他人让公司继续运转。当创业公司有3个创始人而不是2个时，这工作得更好，而且当公司的领导者不是首席开发人员时更好。在最好的情况下，公司继续以大约一半的速度前进。&lt;/p&gt;&#xA;&lt;p&gt;不过，那是最好的情况。公司往往在融资时陷入停顿。这对如此多的原因都是危险的。融资总是比预期需要更长的时间。看起来像是一个2周的中断变成了4个月的中断。这可能非常令人沮丧。更糟糕的是，它可能使你对投资者失去吸引力。他们想要投资于有活力的公司。一个4个月内没有做任何新事情的公司似乎没有活力，所以他们开始失去兴趣。投资者很少理解这一点，但当他们对创业公司失去兴趣时，他们所回应的大部分是他们自己 indecision 造成的损害。&lt;/p&gt;&#xA;&lt;p&gt;解决方案：把创业公司放在第一位。把与投资者的会议塞进你开发计划的空闲时刻，而不是在投资者会议之间的空闲时刻进行开发。如果你让公司继续前进——发布新功能，增加流量，做交易，被报道——那些投资者会议更有可能富有成效。不仅因为你的创业公司看起来更有活力，还因为它对你的士气更好，而士气是投资者评判你的主要方式之一。&lt;/p&gt;&#xA;&lt;h3 id=&#34;3-保持保守&#34;&gt;3. 保持保守。&lt;/h3&gt;&#xA;&lt;p&gt;随着情况变得更糟，最优策略变得更加保守。当事情进展顺利时，你可以冒险；当情况不好时，你想安全行事。&lt;/p&gt;&#xA;&lt;p&gt;我建议像总是进展不好一样接近融资。原因是在你欺骗自己的能力和你面对系统的 wildly unstable nature 之间，事情可能已经或者很容易变得比看起来糟糕得多。&lt;/p&gt;</description>
    </item>
    <item>
      <title>让另外95%的优秀程序员进来</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/95/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/95/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/95.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;让另外95的优秀程序员进来&#34;&gt;让另外95%的优秀程序员进来&lt;/h1&gt;&#xA;&lt;p&gt;让另外95%的优秀程序员进来 2014年12月&lt;/p&gt;&#xA;&lt;p&gt;美国科技公司希望政府让移民更容易，因为它们说在美国找不到足够的程序员。反移民人士说，与其让外国人占据这些工作，我们应该培训更多的美国人成为程序员。谁是对的？&lt;/p&gt;&#xA;&lt;p&gt;科技公司是对的。反移民人士不理解的是，合格的程序员和杰出的程序员之间在能力上存在巨大差异，虽然你可以培训人们成为合格的程序员，但你无法培训他们成为杰出的程序员。杰出的程序员对编程有天生的才能和兴趣，这不仅仅是培训的产物。[1]&lt;/p&gt;&#xA;&lt;p&gt;美国占世界人口不到5%。这意味着如果使某人成为优秀程序员的特质是均匀分布的，那么95%的优秀程序员都出生在美国以外。&lt;/p&gt;&#xA;&lt;p&gt;反移民人士必须编造一些解释来说明科技公司为使移民更容易而付出的所有努力。所以他们声称这是因为它们想压低工资。但如果你与创业公司交谈，你会发现几乎所有达到一定规模的公司都经历了法律上的周折来让程序员进入美国，在那里他们支付给这些程序员的工资与支付给美国人的相同。为什么他们要为以相同价格获得程序员而额外费心？唯一的解释是他们在说实话：根本没有足够多的优秀程序员可供分配。[2]&lt;/p&gt;&#xA;&lt;p&gt;我问了一家拥有约70名程序员的创业公司的CEO，如果他能获得所有他想要的优秀程序员，他会再雇佣多少。他说&amp;quot;明天早上我们就会雇佣30名。&amp;ldquo;而这是一家总是在招聘战中获胜的热门创业公司。整个硅谷都是如此。创业公司在人才方面如此受限。&lt;/p&gt;&#xA;&lt;p&gt;如果更多的美国人接受编程培训那将是很好的，但没有任何培训能够改变95比5这样压倒性的比例。特别是由于其他国家也在培训程序员。除非发生灾难，否则大多数优秀程序员都出生在美国以外这一事实将永远成立。大多数在任何方面优秀的人都出生在美国以外这一事实也将永远成立。[3]&lt;/p&gt;&#xA;&lt;p&gt;卓越的表现意味着移民。一个只占世界人口百分之几的国家只有在某个领域有大量移民工作的情况下才能在该领域表现出色。&lt;/p&gt;&#xA;&lt;p&gt;但整个讨论都理所当然地认为：如果我们让更多的优秀程序员进入美国，他们会想要来。现在这是真的，我们没有意识到我们有多么幸运。如果我们想保持这个选择开放，最好的方法是利用它：世界上越多的优秀程序员在这里，其余的就会越想要来这里。&lt;/p&gt;&#xA;&lt;p&gt;如果我们不这样做，美国可能会彻底完蛋。我意识到这是强烈的措辞，但对此犹豫不决的人似乎没有意识到这里发挥作用的力量有多大。技术给最好的程序员带来了巨大的杠杆作用。程序员的世界市场似乎正在变得更加流动性。而且由于优秀的人喜欢优秀的同事，这意味着最好的程序员可能会聚集在少数几个中心。可能主要在一个中心。&lt;/p&gt;&#xA;&lt;p&gt;如果大多数优秀程序员聚集在一个中心，而那个中心不在这里怎么办？这个场景现在可能看起来不太可能，但如果未来50年的变化与过去50年一样大，它就不会不太可能了。&lt;/p&gt;&#xA;&lt;p&gt;我们有可能仅仅通过每年让几千名优秀程序员进入美国就确保美国保持技术超级大国的地位。让这个机会溜走将是一个多么巨大的错误。这很容易成为这一代美国政客后来出名的决定性错误。与该规模的其他潜在错误不同，修复它的成本为零。&lt;/p&gt;&#xA;&lt;p&gt;所以，请继续吧。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 优秀程序员比普通程序员好多少？好到你甚至无法直接衡量差异。优秀程序员不仅仅是更快地完成相同的工作。优秀程序员会发明普通程序员甚至想不到的东西。这并不意味着优秀程序员的价值无限大，因为任何发明都有有限的市场价值。但很容易想象在某些情况下，优秀程序员可能会发明价值达到普通程序员工资100倍甚至1000倍的东西。&lt;/p&gt;&#xA;&lt;p&gt;[2] 有少数咨询公司出租大量通过H1-B签证带入的外国程序员。一定要打击这些。应该很容易写立法来区分它们，因为它们与技术公司如此不同。但反移民人士声称像谷歌和脸书这样的公司是由相同的动机驱动是不诚实的。廉价但平庸的程序员涌入是他们最不想要的事情；那会毁掉他们。&lt;/p&gt;&#xA;&lt;p&gt;[3] 虽然这篇文章谈论的是程序员，但我们需要引进的群体更广泛，从设计师到程序员再到电气工程师。作为通用术语，最好的可能是&amp;quot;数字人才&amp;rdquo;。似乎让论证过于狭窄比用新词混淆每个人要好。&lt;/p&gt;&#xA;&lt;p&gt;感谢萨姆·奥特曼、约翰·科利森、帕特里克·科利森、杰西卡·利文斯顿、杰夫·拉尔斯顿、弗雷德·威尔逊和卡萨尔·尤尼斯阅读本文的草稿。&lt;/p&gt;&#xA;&lt;p&gt;西班牙语翻译&lt;/p&gt;&#xA;&lt;hr&gt;</description>
    </item>
    <item>
      <title>设计与研究</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/desres/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/desres/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/desres.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;设计与研究&#34;&gt;设计与研究&lt;/h1&gt;&#xA;&lt;p&gt;2003年1月&lt;/p&gt;&#xA;&lt;p&gt;（本文源自2002年秋季NEPLS会议的主题演讲。）&lt;/p&gt;&#xA;&lt;p&gt;访问这个国家的人常常惊讶地发现，美国人喜欢以询问&amp;quot;你是做什么的？&amp;ldquo;来开始对话。我从来不喜欢这个问题。我很少有一个简洁的答案。但我想我终于解决了这个问题。现在，当有人问我做什么时，我会直视他们的眼睛说&amp;quot;我正在设计一种新的Lisp方言。&amp;ldquo;我推荐这个答案给任何不喜欢被问及做什么的人。对话会立即转向其他话题。&lt;/p&gt;&#xA;&lt;p&gt;我不认为自己在研究编程语言。我只是在设计一种，就像有人可能设计一座建筑、一把椅子或一种新字体一样。我不是在试图发现什么新东西。我只是想创造一种编程起来很舒服的语言。在某些方面，这个假设让生活轻松很多。&lt;/p&gt;&#xA;&lt;p&gt;设计和研究之间的区别似乎是一个新与好的问题。设计不一定要新，但一定要好。研究不一定要好，但一定要新。我认为这两条路在顶端汇合：最好的设计通过使用新思想超越其前人，而最好的研究解决的不仅是新的问题，而且是真正值得解决的问题。所以最终我们的目标是相同的目的地，只是从不同的方向接近。&lt;/p&gt;&#xA;&lt;p&gt;今天我要谈论的是从背面看你的目标是什么样子的。当你把编程语言视为设计问题而非研究课题时，你会做什么不同的事情？&lt;/p&gt;&#xA;&lt;p&gt;最大的区别是你更关注用户。设计始于问，这是为谁而做的，他们从中需要什么？例如，一个好的建筑师不是先创建一个设计然后强加给用户，而是通过研究预期用户并找出他们需要什么来开始。&lt;/p&gt;&#xA;&lt;p&gt;注意我说的是&amp;quot;他们需要的&amp;rdquo;，而不是&amp;quot;他们想要的&amp;rdquo;。我并不是说作为一名设计师工作意味着像快餐厨师一样工作，做客户告诉你的任何事情。这在艺术领域的各个领域都有所不同，但我不认为有任何领域是由那些完全按照客户要求做事的人做出最好的作品的。&lt;/p&gt;&#xA;&lt;p&gt;在衡量好设计的标准是它对用户有多好用这一点上，顾客永远是对的。如果你写了一本让所有人都感到无聊的小说，或者一把坐着极不舒服的椅子，那么你的工作就很糟糕，就是这样。说小说或椅子是根据最先进的理论原理设计的，这并不是辩解。&lt;/p&gt;&#xA;&lt;p&gt;然而，做出对用户有用的东西并不意味着简单地做用户告诉你做的事情。用户不知道所有的选择是什么，而且常常对他们真正想要的东西感到困惑。&lt;/p&gt;&#xA;&lt;p&gt;这个悖论的答案，我认为是你必须为用户设计，但必须设计用户需要的东西，而不是仅仅设计他们说他们想要的东西。这很像做医生。你不能仅仅治疗病人的症状。当病人告诉你他们的症状时，你必须找出真正的问题所在，并治疗那个。&lt;/p&gt;&#xA;&lt;p&gt;这种对用户的关注是一种公理，大多数好的设计实践都可以从中推导出来，大多数设计问题都围绕着它。&lt;/p&gt;&#xA;&lt;p&gt;如果好的设计必须满足用户的需求，那么用户是谁？当我说设计必须为用户时，我并不是说好的设计旨在某种最低标准。你可以选择任何你想要的用户群体。例如，如果你在设计一个工具，你可以为从初学者到专家的任何人设计，而针对一个群体的好设计对另一个群体可能是坏的设计。关键是，你必须选择某个用户群体。我认为除非参考某个预期用户，否则你甚至无法谈论好或坏的设计。&lt;/p&gt;&#xA;&lt;p&gt;如果预期用户包括设计师自己，你最有可能获得好的设计。当你为不包括你自己的群体设计东西时，它往往是为那些你认为比你不够复杂的人设计的，而不是更复杂的。&lt;/p&gt;&#xA;&lt;p&gt;这是一个问题，因为无论多么仁慈，居高临下地看待用户似乎不可避免地会腐蚀设计师。我怀疑美国很少有住房项目是由期望住在那里的建筑师设计的。你可以在编程语言中看到同样的现象。C、Lisp和Smalltalk是为它们自己的设计师使用而创建的。Cobol、Ada和Java是为其他人使用而创建的。&lt;/p&gt;&#xA;&lt;p&gt;如果你认为你在为白痴设计东西，那么很可能你设计的东西不够好，即使是对白痴来说。即使你为最复杂的用户设计东西，你仍然在为人类设计。在研究方面情况不同。在数学中，你选择抽象不是因为它们容易理解，而是因为它们能让证明更短。我认为这对科学大体上也是如此。科学思想并不是为了符合人体工程学。&lt;/p&gt;&#xA;&lt;p&gt;在艺术领域，情况非常不同。设计完全是关于人的。人体是个奇怪的东西，但当你设计一把椅子时，那就是你设计的对象，没有办法回避。所有艺术都必须迎合人类的兴趣和局限性。例如，在绘画中，在其他条件相同的情况下，有人的画比没有人的画更有趣。文艺复兴时期的伟大画作都充满了人，这不仅仅是历史的偶然。如果不是这样，绘画作为媒介就不会拥有它所拥有的声望。&lt;/p&gt;&#xA;&lt;p&gt;不管喜欢与否，编程语言也是为人类服务的，我怀疑人脑就像人体一样凹凸不平且特异。有些思想人们很容易掌握，有些则不然。例如，我们处理细节的能力似乎非常有限。正是这个事实使得编程语言一开始就是个好主意；如果我们能处理细节，我们可以直接用机器语言编程。&lt;/p&gt;&#xA;&lt;p&gt;还要记住，语言主要不是完成程序的形式，而是程序必须在其中开发的东西。任何艺术领域的人都会告诉你，你可能需要不同的媒介来处理这两种情况。例如，大理石是完成思想的漂亮、耐用的媒介，但对于开发新思想来说，它却是一种无可救药的僵化媒介。&lt;/p&gt;&#xA;&lt;p&gt;程序就像证明一样，是一棵树的修剪版本，这棵树过去到处都有错误的分支。所以语言的测试不仅仅是完成的程序在它里面看起来有多干净，而是到达完成程序的路径有多干净。一个能给你优雅完成程序的设计选择可能不会给你一个优雅的设计过程。例如，我写过几个定义宏的宏，充满了嵌套的反引号，现在看起来像小宝石，但写它们花费了数小时最丑陋的试错，而且坦率地说，我仍然不完全确定它们是正确的。&lt;/p&gt;&#xA;&lt;p&gt;我们常常表现得好像语言的测试是完成的程序在它里面看起来有多好。当你看到同一个程序用两种语言编写，一个版本短得多时，这似乎很有说服力。当你从艺术的角度接近这个问题时，你不太可能依赖这种测试。你不想最终得到一个像大理石一样的编程语言。&lt;/p&gt;&#xA;&lt;p&gt;例如，在软件开发中拥有一个交互式顶层（在Lisp中称为读取-求值-打印循环）是一个巨大的胜利。当你有一个这样的东西时，它对语言的设计有实际影响。它对于一个必须在使用前声明变量的语言来说效果不佳，例如。当你只是在顶层输入表达式时，你希望能够将x设置为某个值，然后开始对x做事情。你不想必须先声明x的类型。你可以对任何一个前提提出异议，但如果一个语言必须有顶层才能方便，而强制类型声明与顶层不兼容，那么任何强制类型声明的语言都不可能方便编程。&lt;/p&gt;&#xA;&lt;p&gt;在实践中，要获得好的设计，你必须接近并保持接近你的用户。你必须不断在实际用户上校准你的想法，尤其是在开始时。简·奥斯汀的小说如此之好的原因之一是她把它们大声读给家人听。这就是为什么她从不沉溺于自我放纵的风景描述或矫饰的哲学思考。（哲学在那里，但它被编织进故事中，而不是像标签一样粘贴在上面。）如果你打开一本普通的&amp;quot;文学&amp;quot;小说，想象把它作为你写的东西大声读给朋友听，你会敏锐地感觉到那种东西对读者来说是多么令人难以忍受。&lt;/p&gt;&#xA;&lt;p&gt;在软件世界，这个想法被称为&amp;quot;较差就是更好&amp;quot;。实际上，&amp;ldquo;较差就是更好&amp;quot;的概念中混合了几个想法，这就是为什么人们仍在争论较差是否真的更好。但这个混合中的主要思想之一是，如果你在构建新东西，你应该尽快将原型放到用户面前。&lt;/p&gt;&#xA;&lt;p&gt;另一种方法可能叫做&amp;quot;万福玛丽亚策略&amp;rdquo;。你不是快速拿出原型并逐步改进它，而是试图在一次长传触地中创建完整、完成的产品。据我所知，这是灾难的根源。无数创业公司在互联网泡沫期间这样自我毁灭。我从未听说过有成功的案例。&lt;/p&gt;&#xA;&lt;p&gt;软件世界之外的人可能没有意识到的是，&amp;ldquo;较差就是更好&amp;quot;的思想在整个艺术领域都有体现。例如，在绘画中，这个思想在文艺复兴时期被发现。现在几乎每个绘画老师都会告诉你，获得准确绘画的正确方法不是慢慢地围绕物体的轮廓工作，因为错误会累积，最后你会发现线条不相遇。相反，你应该在大致正确的地方画几条快速的线，然后逐渐完善这个初始草图。&lt;/p&gt;&#xA;&lt;p&gt;在大多数领域，传统上原型是用不同材料制作的。要切割成金属的字体最初是用刷子在纸上设计的。要铸成青铜的雕像是用蜡建模的。要在挂毯上刺绣的图案是用墨水在纸上绘制的。要用石头建造的建筑是在较小规模的木材上测试的。&lt;/p&gt;&#xA;&lt;p&gt;当油画在十五世纪首次流行时令人兴奋的原因是，你实际上可以从原型制作完成的作品。如果你愿意，可以做一个初步的绘图，但你不必受它约束；你可以在完成绘画时解决所有细节，甚至做重大改变。&lt;/p&gt;&#xA;&lt;p&gt;在软件中你也可以这样做。原型不一定只是一个模型；你可以将其精制成成品。我认为你应该在可能的时候总是这样做。它能让你利用一路上获得的新见解。但也许更重要的是，它对士气有好处。&lt;/p&gt;&#xA;&lt;p&gt;士气在设计中至关重要。我很惊讶人们不多谈论它。我的第一个绘画老师告诉我：当你画某样东西感到无聊时，画出来的东西看起来会很无聊。例如，假设你必须画一栋建筑，你决定单独画每一块砖。如果你愿意，你可以这样做，但如果你中途感到无聊并开始机械地画砖而不是观察每一块，那么画出来的效果会比仅仅暗示砖块要差。&lt;/p&gt;&#xA;&lt;p&gt;通过逐步完善原型来建造东西对士气有好处，因为它能让你保持投入。在软件中，我的规则是：始终有可工作的代码。如果你正在写一小时内可以测试的东西，那么你有立即获得奖励的前景来激励你。在艺术领域也是如此，特别是在油画中。大多数画家从模糊的草图开始，然后逐步完善。如果你这样工作，那么原则上你永远不必在一天结束时留下看起来确实未完成的东西。确实，画家之间甚至有句谚语：&amp;ldquo;一幅画永远不会完成，你只是停止在上面工作。&amp;ldquo;这个想法对任何做过软件的人来说都很熟悉。&lt;/p&gt;&#xA;&lt;p&gt;士气是难以设计给不够复杂用户的另一个原因。很难对自己不喜欢的东西保持兴趣。要做出好东西，你必须想&amp;quot;哇，这真的很棒&amp;rdquo;，而不是&amp;quot;这是什么垃圾；那些傻瓜会喜欢它&amp;rdquo;。&lt;/p&gt;&#xA;&lt;p&gt;设计意味着为人类制造东西。但不仅仅是用户是人。设计师也是人。&lt;/p&gt;&#xA;&lt;p&gt;注意这段时间我一直在谈论&amp;quot;设计师&amp;rdquo;。设计通常必须由单个人控制才能做好。然而，似乎几个人可以合作进行一个研究项目。这在我看来是研究和设计之间最有趣的区别之一。&lt;/p&gt;&#xA;&lt;p&gt;艺术领域有著名合作的例子，但它们大多数似乎是分子结合而不是核融合的情况。在歌剧中，通常由一个人写剧本，另一个人写音乐。在文艺复兴时期，来自北欧的工匠经常被雇佣来做意大利绘画背景中的风景。但这些不是真正的合作。它们更像是罗伯特·弗罗斯特&amp;quot;好篱笆造就好邻居&amp;quot;的例子。你可以把好的设计实例粘在一起，但在每个单独的项目中，一个人必须处于控制地位。&lt;/p&gt;&#xA;&lt;p&gt;我不是说好的设计要求一个人思考所有事情。没有什么比一个你信任其判断的人的建议更有价值了。但谈话结束后，关于做什么的决定必须由一个人来做。&lt;/p&gt;&#xA;&lt;p&gt;为什么研究可以由合作者完成而设计不能？这是一个有趣的问题。我不知道答案。也许，如果设计和研究汇合，最好的研究也是好的设计，而且实际上不能由合作者完成。许多最著名的科学家似乎都是独自工作的。但我了解得不够多，无法说这里是否有模式。这可能仅仅是因为许多著名科学家工作时合作不那么普遍。&lt;/p&gt;&#xA;&lt;p&gt;无论科学领域的情况如何，真正的合作在艺术领域似乎极为罕见。委员会设计是坏设计的同义词。为什么会这样？有什么方法可以克服这个限制吗？&lt;/p&gt;&#xA;&lt;p&gt;我倾向于认为没有——好的设计需要一个独裁者。一个原因是好的设计必须是一体的。设计不仅是为人类，而是为单个的人。如果一个设计代表的思想适合一个人的头脑，那么这个思想也会适合用户的头脑。&lt;/p&gt;&#xA;&lt;p&gt;相关链接：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.aoky.net/articles/paul_graham/design_and_research_japanese.htm&#34;&gt;日语翻译&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;../essays_zh/taste.html&#34;&gt;制造者的品味&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.cs.kent.ac.uk/people/staff/srk21/research/papers/graham/design_and_research_romanian.pdf&#34;&gt;罗马尼亚语翻译&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.barrahome.org/blog/articulos/diseno_e_investigacion&#34;&gt;西班牙语翻译&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>证书</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/credentials/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/credentials/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/credentials.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;证书&#34;&gt;证书&lt;/h1&gt;&#xA;&lt;h2 id=&#34;证书之后&#34;&gt;证书之后&lt;/h2&gt;&#xA;&lt;p&gt;2008年12月&lt;/p&gt;&#xA;&lt;p&gt;几个月前，我读到一篇《纽约时报》关于韩国补习学校的文章，说进入合适的大学可以决定雄心勃勃的韩国年轻人的成败。一位家长补充说：&amp;ldquo;在我国，大学入学考试决定一个人未来的70%到80%。&amp;quot;。令人震惊的是这听起来多么老派。然而，当我在高中时，作为对美国的描述，这听起来并不过分。这意味着这里的情况一定发生了变化。&lt;/p&gt;&#xA;&lt;p&gt;现在，人们在美国的生活进程似乎比25年前更少地由证书决定，而更多地由表现决定。你上哪所大学仍然重要，但不像以前那样。&lt;/p&gt;&#xA;&lt;p&gt;发生了什么？&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;根据学术证书判断人在当时是一种进步。这种做法似乎始于中国，从587年开始，帝国公务员候选人必须参加古典文学考试。[1] 这也是对财富的测试，因为它测试的知识如此专业化，通过需要多年的昂贵培训。虽然财富是通过的必要条件，但不是充分条件。按照587年世界其他地方的标准，中国的制度非常开明。欧洲直到十九世纪才引入正式的公务员考试，即使如此，他们似乎也受到了中国例子的影响。&lt;/p&gt;&#xA;&lt;p&gt;在证书之前，政府职位主要通过家庭影响力获得，如果不是赤裸裸的贿赂的话。通过测试表现来判断人是一个巨大的进步。但绝不是完美的解决方案。当你那样判断人时，你往往会得到补习学校——他们在中国明朝和十九世纪的英格兰就像在今天的韩国一样。&lt;/p&gt;&#xA;&lt;p&gt;补习学校实际上是密封中的漏洞。使用证书是试图封堵代际之间权力的直接传递，而补习学校代表权力找到密封中的漏洞。补习学校将一代人的财富转化为下一代人的证书。&lt;/p&gt;&#xA;&lt;p&gt;很难打败这种现象，因为学校会调整以适应测试测量的任何内容。当测试狭窄且可预测时，你会得到经典模式的补习学校，像那些为桑赫斯特（英国的西点军校）准备候选人的学校，或者美国学生现在为提高SAT分数而上的课程。但随着测试变得更广泛，学校也会如此。为中国帝国公务员考试准备候选人需要数年时间，就像今天的预科学校一样。但所有这些机构存在的理由都是一样的：击败制度。[2]&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;历史表明，在其他条件相同的情况下，社会的繁荣程度与其防止父母直接影响子女成功的能力成正比。父母间接帮助子女是件好事——例如，帮助他们变得更聪明或更自律，这使他们更成功。问题出在父母使用直接方法时：当他们能够用自己的财富或权力替代子女的品质时。&lt;/p&gt;&#xA;&lt;p&gt;父母在能够做到时会倾向于这样做。父母会为子女而死，所以发现他们也会为子女把顾忌推到极限并不奇怪。特别是当其他父母也在这样做时。&lt;/p&gt;&#xA;&lt;p&gt;封堵这种力量有双重优势。社会不仅得到&amp;quot;最适合工作的人&amp;rdquo;，而且父母的雄心从直接方法转向间接方法——真正试图好好抚养子女。&lt;/p&gt;&#xA;&lt;p&gt;但我们应该期望很难遏制父母为子女获得不公平优势的努力。我们正在处理人性中最强大的力量之一。我们不应该期望天真的解决方案能奏效，就像我们不期望让海洛因远离监狱的天真解决方案能奏效一样。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;解决问题的明显方法是让证书更好。如果一个社会使用的测试目前可以被破解，我们可以研究人们击败它们的方式并尝试堵住漏洞。你可以利用补习学校向你显示大部分漏洞在哪里。它们还告诉你何时在修复它们方面取得成功：当补习学校变得不那么受欢迎时。&lt;/p&gt;&#xA;&lt;p&gt;更一般的解决方案是推动提高透明度，特别是在关键的社会瓶颈，如大学招生。在美国，这个过程仍然显示出许多腐败的外部迹象。例如，legacy招生。官方的说法是legacy地位没有太大权重，因为它所做的只是打破平局：申请人按能力分桶，legacy地位仅用于决定跨越截止线的桶中的申请人。但这意味着大学可以通过调整跨越截止线的桶的大小，使legacy地位具有或多或少的权重。&lt;/p&gt;&#xA;&lt;p&gt;通过逐渐削弱对证书的滥用，你可能会使它们更加严密。但这将是一场多么漫长的战斗。特别是当管理测试的机构并不真正希望它们严密时。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;幸运的是，有更好的方法来防止代际之间权力的直接传递。我们不仅可以让证书更难破解，还可以让它们变得不那么重要。&lt;/p&gt;&#xA;&lt;p&gt;让我们想想证书的用途。从功能上讲，它们是预测表现的一种方式。如果你能衡量实际表现，你就不需要它们。&lt;/p&gt;&#xA;&lt;p&gt;那么它们为什么会演化呢？为什么我们一直没有衡量实际表现？想想证书主义首次出现的地方：在为大组织选择候选人时。在大组织中，个人表现很难衡量，表现越难衡量，预测它就越重要。如果一个组织能够立即且廉价地衡量新人的表现，他们就不需要检查他们的证书。他们可以接纳每个人，只保留好的。&lt;/p&gt;&#xA;&lt;p&gt;大组织不能这样做。但市场中的一群小组织可以接近。市场接纳每个组织，只保留好的组织。随着组织变小，这接近于接纳每个人，只保留好的。因此，在其他条件相同的情况下，由更多、更小的组织组成的社会会更少关心证书。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;这就是在美国发生的事情。这就是为什么那些来自韩国的引述听起来如此老派的原因。他们谈论的是像几十年前美国那样的经济，由几家大公司主导。在这种环境中，雄心勃勃的人的路线是加入一个并爬到顶端。那时证书很重要。在大组织的文化中，精英血统成为自我实现的预言。&lt;/p&gt;&#xA;&lt;p&gt;这在小公司中不起作用。即使你的同事对你的证书印象深刻，如果你的表现不匹配，他们很快就会与你分开，因为公司会倒闭，人们会分散。&lt;/p&gt;&#xA;&lt;p&gt;在小公司的世界里，表现是任何人唯一关心的事情。为创业公司招聘的人不在乎你是否大学毕业，更不用说上哪所大学了。他们只关心你能做什么。事实上，即使在大组织中，这也是唯一应该重要的东西。证书之所以如此有威望，是因为长期以来社会中的大组织往往是最强大的。但至少在美国，它们不再拥有曾经拥有的权力垄断，正是因为它们无法衡量（从而奖励）个人表现。为什么要花二十年爬公司梯子，当你可以直接被市场奖励呢？&lt;/p&gt;&#xA;&lt;p&gt;我意识到我看到了比大多数人更夸张的变化版本。作为早期风险投资公司的合伙人，我像一个跳伞教练，把人们推出证书的旧世界，进入表现的新世界。我是我所看到的变化的推动者。但我不认为我在想象。25年前，雄心勃勃的人选择直接被市场判断并不那么容易。你必须通过老板，而他们受到你上过哪所大学的影响。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;什么使小组织在美国取得成功成为可能？我仍然不完全确定。创业公司当然是其中的重要部分。小组织可以比大组织更快地发展新想法，而新想法变得越来越有价值。&lt;/p&gt;&#xA;&lt;p&gt;但我不认为创业公司解释了从证书到衡量的所有转变。我的朋友Julian Weber告诉我，当他在1950年代去纽约一家律师事务所工作时，他们支付给 associates 的薪水远低于今天的公司。那时的律师事务所不假装根据人们所做工作的价值支付他们。薪水基于资历。年轻的员工正在支付他们的会费。他们以后会得到奖励。&lt;/p&gt;&#xA;&lt;p&gt;同样的原则在工业公司盛行。当我父亲在1970年代在西屋电气工作时，有为他工作的人比他赚得多，因为他们在那里时间更长。&lt;/p&gt;&#xA;&lt;p&gt;现在公司越来越多地必须为员工所做的工作支付市场价格。一个原因是员工不再信任公司提供延迟奖励：为什么在一个可能破产或被接管并所有隐性义务都被消除的公司工作来积累延迟奖励？另一个是一些公司打破了行列，开始向年轻员工支付大量金额。在咨询、法律和金融方面尤其如此，这导致了雅皮士现象。这个词现在很少使用，因为看到25岁有钱的人不再令人惊讶，但在1985年，一个25岁的专业人士能够买得起新的宝马是如此新颖，以至于催生了一个新词。&lt;/p&gt;&#xA;&lt;p&gt;经典的雅皮士为小组织工作。他不为通用小器具公司工作，而是为处理通用小器具公司收购的律师事务所或承销他们债券发行的投资银行工作。&lt;/p&gt;&#xA;&lt;p&gt;创业公司和雅皮士大约同时在1970年代末和1980年代初进入美国概念词汇。我不认为有因果关系。创业公司的发生是因为技术开始变化如此之快，以至于大公司不再能够控制较小的公司。我不认为雅皮士的兴起是受其启发；似乎更像是管理大公司运作方式的社会惯例（也许是法律）发生了变化。但这两种现象迅速融合产生了一个现在似乎显而易见的原则：按市场费率支付精力充沛的年轻人，并从中获得相应的高表现。&lt;/p&gt;&#xA;&lt;p&gt;大约在同一时间，美国经济摆脱了困扰其大部分1970年代的低迷。有联系吗？我知道得不够多，无法说，但当时感觉像是这样。释放了很多能量。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;担心竞争力的国家有理由关心国内创业公司的数量。但他们最好检查基本原则。他们是否让精力充沛的年轻人按市场费率获得他们所做工作的报酬？年轻人是测试，因为当人们不根据表现获得奖励时，他们总是根据资历获得奖励。&lt;/p&gt;&#xA;&lt;p&gt;在你的经济中，只需要几个按表现支付的滩头阵地。衡量像热量一样传播。如果社会的一个部分比其他部分更擅长衡量，它倾向于推动其他人做得更好。如果年轻但聪明和有动力的人通过创办自己的公司比为现有的公司工作赚得更多，现有的公司被迫支付更多来留住他们。因此市场费率逐渐渗透到每个组织，甚至是政府。[3]&lt;/p&gt;&#xA;&lt;p&gt;表现的衡量往往会促使甚至发行证书的组织也顺应。当我们是孩子时，我常常通过命令妹妹做我知道她无论如何都要做的事情来烦她。随着证书被表现所取代，类似的角色是前看门人所能期望的最好的。一旦颁发证书的机构不再从事自我实现的预言业务，他们将不得不更努力地预测未来。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;证书是贿赂和影响力的一步。但它们不是最后一步。有更好的方法来阻止代际之间权力的传递：鼓励向由更多、更小单位组成经济发展的趋势。然后你可以衡量证书仅仅预测的东西。&lt;/p&gt;&#xA;&lt;p&gt;没有人喜欢代际之间权力的传递——不是左派也不是右派。但右派所青睐的市场力量被证明是防止它的更好方法，而不是左派被迫依赖的证书。&lt;/p&gt;&#xA;&lt;p&gt;证书时代在二十世纪后期大组织的权力达到顶峰时开始结束。现在我们似乎正在进入一个基于衡量的新时代。新模型之所以如此迅速地推进，是因为它效果好得多。它没有放缓的迹象。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 宫崎市定（Conrad Schirokauer译），《中国的考试地狱：中华帝国的科举考试》，耶鲁大学出版社，1981年。&lt;/p&gt;&#xA;&lt;p&gt;古埃及的抄写员参加考试，但它们更像是任何学徒都可能必须通过的熟练程度测试类型。&lt;/p&gt;&#xA;&lt;p&gt;[2] 当我说预科学校存在的理由是让孩子进入更好的大学时，我是在最狭隘的意义上说的。我不是说那是预科学校所做的一切，只是说如果它们对大学招生零影响，对它们的需求会少得多。&lt;/p&gt;&#xA;&lt;p&gt;[3] 然而，累进税率倾向于通过减少好和坏衡量者之间的差异来抑制这种效果。&lt;/p&gt;&#xA;&lt;p&gt;感谢Trevor Blackwell、Sarah Harlin、Jessica Livingston和David Sloo阅读本文的草稿。&lt;/p&gt;</description>
    </item>
    <item>
      <title>说服</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/convince/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/convince/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/convince.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;说服&#34;&gt;说服&lt;/h1&gt;&#xA;&lt;h2 id=&#34;如何说服投资者&#34;&gt;如何说服投资者&lt;/h2&gt;&#xA;&lt;p&gt;2013年8月&lt;/p&gt;&#xA;&lt;p&gt;当人们搬重物伤到自己时，通常是因为他们试图用背部来抬。正确的方式是让你的腿部来做这项工作。没有经验的创始人在试图说服投资者时犯了同样的错误。他们试图用他们的演讲来说服。如果让他们自己的创业公司来发挥作用——如果他们首先理解为什么自己的创业公司值得投资，然后向投资者清楚地解释这一点，大多数情况会更好。&lt;/p&gt;&#xA;&lt;p&gt;投资者在寻找将会非常成功的创业公司。但这个标准并不像听起来那么简单。在创业公司中，就像在许多其他领域一样，结果分布遵循幂律，但在创业公司中，曲线陡峭得令人吃惊。巨大的成功如此之大，以至于使其他相形见绌。而且由于每年只有少数几个（传统观点是15个），投资者将&amp;quot;巨大成功&amp;quot;视为二元化的。大多数投资者对你感兴趣，如果你看起来有机会，无论多么小，成为15个巨大成功之一，否则不会。[1]&lt;/p&gt;&#xA;&lt;p&gt;（有一些天使投资人会对一个有高概率取得中等成功的公司感兴趣。但天使投资人也喜欢巨大的成功。）&lt;/p&gt;&#xA;&lt;p&gt;如何让你看起来像是巨大成功之一？你需要三样东西：令人敬畏的创始人、有前途的市场，以及（通常）一些迄今为止成功的证据。&lt;/p&gt;&#xA;&lt;h2 id=&#34;令人敬畏&#34;&gt;令人敬畏&lt;/h2&gt;&#xA;&lt;p&gt;最重要的因素是令人敬畏的创始人。大多数投资者在最初几分钟就决定你看起来像是赢家还是输家，一旦他们的观点确定，就很难改变。[2] 每个创业公司都有投资和不投资的理由。如果投资者认为你是赢家，他们会专注于前者，如果不是，他们会专注于后者。例如，这可能是一个丰富的市场，但销售周期缓慢。如果投资者对你作为创始人印象深刻，他们会说他们想投资，因为这是一个丰富的市场，如果不是，他们会说他们因为销售周期缓慢而不能投资。&lt;/p&gt;&#xA;&lt;p&gt;他们不一定试图误导你。大多数投资者在自己的头脑中确实不清楚为什么他们喜欢或不喜欢创业公司。如果你看起来像是赢家，他们会更喜欢你的想法。但不要对他们这个弱点太自鸣得意，因为你也有这个弱点；几乎每个人都有。&lt;/p&gt;&#xA;&lt;p&gt;当然，想法也有作用。它们是始于喜欢创始人的火焰的燃料。一旦投资者喜欢你，你会看到他们在寻找想法：他们会说&amp;quot;是的，你还可以做x。&amp;quot;（而当他们不喜欢你时，他们会说&amp;quot;但是y呢？&amp;quot;）&lt;/p&gt;&#xA;&lt;p&gt;但说服投资者的基础是看起来令人敬畏，由于这不是大多数人在对话中经常使用的词，我应该解释它的含义。一个令人敬畏的人是一个看起来会得到他们想要的东西的人，不管有什么障碍。令人敬畏接近自信，只是有人可能自信但错误。令人敬畏大致上是有理由的自信。&lt;/p&gt;&#xA;&lt;p&gt;有少数人真的很擅长看起来令人敬畏——有些是因为他们确实非常令人敬畏，只是让它表现出来，另一些是因为他们或多或少是骗子。[3] 但大多数创始人，包括许多将继续创办非常成功公司的人，在第一次尝试融资时并不那么擅长看起来令人敬畏。他们应该做什么？[4]&lt;/p&gt;&#xA;&lt;p&gt;他们不应该做的是试图模仿更有经验的创始人的 swagger。投资者并不总是那么擅长判断技术，但他们擅长判断信心。如果你试图表现得像你不是的东西，你只会陷入恐怖谷。你会偏离真诚，但永远不会达到令人信服。&lt;/p&gt;&#xA;&lt;h2 id=&#34;真理&#34;&gt;真理&lt;/h2&gt;&#xA;&lt;p&gt;作为没有经验的创始人，看起来最令人敬畏的方式是坚持真理。你看起来多么令人敬畏不是一个常数。它取决于你在说什么而变化。大多数人在说&amp;quot;一加一等于二&amp;quot;时可以看起来自信，因为他们知道这是真的。即使是最不自信的人，如果他们告诉风投&amp;quot;一加一等于二&amp;quot;而风投表示怀疑，也会感到困惑甚至轻微鄙视。擅长看起来令人敬畏的人的神奇能力是他们可以用&amp;quot;我们每年要赚十亿美元&amp;quot;这句话做到这一点。但你也可以做到，如果不是用这句话，用一些相当令人印象深刻的句子，只要首先说服自己。&lt;/p&gt;&#xA;&lt;p&gt;这就是秘密。说服自己你的创业公司值得投资，然后当你向投资者解释这一点时，他们会相信你。而说服自己，我不是说玩弄心灵游戏来增强你的信心。我的意思是真正评估你的创业公司是否值得投资。如果不是，不要试图筹集资金。[5] 但如果是，当你告诉投资者它值得投资时，你将说实话，他们会感觉到这一点。如果你很好地理解某件事并说出真相，你不必是一个流畅的演讲者。&lt;/p&gt;&#xA;&lt;p&gt;要评估你的创业公司是否值得投资，你必须成为领域专家。如果你不是领域专家，你可以对自己的想法感到多么确信，在投资者看来，这只不过是邓宁-克鲁格效应的一个例子。事实上通常就是这样。投资者可以通过你回答他们问题的好坏相当快地判断你是否是领域专家。了解关于你市场的一切。[6]&lt;/p&gt;&#xA;&lt;p&gt;为什么创始人坚持试图说服投资者他们自己不相信的事情？部分是因为我们都被训练成这样。&lt;/p&gt;&#xA;&lt;p&gt;当我的朋友Robert Morris和Trevor Blackwell在读研究生时，他们的一位同学从他们的导师那里接到了一个问题，我们至今仍然引用。当那个不幸的人讲到他的最后一张幻灯片时，教授脱口而出：&amp;ldquo;这些结论中你真正相信哪一个？&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;学校组织方式的产物之一是我们都被训练成即使没有什么可说的时候也要说话。如果你有一个十页的论文要交，那么你必须写十页，即使你只有一页的想法。即使你没有想法。你必须生产出一些东西。太多的创业公司以同样的精神进行融资。当他们认为该是筹集资金的时候了，他们努力为他们的创业公司做出最好的陈述。大多数人从来没有想过事先暂停一下，问自己所说的是否真的令人信服，因为他们都被训练成将呈现的需求视为既定的——作为一个固定大小的区域，无论他们有多少真相，都必须必须被传播，无论多么稀薄。&lt;/p&gt;&#xA;&lt;p&gt;筹集资金的时间不是当你需要它的时候，也不是当你达到像Demo Day这样的人为截止日期时。而是当你能够说服投资者的时候，而不是之前。[7]&lt;/p&gt;&#xA;&lt;p&gt;除非你是一个很好的骗子，否则如果你自己都不相信，你永远不会说服投资者。他们在发现废话方面比你产生废话要好得多，即使你是在不知不觉中产生它。如果你在自己说服自己之前试图说服投资者，你将浪费你们双方的时间。&lt;/p&gt;&#xA;&lt;p&gt;但首先暂停来说服自己，不仅会节省你浪费的时间。它将迫使你组织你的思想。要说服自己你的创业公司值得投资，你必须弄清楚为什么它值得投资。如果你能做到这一点，你最终会得到比增加的信心更多的东西。你还将有一个如何成功的临时路线图。&lt;/p&gt;&#xA;&lt;h2 id=&#34;市场&#34;&gt;市场&lt;/h2&gt;&#xA;&lt;p&gt;注意我一直小心地谈论创业公司是否值得投资，而不是它是否会成功。没有人知道创业公司是否会成功。对投资者来说这是一件好事，因为如果你能提前知道创业公司是否会成功，股票价格将已经是未来价格，投资者就没有赚钱的空间了。创业投资者知道每一项投资都是赌注，而且赔率相当高。&lt;/p&gt;&#xA;&lt;p&gt;所以为了证明你值得投资，你不必证明你会成功，只需要证明你是一个足够好的赌注。什么使创业公司成为足够好的赌注？除了令人敬畏的创始人，你还需要一个合理的途径来拥有一个大市场的重要份额。创始人将创业公司视为想法，但投资者将它们视为市场。如果有x数量的客户愿意为你所做的东西平均每年支付y美元，那么你公司的总可用市场，或TAM，就是xy美元。投资者不期望你收集所有这些钱，但这是你能达到的规模的上限。&lt;/p&gt;&#xA;&lt;p&gt;你的目标市场必须很大，而且必须是你能够捕捉的。但市场不一定要很大，你也不一定要在其中。实际上，从小市场开始往往更好，这个小市场要么会变成大市场，要么你可以从中进入大市场。只需要有一些合理的跳跃序列，导致几年后主导一个大市场。&lt;/p&gt;&#xA;&lt;p&gt;合理性的标准根据创业公司的年龄而有很大差异。一个三个月大的公司在Demo Day只需要是一个有希望的实验，值得资助看看结果如何。而一个两岁的公司筹集A轮融资需要能够证明实验成功。[8]&lt;/p&gt;&#xA;&lt;p&gt;但每个真正变得很大的公司都是&amp;quot;幸运&amp;quot;的，因为它们的增长主要是由于它们所骑的某种外部浪潮，所以要制造一个令人信服的成为巨大的案例，你必须确定你将受益的某种特定趋势。通常你可以通过问&amp;quot;为什么是现在？&amp;ldquo;来找到这一点。如果这是如此伟大的想法，为什么还没有其他人已经做了？理想情况下，答案是它最近才成为一个好主意，因为某些事情发生了变化，而其他人还没有注意到。&lt;/p&gt;&#xA;&lt;p&gt;例如，微软不会通过销售Basic解释器而变得巨大。但通过从那里开始，他们完美地准备好在微型计算机变得足够强大以支持一个时，向上扩展微型计算机软件栈。而微型计算机结果是一个非常巨大的浪潮，比1975年最乐观的观察者预测的要大得多。&lt;/p&gt;&#xA;&lt;p&gt;但是，虽然微软做得非常好，因此有诱惑认为它们几个月后会看起来是一个很好的赌注，但它们可能不会。好，但不是伟大。然而成功的公司，在几个月内看起来都不会超过一个相当好的赌注。微型计算机结果是一件大事，微软既执行得好又幸运。但这绝不是事情会如何发展的明显迹象。许多公司在几个月内看起来都像是同样好的赌注。我不知道一般的创业公司，但我们资助的至少一半的创业公司可以像微软能够提出的那样，提出一个关于主导大市场的好案例。谁能合理地期望创业公司比这更多？&lt;/p&gt;&#xA;&lt;h2 id=&#34;拒绝&#34;&gt;拒绝&lt;/h2&gt;&#xA;&lt;p&gt;如果你能提出和微软能够提出的一样好的案例，你会说服投资者吗？不总是。许多风险投资公司会拒绝微软。[9] 当然有些人拒绝了谷歌。被拒绝会让你处于一个稍微尴尬的位置，因为当你开始融资时，你会看到从投资者那里得到的最常见问题是&amp;quot;还有谁在投资？&amp;ldquo;如果你已经融资一段时间但还没有人承诺，你会说什么？[10]&lt;/p&gt;&#xA;&lt;p&gt;真正擅长表现得令人敬畏的人通常通过给投资者留下这样的印象来解决这个问题：虽然还没有投资者承诺，但有几个即将承诺。这可以说是一种允许的策略。投资者更关心还有谁在投资，而不是关心你创业公司的任何其他方面，这有点混蛋，而对他们误导你与其他投资者的进展似乎是互补的反击。这可以说是骗骗子的一个例子。但我不向大多数创始人推荐这种方法，因为大多数创始人无法成功地做到这一点。这是对投资者说的最常见的谎言，你必须非常擅长撒谎，才能对某个职业的人说出他们听到的最常见的谎言。&lt;/p&gt;&#xA;&lt;p&gt;如果你不是谈判大师（也许即使你是），最好的解决方案是直接解决这个问题，解释为什么投资者拒绝了你以及为什么他们错了。如果你知道自己在正确的轨道上，那么你也知道投资者为什么拒绝你是错的。有经验的投资者很清楚最好的想法也是最可怕的。他们都知道那些拒绝谷歌的风险投资公司。如果你不是显得回避和羞耻被拒绝（从而隐含地同意判决），而是坦率地谈论什么让投资者害怕你，你会看起来更自信，这是他们喜欢的，你可能也会更好地展示你创业公司的那个方面。至少，那种担忧现在会公开，而不是留给当前与你交谈的投资者发现的把柄，他们会为他们的发现感到自豪，因此对它产生依恋。[11]&lt;/p&gt;&#xA;&lt;p&gt;这种策略对最好的投资者最有效，他们既不容易被欺骗，并且已经相信大多数其他投资者是思维传统的无人机，注定总是错过巨大的异常值。筹集资金不像申请大学，在那里你可以假设如果你能进入麻省理工学院，你也能进入Foobar State。因为最好的投资者比其他的聪明得多，而最好的创业想法最初看起来像坏想法，创业公司被除了最好的以外的所有风险投资公司拒绝并不罕见。Dropbox就是这样。Y Combinator在波士顿开始，前3年我们在波士顿和硅谷交替运行批次。因为波士顿投资者如此之少且如此胆小，我们过去常常将波士顿批次运到硅谷进行第二次Demo Day。Dropbox是波士顿批次的一部分，这意味着所有那些波士顿投资者都得到了第一次看Dropbox的机会，但没有人完成交易。又一个备份和同步的东西，他们都认为。几周后，Dropbox从红杉公司筹集了A轮融资。[12]&lt;/p&gt;&#xA;&lt;h2 id=&#34;不同&#34;&gt;不同&lt;/h2&gt;&#xA;&lt;p&gt;不理解投资者将投资视为赌注，加上十页论文的心态，阻止创始人甚至考虑对他们所说的事情确定的可能性。他们认为他们在试图说服投资者一些非常不确定的事情——他们的创业公司将是巨大的——而说服任何人相信这样的事情显然必须包含一些疯狂的销售技巧。但事实上，当你筹集资金时，你试图说服投资者的东西投机性要少得多——公司是否具有好赌注的所有要素——你可以用一种定性的不同方式来处理这个问题。你可以先说服自己，然后说服他们。&lt;/p&gt;&#xA;&lt;p&gt;当你说服他们时，使用你用来说服自己的同样实事求是的语言。你们不会在彼此之间使用模糊、夸大的营销语言。也不要对投资者使用它。它不仅对他们不起作用，而且似乎是无能的标志。只要简洁。许多投资者明确使用这作为测试，推理（正确地）如果你不能简洁地解释你的计划，你就不是真正理解它们。但即使是没有这个规则的投资者也会对不清楚的解释感到厌烦和沮丧。[13]&lt;/p&gt;&#xA;&lt;p&gt;所以，当你还没有擅长表现得令人敬畏时，给投资者留下印象的秘诀是：制造一些值得投资的东西。理解为什么它值得投资。向投资者清楚地解释这一点。如果你在说一些你知道是真的的事情，你在说的时候会显得自信。相反，永远不要让路演把你引入胡说八道。只要你停留在真理的领域，你就是强大的。让真理变好，然后说出来。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 没有理由相信这个数字是常数。事实上，我们在Y Combinator的明确目标是通过鼓励那些否则不会创业的人创业来增加这个数字。&lt;/p&gt;&#xA;&lt;p&gt;[2] 或者更准确地说，投资者决定你是输家还是可能是赢家。如果你看起来像是赢家，他们可能会根据你筹集的资金数量与你进行几次更多的会议，以测试第一印象是否成立。但如果你看起来像是输家，他们就完了，至少在接下来的一年左右。当他们决定你是输家时，他们通常在他们可能为第一次会议分配的50分钟内就决定了。这就解释了人们总是听到的关于风险投资公司不专注的令人惊讶的故事。这些人如何在创业公司演示期间查看信息时做出良好的投资决策？这个谜题的解决方案是他们已经做出了决定。&lt;/p&gt;&#xA;&lt;p&gt;[3] 这两者并不互斥。有些人既真正令人敬畏，也非常擅长表现得那样。&lt;/p&gt;&#xA;&lt;p&gt;[4] 那些将继续创建大公司的人为什么早期看起来不令人敬畏？我认为主要原因是他们到目前为止的经验训练他们保持翅膀折叠，可以说。家庭、学校和工作鼓励合作，而不是征服。他们这样做也是好事，因为即使是成吉思汗也可能99%是合作。但结果是大多数人从他们二十多岁早期的成长管道中出来，被压缩成管道的形状。有些人发现他们有翅膀并开始展开它们。但这需要几年时间。在开始时，即使他们也不知道自己能够做什么。&lt;/p&gt;&#xA;&lt;p&gt;[5] 事实上，改变你在做的事情。你正在将你自己的时间投资到你的创业公司中。如果你不相信你正在做的事情是一个足够好的赌注，为什么你甚至在做那个？&lt;/p&gt;&#xA;&lt;p&gt;[6] 当投资者问你一个你不知道答案的问题时，最好的反应既不是吹牛也不是放弃，而是解释你将如何找出答案。如果你能当场想出一个初步答案，那就更好，但要解释那是你正在做的事情。&lt;/p&gt;&#xA;&lt;p&gt;[7] 在Y Combinator，我们试图确保创业公司在Demo Day准备好筹集资金，鼓励他们忽略投资者，而是在大约一周前专注于他们的公司。这样大多数人在Demo Day之前很久就达到了足够令人信服的阶段。但不是所有人都这样，所以我们也给任何想要的创业公司推迟到后一个Demo Day的选择。&lt;/p&gt;</description>
    </item>
    <item>
      <title>超越平均水平</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/avg/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/avg/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/avg.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;超越平均水平&#34;&gt;超越平均水平&lt;/h1&gt;&#xA;&lt;p&gt;2001年4月&lt;/p&gt;&#xA;&lt;p&gt;如果你想知道什么是编程的&amp;quot;秘密&amp;quot;，那么就是编程语言之间存在很大的差异。这不仅仅是理论问题。实际上，这会对创业公司产生很大影响。&lt;/p&gt;&#xA;&lt;p&gt;创业公司成功的可能性有多大？如果你考虑所有的创业公司，大多数都会失败。但如果你只考虑那些成功的创业公司，它们都有一个共同点：它们使用某种秘密武器。它们做了一些大公司无法做的事情。&lt;/p&gt;&#xA;&lt;h2 id=&#34;语言的差异&#34;&gt;语言的差异&lt;/h2&gt;&#xA;&lt;p&gt;编程语言之间存在巨大差异。有些语言比其他语言强大得多。如果你使用一种强大的语言，你可以比使用较弱语言的程序员更快地完成工作。&lt;/p&gt;&#xA;&lt;p&gt;大多数程序员对编程语言之间的差异了解甚少。他们知道一些语言比其他语言更&amp;quot;高级&amp;quot;，但他们不理解这些差异有多大。他们不理解使用强大语言可以给你带来多大的优势。&lt;/p&gt;&#xA;&lt;p&gt;使用强大语言不仅仅是写代码更快的问题。它是关于你能做什么的问题。在较弱的语言中，有些事情根本做不了，或者做起来非常困难。在强大的语言中，这些事情很容易。&lt;/p&gt;&#xA;&lt;h2 id=&#34;lisp的优势&#34;&gt;Lisp的优势&lt;/h2&gt;&#xA;&lt;p&gt;Lisp是最强大的编程语言之一。它比大多数其他语言强大得多。使用Lisp的程序员比使用其他语言的程序员有巨大的优势。&lt;/p&gt;&#xA;&lt;p&gt;Lisp的优势不是微小的。它是巨大的。使用Lisp的团队可以比使用其他语言的团队小得多，但仍然完成更多的工作。&lt;/p&gt;&#xA;&lt;p&gt;Viaweb就是一个例子。Viaweb是第一个基于Web的应用程序。它让用户可以在线构建商店。我们三个人使用Lisp构建了Viaweb。我们的竞争对手使用其他语言，如C++和Perl。他们需要更多的人来完成同样的工作。&lt;/p&gt;&#xA;&lt;h2 id=&#34;为什么更多的人不使用lisp&#34;&gt;为什么更多的人不使用Lisp？&lt;/h2&gt;&#xA;&lt;p&gt;如果Lisp如此强大，为什么更多的人不使用它？&lt;/p&gt;&#xA;&lt;p&gt;一个原因是Lisp与其他语言非常不同。大多数程序员习惯使用类似C的语言。Lisp看起来很奇怪。&lt;/p&gt;&#xA;&lt;p&gt;另一个原因是Lisp并不适合所有事情。它不是最好的系统编程语言。如果你正在编写设备驱动程序，C可能更好。&lt;/p&gt;&#xA;&lt;p&gt;但Lisp非常适合编写Web应用程序。这就是我们选择它用于Viaweb的原因。&lt;/p&gt;&#xA;&lt;h2 id=&#34;创业公司的优势&#34;&gt;创业公司的优势&lt;/h2&gt;&#xA;&lt;p&gt;创业公司可以利用大公司无法使用的强大语言。大公司有太多惯性。它们使用特定的语言，因为它们总是使用这些语言。它们不能轻易改变。&lt;/p&gt;&#xA;&lt;p&gt;创业公司可以灵活得多。它们可以选择最适合工作的工具。&lt;/p&gt;&#xA;&lt;p&gt;这不仅仅是技术问题。这关乎竞争。如果你使用比竞争对手更强大的语言，你可以更快地移动。你可以做他们做不到的事情。&lt;/p&gt;&#xA;&lt;h2 id=&#34;实际例子&#34;&gt;实际例子&lt;/h2&gt;&#xA;&lt;p&gt;在Viaweb，我们能够快速添加新功能。我们的竞争对手需要几周才能完成的事情，我们可以在几天内完成。&lt;/p&gt;&#xA;&lt;p&gt;我们能够添加我们的竞争对手无法添加的功能。Lisp让我们能够做到这一点。&lt;/p&gt;&#xA;&lt;p&gt;例如，我们能够添加一个让用户编辑HTML的功能。我们的竞争对手无法做到这一点，因为他们的语言不够强大。&lt;/p&gt;&#xA;&lt;h2 id=&#34;学习曲线&#34;&gt;学习曲线&lt;/h2&gt;&#xA;&lt;p&gt;Lisp有一个陡峭的学习曲线。大多数程序员需要一段时间才能习惯它。&lt;/p&gt;&#xA;&lt;p&gt;但这是值得的。一旦你学会了Lisp，你就会比其他程序员更有生产力。&lt;/p&gt;&#xA;&lt;h2 id=&#34;结论&#34;&gt;结论&lt;/h2&gt;&#xA;&lt;p&gt;编程语言之间存在巨大差异。这些差异对创业公司来说很重要。&lt;/p&gt;&#xA;&lt;p&gt;如果你正在创办一家创业公司，你应该考虑使用像Lisp这样的强大语言。它可以给你带来竞争优势。&lt;/p&gt;&#xA;&lt;p&gt;不要担心别人会怎么说。做你认为正确的事情。&lt;/p&gt;&#xA;&lt;p&gt;记住，创业公司的目标是成功。如果使用强大的语言帮助你成功，那就去做吧。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;&lt;em&gt;这篇文章基于Paul Graham在2001年4月发表的原创作品，讨论了编程语言之间的差异以及它们对创业公司的重要性。&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>边缘的力量</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/marginal/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/marginal/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/marginal.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;边缘的力量&#34;&gt;边缘的力量&lt;/h1&gt;&#xA;&lt;p&gt;2006年6月&lt;/p&gt;&#xA;&lt;p&gt;（本文源于在 Usenix 2006 和 Railsconf 2006 的演讲。）&lt;/p&gt;&#xA;&lt;p&gt;几年前，我的朋友 Trevor 和我一起去看了苹果的车库。当我们站在那里时，他说在萨斯喀彻温省长大的他曾经对乔布斯和沃兹尼亚克必须在车库里工作的奉献精神感到惊叹。&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;那些人一定冻坏了！&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;这就是加州隐藏的优势之一：温和的气候意味着有很多边缘空间。在寒冷的地方，那些边缘被修剪掉了。内外之间有更清晰的界限，只有那些得到正式批准的项目——由组织、父母、妻子，或者至少由自己批准——才能获得适当的室内空间。这提高了新想法的激活能量。你不能只是修补。你必须证明其合理性。&lt;/p&gt;&#xA;&lt;p&gt;硅谷一些最著名的公司始于车库：惠普在1938年，苹果在1976年，谷歌在1998年。在苹果的情况下，车库故事有点像都市传说。沃兹说他们在那里所做的一切就是组装一些计算机，而他在自己的公寓或惠普的隔间里完成了Apple I和Apple II的实际设计。[1] 这显然太边缘了，即使是苹果的公关人员也无法接受。&lt;/p&gt;&#xA;&lt;p&gt;按照传统标准，乔布斯和沃兹尼亚克也是边缘人物。显然他们很聪明，但他们在纸上看起来不可能很好。当时他们是一对大学辍学生，之间只有大约三年的学业，而且还是嬉皮士。他们之前的商业经验包括制造&amp;quot;蓝盒子&amp;quot;来入侵电话系统，这是一个具有罕见区别的业务：既非法又不盈利。&lt;/p&gt;&#xA;&lt;h2 id=&#34;局外人&#34;&gt;局外人&lt;/h2&gt;&#xA;&lt;p&gt;现在，在硅谷的车库里运营的创业公司会感到自己是一个崇高传统的一部分，就像在阁楼里的诗人，或者负担不起加热工作室而不得不在室内戴贝雷帽的画家。但在1976年，这似乎并不那么酷。世界还没有意识到创办计算机公司与成为作家或画家属于同一类别。这种情况持续的时间不长。只有在过去几年中，硬件成本的急剧下降才允许局外人竞争。&lt;/p&gt;&#xA;&lt;p&gt;在1976年，每个人都看不起在车库里运营的公司，包括创始人。当他们得到一些钱时，乔布斯做的第一件事就是租用办公空间。他希望苹果看起来像一家真正的公司。&lt;/p&gt;&#xA;&lt;p&gt;他们已经拥有很少有真实公司拥有的东西：设计精良的产品。你会认为他们会有更多的信心。但我和很多创业公司创始人谈过，情况总是这样。他们建立了一些将要改变世界的东西，但他们担心的是没有像样的名片这样的小问题。&lt;/p&gt;&#xA;&lt;p&gt;这就是我想探讨的悖论：伟大的新事物往往来自边缘，然而发现它们的人被包括自己在内的所有人看不起。&lt;/p&gt;&#xA;&lt;p&gt;新事物来自边缘是一个老想法。我想检验它的内在结构。为什么伟大的想法来自边缘？什么样的想法？我们能做些什么来鼓励这个过程？&lt;/p&gt;&#xA;&lt;h2 id=&#34;内部人士&#34;&gt;内部人士&lt;/h2&gt;&#xA;&lt;p&gt;这么多好想法来自边缘的一个原因很简单：边缘太大了。如果内部人士意味着什么，那么局外人必须比内部人士多。如果局外人的数量巨大，即使人均很少，看起来也会有很多想法来自他们。但我认为还有更多的事情。成为内部人士有真正的缺点，在某些类型的工作中，这些缺点可能超过优点。&lt;/p&gt;&#xA;&lt;p&gt;想象一下，例如，如果政府决定委托某人写一部官方的《伟大的美国小说》。首先会有一场巨大的意识形态争论，争论选择谁。大多数最好的作家会因为冒犯了某一方而被排除。在剩下的人中，聪明的人会拒绝这样的工作，只剩下一些有错误野心的人。委员会会选择一个处于事业巅峰的人——也就是说，某人最好的工作已经过去——并移交项目，同时提供大量免费建议，说明这本书应该如何以积极的方式展示美国人民的力量和多样性等等。&lt;/p&gt;&#xA;&lt;p&gt;不幸的作家然后会坐下来工作，肩上承载着巨大的期望压力。不想搞砸这样一个公共委托，他会谨慎行事。这本书最好能赢得尊重，而确保这一点的方法是让它成为悲剧。观众必须被诱惑才能笑，但如果你杀人，他们会觉得必须认真对待你。众所周知，美国加上悲剧等于内战，所以那必须是关于什么的。十二年后最终完成时，这本书将是现有流行小说的900页拼贴——大致是《飘》加上《根》。但其体量和名人效应会使它成为几个月的畅销书，直到被脱口秀主持人的自传击败。这本书会被拍成电影然后被遗忘，除了那些更尖刻的评论家，在他们中间，它会成为虚假的代名词，就像米利·瓦尼利或《地球战场》。&lt;/p&gt;&#xA;&lt;p&gt;也许我有点被这个例子冲昏了头脑。然而，这难道不是这样的项目在每个点上都会展开的方式吗？政府比进入小说业务更了解情况，但在他们拥有自然垄断的其他领域，如核废料倾倒场、航空母舰和政权更迭，你会发现很多与这个项目同构的项目——实际上，还有很多不太成功的项目。&lt;/p&gt;&#xA;&lt;p&gt;这个小思想实验表明了内部人士项目的一些缺点：选择了错误类型的人，范围过大，无法承担风险，需要显得严肃，期望的重量，既得利益的力量，不具辨别力的观众，也许最危险的是，这种工作变成责任而不是娱乐的倾向。&lt;/p&gt;&#xA;&lt;h2 id=&#34;测试&#34;&gt;测试&lt;/h2&gt;&#xA;&lt;p&gt;一个有局外人和内部人士的世界意味着某种测试来区分他们。大多数选择精英的测试的问题在于，有两种方式通过它们：在他们试图测量的方面做得好，或者在测试本身方面做得好。&lt;/p&gt;&#xA;&lt;p&gt;因此，关于一个领域的第一个问题是其测试有多诚实，因为这告诉你成为局外人意味着什么。这告诉你当你与权威人士意见不一致时，应该多大程度上相信你的直觉，是否值得通过通常的渠道成为他们自己，也许你是否想在这个领域工作。&lt;/p&gt;&#xA;&lt;p&gt;当有一致的质量标准，并且运行测试的人真正关心其完整性时，测试最难被破解。例如，硬科学博士课程的录取相当诚实。教授将得到他们录取的人作为自己的研究生，所以他们努力选择好的人，并且他们有相当多的数据可以参考。而本科录取似乎更容易被破解。&lt;/p&gt;&#xA;&lt;p&gt;判断一个领域是否有一致标准的一种方法是领先从业者与在大学教授该学科的人之间的重叠。在规模的一端，你有数学和物理等领域，几乎所有的老师都是最好的从业者。中间是医学、法律、历史、建筑和计算机科学，其中很多是。底部是商业、文学和视觉艺术，教师和领先从业者之间几乎没有重叠。正是这一端产生了&amp;quot;不能做的人教&amp;quot;这样的短语。&lt;/p&gt;&#xA;&lt;p&gt;顺便说一句，这个规模在决定大学学习什么时可能很有帮助。当我在大学时，规则似乎是你应该学习你最感兴趣的东西。但回想起来，你最好与一个擅长的人一起学习中等有趣的东西，而不是与一个不擅长的人一起学习非常有趣的东西。你经常听到人们说你不应该在大学主修商业，但这实际上是一个更一般规则的实例：不要从不擅长它们的老师那里学习东西。&lt;/p&gt;&#xA;&lt;p&gt;你应该多担心成为局外人取决于内部人士的质量。如果你是一个业余数学家，认为自己解决了一个著名的开放问题，最好回去检查一下。当我在研究生院时，数学系的一个朋友的工作是回复那些寄来费马最后定理等证明的人，看起来他并不认为这是有价值的信息来源——更像是值守心理健康热线。而如果你写的东西似乎与英语教授感兴趣的不同，那不一定是问题。&lt;/p&gt;&#xA;&lt;h2 id=&#34;反测试&#34;&gt;反测试&lt;/h2&gt;&#xA;&lt;p&gt;当选择精英的方法完全腐败时，大多数好人都会成为局外人。例如，在艺术中，贫穷、被误解的天才的形象不仅仅是一个可能的伟大艺术家形象：它是标准形象。顺便说一句，我并不是说这是正确的，但这个形象如此深入人心是很有启发性的。你不能让这样的说辞贴在数学或医学上。[2]&lt;/p&gt;&#xA;&lt;p&gt;如果足够腐败，测试就成为反测试，通过让人们做只有错误的人才会做的事情来过滤掉应该选择的人。高中受欢迎度似乎就是这样一个测试。在成人世界有很多类似的测试。例如，在普通大公司的等级制度中晋升需要关注政治，很少有深思熟虑的人能分心于此。[3] 像比尔·盖茨这样的人可以在他手下发展一家公司，但很难想象他有耐心在通用电气——或者实际上是微软——攀登公司阶梯。&lt;/p&gt;&#xA;&lt;p&gt;当你想到这一点时，这有点奇怪，因为苍蝇之王式的学校和官僚公司都是默认的。可能有很多人从一个到另一个，从未意识到整个世界并不是这样运作的。&lt;/p&gt;&#xA;&lt;p&gt;我认为这就是大公司经常被创业公司蒙蔽的一个原因。大公司的人没有意识到他们生活在一个环境中的程度，这个环境是一个大的、持续的测试，测试错误的品质。&lt;/p&gt;&#xA;&lt;p&gt;如果你是一个局外人，你击败内部人士的最佳机会显然是在腐败测试选择蹩脚精英的领域。但有一个陷阱：如果测试是腐败的，你的胜利将不会被认可，至少在你有生之年不会。你可能觉得你不需要那个，但历史表明，在腐败测试的领域工作是危险的。你可能击败了内部人士，但与在一个更诚实的领域相比，你所做的工作在绝对尺度上不会那么好。&lt;/p&gt;&#xA;&lt;p&gt;例如，艺术标准在十八世纪上半叶几乎与今天一样腐败。这是那些蓬松的理想化伯爵夫人与膝上狗肖像的时代。夏尔丹决定跳过所有这些，按照他看到的方式画普通事物。他现在被认为是那个时期最好的——但仍然不配与达芬奇、贝利尼或梅姆林相提并论，他们都拥有诚实标准的额外鼓励。&lt;/p&gt;&#xA;&lt;p&gt;然而，如果一个腐败的比赛之后是另一个不腐败的比赛，参与其中可能是值得的。例如，与一个能在营销上花费比你更多的公司竞争是值得的，只要你能在下一轮生存下来，届时客户会比较你的实际产品。同样，你不应该被相对腐败的大学入学测试所阻挠，因为它后面紧跟着不那么容易被破解的测试。[4]&lt;/p&gt;&#xA;&lt;h2 id=&#34;风险&#34;&gt;风险&lt;/h2&gt;&#xA;&lt;p&gt;即使在有诚实测试的领域，成为局外人仍然有优势。最明显的是局外人没有什么可失去的。他们可以做有风险的事情，如果失败了，那又怎样？几乎没有人会注意到。&lt;/p&gt;&#xA;&lt;p&gt;另一方面，杰出人士被他们的杰出地位所拖累。杰出就像一套西装：它给错误的人留下印象，它限制了穿着者。&lt;/p&gt;&#xA;&lt;p&gt;局外人应该意识到他们在这里拥有的优势。能够承担风险是极其有价值的。每个人都太重视安全，无论是默默无闻的人还是杰出人士。没有人想看起来像傻瓜。但能够看起来像傻瓜是非常有用的。如果你的大多数想法不愚蠢，你可能太保守了。你没有充分界定问题。&lt;/p&gt;&#xA;&lt;p&gt;阿克顿勋爵说我们应该在最佳状态评判才能，在最坏状态评判品格。例如，如果你写一本伟大的书和十本糟糕的书，你仍然算是一个伟大的作家——或者至少，比写了十一本仅仅是好书的作家更好。而如果你大多数时候是一个安静、守法的公民，但偶尔把人切碎并埋在后院，你是个坏人。&lt;/p&gt;&#xA;&lt;p&gt;几乎每个人都犯了一个错误，把想法当作品格的指标而不是才能的指标——好像有一个愚蠢的想法让你变得愚蠢。有巨大的传统重量建议我们谨慎行事。&amp;ldquo;即使愚人保持沉默，也被认为是智慧的，&amp;ldquo;旧约说（箴言 17:28）。&lt;/p&gt;&#xA;&lt;p&gt;嗯，对于青铜时代巴勒斯坦的一群牧羊人来说，这可能是很好的建议。那时保守主义会是当天的秩序。但时代变了。在政治问题上坚持旧约可能仍然是合理的，但在物质上，世界现在有更多的国家。传统的指导作用较小，不仅因为事物变化更快，而且因为可能性的空间如此之大。世界变得越复杂，愿意看起来像傻瓜就越有价值。&lt;/p&gt;&#xA;&lt;h2 id=&#34;委托&#34;&gt;委托&lt;/h2&gt;&#xA;&lt;p&gt;然而，人们越成功，如果他们搞砸了——甚至似乎搞砸了——他们受到的热度就越高。在这方面，以及许多其他方面，杰出人士是自己成功的囚犯。因此，理解成为局外人优势的最好方法可能是看看成为内部人士的缺点。&lt;/p&gt;&#xA;&lt;p&gt;如果你问杰出人士他们的生活有什么问题，他们会抱怨的第一件事是缺乏时间。我在谷歌的一个朋友在公司里相当高的位置，在谷歌上市很久之前就为他们工作了。换句话说，他现在足够富有，不必工作。我问他，既然他不必工作，他是否还能忍受拥有工作的烦恼。他说没有任何真正的烦恼，除了——当他说这话时，他带着渴望的表情——他收到了太多的电子邮件。&lt;/p&gt;&#xA;&lt;p&gt;杰出人士感觉就像每个人都想咬他们一口。这个问题如此普遍，以至于假装杰出的人通过假装过度劳累来做到这一点。&lt;/p&gt;&#xA;&lt;p&gt;杰出人士的生活变得有日程安排，这对思考不好。成为局外人的巨大优势之一是长的、不间断的时间块。这就是我对研究生院的记忆：似乎无穷无尽的时间供应，我花时间担心，但没有写，我的论文。默默无闻就像健康食品——可能不愉快，但对你有益。而名声往往像发酵产生的酒精。当达到一定浓度时，它会杀死产生它的酵母。&lt;/p&gt;&#xA;&lt;p&gt;杰出人士通常通过变成经理来应对时间短缺。他们没有时间工作。他们被周围应该帮助或监督的初级人员包围。明显的解决方案是让初级人员做工作。这样发生了一些好事，但有些问题不太适用：那种把所有事情都放在一个脑袋里有帮助的问题。&lt;/p&gt;&#xA;&lt;p&gt;例如，最近有人透露著名的玻璃艺术家戴尔·奇胡利已经27年没有真正吹制玻璃了。他有助手为他做工作。但视觉艺术中最有价值的想法来源之一是媒介的阻力。这就是为什么油画看起来与水彩如此不同。原则上你可以在任何媒介中做任何标记；实际上媒介引导你。如果你不再亲自做工作，你就停止从中学习。&lt;/p&gt;&#xA;&lt;p&gt;所以如果你想击败那些足够杰出以至于可以委托的人，一种方法是利用与媒介的直接接触。在艺术中，这很明显：吹你自己的玻璃，编辑你自己的电影，上演你自己的戏剧。在这个过程中密切注意事故和你即时产生的新想法。这种技术可以推广到任何类型的工作：如果你是一个局外人，不要被计划所统治。计划通常只是被迫于那些委托的人的弱点。&lt;/p&gt;&#xA;&lt;p&gt;有没有找到最好在一个脑袋中解决的问题的一般规则？嗯，你可以通过采取通常由多人完成的任何项目并尝试自己做来制造它们。沃兹尼亚克的工作是一个经典的例子：他自己做了一切，硬件和软件，结果是奇迹性的。他声称在Apple II中从未发现一个错误，无论是在硬件还是软件中。&lt;/p&gt;&#xA;&lt;p&gt;找到好问题在一个脑袋中解决的另一种方法是专注于巧克力棒中的凹槽——当任务在几个人之间分割时被分割的地方。如果你想击败委托，专注于垂直切片：例如，既是作家又是编辑，或者既是设计建筑又是建造它们。&lt;/p&gt;&#xA;&lt;p&gt;一个特别好的跨越凹槽是工具和用它们制造的东西之间的凹槽。例如，编程语言和应用程序通常由不同的人编写，这负责了编程语言中最严重的缺陷。我认为每种语言都应该同时用用它编写的大型应用程序来设计，就像C与Unix一样。&lt;/p&gt;&#xA;&lt;p&gt;与委托竞争的技术很好地转化为商业，因为委托在那里是地方性的。许多公司不把委托作为衰老的缺点来避免，而是把它作为成熟的标志来拥抱。在大公司中，软件通常由三种不同类型的人设计、实现和销售。在创业公司中，一个人可能必须做所有三件事。虽然这感觉压力很大，但这是创业公司获胜的原因之一。客户的需求和满足他们的手段都在一个脑袋中。&lt;/p&gt;</description>
    </item>
    <item>
      <title>这是哪个微软的Altair Basic？</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/altair/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/altair/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/altair.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;这是哪个微软的altair-basic&#34;&gt;这是哪个微软的Altair Basic？&lt;/h1&gt;&#xA;&lt;p&gt;2015年2月&lt;/p&gt;&#xA;&lt;p&gt;如果你想了解初创公司，你可以尝试的最有价值的练习之一是看看最成功的公司，并解释为什么它们在刚推出时并不像看起来那么糟糕。因为实际上它们在刚开始时看起来都很糟糕。不仅仅是小，而是糟糕。不仅仅是登上大山的第一步。更像是踏入沼泽的第一步。&lt;/p&gt;&#xA;&lt;p&gt;Altair的Basic解释器？这怎么可能成长为一家大公司？人们在陌生人的公寓里睡气垫床？一个让大学生互相窥探的网站？一个使用电视作为显示器的爱好者用的弱小单板计算机？一个新的搜索引擎，当时已经有大约10个，而且它们都在试图淡化搜索？这些想法不仅看起来小。它们看起来是错的。它们是那种你不仅不能忽视，而且会嘲笑的想法。&lt;/p&gt;&#xA;&lt;p&gt;通常创始人自己也不知道为什么他们的想法有前途。他们被本能吸引到这些想法，因为他们生活在未来，并且感觉到缺少了什么。但他们无法用语言准确表达他们的丑小鸭将如何成长为美丽的大天鹅。&lt;/p&gt;&#xA;&lt;p&gt;大多数人在听到一个听起来糟糕的新初创公司想法时的第一反应是取笑它。即使是很多应该更了解情况的人也是如此。&lt;/p&gt;&#xA;&lt;p&gt;当我遇到一个想法听起来糟糕的初创公司时，我会问&amp;quot;这是哪个微软的Altair Basic？&amp;ldquo;现在这是一个谜题，解决它的责任在我身上。有时我想不出答案，特别是当想法是虚构的时候。但 remarkable 的是，经常确实有答案。通常这是创始人自己还没有看到的答案。&lt;/p&gt;&#xA;&lt;p&gt;有趣的是，有时有多个答案。几天前我和一家初创公司交谈，它可能成长为3个不同的微软。它们的大小可能会有数量级的差异。但你永远无法预测一个微软会有多大，所以在那种情况下，我鼓励创始人遵循哪条对他们来说最立即令人兴奋的道路。他们的本能让他们走到了这一步。为什么现在停止？&lt;/p&gt;</description>
    </item>
    <item>
      <title>阅读的必要</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/read/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/read/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/read.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;阅读的必要&#34;&gt;阅读的必要&lt;/h1&gt;&#xA;&lt;p&gt;2022年11月&lt;/p&gt;&#xA;&lt;p&gt;在我小时候读的科幻小说中，阅读经常被某种更高效的知识获取方式所取代。神秘的&amp;quot;磁带&amp;quot;会像程序加载到计算机中一样将知识加载到人的大脑中。&lt;/p&gt;&#xA;&lt;p&gt;那种事情在近期不太可能发生。不仅因为建造阅读的替代品会很困难，而且即使存在这样的替代品，它也是不够的。阅读关于x的东西不仅教你关于x的知识，它还教你如何写作。[1]&lt;/p&gt;&#xA;&lt;p&gt;这有关系吗？如果我们取代了阅读，还有人需要擅长写作吗？&lt;/p&gt;&#xA;&lt;p&gt;这之所以重要是因为写作不仅是一种传达思想的方式，也是一种拥有思想的方式。&lt;/p&gt;&#xA;&lt;p&gt;好的作家不只是思考，然后写下他所想的，就像某种转录。好的作家几乎总会在写作过程中发现新事物。而且，据我所知，这种发现没有替代品。与他人谈论你的想法是发展它们的好方法。但即使这样做了，当你坐下来写作时，你仍然会发现新事物。有一种思考只能通过写作来完成。&lt;/p&gt;&#xA;&lt;p&gt;当然，有些思考可以不通过写作来完成。如果你不需要太深入地研究一个问题，你可以不通过写作来解决它。如果你在思考两个机械部件应该如何配合，写关于它的可能不会有太大帮助。当一个问题可以被形式化描述时，你有时可以在头脑中解决它。但如果你需要解决一个复杂的、定义不清的问题，写关于它几乎总是有帮助的。这反过来意味着一个不擅长写作的人在解决这类问题时几乎总是处于劣势。&lt;/p&gt;&#xA;&lt;p&gt;没有好的写作就不能有好的思考，没有好的阅读就不能有好的写作。我意思是最后那个&amp;quot;好&amp;quot;在两种意义上。你必须擅长阅读，并且阅读好的东西。[2]&lt;/p&gt;&#xA;&lt;p&gt;只想要信息的人可能会找到其他获取方式。但想要有思想的人负担不起不阅读的代价。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 有声书可以给你好的写作例子，但让别人读给你你，不像你自己阅读那样能教你那么多关于写作的知识。&lt;/p&gt;&#xA;&lt;p&gt;[2] 我说&amp;quot;擅长阅读&amp;quot;不是指阅读的机械能力。你不必擅长从页面上提取单词，而是擅长从单词中提取意义。&lt;/p&gt;&#xA;&lt;p&gt;日语翻译&lt;/p&gt;&#xA;&lt;p&gt;中文翻译&lt;/p&gt;&#xA;&lt;p&gt;意大利语翻译&lt;/p&gt;&#xA;&lt;p&gt;法语翻译&lt;/p&gt;</description>
    </item>
    <item>
      <title>青铜</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/bronze/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/bronze/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/bronze.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;青铜&#34;&gt;青铜&lt;/h1&gt;&#xA;&lt;p&gt;为什么聪明人有坏主意&lt;/p&gt;&#xA;&lt;p&gt;想要创业吗？获得Y Combinator的资助。&lt;/p&gt;&#xA;&lt;p&gt;2005年4月&lt;/p&gt;&#xA;&lt;p&gt;今年夏天，作为一个实验，我和一些朋友正在为一群新的创业公司提供种子资金。这是一个实验，因为我们准备资助比大多数投资者愿意资助的更年轻的创始人。这就是为什么我们在夏天做这件事——这样即使是大学生也能参与。&lt;/p&gt;&#xA;&lt;p&gt;我们从谷歌和雅虎知道，研究生可以创办成功的创业公司。而且我们从经验中知道，一些本科生和大多数研究生一样有能力。创业创始人的接受年龄一直在下降。我们正在寻找下限。&lt;/p&gt;&#xA;&lt;p&gt;截止日期现在已经过去，我们正在筛选227份申请。我们期望将它们分为两类：有前途的和没有前途的。但我们很快就看到我们需要第三类：有前途的人但没有前途的想法。[1]&lt;/p&gt;&#xA;&lt;h2 id=&#34;artix阶段&#34;&gt;Artix阶段&lt;/h2&gt;&#xA;&lt;p&gt;我们应该预料到这一点。一群创始人在意识到创业公司必须制造人们愿意付费购买的东西之前，经历一个蹩脚的想法是很常见的。事实上，我们自己就是这样做的。&lt;/p&gt;&#xA;&lt;p&gt;Viaweb不是Robert Morris和我创办的第一家创业公司。1995年1月，我和几个朋友创办了一家名为Artix的公司。计划是将艺术画廊放到网上。回想起来，我不知道我们怎么能在如此愚蠢的事情上浪费时间。即使在十年后的今天，画廊对上网也不是特别兴奋。他们不想让他们的库存对任何随机访客可见，就像古董店一样。[2]&lt;/p&gt;&#xA;&lt;p&gt;此外，艺术经销商是地球上最害怕技术的人。他们成为艺术经销商并不是因为在那个和硬科学职业生涯之间做出了困难的选择。他们中的大多数人在我们来告诉他们为什么应该上网之前从未见过网络。有些人甚至没有电脑。把这种情况描述为艰难推销是不公正的；我们很快就降级为免费建网站，甚至很难说服画廊这样做。&lt;/p&gt;&#xA;&lt;p&gt;渐渐地我们意识到，与其试图为那些不想要网站的人建立网站，不如为那些想要网站的人建立网站。事实上，是让那些想要网站的人能够自己建立网站的软件。所以我们抛弃了Artix，创办了一家新公司Viaweb，来制造建立在线商店的软件。那家公司成功了。&lt;/p&gt;&#xA;&lt;p&gt;在这方面我们有很多好伙伴。微软也不是Paul Allen和Bill Gates创办的第一家公司。第一家叫做Traf-o-data。它似乎没有Micro-soft做得那么好。为Robert辩护，他对Artix持怀疑态度。是我把他拖进来的。[3] 但他有时也很乐观。如果我们这些当时29岁和30岁的人都能对这样一个彻头彻尾愚蠢的想法感到兴奋，那么对于21岁或22岁的黑客向我们推销几乎没有赚钱希望的想法，我们就不应该感到惊讶。&lt;/p&gt;&#xA;&lt;h2 id=&#34;静物效应&#34;&gt;静物效应&lt;/h2&gt;&#xA;&lt;p&gt;为什么会这样？为什么优秀的黑客会有糟糕的商业想法？&lt;/p&gt;&#xA;&lt;p&gt;让我们看看我们的情况。我们有这样一个蹩脚想法的一个原因是它是我们想到的第一件事。当时我在纽约试图成为一个饥饿的艺术家（饥饿的部分实际上很容易），所以我一直在逛画廊。当我了解到网络时，将两者混合似乎很自然。为画廊建网站——这就是办法！&lt;/p&gt;&#xA;&lt;p&gt;如果你要花几年时间做某件事，你可能认为明智的做法是至少花几天时间考虑不同的想法，而不是选择第一个进入你脑海的想法。你会这么想。但人们不会。事实上，这是画静物画时的一个常见问题。你把一堆东西放在桌子上，也许花五到十分钟重新排列使其看起来有趣。但是你急于开始绘画，十分钟的重新排列感觉很漫长。所以你开始画画。三天后，花了二十个小时盯着它，你踢自己设置了如此尴尬和无聊的构图，但那时已经太晚了。&lt;/p&gt;&#xA;&lt;p&gt;问题的一部分是大项目往往从小项目发展而来。你设置一个静物画以便在有空闲时间时快速素描，几天后你还在处理它。我曾经花了一个月时间画一个静物画的三个版本，这个静物画我大约用了四分钟设置。在每个时间点（一天、一周、一个月），我都觉得我已经投入了太多时间，改变已经太晚了。&lt;/p&gt;&#xA;&lt;p&gt;所以坏想法的最大原因是静物效应：你想出一个随机的想法，投入其中，然后在每个时间点（一天、一周、一个月）感觉你已经投入了这么多时间，这一定是这个想法。&lt;/p&gt;&#xA;&lt;p&gt;我们如何解决这个问题？我不认为我们应该放弃投入。投入想法是好事。解决方案在另一端：要意识到投入时间在某件事上并不能使它变好。&lt;/p&gt;&#xA;&lt;p&gt;这在名字的情况下最明显。Viaweb最初叫做Webgen，但我们发现有人已经有了一个叫这个名字的产品。我们非常喜欢我们的名字，以至于我们向他提供了公司5%的股份，如果他让我们使用这个名字。但他不愿意，所以我们不得不想另一个。[4] 我们能做的最好的是Viaweb，起初我们不喜欢它。这就像有了一个新母亲。但三天内我们就爱上了它，而Webgen听起来蹩脚而过时。&lt;/p&gt;&#xA;&lt;p&gt;如果改变像名字这样简单的东西都很困难，想象一下回收一个想法有多困难。名字在你头脑中只有一个附着点。一个公司的想法被编织到你的思想中。所以你必须有意识地为此打折扣。尽管投入，但记得以后在晨光中审视你的想法并问：这是人们愿意付费购买的东西吗？在我们可以制造的所有东西中，这是人们最愿意付费购买的东西吗？&lt;/p&gt;&#xA;&lt;h2 id=&#34;污秽&#34;&gt;污秽&lt;/h2&gt;&#xA;&lt;p&gt;我们在Artix上犯的第二个错误也很常见。将画廊放到网上似乎很酷。&lt;/p&gt;&#xA;&lt;p&gt;我父亲教给我的最有价值的事情之一是一句古老的约克郡谚语：哪里有污秽，哪里就有黄铜。意思是令人不愉快的工作有报酬。而这里的重点是，反之亦然。人们喜欢的工作报酬不高，原因是供求关系。最极端的例子是开发编程语言，这根本没有报酬，因为人们非常喜欢它，以至于他们免费做。&lt;/p&gt;&#xA;&lt;p&gt;当我们开始Artix时，我对商业仍然矛盾。我想在艺术界保持一只脚。天大的错误。进入商业就像悬挂式滑翔机发射：你最好全心全意地做，或者根本不做。公司的目的，特别是创业公司的目的，是赚钱。你不能有分裂的忠诚。&lt;/p&gt;&#xA;&lt;p&gt;这并不是说你必须做最令人厌恶的工作，比如发送垃圾邮件，或者创办唯一目的是专利诉讼的公司。我的意思是，如果你要创办一家会做很酷事情的公司，目标最好是赚钱并且可能很酷，而不是很酷并且可能赚钱。&lt;/p&gt;&#xA;&lt;p&gt;赚钱已经够难了，你不可能偶然做到。除非它是你的首要任务，否则根本不可能发生。&lt;/p&gt;&#xA;&lt;h2 id=&#34;鬣狗&#34;&gt;鬣狗&lt;/h2&gt;&#xA;&lt;p&gt;当我探索我们在Artix上的动机时，我看到了第三个错误：胆怯。如果你当时提议我们进入电子商务业务，我们会觉得这个想法很可怕。这样一个领域肯定会被每家有五百万美元风险投资资金的可怕创业公司主导。而我们相当确定我们可以在为艺术画廊建网站的竞争稍小的业务中保持自己的地位。&lt;/p&gt;&#xA;&lt;p&gt;我们在安全方面错得离谱。事实证明，风险投资支持的创业公司并不可怕。他们太忙于试图花完所有钱来编写软件。1995年，从新闻稿来看，电子商务业务竞争非常激烈，但从软件来看并非如此。而且实际上从来都不是。像Open Market（愿他们安息）这样的大鱼只是伪装成产品公司的咨询公司[5]，而我们市场的产品是几百行Perl脚本。或者可以用几百行Perl实现；事实上它们可能是成千上万行C++或Java。一旦我们真正投入电子商务，结果证明竞争出奇地容易。&lt;/p&gt;&#xA;&lt;p&gt;那么我们为什么害怕？我们觉得自己擅长编程，但我们对做一个神秘的、未分化的被称为&amp;quot;商业&amp;quot;的事情缺乏信心。事实上没有&amp;quot;商业&amp;quot;这种东西。有销售、促销、弄清楚人们想要什么、决定收费多少、客户支持、支付账单、让客户付款、注册公司、筹集资金等等。组合起来并不像看起来那么难，因为一些任务（如筹集资金和注册公司）无论大小都是O(1)的麻烦事，而其他任务（如销售和促销）更多地取决于精力和想象力，而不是任何特殊培训。&lt;/p&gt;&#xA;&lt;p&gt;Artix就像一只鬣狗，满足于靠腐肉生存，因为我们害怕狮子。除了狮子原来没有牙齿，而将画廊上线的工作几乎算不上腐肉。&lt;/p&gt;&#xA;&lt;h2 id=&#34;熟悉的问题&#34;&gt;熟悉的问题&lt;/h2&gt;&#xA;&lt;p&gt;总结所有这些错误来源，我们公司有如此糟糕的想法也就不足为奇了。我们做了我们想到的第一件事；我们对进入商业界完全矛盾；我们故意选择了一个贫乏的市场以避免竞争。&lt;/p&gt;&#xA;&lt;p&gt;看看夏季创始人计划的申请，我看到所有三种迹象。但第一个是迄今为止最大的问题。大多数申请的团队都没有停下来问：在我们可以做的所有事情中，这是最有赚钱机会的吗？&lt;/p&gt;&#xA;&lt;p&gt;如果他们已经经历了他们的Artix阶段，他们就会学会问这个问题。在从艺术经销商那里得到接待后，我们准备好问了。这次，我们想，让我们制造人们想要的东西。&lt;/p&gt;&#xA;&lt;p&gt;阅读《华尔街日报》一周应该会给任何人带来两三个新创业公司的想法。文章充满了需要解决的问题的描述。但大多数申请人似乎没有广泛寻找想法。&lt;/p&gt;&#xA;&lt;p&gt;我们期望最常见的提案是多人游戏。我们没有相差太远：这是第二常见的。最常见的是博客、日历、交友网站和Friendster的某种组合。也许这里可以发现一个新的杀手级应用，但在有价值、未解决的问题公开摆在那里供任何人看到的情况下，在这种迷雾中探索似乎很荒谬。为什么没有人提出新的微支付方案？也许是一个雄心勃勃的项目，但我不敢相信我们已经考虑了所有替代方案。报纸和杂志（字面上）正在为解决方案而死亡。&lt;/p&gt;&#xA;&lt;p&gt;为什么很少有申请人真正考虑客户想要什么？我认为许多人的问题，与通常二十出头的人一样，是他们一生中被训练着跳过预定的圈套。他们花了15-20年时间解决别人为他们设定的问题。花了多少时间决定哪些问题是好的解决？两三个课程项目？他们擅长解决问题，但不擅长选择问题。&lt;/p&gt;&#xA;&lt;p&gt;但我确信，这只是培训的效果。或者更准确地说，是评分的效果。为了使评分高效，每个人都必须解决同样的问题，这意味着必须提前决定。如果学校教学生如何选择问题以及如何解决问题，那就太好了，但我不知道在实践中如何运行这样的课程。&lt;/p&gt;&#xA;&lt;h2 id=&#34;铜和锡&#34;&gt;铜和锡&lt;/h2&gt;&#xA;&lt;p&gt;好消息是，选择问题是可以通过学习获得的。我从经验中知道这一点。黑客可以学会制造客户想要的东西。[6]&lt;/p&gt;&#xA;&lt;p&gt;这是一个有争议的观点。一位&amp;quot;创业&amp;quot;专家告诉我，任何创业公司都必须包括商业人士，因为只有他们才能专注于客户想要什么。通过引用他，我可能会永远疏远这个人，但我必须冒险，因为他的电子邮件是这种观点的完美例子：&lt;/p&gt;&#xA;&lt;p&gt;80%的麻省理工学院分校创业公司成功，前提是团队在开始时至少有一名管理人员。商业人士代表&amp;quot;客户的声音&amp;quot;，这就是让工程师和产品开发保持正轨的原因。&lt;/p&gt;&#xA;&lt;p&gt;在我看来，这是胡说。黑客完全能够在没有商业人士为他们放大信号的情况下听到客户的声音。Larry Page和Sergey Brin是计算机科学研究生，这大概使他们成为&amp;quot;工程师&amp;quot;。你认为谷歌之所以好只是因为有一些商业人在他们耳边低语客户想要什么吗？在我看来，对谷歌贡献最大的商业人是那些在谷歌刚开始时顺从地将Altavista撞向山坡的人。&lt;/p&gt;&#xA;&lt;p&gt;弄清楚客户想要什么的最困难的部分是弄清楚你需要弄清楚它。但这是可以快速学会的。就像看到模糊图片的另一种解释一样。一旦有人告诉你那里有一只兔子和一只鸭子，就很难看不到它。&lt;/p&gt;&#xA;&lt;p&gt;与黑客习惯解决的问题相比，给客户他们想要的东西很容易。任何能编写优化编译器的人，一旦选择专注于那个问题，都能设计出不让用户困惑的UI。一旦你将那种脑力应用于琐碎但有利可图的问题，你可以非常迅速地创造财富。&lt;/p&gt;&#xA;&lt;p&gt;这就是创业公司的本质：让聪明的人做配不上他们的工作。大公司试图为工作雇佣合适的人。创业公司获胜是因为他们不——因为他们把那些聪明到在大公司可能做&amp;quot;研究&amp;quot;的人，让他们转而处理最直接和最平凡的问题。想象爱因斯坦设计冰箱。[7]&lt;/p&gt;&#xA;&lt;p&gt;如果你想了解人们想要什么，请阅读Dale Carnegie的《如何赢得朋友和影响他人》。[8] 当一个朋友向我推荐这本书时，我无法相信他是认真的。但他坚持说这本书很好，所以我读了，他是对的。它处理了人类经验中最困难的问题：如何从别人的角度看待事物，而不是只考虑自己。&lt;/p&gt;&#xA;&lt;p&gt;大多数聪明人不太擅长这个。但是将这种能力添加到原始的脑力中就像在铜中添加锡。结果是青铜，它坚硬得多，看起来像是一种不同的金属。&lt;/p&gt;&#xA;&lt;p&gt;一个已经学会制造什么而不仅仅是如何制造的黑客是非常强大的。不仅仅在赚钱方面：看看一小群志愿者用Firefox取得了什么成就。&lt;/p&gt;&#xA;&lt;p&gt;做一个Artix教你制造人们想要的东西，就像不喝任何东西会教你你对水的依赖程度一样。但如果夏季创始人不在我们的钱上学习这个——如果他们能够跳过Artix阶段直接制造客户想要的东西，那对所有参与的人来说都会更方便。那，我认为，将是今年夏天的真正实验。他们需要多长时间才能掌握这个？&lt;/p&gt;&#xA;&lt;p&gt;我们决定应该为SFP制作T恤，我们一直在考虑背面印什么。直到现在我们一直计划使用&amp;quot;如果你能读到这个，我应该在工作&amp;quot;，但现在我们决定将是&amp;quot;制造人们想要的东西&amp;quot;。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] SFP申请人：请不要认为不被接受意味着我们认为你的想法不好。因为我们希望今年夏天保持创业公司数量少，我们将不得不拒绝一些好的提案。&lt;/p&gt;</description>
    </item>
    <item>
      <title>骇客投资者指南</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/guidetoinvestors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/guidetoinvestors/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/guidetoinvestors.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;骇客投资者指南&#34;&gt;骇客投资者指南&lt;/h1&gt;&#xA;&lt;p&gt;2007年4月&#xA;（本文源自2007年在斯坦福大学ASES峰会的主旨演讲）&lt;/p&gt;&#xA;&lt;p&gt;对大多数骇客来说，投资者的世界是一个陌生的世界——部分原因是投资者与骇客如此不同，部分原因是他们倾向于秘密运作。我作为创始人和投资者已经在这个世界打拼多年，但我仍然没有完全理解它。&lt;/p&gt;&#xA;&lt;p&gt;在这篇文章中，我将列出一些我对投资者了解到的令人惊讶的事情。有些是我在过去一年才学到的。&lt;/p&gt;&#xA;&lt;p&gt;教骇客如何与投资者打交道，可能我们在Y Combinator做的第二重要的事情。对创业公司来说最重要的事情是做出好产品。但每个人都知道这很重要。投资者的危险之处在于骇客不知道他们对这个陌生世界的了解有多么少。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-投资者是创业中心的核心&#34;&gt;1. 投资者是创业中心的核心&lt;/h2&gt;&#xA;&lt;p&gt;大约一年前，我试图弄清楚复制硅谷需要什么。我决定关键因素是有钱人和极客——投资者和创始人。人是你制造技术所需要的一切，其他所有的人都会跟进。&lt;/p&gt;&#xA;&lt;p&gt;如果我必须缩小范围，我会说投资者是限制因素。不是因为他们对创业公司的贡献更大，而仅仅是因为他们最不愿意移动。他们很有钱。他们不会仅仅因为阿尔伯克基有一些他们可以投资的聪明骇客就搬到那里去。而骇客会搬到湾区寻找投资者。&lt;/p&gt;&#xA;&lt;h2 id=&#34;2-天使投资者是最关键的&#34;&gt;2. 天使投资者是最关键的&lt;/h2&gt;&#xA;&lt;p&gt;有几种类型的投资者。两个主要类别是天使投资人和风险投资人（VC）：VC投资别人的钱，而天使投资人投资自己的钱。&lt;/p&gt;&#xA;&lt;p&gt;虽然他们不太出名，但天使投资人在创建硅谷方面可能是更关键的成分。VC投资的大多数公司如果天使投资人没有先投资，根本就不会走到那一步。VC说，在进行A轮融资的公司中，有一半到四分之三已经接受了一些外部投资。[1]&lt;/p&gt;&#xA;&lt;p&gt;天使投资人愿意资助比VC更风险的项目。他们也提供有价值的建议，因为（与VC不同）许多天使投资人自己本身就是创业公司的创始人。&lt;/p&gt;&#xA;&lt;p&gt;谷歌的故事显示了天使投资人扮演的关键角色。很多人知道谷歌从Kleiner和Sequoia那里筹集了资金。大多数人没有意识到的是那有多晚。那轮融资是B轮融资；投资前估值是7500万美元。在那时，谷歌已经是一家成功的公司。实际上，谷歌是用天使资金资助的。&lt;/p&gt;&#xA;&lt;p&gt;典型的硅谷创业公司是由天使投资人资助的，这似乎很奇怪，但这并不那么令人惊讶。风险总是与回报成正比。所以有史以来最成功的创业公司一开始似乎可能是一个非常危险的赌注，而这正是VC不会碰的那种。&lt;/p&gt;&#xA;&lt;p&gt;天使投资人从哪里来？来自其他创业公司。所以像硅谷这样的创业中心受益于类似市场效应的东西，但在时间上有所转移：创业公司在这里是因为创业公司曾经在这里。&lt;/p&gt;&#xA;&lt;h2 id=&#34;3-天使投资人不喜欢宣传&#34;&gt;3. 天使投资人不喜欢宣传&lt;/h2&gt;&#xA;&lt;p&gt;如果天使投资人如此重要，为什么我们听到更多关于VC的事情？因为VC喜欢宣传。他们需要向那些作为他们&amp;quot;客户&amp;quot;的投资者营销——那些他们投资的捐赠基金、养老基金和富裕家庭——也向可能来找他们融资的创始人营销。&lt;/p&gt;&#xA;&lt;p&gt;天使投资人不需要向投资者营销自己，因为他们投资自己的钱。他们也不想向创始人营销自己：他们不希望随机的商业计划书来烦扰他们。实际上，VC也不想。天使投资人和VC几乎都通过个人介绍获得交易。[2]&lt;/p&gt;&#xA;&lt;p&gt;VC想要强大品牌的原因不是为了吸引更多的商业计划书，而是为了在与其它VC竞争时赢得交易。而天使投资人很少直接竞争，因为（a）他们做的交易更少，（b）他们很乐意分享交易，（c）他们在更广泛的阶段投资。&lt;/p&gt;&#xA;&lt;h2 id=&#34;4-大多数投资者特别是vc不像创始人&#34;&gt;4. 大多数投资者，特别是VC，不像创始人&lt;/h2&gt;&#xA;&lt;p&gt;一些天使投资人是或曾经是骇客。但大多数VC是不同类型的人：他们是交易撮合者。&lt;/p&gt;&#xA;&lt;p&gt;如果你是一个骇客，这里有一个思想实验可以帮助你理解为什么基本上没有骇客VC：你想要一份永远不能制造任何东西，而是花所有时间听别人推销（大多是糟糕的）项目，决定是否资助他们，如果资助了就坐在他们董事会上的工作吗？这对大多数骇客来说不会很有趣。骇客喜欢制造东西。这就像做一个管理员。&lt;/p&gt;&#xA;&lt;p&gt;因为大多数VC是与创始人不同种类的人，很难知道他们在想什么。如果你是一个骇客，上次你不得不和这些人打交道是在高中时。也许在大学里，你在去实验室的路上经过他们的兄弟会。但不要低估他们。他们在自己的世界里和你一样专业。他们擅长的是读人，并让交易对他们有利。在试图在这方面击败他们之前要三思。&lt;/p&gt;&#xA;&lt;h2 id=&#34;5-大多数投资者是动量投资者&#34;&gt;5. 大多数投资者是动量投资者&lt;/h2&gt;&#xA;&lt;p&gt;因为大多数投资者是交易撮合者而不是技术专家，他们通常不理解你在做什么。我作为创始人知道大多数VC不懂技术。我也知道有些人赚了很多钱。然而直到最近我才把这两个想法放在一起问：&amp;ldquo;VC如何通过投资他们不理解的东西赚钱？&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;答案是他们像动量投资者。你可以（或者曾经可以）通过注意到股票价格的突然变化来赚很多钱。当股票向上跳时，你买入，当它突然下跌时，你卖出。实际上你在做内幕交易，而不知道你知道什么。你只是知道有人知道一些事情，而这正是推动股票移动的原因。&lt;/p&gt;&#xA;&lt;p&gt;这就是大多数风险投资者运作的方式。他们不试图观察某事物并预测它是否会起飞。他们通过比别人早一点注意到某事物正在起飞而获胜。这产生的回报几乎与实际能够挑选赢家一样好。他们可能必须比在最开始进入时支付多一点，但只是一点点。&lt;/p&gt;&#xA;&lt;p&gt;投资者总是说他们真正关心的是团队。实际上他们最关心的是你的流量，然后是其他投资者的看法，然后才是团队。如果你还没有任何流量，他们退回到第二点，其他投资者的看法。而这，正如你可以想象的，会导致创业公司&amp;quot;股价&amp;quot;的剧烈波动。一周每个人都想要你，他们恳求不要被排除在交易之外。但只要一个大投资者对你失去兴趣，下一周就没人会回你电话。我们经常有创业公司在几天内从热门变冷门或从冷门变热门，而实际上什么都没有改变。&lt;/p&gt;&#xA;&lt;p&gt;有两种方法处理这种现象。如果你感觉真的很自信，你可以尝试驾驭它。你可以从向一个相对低级的VC要一小笔钱开始，然后在产生兴趣后，向更有声望的VC要更大金额，掀起一股炒作的高潮，然后在&amp;quot;顶部&amp;quot;&amp;ldquo;卖出&amp;rdquo;。这是极其冒险的，即使成功也需要几个月。我不会自己尝试。我的建议是倾向于安全：当有人给你一个像样的交易时，就接受它并继续建立公司。创业公司成败取决于他们产品的质量，而不是融资交易的质量。&lt;/p&gt;&#xA;&lt;h2 id=&#34;6-大多数投资者在寻找大赢家&#34;&gt;6. 大多数投资者在寻找大赢家&lt;/h2&gt;&#xA;&lt;p&gt;风险投资者喜欢可以上市的公司。那里有大回报。他们知道任何个别创业公司上市的几率很小，但他们想投资那些至少有机会上市的公司。&lt;/p&gt;&#xA;&lt;p&gt;目前VC似乎运作的方式是投资一堆公司，大多数都失败了，其中一个是谷歌。那几个大赢家弥补了他们在其他投资上的损失。这意味着大多数VC只会在你是一个潜在的谷歌时才投资你。他们不关心那些安全地被收购2000万美元的公司。需要有一个机会，无论多小，让公司变得真正巨大。&lt;/p&gt;&#xA;&lt;p&gt;天使投资人在这方面不同。他们很乐意投资一个最可能的结果是被收购2000万美元的公司，如果他们能够以足够低的估值进行投资。但当然他们也喜欢可以上市的公司。所以有一个雄心勃勃的长期计划会让每个人都高兴。&lt;/p&gt;&#xA;&lt;p&gt;如果你接受VC的钱，你必须认真对待，因为VC交易的结构阻止了早期收购。如果你接受VC的钱，他们不会让你早期出售。&lt;/p&gt;&#xA;&lt;h2 id=&#34;7-vc想要投资大金额&#34;&gt;7. VC想要投资大金额&lt;/h2&gt;&#xA;&lt;p&gt;他们在运营投资基金的事实使得VC想要投资大金额。一个典型的VC基金现在是数亿美元。如果4亿美元必须由10个合伙人投资，他们每人必须投资4000万美元。VC通常坐在他们资助的公司的董事会。如果平均交易规模是100万美元，每个合伙人将不得不坐在40个董事会上，这不会很有趣。所以他们喜欢更大的交易，可以一次性投入大量资金。&lt;/p&gt;&#xA;&lt;p&gt;如果你不需要很多钱，VC不会认为你是一个便宜货。这甚至可能让你不那么有吸引力，因为这意味着他们的投资为竞争对手创造了更少的进入障碍。&lt;/p&gt;&#xA;&lt;p&gt;天使投资人在不同的位置，因为他们投资自己的钱。他们很乐意投资小额——有时少至2万美元——只要潜在回报看起来足够好。所以如果你在做一些 inexpensive 的事情，去找天使投资人。&lt;/p&gt;&#xA;&lt;h2 id=&#34;8-估值是虚构的&#34;&gt;8. 估值是虚构的&lt;/h2&gt;&#xA;&lt;p&gt;VC承认估值是人为制造的。他们决定你需要多少钱和他们想要公司的多少股份，这两个约束产生一个估值。&lt;/p&gt;&#xA;&lt;p&gt;估值随着投资的规模而增加。一个天使投资人愿意以100万美元估值投资5万美元的公司不能以那个估值从VC那里获得600万美元。那将留给创始人之间不到七分之一的股份（因为期权池也将从那七分之一中扣除）。大多数VC不会想要那个，这就是为什么你从未听说过VC以100万美元投资前估值投资600万美元的交易。&lt;/p&gt;&#xA;&lt;p&gt;如果估值随着投资金额而改变，这表明它们离反映公司的任何价值有多远。&lt;/p&gt;&#xA;&lt;p&gt;既然估值是编造的，创始人不应该太在意它们。那不是需要关注的部分。实际上，高估值可能是一件坏事。如果你以1000万美元的投资前估值获得融资，你不会为20美元出售公司。你必须以超过50的价格出售，VC才能获得甚至5倍的回报，这对他们来说很低。更可能他们会希望你坚持100。但需要获得高价降低了被收购的机会；许多公司可以以1000万美元收购你，但只有少数几个可以以100收购。而且因为创业公司对创始人来说像一门及格/不及格的课程，你想要优化的是获得好结果的机会，而不是你保留的公司股份比例。&lt;/p&gt;&#xA;&lt;p&gt;那么为什么创始人追求高估值？他们被错位的野心所欺骗。如果他们获得更高的估值，他们觉得他们取得了更多成就。他们通常认识其他创始人，如果他们获得更高的估值，他们可以说&amp;quot;我的比你的大&amp;quot;。但融资不是真正的考验。真正的考验是创始人的最终结果，获得太高的估值可能只是让好结果的可能性降低。&lt;/p&gt;&#xA;&lt;p&gt;高估值的一个优势是你获得较少的稀释。但有一个不那么性感的方法可以实现：只拿更少的钱。&lt;/p&gt;&#xA;&lt;h2 id=&#34;9-投资者寻找像当前明星一样的创始人&#34;&gt;9. 投资者寻找像当前明星一样的创始人&lt;/h2&gt;&#xA;&lt;p&gt;十年前投资者在寻找下一个比尔·盖茨。这是一个错误，因为微软是一个非常反常的创业公司。他们几乎作为一个合同编程操作开始，他们变得巨大的原因是IBM碰巧把PC标准扔进了他们的怀里。&lt;/p&gt;&#xA;&lt;p&gt;现在所有的VC都在寻找下一个拉里和谢尔盖。这是一个好趋势，因为拉里和谢尔盖更接近理想的创业公司创始人。&lt;/p&gt;&#xA;&lt;p&gt;历史上投资者认为创始人成为商业专家很重要。所以他们愿意资助MBA团队，他们计划用钱来支付程序员为他们构建产品。这就像资助史蒂夫·鲍尔默，希望他雇用的程序员是比尔·盖茨——有点倒退，正如泡沫事件所示。现在大多数VC知道他们应该资助技术专家。在最顶级的基金中这更明显；较差的基金仍然想要资助MBA。&lt;/p&gt;&#xA;&lt;p&gt;如果你是一个骇客，投资者在寻找拉里和谢尔盖是个好消息。坏消息是，唯一能够正确做到的投资者是那些当他们还是一对计算机科学研究生时认识他们的人，而不是他们今天成为自信的媒体明星的时候。投资者仍然没有理解的是伟大的创始人在刚开始时可能看起来多么无知和犹豫不决。&lt;/p&gt;&#xA;&lt;h2 id=&#34;10-投资者的贡献往往被低估&#34;&gt;10. 投资者的贡献往往被低估&lt;/h2&gt;&#xA;&lt;p&gt;投资者为创业公司做的不仅仅是给他们钱。他们在做交易和安排介绍方面很有帮助，一些更聪明的投资者，特别是天使投资人，可以给产品提供好的建议。&lt;/p&gt;&#xA;&lt;p&gt;实际上，我认为区分伟大和普通投资者的是他们建议的质量。大多数投资者都给建议，但顶级投资者给好建议。&lt;/p&gt;&#xA;&lt;p&gt;投资者给创业公司的任何帮助都往往被低估。让世界认为创始人想到了一切对每个人都有利。投资者的目标是让公司变得有价值，如果似乎所有好想法都来自内部，公司似乎更有价值。&lt;/p&gt;</description>
    </item>
    <item>
      <title>高分辨率社会</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/highres/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/highres/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/highres.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;高分辨率社会&#34;&gt;高分辨率社会&lt;/h1&gt;&#xA;&lt;p&gt;2008年12月&lt;/p&gt;&#xA;&lt;p&gt;在几乎整个历史中，一个社会的成功与其组建大型和有纪律的组织能力成正比。那些押注规模经济的人通常获胜，这意味着最大的组织是最成功的。&lt;/p&gt;&#xA;&lt;p&gt;事物已经发生了如此大的变化，以至于我们难以相信，但直到几十年前，最大的组织往往是最进步的。1960年，一个雄心勃勃的大学毕业生想在福特、通用电气或NASA巨大而光鲜的办公室工作。小意味着小打小闹。1960年的小并不意味着一个酷酷的小型创业公司。它意味着希德叔叔的鞋店。&lt;/p&gt;&#xA;&lt;p&gt;当我在1970年代长大时，&amp;ldquo;公司阶梯&amp;quot;的概念仍然非常活跃。标准计划是努力进入一所好大学，然后被征召到某个组织，然后逐渐上升到责任越来越大的职位。更有雄心的人只是希望更快地爬上同一个阶梯。[1]&lt;/p&gt;&#xA;&lt;p&gt;但在二十世纪晚期，某些事情发生了变化。事实证明，规模经济并不是唯一起作用的力量。特别是在技术领域，从小团体获得的更高速度开始超越规模的优势。&lt;/p&gt;&#xA;&lt;p&gt;未来被证明与我们1970年预期的不同。我们预期的圆顶城市和飞行汽车未能实现。但幸运的是，带有标明我们专业和等级徽章的连体服也未能实现。经济现在看起来不是由少数几个巨大的树形组织主导，而是一个由较小独立单位组成的流动网络。&lt;/p&gt;&#xA;&lt;p&gt;并不是说大组织停止了工作。没有证据表明像罗马军队或英国东印度公司这样著名成功的组织比今天同规模的组织少受繁文缛节和政治的困扰。但他们的对手是那些不能通过发现新技术来即时改变规则的人。现在事实证明，&amp;ldquo;大型和有纪律的组织获胜&amp;quot;这个规则需要附加一个限定条件：&amp;ldquo;在变化缓慢的游戏中&amp;rdquo;。在变化达到足够速度之前，没有人知道这一点。&lt;/p&gt;&#xA;&lt;p&gt;不过，大组织现在将开始做得更差，因为历史上第一次他们不再获得最优秀的人才。现在雄心勃勃的大学毕业生不想为大公司工作。他们想为正在迅速成长为大公司的热门创业公司工作。如果他们真的有雄心，他们想自己创业。[2]&lt;/p&gt;&#xA;&lt;p&gt;这并不意味着大公司会消失。说创业公司会成功意味着大公司将存在，因为成功的创业公司要么成为大公司，要么被它们收购。[3] 但大型组织可能永远不会再次扮演它们在二十世纪末以前所扮演的主导角色。&lt;/p&gt;&#xA;&lt;p&gt;一个持续如此之久的趋势竟然会耗尽，这有点令人惊讶。一个规则工作了数千年然后改变极性，这种情况多久发生一次？&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;越大越好&amp;quot;的千年运行给我们留下了许多现在已经过时但极其根深蒂固的传统。这意味着雄心勃勃的人现在可以对其进行套利。准确理解要保留哪些想法，哪些现在可以丢弃，将非常有价值。&lt;/p&gt;&#xA;&lt;p&gt;观察的地方是小规模传播开始的地方：创业公司的世界。&lt;/p&gt;&#xA;&lt;p&gt;一直有偶尔的案例，特别是在美国，雄心勃勃的人在自己下面成长阶梯而不是爬上去。但直到最近，这是一条异常的路线，往往只有局外人才会走。十九世纪伟大的实业家如此缺乏正规教育并非巧合。无论他们的公司最终变得多大，他们最初基本上都是机械师和店主。没有大学教育的人如果能避免的话，是不会走这一步的。直到技术创业公司，特别是互联网创业公司的兴起，受过教育的人自己创业是非常不寻常的。&lt;/p&gt;&#xA;&lt;p&gt;离开肖克利半导体创立仙童半导体的八个人，最初的硅谷创业公司，最初甚至没有试图创业。他们只是在寻找一家愿意雇佣他们作为团队的公司。然后他们中一个人的父母介绍他们给一家小型投资银行，后者提出为他们创业融资，所以他们就这样做了。但创业对他们来说是一个陌生的想法；他们是不小心走到这一步的。[4]&lt;/p&gt;&#xA;&lt;p&gt;现在我想，几乎所有会编程的斯坦福或伯克利本科生都至少考虑过创业的想法。东海岸的大学并不落后，英国大学只比他们落后一点点。这种模式表明，斯坦福和伯克利的态度不是异常，而是领先指标。这就是世界发展的方向。&lt;/p&gt;&#xA;&lt;p&gt;当然，互联网创业公司仍然只是世界经济的一小部分。基于它们的趋势能有那么强大吗？&lt;/p&gt;&#xA;&lt;p&gt;我认为是的。没有理由假设这个领域可以完成的工作量有任何限制。像科学一样，财富似乎以分形方式扩展。当瓦特开始研究蒸汽动力时，它只是英国经济的很小一部分。但他的工作导致了更多的工作，直到这一部分扩展到比最初所属的整个经济更大的东西。&lt;/p&gt;&#xA;&lt;p&gt;互联网也可能发生同样的事情。如果互联网创业公司为雄心勃勃的人提供了最好的机会，那么很多雄心勃勃的人会创办它们，这部分经济会以通常的分形方式膨胀。&lt;/p&gt;&#xA;&lt;p&gt;即使与互联网相关的应用程序只成为世界经济的十分之一，这个组成部分也会为其他部分定下基调。经济中最活跃的部分总是如此，从薪资到着装标准。不仅仅是因为它的声望，还因为经济中最活跃部分所依据的原则往往是行之有效的原则。&lt;/p&gt;&#xA;&lt;p&gt;对于未来，押注的趋势似乎是个体绩效衡量的、小型自治团体组成的网络。获胜的社会将是那些阻碍最小的社会。&lt;/p&gt;&#xA;&lt;p&gt;就像最初的工业革命一样，一些社会将比其他社会更擅长这个。在英国诞生的一代内，工业革命传播到欧洲大陆和北美。但它并没有传播到任何地方。这种新的做事方式只能在为此做好准备的地方扎根。它只能传播到已经有活力中产阶级的地方。&lt;/p&gt;&#xA;&lt;p&gt;1960年代在硅谷开始的变革有类似的社会组成部分。那里开发了两种新技术：建造集成电路的技术，以及建造一种通过创造新技术来快速成长的新型公司的技术。建造集成电路的技术迅速传播到其他国家。但建造创业公司的技术没有。五十年后，创业公司在硅谷无处不在，在美国其他少数几个城市也很常见，但在世界大部分地区仍然是异常现象。&lt;/p&gt;&#xA;&lt;p&gt;创业公司没有像工业革命那样广泛传播的部分原因——可能主要是社会破坏性。尽管工业革命带来了许多社会变化，但它并没有与&amp;quot;越大越好&amp;quot;的原则作斗争。恰恰相反：两者完美地契合。新的工业公司适应了像军队和公务员这样现有大组织的习俗，产生的混合体运作良好。&amp;ldquo;工业领袖&amp;quot;向&amp;quot;工人军队&amp;quot;发布命令，每个人都知道他们应该做什么。&lt;/p&gt;&#xA;&lt;p&gt;创业公司在社会上似乎更逆流而上。它们很难在重视等级制度和稳定性的社会中繁荣，就像工业化很难在被随意从商人阶级偷窃的人统治的社会中繁荣一样。但在工业革命发生时，已经有少数几个国家度过了那个阶段。这次似乎没有那么多准备好的国家。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 这个模式的一个奇怪后果是，通常赚更多钱的方法是成为经理。这是创业公司解决的问题之一。&lt;/p&gt;&#xA;&lt;p&gt;[2] 美国汽车公司一直比日本汽车公司做得差得多有很多原因，但至少其中一个是乐观的原因：美国毕业生有更多选择。&lt;/p&gt;&#xA;&lt;p&gt;[3] 公司有一天可能在收入上做大而在人员规模上不做大是有可能的，但我们在这个趋势上还没有走得很远。&lt;/p&gt;&#xA;&lt;p&gt;[4] Lecuyer, Christophe, 《制造硅谷》，MIT出版社，2006年。&lt;/p&gt;&#xA;&lt;p&gt;感谢特雷弗·布莱克韦尔、保罗·布赫海特、杰西卡·利文斯顿和罗伯特·莫里斯阅读本文的草稿。&lt;/p&gt;</description>
    </item>
    <item>
      <title>高分辨率融资</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/hiresfund/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/hiresfund/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/hiresfund.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;高分辨率融资&#34;&gt;高分辨率融资&lt;/h1&gt;&#xA;&lt;p&gt;2010年9月&lt;/p&gt;&#xA;&lt;p&gt;创业公司在天使轮中使用更多可转换票据的原因是它们使交易更快完成。通过使创业公司更容易为不同的投资者提供不同的价格，它们帮助打破当所有投资者都等待看谁将投资时发生的僵局。&lt;/p&gt;&#xA;&lt;p&gt;迄今为止，对投资者关于创业公司意见的最大影响是其他投资者的意见。很少有投资者完全自己做决定。任何创业公司创始人都会告诉你，他们从投资者那里听到的最常见的问题不是关于创始人或产品，而是&amp;quot;还有谁在投资？&amp;quot;&lt;/p&gt;&#xA;&lt;p&gt;这往往会导致僵局。筹集旧式的固定规模股权轮可能需要数周时间，因为所有天使投资者都坐在那里等待其他人承诺，就像自行车冲刺比赛中的竞争者在开始时故意缓慢骑行，以便跟随第一个突破的人。&lt;/p&gt;&#xA;&lt;p&gt;可转换票据让创业公司通过给愿意先行动的投资者更低（有效）估值的奖励来打破这种僵局。他们应得这个，因为他们承担更多风险。投资罗恩·康威已经投资的创业公司要安全得多；在他之后来的人应该支付更高的价格。&lt;/p&gt;&#xA;&lt;p&gt;可转换票据允许价格上更大灵活性的原因是估值上限不是实际估值，而且票据便宜且容易做。所以你可以进行高分辨率融资：如果你愿意，可以为每个投资者提供具有不同上限的单独票据。&lt;/p&gt;&#xA;&lt;p&gt;这个上限不必单调上升。创业公司也可以给期望帮助他们最多的投资者更好的交易。关键是不同的投资者，无论是因为他们提供的帮助还是他们承诺的意愿，对创业公司有不同的价值，他们的条款应该反映这一点。&lt;/p&gt;&#xA;&lt;p&gt;为不同投资者提供不同条款显然是未来的方式。市场总是向更高分辨率发展。你可能不需要使用可转换票据来做到这一点。使用足够轻量级的标准化股权条款（以及对投资者和律师对股权轮期望的一些改变），你可能能够用股权而不是债务做同样的事情。创业公司对两者都可以接受，只要他们能够轻松改变估值。&lt;/p&gt;&#xA;&lt;p&gt;僵局并不是固定规模股权轮的唯一问题。另一个问题是创业公司必须提前决定筹集多少资金。我认为创业公司确定一个具体数字是错误的。如果投资者容易说服，创业公司现在应该筹集更多，如果投资者怀疑，创业公司应该接受较小的金额，并使用它使公司达到更有说服力的程度。&lt;/p&gt;&#xA;&lt;p&gt;期望创业公司提前选择最佳融资规模是不合理的，因为这取决于投资者的反应，而这些反应是无法预测的。&lt;/p&gt;&#xA;&lt;p&gt;固定规模、多投资者的天使轮对创业公司来说是个如此糟糕的主意，以至于人们想知道为什么事情会那样做。一种可能性是，这种习惯反映了投资者在能够逃脱时喜欢串通的方式。但我认为实际的解释没那么险恶。我认为天使投资者（和他们的律师）这样做轮次是无意识地模仿VC A轮。在A轮中，有领投的固定规模股权轮是有意义的，因为通常只有一个大投资者，他明确是领投。固定规模的A轮已经是高分辨率的。但是一轮中投资者越多，每个人都得到相同价格的意义就越小。&lt;/p&gt;&#xA;&lt;p&gt;这里最有趣的问题可能是高分辨率融资将对投资者世界做什么。更大胆的投资者现在将获得更低价格的奖励。但更重要的是，在一个受点击驱动的业务中，他们能够进入他们想要交易。而&amp;quot;还有谁在投资？&amp;ldquo;类型的投资者不仅会支付更高的价格，而且可能根本无法进入最好的交易。&lt;/p&gt;&#xA;&lt;p&gt;感谢伊玛德·阿洪德、萨姆·奥特曼、约翰·包蒂斯塔、皮特·库门、杰西卡·利文斯顿、丹·西罗克、哈吉·塔加和弗雷德·威尔逊阅读本文的草稿。&lt;/p&gt;</description>
    </item>
    <item>
      <title>魅力</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/charisma/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/charisma/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/charisma.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;魅力&#34;&gt;魅力&lt;/h1&gt;&#xA;&lt;p&gt;是魅力，傻瓜&lt;/p&gt;&#xA;&lt;p&gt;2004年11月，2006年6月更正&lt;/p&gt;&#xA;&lt;p&gt;奥卡姆剃刀说我们应该在两个解释中选择较简单的一个。我首先提醒读者这个原则，因为我将要提出一个理论，这将冒犯自由派和保守派。但奥卡姆剃刀实际上意味着，如果你想不同意它，你有一个 hell of a coincidence 需要解释。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;理论：在美国总统选举中，更有魅力的候选人获胜。&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;写政治的人，无论是左派还是右派，都有一种一致的偏见：他们认真对待政治。当一个候选人击败另一个时，他们寻找政治解释。国家正在向左转，或向右转。而这种转变当然可能是总统选举的结果，这使得很容易相信它是原因。&lt;/p&gt;&#xA;&lt;p&gt;但当我思考为什么我投票给克林顿而不是第一个乔治·布什时，不是因为我在向左转。克林顿似乎更有活力。他似乎更想要这份工作。布什看起来老而疲惫。我怀疑很多选民都是如此。&lt;/p&gt;&#xA;&lt;p&gt;克林顿不代表任何国家向左的转变。[1] 他只是比乔治·布什或（上帝保佑我们）鲍勃·多尔更有魅力。2000年我们几乎得到了一个受控实验来证明这一点：戈尔有克林顿的政策，但没有他的魅力，他相应地遭受了损失。[2] 2004年的故事相同。克里比布什更聪明、更有口才，但相当僵硬。克里输了。&lt;/p&gt;&#xA;&lt;p&gt;当我进一步回顾时，我一直发现相同的模式。权威人士说卡特击败福特是因为水门事件后国家不信任共和党。但碰巧卡特以其大咧咧的笑和朴实的方式而闻名，而福特则以无聊笨拙而闻名。四年后，权威人士说国家向右猛冲。但里根，前演员，也碰巧比卡特更有魅力（卡特的笑在四年有压力的总统任期后不那么愉快了）。1984年里根和蒙代尔之间的魅力差距就像克林顿和多尔多之间的差距，结果相似。第一个乔治·布什在1988年设法获胜，尽管他后来会被历史上最有魅力的总统之一击败，因为在1988年他的对手是臭名昭著缺乏魅力的迈克尔·杜卡基斯。&lt;/p&gt;&#xA;&lt;p&gt;这些是我个人记得的选举，但显然1964年和1972年也出现了相同的模式。最近的反例似乎是1968年，当时尼克松击败了更有魅力的休伯特·汉弗莱。但当你检查那次选举时，它倾向于支持魅力理论而不是反驳它。正如乔·麦金尼斯在他著名的书《1968年总统的推销》中叙述的那样，尼克松知道他比汉弗莱魅力少，因此 simply 拒绝在电视上与他辩论。他知道他不能负担得起让两个人并排出现。&lt;/p&gt;&#xA;&lt;p&gt;现在候选人可能无法拒绝辩论而逃脱。但在1968年，电视辩论的习惯仍在演变中。实际上，尼克松在1968年获胜是因为选民从未被允许看到真正的尼克松。他们看到的只是精心编排的竞选广告。&lt;/p&gt;&#xA;&lt;p&gt;奇怪的是，最近真正的反例可能是1960年。虽然这次选举通常被作为电视力量的例子，但肯尼迪显然如果没有伊利诺伊州和得克萨斯州政党机器的欺诈就不会获胜。但电视在1960年还很年轻；只有87%的家庭拥有电视。[3] 毫无疑问，电视帮助了肯尼迪，所以历史学家正确地将这次选举视为分水岭。电视需要一种新型的候选人。不再有卡尔文·柯立芝了。&lt;/p&gt;&#xA;&lt;p&gt;魅力理论也可能解释为什么民主党倾向于输掉总统选举。民主党意识形态的核心似乎是对政府的信念。也许这 tends to attract people who are earnest, but dull. 杜卡基斯、戈尔和克里在这方面如此相似，他们可能是兄弟。对民主党来说幸运的是，他们的筛选器偶尔会让克林顿通过，即使一些丑闻随之而来。[4]&lt;/p&gt;&#xA;&lt;p&gt;人们愿意相信选举是在问题上赢得或失败的，即使是像威利·霍顿这样的假问题。然而，如果它们是，我们有一个值得注意的巧合需要解释。自电视普及以来的每一次总统选举，明显更有魅力的候选人都获胜。令人惊讶的是，不是吗，选民对问题的意见连续11次与魅力一致？&lt;/p&gt;&#xA;&lt;p&gt;在事后分析中提出向左或向右转变的政治评论家就像那些日复一日地被迫写关于股市随机波动故事的金融记者。一天结束，市场收盘上涨或下跌，记者分别寻找好坏消息，然后写市场因英特尔收益而上涨，或因中东不稳定恐惧而下跌。假设我们能以某种方式向这些记者提供关于市场收盘的错误信息，但给他们所有其他新闻 intact。有人相信他们会注意到异常，而不是简单地写股票因当天任何好（或坏）消息而上涨（或下跌）吗？他们会说，嘿，等一下，在中东所有这种动荡的情况下股票怎么能上涨？&lt;/p&gt;&#xA;&lt;p&gt;我不是说问题对选民不重要。当然它们重要。但主要政党太了解哪些问题对多少选民有多重要，并如此精确地调整他们的信息作为回应，以至于他们倾向于在问题上平分秋色，让选举由他们无法控制的一个因素决定：魅力。&lt;/p&gt;&#xA;&lt;p&gt;如果民主党在2004年选举中有一个像克林顿一样有魅力的候选人，他就会获胜。我们会读到选举是对伊拉克战争的全民公决，而不是民主党与美国中部的福音派基督徒脱节。&lt;/p&gt;&#xA;&lt;p&gt;在1992年选举期间，克林顿竞选班子在办公室有一个大标语说&amp;quot;是经济，傻瓜&amp;quot;。也许这比他们想象的还要简单。&lt;/p&gt;&#xA;&lt;h2 id=&#34;后记&#34;&gt;后记&lt;/h2&gt;&#xA;&lt;p&gt;关于魅力理论的意见似乎有分歧。有些人说不可能，其他人说很明显。这似乎是个好迹象。也许它处于中间的甜蜜点。&lt;/p&gt;&#xA;&lt;p&gt;至于它不可能，我回答：这里是数据；这里是理论；理论100%解释数据。至少对科学家来说，这意味着它值得注意，无论它看起来多么难以置信。&lt;/p&gt;&#xA;&lt;p&gt;你不能相信选民如此肤浅，以至于他们只选择最有魅力的家伙？我的理论不要求这样。我不是说魅力是唯一的因素，只是说它是两个党派努力相互抵消后留下的唯一因素。&lt;/p&gt;&#xA;&lt;p&gt;至于理论是显而易见的，据我所知，以前没有人提出过。选举预测者能够用更复杂的模型达到相同结果时感到自豪。&lt;/p&gt;&#xA;&lt;p&gt;最后，对那些说理论可能是真的，但相当令人沮丧的人：它不像看起来那么糟糕。这种现象就像定价异常；一旦人们意识到它在那里，它就会消失。一旦两个党派都意识到提名没有魅力的候选人是浪费时间，他们将倾向于只提名最有魅力的。如果候选人魅力相当，魅力将相互抵消，选举将在问题上决定，正如政治评论家喜欢认为现在的情况。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 正如克林顿自己在总统任期的第一个行为中试图向左转军方时惊奇地发现的那样。经过一场激烈的斗争，他得以挽救面子地逃脱。&lt;/p&gt;&#xA;&lt;p&gt;[2] 确实，戈尔赢得了普选票。但政治家知道选举人票决定选举，所以他们为此竞选。如果布什一直在为普选票竞选，他大概会得到更多。（感谢 judgmentalist 提出这一点。）&lt;/p&gt;&#xA;&lt;p&gt;[3] 来源：尼尔森媒体研究。在剩下的13%中，11%没有电视是因为他们负担不起。我认为缺失的11%可能也是最容易受魅力影响的11%。&lt;/p&gt;&#xA;&lt;p&gt;[4] 这一理论的一个含义是党派不应该太快拒绝有秘密的候选人。有魅力的候选人往往比无可挑剔的呆子有更多秘密，但实际上这似乎不会输掉选举。例如，现任布什可能在二十多岁时比任何前任总统都做过更多的毒品，但却能够以福音派基督徒为基础当选。你只需要说你已经改过自新，并在细节上设置障碍。&lt;/p&gt;&#xA;&lt;p&gt;感谢Trevor Blackwell、Maria Daniels、Jessica Livingston、Jackie McDonough和Robert Morris阅读本文的草稿，以及Eric Raymond指出我在1968年上错了。&lt;/p&gt;&#xA;&lt;h2 id=&#34;相关&#34;&gt;相关&lt;/h2&gt;&#xA;&lt;p&gt;什么是魅力&#xA;政治和表演艺术&#xA;日语翻译&lt;/p&gt;</description>
    </item>
    <item>
      <title>黑客与画家</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/hp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/hp/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/hp.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;黑客与画家&#34;&gt;黑客与画家&lt;/h1&gt;&#xA;&lt;p&gt;2003年5月&lt;/p&gt;&#xA;&lt;p&gt;（本文源于在哈佛大学的一次客座讲座，该讲座整合了之前在东北大学的一次演讲。）&lt;/p&gt;&#xA;&lt;p&gt;当我完成计算机科学研究生学业后，我去艺术学院学习绘画。很多人似乎对感兴趣于计算机的人也会对绘画感兴趣感到惊讶。他们似乎认为黑客和绘画是截然不同的工作类型——黑客工作是冷酷、精确、有条理的，而绘画则是某种原始冲动的狂热表达。&lt;/p&gt;&#xA;&lt;p&gt;这两种形象都是错误的。黑客和绘画有很多共同之处。事实上，在我认识的所有不同类型的人中，黑客和画家是最相似的。&lt;/p&gt;&#xA;&lt;p&gt;黑客和画家的共同点是他们都是创造者。与作曲家、建筑师和作家一样，黑客和画家试图做的是创造好东西。他们本身并不是在做研究，尽管在试图创造好东西的过程中他们发现了一些新技术，那就更好了。&lt;/p&gt;&#xA;&lt;p&gt;我从来不喜欢&amp;quot;计算机科学&amp;quot;这个词。我不喜欢它的主要原因是没有这样的东西。计算机科学是一堆关系不大的领域的拼凑，因历史的偶然而被组合在一起，就像南斯拉夫一样。一端是实际上是数学家的人，但他们称自己做的事情为计算机科学，以便获得DARPA资助。中间是从事类似计算机自然史工作的人——例如研究通过网络路由数据的算法行为。然后在另一端是黑客，他们试图编写有趣的软件，对他们来说，计算机只是表达媒介，就像对建筑师来说是混凝土，对画家来说是颜料一样。这就像是数学家、物理学家和建筑师都必须在同一个系里一样。&lt;/p&gt;&#xA;&lt;p&gt;有时黑客所做的事情被称为&amp;quot;软件工程&amp;quot;，但这个术语同样具有误导性。优秀的软件设计师并不比建筑师更像工程师。建筑和工程之间的界限并没有明确界定，但它是存在的。它在于做什么和如何做之间：建筑师决定做什么，工程师弄清楚如何做。&lt;/p&gt;&#xA;&lt;p&gt;做什么和如何做不应过于分离。如果你试图在不知道如何做的情况下决定做什么，那是在自找麻烦。但黑客工作绝不仅仅是决定如何实现某个规范。在最好的情况下，它是创建规范——但事实证明做到这一点的最好方法是实现它。&lt;/p&gt;&#xA;&lt;p&gt;也许有一天&amp;quot;计算机科学&amp;quot;会像南斯拉夫一样被分解成其组成部分。这可能是件好事。特别是如果这意味着我自己的领域——黑客的独立。&lt;/p&gt;&#xA;&lt;p&gt;将所有这些不同类型的工作捆绑在一个部门可能在行政上很方便，但在智力上是混乱的。这是我不喜欢&amp;quot;计算机科学&amp;quot;这个名字的另一个原因。可以说，中间的人在做类似实验科学的事情。但两端的人，黑客和数学家，实际上并不是在做科学。&lt;/p&gt;&#xA;&lt;p&gt;数学家似乎并不为此困扰。他们很高兴地开始证明定理，就像数学系的数学家一样，并且很快就会停止注意到他们工作的建筑外面写着&amp;quot;计算机科学&amp;quot;。但对黑客来说，这个标签是个问题。如果他们所做的事情被称为科学，这让他们觉得他们应该表现得科学。因此，大学和研究实验室里的黑客不做他们真正想做的事情，即设计美丽的软件，而是觉得他们应该写研究论文。&lt;/p&gt;&#xA;&lt;p&gt;在最好的情况下，论文只是一种形式。黑客编写很酷的软件，然后写一篇关于它的论文，论文就成为了软件所代表成就的代理。但这种不匹配经常导致问题。很容易从创造美丽的东西转向创造丑陋的东西，而这些东西更适合作为研究论文的题材。&lt;/p&gt;&#xA;&lt;p&gt;不幸的是，美丽的东西并不总是最好的论文主题。首先，研究必须是原创的——正如任何写过博士论文的人所知，确保你在探索未知领域的方法是占据一块没有人想要的地盘。其次，研究必须是实质性的——笨拙的系统会产生更丰富的论文，因为你可以写为了完成工作而必须克服的障碍。没有什么比从错误假设开始更能产生丰富的问题了。大多数人工智能都是这个规则的例子；如果你假设知识可以表示为谓词逻辑表达式的列表，其参数代表抽象概念，你将有很多论文要写关于如何使其工作。正如里奇·里卡多常说的：&amp;ldquo;露西，你有很多解释要做。&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;创造美丽东西的方法往往是对现有事物进行微妙的调整，或者以稍新的方式组合现有的想法。这种工作很难在研究论文中传达。&lt;/p&gt;&#xA;&lt;p&gt;那么为什么大学和研究实验室继续用出版物来判断黑客呢？原因与&amp;quot;学术能力&amp;quot;用简单的标准化测试衡量，或者程序员的生产力用代码行数衡量是一样的。这些测试很容易应用，没有什么比一个勉强有效的简单测试更诱人的了。&lt;/p&gt;&#xA;&lt;p&gt;衡量黑客真正试图做的事情，设计美丽的软件，会困难得多。你需要良好的设计感来判断好的设计。人们识别好设计的能力与他们对自己能做到的信心之间没有任何相关性，除了可能是负相关。&lt;/p&gt;&#xA;&lt;p&gt;唯一的外部测试是时间。随着时间的推移，美丽的东西往往会繁荣，丑陋的东西往往会被抛弃。不幸的是，所涉及的时间可能比人类寿命还长。塞缪尔·约翰逊说，作家的声誉需要一百年才能收敛。你必须等待作家有影响力的朋友死去，然后他们所有的追随者都死去。&lt;/p&gt;&#xA;&lt;p&gt;我认为黑客只能接受自己声誉中有很大的随机成分。在这方面，他们与其他创造者没有什么不同。事实上，相比之下，他们是幸运的。时尚在黑客中的影响力远不如在绘画中那么大。&lt;/p&gt;&#xA;&lt;p&gt;有比被人误解你的作品更糟糕的事情。更危险的是你会自己误解你的作品。相关领域是你寻找想法的地方。如果你发现自己身处计算机科学系，自然会有一种诱惑，例如认为黑客是理论计算机科学理论的应用版本。我在研究生院的整个时间里，脑海中总有一种不安的感觉，觉得我应该知道更多理论，而且在期末考试后三周内忘记所有东西是非常疏忽的。&lt;/p&gt;&#xA;&lt;p&gt;现在我意识到我错了。黑客需要了解计算理论的程度，与画家需要了解颜料化学的程度差不多。你需要知道如何计算时间和空间复杂性以及图灵完备性。你可能还想记住至少状态机的概念，以防你不得不编写解析器或正则表达式库。事实上，画家必须记住的颜料化学知识比这多得多。&lt;/p&gt;&#xA;&lt;p&gt;我发现，最好的想法来源不是名字中有&amp;quot;计算机&amp;quot;一词的其他领域，而是创造者居住的其他领域。绘画比计算理论是更丰富的想法来源。&lt;/p&gt;&#xA;&lt;p&gt;例如，我在大学里学到的是，一个人应该在完全接触计算机之前在纸上完整地构思一个程序。我发现我不是这样编程的。我发现我喜欢坐在计算机前编程，而不是在纸上。更糟糕的是，我不是耐心地写出完整的程序并确保它是正确的，而是倾向于只是喷出完全没有希望的代码，然后逐渐把它塑造成形。我学到的是，调试是一种最后阶段，你捕捉打字错误和疏忽。按照我的工作方式，编程似乎就是由调试组成的。&lt;/p&gt;&#xA;&lt;p&gt;很长时间以来，我对此感觉很糟糕，就像我曾经因为小学时握铅笔的方式和他们教我的不一样而感到难过一样。如果我看过其他创造者，画家或建筑师，我会意识到我所做的事情有一个名字：素描。据我所知，他们在大学教我的编程方法完全是错的。你应该在编写程序时构思程序，就像作家、画家和建筑师所做的那样。&lt;/p&gt;&#xA;&lt;p&gt;意识到这一点对软件设计有实际意义。这意味着编程语言最重要的特性应该是可塑的。编程语言是用来思考程序的，而不是表达你已经想好的程序。它应该是一支铅笔，而不是一支钢笔。如果人们真的像他们在大学教我的那样写程序，静态类型会是个好主意。但这不是我认识的任何黑客写程序的方式。我们需要一种让我们能够涂鸦、涂抹和弄脏的语言，而不是一种你必须用一杯类型平衡在膝盖上与严格的老婶婶编译器礼貌交谈的语言。&lt;/p&gt;&#xA;&lt;p&gt;既然我们在讨论静态类型，认同创造者将使我们免于困扰科学的另一个问题：数学嫉妒。科学界的每个人都秘密认为数学家比他们聪明。我认为数学家也相信这一点。无论如何，结果是科学家倾向于使他们的工作看起来尽可能数学化。在像物理学这样的领域，这可能不会造成太大伤害，但离自然科学越远，这个问题就越大。&lt;/p&gt;&#xA;&lt;p&gt;一页公式看起来非常令人印象深刻。（提示：为了更加令人印象深刻，使用希腊变量。）因此，有很大的诱惑去做你可以正式处理的问题，而不是那些重要的，比如说，重要的问题。&lt;/p&gt;&#xA;&lt;p&gt;如果黑客认同其他创造者，比如作家和画家，他们就不会感到诱惑去做这种事情。作家和画家不遭受数学嫉妒。他们觉得他们在做完全不相关的事情。我认为黑客也是如此。&lt;/p&gt;&#xA;&lt;p&gt;如果大学和研究实验室阻止黑客做他们想做的工作，也许他们的位置是在公司。不幸的是，大多数公司也不会让黑客做他们想做的事情。大学和研究实验室强迫黑客成为科学家，公司强迫他们成为工程师。&lt;/p&gt;&#xA;&lt;p&gt;我自己直到最近才发现这一点。当雅虎收购Viaweb时，他们问我想做什么。我从来不太喜欢商业方面，说我只想黑客。当我到雅虎时，我发现黑客对他们来说意味着实现软件，而不是设计它。程序员被视为技术人员，将产品经理的愿景（如果那算是的话）翻译成代码。&lt;/p&gt;&#xA;&lt;p&gt;这似乎是大公司的默认计划。他们这样做是因为它减少了结果的标准差。只有一小部分黑客能够真正设计软件，公司经营者很难挑选出这些人。因此，大多数公司不将软件的未来委托给一个才华横溢的黑客，而是设置成由委员会设计，黑客只实现设计。&lt;/p&gt;&#xA;&lt;p&gt;如果你想赚钱，记住这一点，因为这是创业公司获胜的原因之一。大公司希望减少设计结果的标准差，因为他们想避免灾难。但当你抑制波动时，你既失去了高点，也失去了低点。这对大公司来说不是问题，因为他们不是靠做出伟大的产品获胜的。大公司靠比其他大公司少些糟糕获胜。&lt;/p&gt;&#xA;&lt;p&gt;所以如果你能找到一种方法与一家大公司进行设计战争，大到其软件是由产品经理设计的，他们将永远无法跟上你。不过，这些机会并不容易找到。很难让大公司参与设计战争，就像很难让城堡内的对手进行肉搏战一样。例如，编写一个比微软Word更好的文字处理器会很容易，但微软在其操作系统垄断的城堡内，即使你做到了，可能甚至不会注意到。&lt;/p&gt;&#xA;&lt;p&gt;进行设计战争的地方是新市场，在那里还没有人设法建立任何防御工事。在那里，你可以通过大胆的设计方法，以及让同样的人既设计又实现产品而大获全胜。微软自己一开始就是这样做的。苹果也是如此。惠普也是如此。我怀疑几乎所有成功的创业公司都是如此。&lt;/p&gt;&#xA;&lt;p&gt;所以构建伟大软件的一种方法是创办自己的创业公司。然而，这有两个问题。一是在创业公司，你必须做很多编程以外的事情。在Viaweb，如果我能有四分之一的时间黑客，我就觉得自己很幸运。我在其他四分之三的时间里不得不做的事情从乏味到可怕不等。我对此有一个基准，因为我曾经不得不离开董事会会议去补牙。我记得坐在牙医的椅子上，等待钻头，感觉就像在度假。&lt;/p&gt;&#xA;&lt;p&gt;创业公司的另一个问题是，赚钱的软件和有趣的软件之间没有太多重叠。编程语言写起来很有趣，微软的第一个产品确实是，但现在没有人会为编程语言付钱。如果你想赚钱，你往往被迫从事对任何人来说都太麻烦而无法免费解决的问题。&lt;/p&gt;&#xA;&lt;p&gt;所有创造者都面临这个问题。价格由供求关系决定，对有趣工作的需求不如解决个人客户日常问题的需求多。在外百老汇戏剧中表演不如在贸易展上穿着大猩猩服装在别人的展位工作赚钱。写小说不如为垃圾处理器写广告文案赚钱。黑客编程语言不如想办法将某公司的遗留数据库连接到他们的Web服务器赚钱。&lt;/p&gt;&#xA;&lt;p&gt;我认为这个问题的答案，在软件的情况下，是一个几乎所有创造者都知道的概念：日常工作。这个词始于音乐家，他们晚上表演。更一般地说，这意味着你做一种工作是为了钱，做另一种是为了爱。&lt;/p&gt;&#xA;&lt;p&gt;几乎所有创造者在职业生涯早期都有日常工作。画家和作家尤其如此。如果你幸运，你可以找到与你真正工作密切相关的日常工作。音乐家似乎经常在唱片店工作。从事某种编程语言或操作系统工作的黑客同样可能能够使用它获得日常工作。[1]&lt;/p&gt;&#xA;&lt;p&gt;当我说答案是为黑客提供日常工作，并在业余时间从事美丽软件工作时，我并不是在提出一个新想法。这就是开源黑客的全部内容。我要说的是，开源可能是正确的模式，因为它已经被所有其他创造者独立证实。&lt;/p&gt;&#xA;&lt;p&gt;任何雇主都不愿让黑客从事开源项目，这让我感到惊讶。在Viaweb，我们不愿意雇佣任何不这样做的人。当我们面试程序员时，我们主要关心的是他们在业余时间编写什么样的软件。除非你热爱它，否则你不能真正做好任何事情，如果你热爱黑客，你将不可避免地从事自己的项目。[2]&lt;/p&gt;&#xA;&lt;p&gt;因为黑客是创造者而不是科学家，寻找隐喻的正确地方不是科学，而是其他类型的创造者。绘画还能教给我们什么关于黑客的知识？&lt;/p&gt;&#xA;&lt;p&gt;我们可以从绘画的例子中学到的一件事，或者至少确认的是，如何学习黑客。你主要通过做来学习绘画。黑客也是如此。大多数黑客不是通过上大学编程课程来学习黑客的。他们在十三岁时通过编写自己的程序来学习黑客。即使在大学课程中，你也主要通过黑客来学习黑客。[3]&lt;/p&gt;&#xA;&lt;p&gt;因为画家在他们身后留下了作品的痕迹，你可以看着他们通过做来学习。如果你按时间顺序看一位画家的作品，你会发现每幅画都建立在以前画中学到的东西的基础上。当一幅画中有某个东西效果很好时，你通常可以在一些早期绘画中以较小的形式找到它的版本1。&lt;/p&gt;&#xA;&lt;p&gt;我认为大多数创造者都是这样工作的。作家和建筑师似乎也是如此。也许黑客应该更像画家，定期从头开始，而不是继续在一个项目上工作多年，并试图将他们以后的想法作为修订纳入其中。&lt;/p&gt;&#xA;&lt;p&gt;黑客通过做来学习黑客这一事实是黑客与科学不同的另一个标志。科学家不是通过做科学来学习科学，而是通过做实验和解决问题集。科学家开始做的工作是完美的，在这个意义上说，他们只是试图重现别人已经为他们做过的工作。最终，他们达到可以做原创工作的地步。而黑客从一开始就在做原创工作；只是非常糟糕。所以黑客从原创开始，然后变好，科学家从好开始，然后变原创。&lt;/p&gt;&#xA;&lt;p&gt;创造者学习的另一种方式是通过例子。对画家来说，博物馆是技术参考图书馆。数百年来，复制大师作品一直是画家传统教育的一部分，因为复制迫使你仔细审视绘画的制作方式。&lt;/p&gt;&#xA;&lt;p&gt;作家也这样做。本杰明·富兰克林通过总结艾迪生和斯蒂尔散文中的观点，然后尝试重现它们来学习写作。雷蒙德·钱德勒对侦探故事做了同样的事情。&lt;/p&gt;&#xA;&lt;p&gt;同样，黑客可以通过看好的程序来学习编程——不仅看它们做什么，还看源代码。开源运动不太公开的好处之一是它使学习编程变得更容易。当我学习编程时，我们主要依靠书中的例子。当时可用的一大块代码是Unix，但即使这不是开源的。大多数阅读源代码的人是通过约翰·莱昂斯书的非法影印本来阅读的，这本书虽然写于1977年，但直到1996年才被允许出版。&lt;/p&gt;&#xA;&lt;p&gt;我们可以从绘画中借鉴的另一个例子是绘画是通过渐进改进而创造的。绘画通常从素描开始。逐渐地，细节被填入。但这不仅仅是填入的过程。有时原来的计划被证明是错误的。无数的绘画，当你用X光看时，发现肢体被移动了或面部特征被重新调整了。&lt;/p&gt;&#xA;&lt;p&gt;这里有一个我们可以从绘画中学习的例子。我认为黑客也应该这样工作。期望程序的规格说明是完美的是不现实的。如果你提前承认这一点，并以允许规格说明在运行中更改的方式编写程序，你会更好。&lt;/p&gt;&#xA;&lt;p&gt;（大公司的结构使他们很难做到这一点，所以这是创业公司有优势的另一个地方。）&lt;/p&gt;&#xA;&lt;p&gt;现在大概每个人都知道过早优化的危险。我认为我们应该同样担心过早设计——过早决定程序应该做什么。&lt;/p&gt;&#xA;&lt;p&gt;正确的工具可以帮助我们避免这种危险。一个好的编程语言应该像油画一样，使你容易改变主意。动态类型在这里是个优势，因为你不必预先承诺特定的数据表示。但我认为灵活性的关键是使语言非常抽象。最容易更改的程序是非常短的程序。这听起来像是一个悖论，但一幅伟大的绘画必须比它必须的要更好。例如，当莱昂纳多在华盛顿国家美术馆画吉内薇拉·德·班奇的肖像时，她在她头后放了一棵杜松树。他在其中仔细地画了每一片叶子。许多画家可能认为，这只是放在背景中框住她头部的东西。没有人会那么仔细地看它。&lt;/p&gt;&#xA;&lt;p&gt;不是莱昂纳多。他在画的一部分上工作的努力程度完全不取决于他期望任何人看它的程度。他像迈克尔·乔丹。无情。&lt;/p&gt;&#xA;&lt;p&gt;无情获胜是因为，总的来说，看不见的细节变得可见。当人们走过吉内薇拉·德·班奇的肖像时，他们的注意力常常立即被它吸引，甚至在他们看标签并注意到它说莱昂纳多·达·芬奇之前。所有那些看不见的细节结合在一起产生了一些令人惊叹的东西，就像一千个几乎听不见的声音都在和谐地歌唱。&lt;/p&gt;&#xA;&lt;p&gt;伟大的软件同样需要对美的狂热奉献。如果你看好的软件内部，你会发现那些永远不应该被看见的部分也是美丽的。我不声称我写伟大的软件，但我知道当涉及到代码时，我的行为方式如果用在日常生活中会让我有资格获得处方药。看到缩进糟糕的代码或使用丑陋变量名的代码会让我发疯。&lt;/p&gt;&#xA;&lt;p&gt;如果黑客只是一个实现者，将规范变成代码，那么他就可以像挖沟的人一样从一端到另一端完成工作。但如果黑客是创造者，我们必须考虑灵感。&lt;/p&gt;&#xA;&lt;p&gt;黑客像绘画一样，工作是周期性的。有时你对某个新项目感到兴奋，一天想工作十六个小时。有时似乎没有什么有趣的。&lt;/p&gt;&#xA;&lt;p&gt;要做好工作，你必须考虑这些周期，因为它们受到你对他们反应的影响。当你在山坡上驾驶手动变速器汽车时，你必须有时松开离合器以避免熄火。松开同样可以防止雄心熄火。在绘画和黑客中，有些任务是令人恐惧的雄心勃勃的，有些则是令人安慰的常规。留一些容易的任务给那些否则会停滞的时刻是个好主意。&lt;/p&gt;&#xA;&lt;p&gt;在黑客中，这实际上可能意味着保存错误。我喜欢调试：这是黑客像人们认为的那样直截了当的唯一一次。你有一个完全受限的问题，你只需要解决它。你的程序应该做x。相反它做y。它哪里出错了？你知道你最终会赢。这就像刷墙一样放松。&lt;/p&gt;&#xA;&lt;p&gt;绘画的例子不仅可以教我们如何管理自己的工作，还可以教我们如何一起工作。许多过去的伟大艺术是多人之手的作品，尽管博物馆墙上可能只有一个名字。莱昂纳多是维罗基奥工作室的学徒，画了他的《基督受洗》中的一个天使。这种事情是规则，而不是例外。米开朗基罗因为坚持亲自绘制西斯廷教堂天花板上的所有人物而被认为特别专注。&lt;/p&gt;&#xA;&lt;p&gt;据我所知，当画家一起在一幅画上工作时，他们从不工作的相同部分。大师画主要人物，助手画其他人物和背景是常见的。但你从来没有一个人在另一个人的作品上绘画。&lt;/p&gt;&#xA;&lt;p&gt;我认为这是软件协作的正确模式。不要推得太远。当一段代码被三四个不同的人黑客攻击，没有人真正拥有它时，它最终会像一个公共休息室。它往往会感觉荒凉和被遗弃，并积累无用之物。我认为协作的正确方法是将项目分成明确定义的模块，每个模块都有明确的拥有者，它们之间的接口尽可能精心设计，如果可能的话，像编程语言一样明确。&lt;/p&gt;&#xA;&lt;p&gt;像绘画一样，大多数软件是为人类受众准备的。因此，像画家一样，黑客必须有同理心才能做真正伟大的工作。你必须能够从用户的角度看问题。&lt;/p&gt;&#xA;&lt;p&gt;当我还是个孩子的时候，我总是被告知要从别人的角度看问题。这在实践中总是意味着做别人想要的事情，而不是我想要的事情。这当然给同理心一个坏名声，我故意不培养它。&lt;/p&gt;&#xA;&lt;p&gt;哦，我错了。事实证明，从别人的角度看问题实际上是成功的秘密。这不一定意味着自我牺牲。远非如此。理解别人如何看待事物并不意味着你会为他的利益行事；在某些情况下——例如，在战争中——你想做的恰恰相反。[4]&lt;/p&gt;&#xA;&lt;p&gt;大多数创造者为人类受众制造东西。要吸引受众，你必须理解他们需要什么。例如，几乎所有最伟大的绘画都是人物画，因为人对人感兴趣。&lt;/p&gt;</description>
    </item>
    <item>
      <title>黑客这个词</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/gba/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/gba/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/gba.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;黑客这个词&#34;&gt;黑客这个词&lt;/h1&gt;&#xA;&lt;p&gt;2004年4月&lt;/p&gt;&#xA;&lt;p&gt;对大众媒体来说，&amp;ldquo;黑客&amp;quot;意味着闯入计算机的人。在程序员中，它意味着一个好的程序员。但这两种含义是相连的。对程序员来说，&amp;ldquo;黑客&amp;quot;在最字面的意义上意味着精通：能够让计算机做他想要的事情的人——不管计算机是否愿意。&lt;/p&gt;&#xA;&lt;p&gt;更令人困惑的是，名词&amp;quot;hack&amp;quot;也有两种含义。它可以是赞美，也可以是侮辱。当你用丑陋的方式做某事时，这被称为hack。但当你做某事如此聪明以至于你以某种方式击败了系统时，那也被称为hack。这个词在前一种含义中比后一种更常用，可能是因为丑陋的解决方案比 brilliant 的更常见。&lt;/p&gt;&#xA;&lt;p&gt;信不信由你，&amp;ldquo;hack&amp;quot;的两种含义也是相连的。丑陋和富有想象力的解决方案有共同之处：它们都打破了规则。在仅仅丑陋的违规（用胶带把东西 attach 到你的自行车上）和 brilliantly 富有想象力的违规（丢弃欧几里得空间）之间存在一个逐渐的连续谱。&lt;/p&gt;&#xA;&lt;p&gt;黑客文化比计算机更早。当理查德·费曼在曼哈顿计划工作时，他常常通过闯入包含秘密文件的保险箱来娱乐自己。这个传统今天仍在继续。当我们读研究生时，我的一位在MIT周围花了太多时间的黑客朋友有自己的开锁工具包。（他现在经营对冲基金，这不是一个无关的企业。）&lt;/p&gt;&#xA;&lt;p&gt;有时候很难向当局解释为什么有人会想做这种事情。我的另一个朋友曾经因为闯入计算机而与政府惹上麻烦。这最近才被宣布为犯罪，FBI发现他们通常的调查技术不起作用。警察调查显然是从动机开始的。通常的动机很少：毒品、金钱、性、复仇。智力好奇心不在FBI的动机清单上。确实，整个概念对他们来说似乎很陌生。&lt;/p&gt;&#xA;&lt;p&gt;当权者往往对黑客普遍的不服从态度感到恼火。但这种不服从是使他们成为优秀程序员的品质的副产品。当CEO用通用的企业新闻发言时，他们可能会嘲笑他，但他们也会嘲笑告诉他们某个问题无法解决的人。压制一个，你就压制了另一个。&lt;/p&gt;&#xA;&lt;p&gt;这种态度有时是装出来的。有时年轻的程序员注意到著名黑客的怪癖，并决定采用一些自己的怪癖，以便看起来更聪明。虚假版本不仅令人讨厌；这些伪装者的 prickly 态度实际上会减慢创新过程。&lt;/p&gt;&#xA;&lt;p&gt;但即使考虑到他们令人讨厌的怪癖，黑客的不服从态度也是一个净胜利。我希望它的优势能被更好地理解。&lt;/p&gt;&#xA;&lt;p&gt;例如，我怀疑好莱坞的人们对黑客对版权的态度感到困惑。它们是Slashdot上激烈讨论的 perennial 话题。但是，为什么编程的人们应该如此关心版权，在所有事情中？&lt;/p&gt;&#xA;&lt;p&gt;部分原因是有些公司使用机制来防止复制。向任何黑客展示一把锁，他的第一个念头是如何打开它。但黑客对版权和专利等措施感到警惕有更深层次的原因。他们将 increasingly 激进的措施保护&amp;quot;知识产权&amp;quot;视为对他们工作所需的 intellectual freedom 的威胁。他们是对的。&lt;/p&gt;&#xA;&lt;p&gt;正是通过在当前技术内部探查，黑客才获得了下一代的想法。不，谢谢，知识产权所有者可能会说，我们不需要任何外部帮助。但他们错了。下一代计算机技术经常——或许比不是更经常——是由外人开发的。&lt;/p&gt;&#xA;&lt;p&gt;1977年，毫无疑问IBM内部有一些团体正在开发他们期望成为下一代商业计算机的东西。他们错了。下一代商业计算机正在由两个名叫史蒂夫的长发男人在洛斯阿尔托斯的车库里以完全不同的线路开发。大约在同一时间，当权者正在合作开发官方的下一代操作系统Multics。但两个认为Multics过于复杂的家伙离开去写自己的系统。他们给它起了一个对Multics开玩笑的名字：Unix。&lt;/p&gt;&#xA;&lt;p&gt;最新的知识产权法律对导致新想法的那种探查施加了前所未有的限制。在过去，竞争对手可能使用专利来阻止你销售他们制造的东西的副本，但他们不能阻止你拆开一个来看它是如何工作的。最新的法律使这成为犯罪。如果我们不能研究当前技术来弄清楚如何改进它，我们如何开发新技术？&lt;/p&gt;&#xA;&lt;p&gt;具有讽刺意味的是，黑客自己招致了这一点。计算机是造成问题的原因。机器内的控制系统过去是物理的：齿轮、杠杆和凸轮。 increasingly，产品的大脑（从而价值）在软件中。我指的是一般意义上的软件：即数据。LP上的歌曲是物理压印在塑料中的。iPod磁盘上的歌曲只是存储在上面。&lt;/p&gt;&#xA;&lt;p&gt;数据根据定义很容易复制。互联网使副本容易分发。所以公司害怕不足为奇。但是，像经常发生的那样，恐惧模糊了他们的判断。政府用严酷的法律来保护知识产权。他们可能是好意的。但他们可能没有意识到这样的法律弊大于利。&lt;/p&gt;&#xA;&lt;p&gt;为什么程序员如此强烈地反对这些法律？如果我是一个立法者，我会对这个谜团感兴趣——出于同样的原因，如果我是一个农民，突然一天晚上听到很多咯咯声来自我的鸡舍，我会想要出去调查。黑客不笨，而这个世界上 unanimity 很罕见。所以如果他们都在咯咯叫，也许有什么不对劲。&lt;/p&gt;&#xA;&lt;p&gt;难道这样的法律，虽然意图保护美国，但实际上会伤害它吗？想想看。费曼在曼哈顿计划期间闯入保险箱有一些非常美国化的东西。很难想象当时的德国当局对这类事情有幽默感。也许这不是巧合。&lt;/p&gt;&#xA;&lt;p&gt;黑客是不守规矩的。这就是黑客的本质。这也是美国精神的本质。硅谷在美国，而不是法国、德国、英国或日本，这绝非偶然。在那些国家，人们在 lines 内着色。&lt;/p&gt;&#xA;&lt;p&gt;我在佛罗伦萨住了一段时间。但在那里呆了几个月后，我意识到我无意识希望在那里找到的东西 back 在我刚刚离开的地方。佛罗伦萨著名的原因是，在1450年，它是纽约。在1450年，它充满了你现在在美国发现的那种动荡和雄心勃勃的人。（所以我回到了美国。）&lt;/p&gt;&#xA;&lt;p&gt;美国的一个巨大优势是它为正确的那种不守规矩提供了宜人的氛围——它不仅是聪明人的家园，也是 smart-alecks 的家园。黑客 invariably 是 smart-alecks。如果我们有一个国定假日，那将是4月1日。我们对 brilliant 或可怕 cheesy 的解决方案使用同一个词，这充分说明了我们的工作。当我们炮制出一个时，我们不总是100%确定它是哪种。但只要它有正确的错误类型，那就是一个有希望的迹象。人们认为编程是精确和有条理的，这很奇怪。计算机是精确和有条理的。黑客是你在开怀大笑时做的事情。&lt;/p&gt;&#xA;&lt;p&gt;在我们的世界中，一些最具特征的解决方案与恶作剧相去不远。IBM无疑对DOS许可证协议的后果感到相当惊讶，就像假设的&amp;quot;对手&amp;quot;在迈克尔·拉宾通过将问题重新定义为更容易解决的问题来解决问题时必须感到的那样。&lt;/p&gt;&#xA;&lt;p&gt;Smart-alecks 必须 develop 对他们能逃脱多少的敏锐感觉。最近黑客已经感觉到气氛的变化。最近黑客精神似乎相当不被人看好。&lt;/p&gt;&#xA;&lt;p&gt;对黑客来说，最近公民自由的收缩似乎特别不祥。这也一定让外人感到困惑。为什么我们应该特别关心公民自由？为什么程序员比牙医、推销员或园林设计师更关心？&lt;/p&gt;&#xA;&lt;p&gt;让我用政府官员会欣赏的术语来说明这个 case。公民自由不仅仅是一种装饰，或一种古怪的 American 传统。公民自由使国家富裕。如果你绘制人均GNP与公民自由的图表，你会注意到一个明确的趋势。公民自由真的可能是一个原因，而不仅仅是一个结果？我认为是的。我认为一个人们可以做和说他们想做的事情的社会也倾向于一个最有效的解决方案获胜的社会，而不是那些最有影响力的人赞助的解决方案。威权国家变得腐败；腐败国家变得贫穷；贫穷国家是弱小的。在我看来，政府权力有一条拉弗曲线，就像税收收入一样。至少，这似乎足够可能，以至于尝试实验并发现会是愚蠢的。与高税率不同，如果证明是一个错误，你不能废除极权主义。&lt;/p&gt;&#xA;&lt;p&gt;这就是黑客担心的原因。政府监视人们并不会让程序员写更差的代码。它只是最终导致一个坏想法获胜的世界。因为这对黑客如此重要，他们对此特别敏感。他们能从远处感知极权主义的 approaching，就像动物能感知 approaching 雷暴一样。&lt;/p&gt;&#xA;&lt;p&gt;如果像黑客担心的那样，最近旨在保护国家安全和知识产权的措施被证明是一枚导弹，正好瞄准了使美国成功的东西，那将是讽刺的。但这不会是第一次在恐慌气氛中采取的措施产生了与预期相反的效果。&lt;/p&gt;</description>
    </item>
    <item>
      <title>黑粉</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/fh/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/fh/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/fh.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;黑粉&#34;&gt;黑粉&lt;/h1&gt;&#xA;&lt;p&gt;2020年1月&lt;/p&gt;&#xA;&lt;p&gt;（我最初打算为创业创始人写这篇文章，创始人经常对他们公司成长过程中获得的关注感到惊讶，但这同样适用于任何变得出名的人。）&lt;/p&gt;&#xA;&lt;p&gt;如果你变得足够有名，你会获得一些过分喜欢你的粉丝。这些人有时被称为&amp;quot;脑残粉&amp;quot;，虽然我不喜欢这个词，但我不得不在这里使用它。我们需要一个词来称呼他们，因为这与单纯喜欢你的作品是不同的现象。&lt;/p&gt;&#xA;&lt;p&gt;脑残粉是痴迷且不加批判的。喜欢你成为他们身份的一部分，他们在自己心中创造了一个你的形象，这个形象比现实好得多。你所做的一切都是好的，因为你做了。如果你做了坏事，他们会想办法把它看成好的。而且他们对你的爱通常不是安静、私人的。他们想让每个人都知道你有多棒。&lt;/p&gt;&#xA;&lt;p&gt;好吧，你可能会想，我可以没有这种痴迷的粉丝，但我知道世界上有各种各样的人，如果这是名声最坏的后果，那还不算太糟。&lt;/p&gt;&#xA;&lt;p&gt;不幸的是，这不是名声最坏的后果。除了脑残粉，你还会遇到黑粉。&lt;/p&gt;&#xA;&lt;p&gt;黑粉是痴迷且不加批判的。不喜欢你成为他们身份的一部分，他们在自己心中创造了一个你的形象，这个形象比现实差得多。你所做的一切都是坏的，因为你做了。如果你做了好事，他们会想办法把它看成坏的。而且他们对你的不喜欢通常不是安静、私人的。他们想让每个人都知道你有多糟糕。&lt;/p&gt;&#xA;&lt;p&gt;如果你想检查，我替你省了麻烦。第二段和第五段除了&amp;quot;好&amp;quot;被换成&amp;quot;坏&amp;quot;等等之外是相同的。&lt;/p&gt;&#xA;&lt;p&gt;我花了几年时间思考黑粉。他们是什么，他们从哪里来？然后有一天我突然明白了。黑粉只是符号位翻转的脑残粉。&lt;/p&gt;&#xA;&lt;p&gt;注意，我说的黑粉，不仅仅是指喷子。我不是指那些说了你坏话然后继续前进的人。我说的是更小的一群人，对他们来说这变成了一种痴迷，他们在很长一段时间内反复这样做。&lt;/p&gt;&#xA;&lt;p&gt;和粉丝一样，黑粉似乎是名声的自动后果。任何足够有名的人都会有黑粉。和粉丝一样，黑粉因他们所恨的人的名声而精力充沛。他们听到某个流行歌手的歌。他们不太喜欢。如果歌手是个无名小卒，他们就会忘记它。但他们不断听到她的名字，这似乎让一些人发疯。每个人都在谈论这个歌手，但她并不好！她是个骗子！&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;骗子&amp;quot;这个词很重要。将仇恨对象视为骗子是黑粉的光谱特征。他们不能否认他们的名声。事实上，他们的名声在黑粉心中被夸大了。他们注意到歌手名字的每一次提及，因为每一次提及都让他们更愤怒。在他们自己的心中，他们既夸大了歌手的名声，又夸大了她缺乏才华，调和这两个想法的唯一方法是得出结论：她欺骗了所有人。&lt;/p&gt;&#xA;&lt;p&gt;什么样的人会成为黑粉？任何人都能成为黑粉吗？我不确定这个，但我注意到一些模式。黑粉在非常特定的意义上一般是失败者：虽然他们偶尔有才华，但他们从未取得多大成就。确实，任何足够成功、获得重要名声的人不太可能仅仅因为这个原因而将另一个名人视为骗子，因为任何有名的人都知道名声是多么随机。&lt;/p&gt;&#xA;&lt;p&gt;但黑粉并不总是彻底的失败者。他们并不总是住在妈妈地下室里的传说中的人。许多是的，但有些人有一定的才华。事实上，我怀疑一种受挫的才华感是驱使一些人成为黑粉的原因。他们不仅仅在说&amp;quot;某某出名是不公平的&amp;rdquo;，而是&amp;quot;某某出名，而不是我，这是不公平的&amp;quot;。&lt;/p&gt;&#xA;&lt;p&gt;如果一个黑粉取得了令人印象深刻的成就，他能被治愈吗？我的猜测这是一个有争议的问题，因为他们永远不会。我已经观察了足够长的时间，我相当确信这个模式在两个方向上都有效：不仅做伟大工作的人永远不会成为黑粉，黑粉也永远不会做伟大的工作。&lt;/p&gt;&#xA;&lt;p&gt;虽然我不喜欢&amp;quot;脑残粉&amp;quot;这个词，但它暗示了关于黑粉和脑残粉的重要事情。这意味着脑残粉在崇拜方面如此可预测地奴性，以至于他被贬低了，他不像个男人。&lt;/p&gt;&#xA;&lt;p&gt;黑粉似乎更加被贬低。我可以想象成为一个脑残粉。我能想到一些人的作品我如此钦佩，以至于我可以出于纯粹的感激在他们面前卑躬屈膝。如果P.G.伍德豪斯还活着，我可以想象自己成为一个伍德豪斯脑残粉。但我无法想象成为一个黑粉。&lt;/p&gt;&#xA;&lt;p&gt;知道黑粉只是符号位翻转的脑残粉，使得与他们打交道容易得多。我们不需要单独的黑粉理论。我们只能使用现有的技术来处理痴迷的粉丝。&lt;/p&gt;&#xA;&lt;p&gt;其中最重要的是不要多想他们。如果你像大多数变得足够有名而获得黑粉的人一样，你的初始反应会是困惑。为什么这家伙似乎对我怀恨在心？他的痴迷能量来自哪里，什么让他如此令人讨厌地恶心？我做了什么让他生气？这是我能修复的吗？&lt;/p&gt;&#xA;&lt;p&gt;这里的错误是将黑粉视为与你发生争执的人。当你与某人发生争执时，通常最好试图理解他们为什么生气，然后如果可以的话修复问题。争执是分散注意力的。但将黑粉视为与你发生争执的人是错误的类比。如果你以前从未遇到过黑粉，这是一个可以理解的错误。但当你意识到你正在处理黑粉，以及黑粉是什么时，很明显即使是思考他们也是浪费时间。如果你有痴迷的粉丝，你会花时间思考是什么让他们如此爱你吗？不，你只是想&amp;quot;有些人有点疯狂&amp;quot;，就这样了。&lt;/p&gt;&#xA;&lt;p&gt;既然黑粉等同于脑残粉，那么对待他们的方式也是如此。可能有某些事情引发了他们。但这不是会引发正常人的事情，所以没有理由花时间思考它。不是你的问题，是他们的问题。&lt;/p&gt;&#xA;&lt;h3 id=&#34;注释&#34;&gt;注释&lt;/h3&gt;&#xA;&lt;p&gt;[1] 当然有一些人是真正的骗子。如何区分x因为x是黑粉而称y是骗子，以及因为y是骗子而称y是骗子？看看中立的看法。真正的骗子通常相当引人注目。有思想的人很少被他们欺骗。所以如果有一些有思想的人喜欢y，你通常可以假设y不是骗子。&lt;/p&gt;&#xA;&lt;p&gt;[2] 我会对青少年例外，他们有时以如此极端的方式行事，以至于他们字面上不是自己。我可以想象一个青少年成为黑粉然后长大脱离这种情况。但任何超过25岁的人都不会。&lt;/p&gt;&#xA;&lt;p&gt;[3] 我对不当行为的记忆比我妻子杰西卡差得多，她是性格鉴赏家，但我不希望它更好。即使你是对的，大多数争执也是浪费时间，如果你不记得为什么对他们生气，很容易与他们和解。&lt;/p&gt;&#xA;&lt;p&gt;[4] 一个有能力的黑粉不仅会单独攻击你，还会试图让暴民追捕你。在某些情况下，你可能想驳斥他们为了这样做而提出的任何虚假主张。但倾向于不这样做，因为最终可能无关紧要。&lt;/p&gt;&#xA;&lt;p&gt;感谢Austen Allred、Trevor Blackwell、Patrick Collison、Christine Ford、Daniel Gackle、Jessica Livingston、Robert Morris、Elon Musk、Harj Taggar和Peter Thiel阅读了本文的草稿。&lt;/p&gt;</description>
    </item>
    <item>
      <title>默认生存还是默认死亡？</title>
      <link>https://linguage.github.io/paul_graham/essays_zh/aord/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/paul_graham/essays_zh/aord/</guid>
      <description>&lt;p&gt;→ &lt;a href=&#34;../essays_en/aord.md&#34;&gt;English Version&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;默认生存还是默认死亡&#34;&gt;默认生存还是默认死亡？&lt;/h1&gt;&#xA;&lt;p&gt;2015年10月&lt;/p&gt;&#xA;&lt;p&gt;当我和一家已经运营了8、9个月以上的创业公司交谈时，我想要知道的第一件事几乎总是相同的。假设他们的支出保持不变，收入增长是过去几个月的水平，他们能凭借剩余的资金实现盈利吗？或者更戏剧性地说，默认情况下他们会生存还是会死亡？&lt;/p&gt;&#xA;&lt;p&gt;令人震惊的是，创始人自己往往不知道。我交谈的创始人中有一半不知道自己是默认生存还是默认死亡。&lt;/p&gt;&#xA;&lt;p&gt;如果你也在其中，Trevor Blackwell制作了一个方便的计算器，你可以用它来找出答案。&lt;/p&gt;&#xA;&lt;p&gt;我首先想知道一家创业公司是默认生存还是默认死亡的原因是，接下来的对话取决于这个答案。如果公司是默认生存的，我们可以谈论他们可能做的雄心勃勃的新事情。如果是默认死亡的，我们可能需要讨论如何拯救它。我们知道当前的轨迹会很糟糕。他们如何摆脱这个轨迹？&lt;/p&gt;&#xA;&lt;p&gt;为什么很少有创始人知道自己是否是默认生存还是默认死亡？主要原因是，他们不习惯问这个问题。早期问这个问题没有意义，就像问一个3岁的孩子打算如何养活自己一样。但随着公司年龄的增长，这个问题从无意义变成了关键。这种转变往往让人们措手不及。&lt;/p&gt;&#xA;&lt;p&gt;我提出以下解决方案：不要等到太晚才开始问自己是默认生存还是默认死亡，而是太早就开始问。很难确定这个问题什么时候会发生极性转变。但过早开始担心默认死亡可能并不那么危险，而太晚开始担心则非常危险。&lt;/p&gt;&#xA;&lt;p&gt;原因是我之前写过的现象：致命的夹击。致命的夹击就是默认死亡+增长缓慢+没有足够的时间来修复。而创始人陷入这种情况的原因是他们没有意识到自己正朝那个方向前进。&lt;/p&gt;&#xA;&lt;p&gt;创始人不问自己是否是默认生存还是默认死亡的另一个原因是：他们假设筹集更多资金会很容易。但这个假设往往是错误的，更糟糕的是，你越是依赖它，它就越不真实。&lt;/p&gt;&#xA;&lt;p&gt;也许把事实和希望分开会有所帮助。不要用模糊的乐观来思考未来，而是明确地分开各个组成部分。说&amp;quot;我们是默认死亡，但我们指望投资者拯救我们。&amp;ldquo;也许当你这么说时，它会在你的头脑中触发和我一样的警报。如果你足够早地触发警报，你也许能够避免致命的夹击。&lt;/p&gt;&#xA;&lt;p&gt;如果你能指望投资者拯救你，那么处于默认死亡状态是安全的。通常他们的兴趣是增长的函数。如果你有陡峭的收入增长，比如每年超过5倍，即使你没有盈利，你也可以开始指望投资者感兴趣。[1] 但投资者如此善变，你永远只能开始指望他们。有时候你的业务的一些方面会吓跑投资者，即使你的增长很棒。所以无论你的增长有多好，你永远不能安全地把融资当作计划A以外的任何东西。你也应该有计划B：你应该确切地知道（写下）如果筹集不到更多资金需要做什么才能生存，以及如果计划A不起作用，你什么时候必须切换到计划B。&lt;/p&gt;&#xA;&lt;p&gt;无论如何，快速增长与廉价运营远非许多创始人认为的那种尖锐对立。在实践中，创业公司的支出与增长速度之间的联系出人意料地少。当创业公司快速增长时，通常是因为产品击中了要害，在某种意义上直接击中了一些巨大的需求。当创业公司花费很多时，通常是因为产品开发或销售成本高，或者仅仅因为他们浪费。&lt;/p&gt;&#xA;&lt;p&gt;如果你注意到了，这时你不仅要问如何避免致命的夹击，还要问如何避免默认死亡。那个很容易：不要招聘太快。招聘太快是迄今为止融资创业公司最大的杀手。[2]&lt;/p&gt;&#xA;&lt;p&gt;创始人告诉自己他们需要招聘才能增长。但大多数人都高估了这种需求，而不是低估。为什么？部分原因是工作太多。天真的创始人认为，只要雇足够的人，一切都会完成。部分原因是成功的创业公司有很多员工，所以看起来要成功就应该这样做。事实上，成功创业公司的大量员工更可能是增长的结果，而不是原因。部分原因是当创始人增长缓慢时，他们不想面对通常真正的原因：产品不够有吸引力。&lt;/p&gt;&#xA;&lt;p&gt;此外，刚筹集到资金的创始人通常被资助他们的VC鼓励过度招聘。要么杀死要么治愈的策略对VC来说是最优的，因为他们受到投资组合效应的保护。VC想要吹捧你，在这个词的一种或另一种意义上。但作为创始人，你的动机不同。你最想生存。[3]&lt;/p&gt;&#xA;&lt;p&gt;创业公司死亡的一个常见方式是：他们制造了中等吸引力的产品，有不错的初始增长。他们相当容易地筹集了第一轮资金，因为创始人看起来聪明，想法听起来合理。但因为产品只有中等吸引力，增长还行但不棒。创始人说服自己招聘一群人是提升增长的方式。他们的投资者同意。但是（因为产品只有中等吸引力）增长永远不会到来。现在他们的资金迅速耗尽。他们希望进一步的投资能拯救他们。但因为他们有高支出和缓慢增长，他们对投资者不再有吸引力。他们无法筹集更多资金，公司死亡。&lt;/p&gt;&#xA;&lt;p&gt;公司应该做的是解决基本问题：产品只有中等吸引力。招聘人员很少是解决这个问题的方法。更多时候它使情况变得更糟。在这个早期阶段，产品需要的是进化，而不是&amp;quot;构建&amp;rdquo;，而用更少的人通常更容易做到这一点。[4]&lt;/p&gt;&#xA;&lt;p&gt;询问自己是默认生存还是默认死亡可能会拯救你免于此。也许它触发的警报能够抵消推动你过度招聘的力量。相反，你将被迫寻求其他增长方式。例如，通过做那些无法扩展的事情，或者通过只有创始人能做到的方式重新设计产品。对于许多（如果不是大多数）创业公司来说，这些增长路径实际上是最有效的。&lt;/p&gt;&#xA;&lt;p&gt;Airbnb在Y Combinator结束时筹集资金后等了4个月才雇佣第一名员工。在此期间，创始人严重超负荷工作。但他们是在超负荷工作，将Airbnb发展成为现在这个惊人成功的有机体。&lt;/p&gt;&#xA;&lt;h2 id=&#34;注释&#34;&gt;注释&lt;/h2&gt;&#xA;&lt;p&gt;[1] 陡峭的使用增长也会让投资者感兴趣。收入最终将是使用的一个恒定倍数，所以x%的使用增长预测x%的收入增长。但在实践中，投资者打折了仅仅是预测的收入，所以如果你在衡量使用，你需要更高的增长率来打动投资者。&lt;/p&gt;&#xA;&lt;p&gt;[2] 没有筹集资金的创业公司因无法负担而免于招聘过快。但这并不意味着你应该为了避免这个问题而避免筹集资金，就像完全禁欲不是避免成为酗酒者的唯一方式一样。&lt;/p&gt;&#xA;&lt;p&gt;[3] 我不会惊讶VC倾向于推动创始人过度招聘甚至不符合他们自己的利益。他们不知道那些因过度支出而死亡的创业公司中，有多少如果生存下来会做得很好。我猜数量相当可观。&lt;/p&gt;&#xA;&lt;p&gt;[4] 阅读草稿后，Sam Altman写道：&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;我认为你应该更加强调招聘的观点。我认为大致准确地说，YC最成功的公司从来都不是招聘最快的，而伟大创始人的标志之一是能够抵制这种冲动。&amp;rdquo;&lt;/p&gt;&#xA;&lt;p&gt;Paul Buchheit补充道：&lt;/p&gt;&#xA;&lt;p&gt;&amp;ldquo;我看到很多相关的问题是过早扩大规模——创始人拿一个不太真正有效的小企业（通常是糟糕的单位经济），然后为了给人留下深刻印象的增长数字而扩大规模。这类似于过度招聘，因为它使业务一旦变大就更难修复，而且他们确实在快速流失现金。&amp;rdquo;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
