[{
    "title": "6,631,372",
    "url": "/paul_graham/essays_en/6631327/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\n6,631,372 6,631,372 March 2006, rev August 2009\nA couple days ago I found to my surprise that I\u0026rsquo;d been granted a patent. It issued in 2003, but no one told me. I wouldn\u0026rsquo;t know about it now except that a few months ago, while visiting Yahoo, I happened to run into a Big Cheese I knew from working there in the late nineties. He brought up something called Revenue Loop, which Viaweb had been working on when they bought us.\n",
    "description": "",
    "tags": ["patent","revenue loop","search","technology","viaweb","yahoo"],
    "categories": [],
    "content": "→ 中文版本\n6,631,372 6,631,372 March 2006, rev August 2009\nA couple days ago I found to my surprise that I\u0026rsquo;d been granted a patent. It issued in 2003, but no one told me. I wouldn\u0026rsquo;t know about it now except that a few months ago, while visiting Yahoo, I happened to run into a Big Cheese I knew from working there in the late nineties. He brought up something called Revenue Loop, which Viaweb had been working on when they bought us.\nThe idea is basically that you sort search results not in order of textual \u0026ldquo;relevance\u0026rdquo; (as search engines did then) nor in order of how much …"
  },{
    "title": "A Fundraising Survival Guide",
    "url": "/paul_graham/essays_en/fundraising/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nA Fundraising Survival Guide August 2008\nRaising money is the second hardest part of starting a startup. The hardest part is making something people want: most startups that die, die because they didn\u0026rsquo;t do that. But the second biggest cause of death is probably the difficulty of raising money. Fundraising is brutal.\nOne reason it\u0026rsquo;s so brutal is simply the brutality of markets. People who\u0026rsquo;ve spent most of their lives in schools or big companies may not have been exposed to that. Professors and bosses usually feel some sense of responsibility toward you; if you make a valiant effort and fail, they\u0026rsquo;ll cut you a break. Markets are less forgiving. Customers don\u0026rsquo;t care how hard you worked, only whether you solved their problems.\n",
    "description": "",
    "tags": ["fundraising","startups","investors","survival","morale"],
    "categories": [],
    "content": "→ 中文版本\nA Fundraising Survival Guide August 2008\nRaising money is the second hardest part of starting a startup. The hardest part is making something people want: most startups that die, die because they didn\u0026rsquo;t do that. But the second biggest cause of death is probably the difficulty of raising money. Fundraising is brutal.\nOne reason it\u0026rsquo;s so brutal is simply the brutality of markets. People who\u0026rsquo;ve spent most of their lives in schools or big companies may not have been exposed to that. Professors and bosses usually feel some sense of responsibility toward you; if you make a …"
  },{
    "title": "A Local Revolution?",
    "url": "/paul_graham/essays_en/revolution/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nA Local Revolution? April 2009\nRecently I realized I\u0026rsquo;d been holding two ideas in my head that would explode if combined.\nThe first is that startups may represent a new economic phase, on the scale of the Industrial Revolution. I\u0026rsquo;m not sure of this, but there seems a decent chance it\u0026rsquo;s true. People are dramatically more productive as founders or early employees of startups—imagine how much less Larry and Sergey would have achieved if they\u0026rsquo;d gone to work for a big company—and that scale of improvement can change social customs.\n",
    "description": "",
    "tags": ["startup","Silicon Valley","revolution","technology","innovation","economics"],
    "categories": [],
    "content": "→ 中文版本\nA Local Revolution? April 2009\nRecently I realized I\u0026rsquo;d been holding two ideas in my head that would explode if combined.\nThe first is that startups may represent a new economic phase, on the scale of the Industrial Revolution. I\u0026rsquo;m not sure of this, but there seems a decent chance it\u0026rsquo;s true. People are dramatically more productive as founders or early employees of startups—imagine how much less Larry and Sergey would have achieved if they\u0026rsquo;d gone to work for a big company—and that scale of improvement can change social customs.\nThe second idea is that startups are …"
  },{
    "title": "A New Venture Animal",
    "url": "/paul_graham/essays_en/ycombinator/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版\nA New Venture Animal March 2008, rev May 2013\n(This essay grew out of something I wrote for myself to figure out what we do. Even though Y Combinator is now 3 years old, we\u0026rsquo;re still trying to understand its implications.)\nI was annoyed recently to read a description of Y Combinator that said \u0026ldquo;Y Combinator does seed funding for startups.\u0026rdquo; What was especially annoying about it was that I wrote it. This doesn\u0026rsquo;t really convey what we do. And the reason it\u0026rsquo;s inaccurate is that, paradoxically, funding very early stage startups is not mainly about funding.\n",
    "description": "",
    "tags": ["Y Combinator","startups","venture capital","funding","hackers","entrepreneurship"],
    "categories": [],
    "content": "→ 中文版\nA New Venture Animal March 2008, rev May 2013\n(This essay grew out of something I wrote for myself to figure out what we do. Even though Y Combinator is now 3 years old, we\u0026rsquo;re still trying to understand its implications.)\nI was annoyed recently to read a description of Y Combinator that said \u0026ldquo;Y Combinator does seed funding for startups.\u0026rdquo; What was especially annoying about it was that I wrote it. This doesn\u0026rsquo;t really convey what we do. And the reason it\u0026rsquo;s inaccurate is that, paradoxically, funding very early stage startups is not mainly about funding.\nSaying …"
  },{
    "title": "A Plan for Spam",
    "url": "/paul_graham/essays_en/spam/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nA Plan for Spam August 2002\n(This article describes the spam-filtering techniques used in the spamproof web-based mail reader we built to exercise Arc. An improved algorithm is described in Better Bayesian Filtering.)\nI think it\u0026rsquo;s possible to stop spam, and that content-based filters are the way to do it. The Achilles heel of the spammers is their message. They can circumvent any other barrier you set up. They have so far, at least. But they have to deliver their message, whatever it is. If we can write software that recognizes their messages, there is no way they can get around that.\n",
    "description": "",
    "tags": ["spam","filtering","algorithms","bayesian","email","programming","security"],
    "categories": [],
    "content": "→ 中文版本\nA Plan for Spam August 2002\n(This article describes the spam-filtering techniques used in the spamproof web-based mail reader we built to exercise Arc. An improved algorithm is described in Better Bayesian Filtering.)\nI think it\u0026rsquo;s possible to stop spam, and that content-based filters are the way to do it. The Achilles heel of the spammers is their message. They can circumvent any other barrier you set up. They have so far, at least. But they have to deliver their message, whatever it is. If we can write software that recognizes their messages, there is no way they can get around …"
  },{
    "title": "A Project of One's Own",
    "url": "/paul_graham/essays_en/own/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "A Project of One\u0026rsquo;s Own June 2021\nA few days ago, on the way home from school, my nine year old son told me he couldn\u0026rsquo;t wait to get home to write more of the story he was working on. This made me as happy as anything I\u0026rsquo;ve heard him say — not just because he was excited about his story, but because he\u0026rsquo;d discovered this way of working. Working on a project of your own is as different from ordinary work as skating is from walking. It\u0026rsquo;s more fun, but also much more productive.\n",
    "description": "",
    "tags": ["projects","creativity","motivation","work","passion","independence","education"],
    "categories": [],
    "content": "A Project of One\u0026rsquo;s Own June 2021\nA few days ago, on the way home from school, my nine year old son told me he couldn\u0026rsquo;t wait to get home to write more of the story he was working on. This made me as happy as anything I\u0026rsquo;ve heard him say — not just because he was excited about his story, but because he\u0026rsquo;d discovered this way of working. Working on a project of your own is as different from ordinary work as skating is from walking. It\u0026rsquo;s more fun, but also much more productive.\nWhat proportion of great work has been done by people who were skating in this sense? If not …"
  },{
    "title": "A Student's Guide to Startups",
    "url": "/paul_graham/essays_en/mit/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nA Student\u0026rsquo;s Guide to Startups October 2006\n(This essay is derived from a talk at MIT.)\nTill recently graduating seniors had two choices: get a job or go to grad school. I think there will increasingly be a third option: to start your own startup. But how common will that be?\nI\u0026rsquo;m sure the default will always be to get a job, but starting a startup could well become as popular as grad school. In the late 90s my professor friends used to complain that they couldn\u0026rsquo;t get grad students, because all the undergrads were going to work for startups. I wouldn\u0026rsquo;t be surprised if that situation returns, but with one difference: this time they\u0026rsquo;ll be starting their own instead of going to work for other people\u0026rsquo;s.\n",
    "description": "",
    "tags": ["students","entrepreneurship","education","founders","colleges"],
    "categories": [],
    "content": "→ 中文版本\nA Student\u0026rsquo;s Guide to Startups October 2006\n(This essay is derived from a talk at MIT.)\nTill recently graduating seniors had two choices: get a job or go to grad school. I think there will increasingly be a third option: to start your own startup. But how common will that be?\nI\u0026rsquo;m sure the default will always be to get a job, but starting a startup could well become as popular as grad school. In the late 90s my professor friends used to complain that they couldn\u0026rsquo;t get grad students, because all the undergrads were going to work for startups. I wouldn\u0026rsquo;t be surprised …"
  },{
    "title": "A Unified Theory of VC Suckage",
    "url": "/paul_graham/essays_en/venturecapital/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nA Unified Theory of VC Suckage March 2005\nA couple months ago I got an email from a recruiter asking if I was interested in being a \u0026ldquo;technologist in residence\u0026rdquo; at a new venture capital fund. I think the idea was to play Karl Rove to the VCs\u0026rsquo; George Bush.\\n\\nI considered it for about four seconds. Work for a VC fund? Ick.\\n\\nOne of my most vivid memories from our startup is going to visit Greylock, the famous Boston VCs. They were the most arrogant people I\u0026rsquo;ve met in my life. And I\u0026rsquo;ve met a lot of arrogant people. [1]I\u0026rsquo;m not alone in feeling this way, of course. Even a VC friend of mine dislikes VCs. \u0026ldquo;Assholes,\u0026rdquo; he says.But lately I\u0026rsquo;ve been learning more about how the VC world works, and a few days ago it hit me that there\u0026rsquo;s a reason VCs are the way they are. It\u0026rsquo;s not so much that the business attracts jerks, or even that the power they wield corrupts them. The real problem is the way they\u0026rsquo;re paid.The problem with VC funds is that they\u0026rsquo;re funds. Like the managers of mutual funds or hedge funds, VCs get paid a percentage of the money they manage: about 2% a year in management fees, plus a percentage of the gains. So they want the fund to be huge\u0026ndash; hundreds of millions of dollars, if possible. But that means each partner ends up being responsible for investing a lot of money. And since one person can only manage so many deals, each deal has to be for multiple millions of dollars.This turns out to explain nearly all the characteristics of VCs that founders hate.It explains why VCs take so agonizingly long to make up their minds, and why their due diligence feels like a body cavity search. [2] With so much at stake, they have to be paranoid.It explains why they steal your ideas. Every founder knows that VCs will tell your secrets to your competitors if they end up investing in them. It\u0026rsquo;s not unheard of for VCs to meet you when they have no intention of funding you, just to pick your brain for a competitor. This prospect makes naive founders clumsily secretive. Experienced founders treat it as a cost of doing business. Either way it sucks. But again, the only reason VCs are so sneaky is the giant deals they do. With so much at stake, they have to be devious.It explains why VCs tend to interfere in the companies they invest in. They want to be on your board not just so that they can advise you, but so that they can watch you. Often they even install a new CEO. Yes, he may have extensive business experience. But he\u0026rsquo;s also their man: these newly installed CEOs always play something of the role of a political commissar in a Red Army unit. With so much at stake, VCs can\u0026rsquo;t resist micromanaging you.The huge investments themselves are something founders would dislike, if they realized how damaging they can be. VCs don\u0026rsquo;t invest $x million because that's the amount you need, but because that's the amount the structure of their business requires them to invest. Like steroids, these sudden huge investments can do more harm than good. Google survived enormous VC funding because it could legitimately absorb large amounts of money. They had to buy a lot of servers and a lot of bandwidth to crawl the whole Web. Less fortunate startups just end up hiring armies of people to sit around having meetings.In principle you could take a huge VC investment, put it in treasury bills, and continue to operate frugally. You just try it.And of course giant investments mean giant valuations. They have to, or there's not enough stock left to keep the founders interested. You might think a high valuation is a great thing. Many founders do. But you can't eat paper. You can't benefit from a high valuation unless you can somehow achieve what those in the business call a \"liquidity event,\" and the higher your valuation, the narrower your options for doing that. Many a founder would be happy to sell his company for $15 million, but VCs who\u0026rsquo;ve just invested at a pre-money valuation of $8 million won't hear of that. You're rolling the dice again, whether you like it or not.Back in 1997, one of our competitors raised $20 million in a single round of VC funding. This was at the time more than the valuation of our entire company. Was I worried? Not at all: I was delighted. It was like watching a car you\u0026rsquo;re chasing turn down a street that you know has no outlet.Their smartest move at that point would have been to take every penny of the $20 million and use it to buy us. We would have sold. Their investors would have been furious of course. But I think the main reason they never considered this was that they never imagined we could be had so cheap. They probably assumed we were on the same VC gravy train they were.In fact we only spent about $2 million in our entire existence. And that gave us flexibility. We could sell ourselves to Yahoo for $50 million, and everyone was delighted. If our competitor had done that, the last round of investors would presumably have lost money. I assume they could have vetoed such a deal. But no one those days was paying a lot more than Yahoo. So unless their founders could pull off an IPO (which would be difficult with Yahoo as a competitor), they had no choice but to ride the thing down.The puffed-up companies that went public during the Bubble didn\u0026rsquo;t do it just because they were pulled into it by unscrupulous investment bankers. Most were pushed just as hard from the other side by VCs who\u0026rsquo;d invested at high valuations, leaving an IPO as the only way out. The only people dumber were retail investors. So it was literally IPO or bust. Or rather, IPO then bust, or just bust.Add up all the evidence of VCs\u0026rsquo; behavior, and the resulting personality is not attractive. In fact, it\u0026rsquo;s the classic villain: alternately cowardly, greedy, sneaky, and overbearing.I used to take it for granted that VCs were like this. Complaining that VCs were jerks used to seem as naive to me as complaining that users didn\u0026rsquo;t read the reference manual. Of course VCs were jerks. How could it be otherwise?But I realize now that they\u0026rsquo;re not intrinsically jerks. VCs are like car salesmen or bureaucrats: the nature of their work turns them into jerks.I\u0026rsquo;ve met a few VCs I like. Mike Moritz seems a good guy. He even has a sense of humor, which is almost unheard of among VCs. From what I\u0026rsquo;ve read about John Doerr, he sounds like a good guy too, almost a hacker. But they work for the very best VC funds. And my theory explains why they\u0026rsquo;d tend to be different: just as the very most popular kids don\u0026rsquo;t have to persecute nerds, the very best VCs don\u0026rsquo;t have to act like VCs. They get the pick of all the best deals. So they don\u0026rsquo;t have to be so paranoid and sneaky, and they can choose those rare companies, like Google, that will actually benefit from the giant sums they\u0026rsquo;re compelled to invest.VCs often complain that in their business there\u0026rsquo;s too much money chasing too few deals. Few realize that this also describes a flaw in the way funding works at the level of individual firms.Perhaps this was the sort of strategic insight I was supposed to come up with as a \u0026ldquo;technologist in residence.\u0026rdquo; If so, the good news is that they\u0026rsquo;re getting it for free. The bad news is it means that if you\u0026rsquo;re not one of the very top funds, you\u0026rsquo;re condemned to be the bad guys.Notes[1] After Greylock booted founder Philip Greenspun out of ArsDigita, he wrote a hilarious but also very informative essay about it. [2] Since most VCs aren\u0026rsquo;t tech guys, the technology side of their due diligence tends to be like a body cavity search by someone with a faulty knowledge of human anatomy. After a while we were quite sore from VCs attempting to probe our nonexistent database orifice.No, we don\u0026rsquo;t use Oracle. We just store the data in files. Our secret is to use an OS that doesn\u0026rsquo;t lose our data. Which OS? FreeBSD. Why do you use that instead of Windows NT? Because it\u0026rsquo;s better and it doesn\u0026rsquo;t cost anything. What, you\u0026rsquo;re using a freeware OS?How many times that conversation was repeated. Then when we got to Yahoo, we found they used FreeBSD and stored their data in files too.Chinese TranslationJapanese Translation\n",
    "description": "",
    "tags": ["venture capital","VCs","funding","startups","business","investment"],
    "categories": [],
    "content": "→ 中文版本\nA Unified Theory of VC Suckage March 2005\nA couple months ago I got an email from a recruiter asking if I was interested in being a \u0026ldquo;technologist in residence\u0026rdquo; at a new venture capital fund. I think the idea was to play Karl Rove to the VCs\u0026rsquo; George Bush.\\n\\nI considered it for about four seconds. Work for a VC fund? Ick.\\n\\nOne of my most vivid memories from our startup is going to visit Greylock, the famous Boston VCs. They were the most arrogant people I\u0026rsquo;ve met in my life. And I\u0026rsquo;ve met a lot of arrogant people. [1]I\u0026rsquo;m not alone in feeling this way, …"
  },{
    "title": "A Way to Detect Bias",
    "url": "/paul_graham/essays_en/bias/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nA Way to Detect Bias October 2015\nThis will come as a surprise to a lot of people, but in some cases it\u0026rsquo;s possible to detect bias in a selection process without knowing anything about the applicant pool. Which is exciting because among other things it means third parties can use this technique to detect bias whether those doing the selecting want them to or not.\nYou can use this technique whenever (a) you have at least a random sample of the applicants that were selected, (b) their subsequent performance is measured, and (c) the groups of applicants you\u0026rsquo;re comparing have roughly equal distribution of ability.\n",
    "description": "",
    "tags": ["bias","selection","performance","measurement","venture capital","discrimination"],
    "categories": [],
    "content": "→ 中文版本\nA Way to Detect Bias October 2015\nThis will come as a surprise to a lot of people, but in some cases it\u0026rsquo;s possible to detect bias in a selection process without knowing anything about the applicant pool. Which is exciting because among other things it means third parties can use this technique to detect bias whether those doing the selecting want them to or not.\nYou can use this technique whenever (a) you have at least a random sample of the applicants that were selected, (b) their subsequent performance is measured, and (c) the groups of applicants you\u0026rsquo;re comparing have …"
  },{
    "title": "A Word to the Resourceful",
    "url": "/paul_graham/essays_en/word/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版\nA Word to the Resourceful January 2012\nA year ago I noticed a pattern in the least successful startups we\u0026rsquo;d funded: they all seemed hard to talk to. It felt as if there was some kind of wall between us. I could never quite tell if they understood what I was saying.\nThis caught my attention because earlier we\u0026rsquo;d noticed a pattern among the most successful startups, and it seemed to hinge on a different quality. We found the startups that did best were the ones with the sort of founders about whom we\u0026rsquo;d say \u0026ldquo;they can take care of themselves.\u0026rdquo; The startups that do best are fire-and-forget in the sense that all you have to do is give them a lead, and they\u0026rsquo;ll close it, whatever type of lead it is. When they\u0026rsquo;re raising money, for example, you can do the initial intros knowing that if you wanted to you could stop thinking about it at that point. You won\u0026rsquo;t have to babysit the round to make sure it happens. That type of founder is going to come back with the money; the only question is how much on what terms.\n",
    "description": "",
    "tags": ["startups","resourcefulness","conversation","advice","founders"],
    "categories": [],
    "content": "→ 中文版\nA Word to the Resourceful January 2012\nA year ago I noticed a pattern in the least successful startups we\u0026rsquo;d funded: they all seemed hard to talk to. It felt as if there was some kind of wall between us. I could never quite tell if they understood what I was saying.\nThis caught my attention because earlier we\u0026rsquo;d noticed a pattern among the most successful startups, and it seemed to hinge on a different quality. We found the startups that did best were the ones with the sort of founders about whom we\u0026rsquo;d say \u0026ldquo;they can take care of themselves.\u0026rdquo; The startups that …"
  },{
    "title": "Ace",
    "url": "/paul_graham/essays_en/ace/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nAce Ace December 2020\nAs I was deciding what to write about next, I was surprised to find that two separate essays I\u0026rsquo;d been planning to write were actually the same.\nThe first is about how to ace your Y Combinator interview. There has been so much nonsense written about this topic that I\u0026rsquo;ve been meaning for years to write something telling founders the truth.\nThe second is about something politicians sometimes say — that the only way to become a billionaire is by exploiting people — and why this is mistaken.\n",
    "description": "",
    "tags": ["startup","yc","interview","billionaires","founders","users"],
    "categories": [],
    "content": "→ 中文版本\nAce Ace December 2020\nAs I was deciding what to write about next, I was surprised to find that two separate essays I\u0026rsquo;d been planning to write were actually the same.\nThe first is about how to ace your Y Combinator interview. There has been so much nonsense written about this topic that I\u0026rsquo;ve been meaning for years to write something telling founders the truth.\nThe second is about something politicians sometimes say — that the only way to become a billionaire is by exploiting people — and why this is mistaken.\nKeep reading, and you\u0026rsquo;ll learn both simultaneously.\nI know …"
  },{
    "title": "Addiction",
    "url": "/paul_graham/essays_en/addiction/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nAddiction The Acceleration of Addictiveness July 2010\nWhat hard liquor, cigarettes, heroin, and crack have in common is that they\u0026rsquo;re all more concentrated forms of less addictive predecessors. Most if not all the things we describe as addictive are. And the scary thing is, the process that created them is accelerating.\nWe wouldn\u0026rsquo;t want to stop it. It\u0026rsquo;s the same process that cures diseases: technological progress. Technological progress means making things do more of what we want. When the thing we want is something we want to want, we consider technological progress good. If some new technique makes solar cells x% more efficient, that seems strictly better. When progress concentrates something we don\u0026rsquo;t want to want — when it transforms opium into heroin — it seems bad. But it\u0026rsquo;s the same process at work.\n",
    "description": "",
    "tags": ["addiction","technology","society","internet","progress"],
    "categories": [],
    "content": "→ 中文版本\nAddiction The Acceleration of Addictiveness July 2010\nWhat hard liquor, cigarettes, heroin, and crack have in common is that they\u0026rsquo;re all more concentrated forms of less addictive predecessors. Most if not all the things we describe as addictive are. And the scary thing is, the process that created them is accelerating.\nWe wouldn\u0026rsquo;t want to stop it. It\u0026rsquo;s the same process that cures diseases: technological progress. Technological progress means making things do more of what we want. When the thing we want is something we want to want, we consider technological progress …"
  },{
    "title": "After Credentials",
    "url": "/paul_graham/essays_en/credentials/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ Chinese Version\nAfter Credentials December 2008\nA few months ago I read a New York Times article on South Korean cram schools that said Admission to the right university can make or break an ambitious young South Korean. A parent added: \u0026ldquo;In our country, college entrance exams determine 70 to 80 percent of a person\u0026rsquo;s future.\u0026rdquo; It was striking how old fashioned this sounded. And yet when I was in high school it wouldn\u0026rsquo;t have seemed too far off as a description of the US. Which means things must have been changing here.\n",
    "description": "",
    "tags": ["credentials","education","performance","meritocracy","society","careers","startups","measurement"],
    "categories": [],
    "content": "→ Chinese Version\nAfter Credentials December 2008\nA few months ago I read a New York Times article on South Korean cram schools that said Admission to the right university can make or break an ambitious young South Korean. A parent added: \u0026ldquo;In our country, college entrance exams determine 70 to 80 percent of a person\u0026rsquo;s future.\u0026rdquo; It was striking how old fashioned this sounded. And yet when I was in high school it wouldn\u0026rsquo;t have seemed too far off as a description of the US. Which means things must have been changing here.\nThe course of people\u0026rsquo;s lives in the US now …"
  },{
    "title": "After the Ladder",
    "url": "/paul_graham/essays_en/ladder/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nAfter the Ladder August 2005\nThirty years ago, one was supposed to work one\u0026rsquo;s way up the corporate ladder. That\u0026rsquo;s less the rule now. Our generation wants to get paid up front. Instead of developing a product for some big company in the expectation of getting job security in return, we develop the product ourselves, in a startup, and sell it to the big company. At the very least we want options.\n",
    "description": "",
    "tags": ["corporate_ladder","careers","startups","economic_inequality","work_culture","risk","job_security"],
    "categories": [],
    "content": "→ 中文版本\nAfter the Ladder August 2005\nThirty years ago, one was supposed to work one\u0026rsquo;s way up the corporate ladder. That\u0026rsquo;s less the rule now. Our generation wants to get paid up front. Instead of developing a product for some big company in the expectation of getting job security in return, we develop the product ourselves, in a startup, and sell it to the big company. At the very least we want options.\nAmong other things, this shift has created the appearance of a rapid increase in economic inequality. But really the two cases are not as different as they look in economic …"
  },{
    "title": "Airbnb",
    "url": "/paul_graham/essays_en/airbnb/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nAirbnb March 2011\nYesterday Fred Wilson published a remarkable post about missing Airbnb. VCs miss good startups all the time, but it\u0026rsquo;s extraordinarily rare for one to talk about it publicly till long afterward. So that post is further evidence what a rare bird Fred is. He\u0026rsquo;s probably the nicest VC I know.\nReading Fred\u0026rsquo;s post made me go back and look at the emails I exchanged with him at the time, trying to convince him to invest in Airbnb. It was quite interesting to read. You can see Fred\u0026rsquo;s mind at work as he circles the deal.\n",
    "description": "",
    "tags": ["airbnb","vc","startup","investing","yc"],
    "categories": [],
    "content": "→ 中文版本\nAirbnb March 2011\nYesterday Fred Wilson published a remarkable post about missing Airbnb. VCs miss good startups all the time, but it\u0026rsquo;s extraordinarily rare for one to talk about it publicly till long afterward. So that post is further evidence what a rare bird Fred is. He\u0026rsquo;s probably the nicest VC I know.\nReading Fred\u0026rsquo;s post made me go back and look at the emails I exchanged with him at the time, trying to convince him to invest in Airbnb. It was quite interesting to read. You can see Fred\u0026rsquo;s mind at work as he circles the deal.\nFred and the Airbnb founders have …"
  },{
    "title": "Alien Truth",
    "url": "/paul_graham/essays_en/alien/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nAlien Truth October 2022\nIf there were intelligent beings elsewhere in the universe, they\u0026rsquo;d share certain truths in common with us. The truths of mathematics would be the same, because they\u0026rsquo;re true by definition. Ditto for the truths of physics; the mass of a carbon atom would be the same on their planet. But I think we\u0026rsquo;d share other truths with aliens besides the truths of math and physics, and that it would be worthwhile to think about what these might be.\n",
    "description": "",
    "tags": ["philosophy","truth","intelligence","aliens","ai"],
    "categories": [],
    "content": "→ 中文版本\nAlien Truth October 2022\nIf there were intelligent beings elsewhere in the universe, they\u0026rsquo;d share certain truths in common with us. The truths of mathematics would be the same, because they\u0026rsquo;re true by definition. Ditto for the truths of physics; the mass of a carbon atom would be the same on their planet. But I think we\u0026rsquo;d share other truths with aliens besides the truths of math and physics, and that it would be worthwhile to think about what these might be.\nFor example, I think we\u0026rsquo;d share the principle that a controlled experiment testing some hypothesis …"
  },{
    "title": "An Alternative Theory of Unions",
    "url": "/paul_graham/essays_en/unions/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nAn Alternative Theory of Unions May 2007\nPeople who worry about the increasing gap between rich and poor generally look back on the mid twentieth century as a golden age. In those days we had a large number of high-paying union manufacturing jobs that boosted the median income. I wouldn\u0026rsquo;t quite call the high-paying union job a myth, but I think people who dwell on it are reading too much into it.\n",
    "description": "",
    "tags": ["unions","economics","labor","history","business","startup"],
    "categories": [],
    "content": "→ 中文版本\nAn Alternative Theory of Unions May 2007\nPeople who worry about the increasing gap between rich and poor generally look back on the mid twentieth century as a golden age. In those days we had a large number of high-paying union manufacturing jobs that boosted the median income. I wouldn\u0026rsquo;t quite call the high-paying union job a myth, but I think people who dwell on it are reading too much into it.\nOddly enough, it was working with startups that made me realize where the high-paying union job came from. In a rapidly growing market, you don\u0026rsquo;t worry too much about efficiency. …"
  },{
    "title": "An NFT That Saves Lives",
    "url": "/paul_graham/essays_en/nft/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nAn NFT That Saves Lives May 2021\nNoora Health, a nonprofit I\u0026rsquo;ve supported for years, just launched a new NFT. It has a dramatic name, Save Thousands of Lives, because that\u0026rsquo;s what the proceeds will do.\nNoora has been saving lives for 7 years. They run programs in hospitals in South Asia to teach new mothers how to take care of their babies once they get home. They\u0026rsquo;re in 165 hospitals now. And because they know the numbers before and after they start at a new hospital, they can measure the impact they have. It is massive. For every 1000 live births, they save 9 babies.\n",
    "description": "",
    "tags": ["NFT","nonprofit","charity","blockchain","social impact","healthcare"],
    "categories": [],
    "content": "→ 中文版本\nAn NFT That Saves Lives May 2021\nNoora Health, a nonprofit I\u0026rsquo;ve supported for years, just launched a new NFT. It has a dramatic name, Save Thousands of Lives, because that\u0026rsquo;s what the proceeds will do.\nNoora has been saving lives for 7 years. They run programs in hospitals in South Asia to teach new mothers how to take care of their babies once they get home. They\u0026rsquo;re in 165 hospitals now. And because they know the numbers before and after they start at a new hospital, they can measure the impact they have. It is massive. For every 1000 live births, they save 9 babies. …"
  },{
    "title": "Apple's Mistake",
    "url": "/paul_graham/essays_en/apple/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nApple\u0026rsquo;s Mistake Want to start a startup? Get funded by Y Combinator. November 2009\nI don\u0026rsquo;t think Apple realizes how badly the App Store approval process is broken. Or rather, I don\u0026rsquo;t think they realize how much it matters that it\u0026rsquo;s broken.\nThe way Apple runs the App Store has harmed their reputation with programmers more than anything else they\u0026rsquo;ve ever done. Their reputation with programmers used to be great. It used to be the most common complaint you heard about Apple was that their fans admired them too uncritically. The App Store has changed that. Now a lot of programmers have started to see Apple as evil.\n",
    "description": "",
    "tags": ["apple","app store","developers","iphone","software"],
    "categories": [],
    "content": "→ 中文版本\nApple\u0026rsquo;s Mistake Want to start a startup? Get funded by Y Combinator. November 2009\nI don\u0026rsquo;t think Apple realizes how badly the App Store approval process is broken. Or rather, I don\u0026rsquo;t think they realize how much it matters that it\u0026rsquo;s broken.\nThe way Apple runs the App Store has harmed their reputation with programmers more than anything else they\u0026rsquo;ve ever done. Their reputation with programmers used to be great. It used to be the most common complaint you heard about Apple was that their fans admired them too uncritically. The App Store has changed that. Now a …"
  },{
    "title": "Are Software Patents Evil?",
    "url": "/paul_graham/essays_en/softwarepatents/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nAre Software Patents Evil? March 2006\n(This essay is derived from a talk at Google.)\nA few weeks ago I found to my surprise that I\u0026rsquo;d been granted four patents. This was all the more surprising because I\u0026rsquo;d only applied for three. The patents aren\u0026rsquo;t mine, of course. They were assigned to Viaweb, and became Yahoo\u0026rsquo;s when they bought us. But the news set me thinking about the question of software patents generally.\n",
    "description": "",
    "tags": ["patents","software","innovation","intellectual_property","business","legal"],
    "categories": [],
    "content": "→ 中文版本\nAre Software Patents Evil? March 2006\n(This essay is derived from a talk at Google.)\nA few weeks ago I found to my surprise that I\u0026rsquo;d been granted four patents. This was all the more surprising because I\u0026rsquo;d only applied for three. The patents aren\u0026rsquo;t mine, of course. They were assigned to Viaweb, and became Yahoo\u0026rsquo;s when they bought us. But the news set me thinking about the question of software patents generally.\nPatents are a hard problem. I\u0026rsquo;ve had to advise most of the startups we\u0026rsquo;ve funded about them, and despite years of experience I\u0026rsquo;m still …"
  },{
    "title": "Be Good",
    "url": "/paul_graham/essays_en/good/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nBe Good April 2008\n(This essay is derived from a talk at the 2008 Startup School.)\nAbout a month after we started Y Combinator we came up with the phrase that became our motto: Make something people want. We\u0026rsquo;ve learned a lot since then, but if I were choosing now that\u0026rsquo;s still the one I\u0026rsquo;d pick.\nAnother thing we tell founders is not to worry too much about the business model, at least at first. Not because making money is unimportant, but because it\u0026rsquo;s so much easier than building something great.\n",
    "description": "",
    "tags": ["benevolence","charity","morale","users","compass"],
    "categories": [],
    "content": "→ 中文版本\nBe Good April 2008\n(This essay is derived from a talk at the 2008 Startup School.)\nAbout a month after we started Y Combinator we came up with the phrase that became our motto: Make something people want. We\u0026rsquo;ve learned a lot since then, but if I were choosing now that\u0026rsquo;s still the one I\u0026rsquo;d pick.\nAnother thing we tell founders is not to worry too much about the business model, at least at first. Not because making money is unimportant, but because it\u0026rsquo;s so much easier than building something great.\nA couple weeks ago I realized that if you put those two ideas …"
  },{
    "title": "Beating the Averages",
    "url": "/paul_graham/essays_en/avg/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nBeating the Averages Want to start a startup? Get funded by Y Combinator. April 2001, rev. April 2003\n(This article is derived from a talk given at the 2001 Franz Developer Symposium.)\nIn the summer of 1995, my friend Robert Morris and I started a startup called Viaweb. Our plan was to write software that would let end users build online stores. What was novel about this software, at the time, was that it ran on our server, using ordinary Web pages as the interface.\n",
    "description": "",
    "tags": ["lisp","programming","startups","technology","software"],
    "categories": [],
    "content": "→ 中文版本\nBeating the Averages Want to start a startup? Get funded by Y Combinator. April 2001, rev. April 2003\n(This article is derived from a talk given at the 2001 Franz Developer Symposium.)\nIn the summer of 1995, my friend Robert Morris and I started a startup called Viaweb. Our plan was to write software that would let end users build online stores. What was novel about this software, at the time, was that it ran on our server, using ordinary Web pages as the interface.\nA lot of people could have been having this idea at the same time, of course, but as far as I know, Viaweb was the first …"
  },{
    "title": "Before the Startup",
    "url": "/paul_graham/essays_en/before/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nBefore the Startup Want to start a startup? Get funded by Y Combinator.\nOctober 2014\n(This essay is derived from a guest lecture in Sam Altman\u0026rsquo;s startup class at Stanford. It\u0026rsquo;s intended for college students, but much of it is applicable to potential founders at other ages.)\nOne of the advantages of having kids is that when you have to give advice, you can ask yourself \u0026ldquo;what would I tell my own kids?\u0026rdquo; My kids are little, but I can imagine what I\u0026rsquo;d tell them about startups if they were in college, and that\u0026rsquo;s what I\u0026rsquo;m going to tell you.\n",
    "description": "",
    "tags": ["startup","founders","college","advice","preparation","entrepreneurship"],
    "categories": [],
    "content": "→ 中文版本\nBefore the Startup Want to start a startup? Get funded by Y Combinator.\nOctober 2014\n(This essay is derived from a guest lecture in Sam Altman\u0026rsquo;s startup class at Stanford. It\u0026rsquo;s intended for college students, but much of it is applicable to potential founders at other ages.)\nOne of the advantages of having kids is that when you have to give advice, you can ask yourself \u0026ldquo;what would I tell my own kids?\u0026rdquo; My kids are little, but I can imagine what I\u0026rsquo;d tell them about startups if they were in college, and that\u0026rsquo;s what I\u0026rsquo;m going to tell you.\nStartups …"
  },{
    "title": "Being a Noob",
    "url": "/paul_graham/essays_en/noob/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nBeing a Noob January 2020\nWhen I was young, I thought old people had everything figured out. Now that I\u0026rsquo;m old, I know this isn\u0026rsquo;t true.\nI constantly feel like a noob. It seems like I\u0026rsquo;m always talking to some startup working in a new field I know nothing about, or reading a book about a topic I don\u0026rsquo;t understand well enough, or visiting some new country where I don\u0026rsquo;t know how things work.\n",
    "description": "",
    "tags": ["learning","growth","beginner","knowledge","humility","personal development"],
    "categories": [],
    "content": "→ 中文版本\nBeing a Noob January 2020\nWhen I was young, I thought old people had everything figured out. Now that I\u0026rsquo;m old, I know this isn\u0026rsquo;t true.\nI constantly feel like a noob. It seems like I\u0026rsquo;m always talking to some startup working in a new field I know nothing about, or reading a book about a topic I don\u0026rsquo;t understand well enough, or visiting some new country where I don\u0026rsquo;t know how things work.\nIt\u0026rsquo;s not pleasant to feel like a noob. And the word \u0026ldquo;noob\u0026rdquo; is certainly not a compliment. And yet today I realized something encouraging about being a noob: …"
  },{
    "title": "Being Popular",
    "url": "/paul_graham/essays_en/popular/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ Chinese Version\nBeing Popular May 2001\n(This article was written as a kind of business plan for a new language. So it is missing (because it takes for granted) the most important feature of a good programming language: very powerful abstractions.)\nA friend of mine once told an eminent operating systems expert that he wanted to design a really good programming language. The expert told him that it would be a waste of time, that programming languages don\u0026rsquo;t become popular or unpopular based on their merits, and so no matter how good his language was, no one would use it. At least, that was what had happened to the language he had designed.\n",
    "description": "",
    "tags": ["programming languages","popularity","hacker culture","language design","Lisp"],
    "categories": [],
    "content": "→ Chinese Version\nBeing Popular May 2001\n(This article was written as a kind of business plan for a new language. So it is missing (because it takes for granted) the most important feature of a good programming language: very powerful abstractions.)\nA friend of mine once told an eminent operating systems expert that he wanted to design a really good programming language. The expert told him that it would be a waste of time, that programming languages don\u0026rsquo;t become popular or unpopular based on their merits, and so no matter how good his language was, no one would use it. At least, that …"
  },{
    "title": "Better Bayesian Filtering",
    "url": "/paul_graham/essays_en/better/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nBetter Bayesian Filtering January 2003\n(This article was given as a talk at the 2003 Spam Conference. It describes the work I\u0026rsquo;ve done to improve the performance of the algorithm described in A Plan for Spam, and what I plan to do in the future.)\nThe first discovery I\u0026rsquo;d like to present here is an algorithm for lazy evaluation of research papers. Just write whatever you want and don\u0026rsquo;t cite any previous work, and indignant readers will send you references to all the papers you should have cited. I discovered this algorithm after \u0026ldquo;A Plan for Spam\u0026rdquo; [1] was on Slashdot.\n",
    "description": "",
    "tags": ["spam","filtering","bayesian","algorithm","email","technology"],
    "categories": [],
    "content": "→ 中文版本\nBetter Bayesian Filtering January 2003\n(This article was given as a talk at the 2003 Spam Conference. It describes the work I\u0026rsquo;ve done to improve the performance of the algorithm described in A Plan for Spam, and what I plan to do in the future.)\nThe first discovery I\u0026rsquo;d like to present here is an algorithm for lazy evaluation of research papers. Just write whatever you want and don\u0026rsquo;t cite any previous work, and indignant readers will send you references to all the papers you should have cited. I discovered this algorithm after \u0026ldquo;A Plan for Spam\u0026rdquo; [1] was on …"
  },{
    "title": "Beyond Smart",
    "url": "/paul_graham/essays_en/smart/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nBeyond Smart October 2021\nIf you asked people what was special about Einstein, most would say that he was really smart. Even the ones who tried to give you a more sophisticated-sounding answer would probably think this first. Till a few years ago I would have given the same answer myself. But that wasn\u0026rsquo;t what was special about Einstein. What was special about him was that he had important new ideas. Being very smart was a necessary precondition for having those ideas, but the two are not identical.\n",
    "description": "",
    "tags": ["intelligence","new_ideas","creativity","independent_mindedness","writing","innovation"],
    "categories": [],
    "content": "→ 中文版本\nBeyond Smart October 2021\nIf you asked people what was special about Einstein, most would say that he was really smart. Even the ones who tried to give you a more sophisticated-sounding answer would probably think this first. Till a few years ago I would have given the same answer myself. But that wasn\u0026rsquo;t what was special about Einstein. What was special about him was that he had important new ideas. Being very smart was a necessary precondition for having those ideas, but the two are not identical.\nIt may seem a hair-splitting distinction to point out that intelligence and its …"
  },{
    "title": "Black Swan Farming",
    "url": "/paul_graham/essays_en/swan/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nBlack Swan Farming September 2012\nI\u0026rsquo;ve done several types of work over the years but I don\u0026rsquo;t know another as counterintuitive as startup investing.\nThe two most important things to understand about startup investing, as a business, are (1) that effectively all the returns are concentrated in a few big winners, and (2) that the best ideas look initially like bad ideas.\nThe first rule I knew intellectually, but didn\u0026rsquo;t really grasp till it happened to us. The total value of the companies we\u0026rsquo;ve funded is around 10 billion, give or take a few. But just two companies, Dropbox and Airbnb, account for about three quarters of it.\n",
    "description": "",
    "tags": ["startup investing","risk","returns","YC","black swan"],
    "categories": [],
    "content": "→ 中文版本\nBlack Swan Farming September 2012\nI\u0026rsquo;ve done several types of work over the years but I don\u0026rsquo;t know another as counterintuitive as startup investing.\nThe two most important things to understand about startup investing, as a business, are (1) that effectively all the returns are concentrated in a few big winners, and (2) that the best ideas look initially like bad ideas.\nThe first rule I knew intellectually, but didn\u0026rsquo;t really grasp till it happened to us. The total value of the companies we\u0026rsquo;ve funded is around 10 billion, give or take a few. But just two companies, …"
  },{
    "title": "Bradley's Ghost",
    "url": "/paul_graham/essays_en/polls/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nBradley\u0026rsquo;s Ghost November 2004\nA lot of people are writing now about why Kerry lost. Here I want to examine a more specific question: why were the exit polls so wrong?\nIn Ohio, which Kerry ultimately lost 49-51, exit polls gave him a 52-48 victory. And this wasn\u0026rsquo;t just random error. In every swing state they overestimated the Kerry vote. In Florida, which Bush ultimately won 52-47, exit polls predicted a dead heat.\n",
    "description": "",
    "tags": ["politics","polls","society","psychology","behavior"],
    "categories": [],
    "content": "→ 中文版本\nBradley\u0026rsquo;s Ghost November 2004\nA lot of people are writing now about why Kerry lost. Here I want to examine a more specific question: why were the exit polls so wrong?\nIn Ohio, which Kerry ultimately lost 49-51, exit polls gave him a 52-48 victory. And this wasn\u0026rsquo;t just random error. In every swing state they overestimated the Kerry vote. In Florida, which Bush ultimately won 52-47, exit polls predicted a dead heat.\n(These are not early numbers. They\u0026rsquo;re from about midnight eastern time, long after polls closed in Ohio and Florida. And yet by the next afternoon the exit …"
  },{
    "title": "Change Your Name",
    "url": "/paul_graham/essays_en/name/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nChange Your Name August 2015\nIf you have a US startup called X and you don\u0026rsquo;t have x.com, you should probably change your name.\nThe reason is not just that people can\u0026rsquo;t find you. For companies with mobile apps, especially, having the right domain name is not as critical as it used to be for getting users. The problem with not having the .com of your name is that it signals weakness. Unless you\u0026rsquo;re so big that your reputation precedes you, a marginal domain suggests you\u0026rsquo;re a marginal company. Whereas (as Stripe shows) having x.com signals strength even if it has no relation to what you do.\n",
    "description": "",
    "tags": ["naming","startup","domain","company","branding"],
    "categories": [],
    "content": "→ 中文版本\nChange Your Name August 2015\nIf you have a US startup called X and you don\u0026rsquo;t have x.com, you should probably change your name.\nThe reason is not just that people can\u0026rsquo;t find you. For companies with mobile apps, especially, having the right domain name is not as critical as it used to be for getting users. The problem with not having the .com of your name is that it signals weakness. Unless you\u0026rsquo;re so big that your reputation precedes you, a marginal domain suggests you\u0026rsquo;re a marginal company. Whereas (as Stripe shows) having x.com signals strength even if it has no …"
  },{
    "title": "Cities and Ambition",
    "url": "/paul_graham/essays_en/cities/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nCities and Ambition May 2008\nGreat cities attract ambitious people. You can sense it when you walk around one. In a hundred subtle ways, the city sends you a message: you could do more; you should try harder.\nThe surprising thing is how different these messages can be. New York tells you, above all: you should make more money. There are other messages too, of course. You should be hipper. You should be better looking. But the clearest message is that you should be richer.\n",
    "description": "",
    "tags": ["cities","ambition","environment","success","location","culture","analysis"],
    "categories": [],
    "content": "→ 中文版本\nCities and Ambition May 2008\nGreat cities attract ambitious people. You can sense it when you walk around one. In a hundred subtle ways, the city sends you a message: you could do more; you should try harder.\nThe surprising thing is how different these messages can be. New York tells you, above all: you should make more money. There are other messages too, of course. You should be hipper. You should be better looking. But the clearest message is that you should be richer.\nWhat I like about Boston (or rather Cambridge) is that the message there is: you should be smarter. You really …"
  },{
    "title": "Conformism",
    "url": "/paul_graham/essays_en/conformism/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nConformism The Four Quadrants of Conformism July 2020\nOne of the most revealing ways to classify people is by the degree and aggressiveness of their conformism. Imagine a Cartesian coordinate system whose horizontal axis runs from conventional-minded on the left to independent-minded on the right, and whose vertical axis runs from passive at the bottom to aggressive at the top. The resulting four quadrants define four types of people. Starting in the upper left and going counter-clockwise: aggressively conventional-minded, passively conventional-minded, passively independent-minded, and aggressively independent-minded.\n",
    "description": "",
    "tags": ["conformism","independence","personality","society","behavior","thinking","analysis"],
    "categories": [],
    "content": "→ 中文版本\nConformism The Four Quadrants of Conformism July 2020\nOne of the most revealing ways to classify people is by the degree and aggressiveness of their conformism. Imagine a Cartesian coordinate system whose horizontal axis runs from conventional-minded on the left to independent-minded on the right, and whose vertical axis runs from passive at the bottom to aggressive at the top. The resulting four quadrants define four types of people. Starting in the upper left and going counter-clockwise: aggressively conventional-minded, passively conventional-minded, passively independent-minded, and …"
  },{
    "title": "Control",
    "url": "/paul_graham/essays_en/control/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nControl Founder Control December 2010\nSomeone we funded is talking to VCs now, and asked me how common it was for a startup\u0026rsquo;s founders to retain control of the board after a series A round. He said VCs told him this almost never happened.\nTen years ago that was true. In the past, founders rarely kept control of the board through a series A. The traditional series A board consisted of two founders, two VCs, and one independent member. More recently the recipe is often one founder, one VC, and one independent. In either case the founders lose their majority.\n",
    "description": "",
    "tags": ["control","founders","VC","board","funding","Y-Combinator","governance"],
    "categories": [],
    "content": "→ 中文版本\nControl Founder Control December 2010\nSomeone we funded is talking to VCs now, and asked me how common it was for a startup\u0026rsquo;s founders to retain control of the board after a series A round. He said VCs told him this almost never happened.\nTen years ago that was true. In the past, founders rarely kept control of the board through a series A. The traditional series A board consisted of two founders, two VCs, and one independent member. More recently the recipe is often one founder, one VC, and one independent. In either case the founders lose their majority.\nBut not always. Mark …"
  },{
    "title": "Copy What You Like",
    "url": "/paul_graham/essays_en/copy/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nCopy What You Like July 2006\nWhen I was in high school I spent a lot of time imitating bad writers. What we studied in English classes was mostly fiction, so I assumed that was the highest form of writing. Mistake number one.\nThe stories that seemed to be most admired were ones in which people suffered in complicated ways. Anything funny or gripping was ipso facto suspect, unless it was old enough to be hard to understand, like Shakespeare or Chaucer. Mistake number two.\n",
    "description": "",
    "tags": ["copy","imitation","learning","writing","art","philosophy","taste","originality"],
    "categories": [],
    "content": "→ 中文版本\nCopy What You Like July 2006\nWhen I was in high school I spent a lot of time imitating bad writers. What we studied in English classes was mostly fiction, so I assumed that was the highest form of writing. Mistake number one.\nThe stories that seemed to be most admired were ones in which people suffered in complicated ways. Anything funny or gripping was ipso facto suspect, unless it was old enough to be hard to understand, like Shakespeare or Chaucer. Mistake number two.\nThe ideal medium seemed the short story, which I\u0026rsquo;ve since learned had quite a brief life, roughly coincident …"
  },{
    "title": "Coronavirus and Credibility",
    "url": "/paul_graham/essays_en/cred/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ Chinese Version\nCoronavirus and Credibility April 2020\nI recently saw a video of TV journalists and politicians confidently saying that the coronavirus would be no worse than the flu. What struck me about it was not just how mistaken they seemed, but how daring. How could they feel safe saying such things?\nThe answer, I realized, is that they didn\u0026rsquo;t think they could get caught. They didn\u0026rsquo;t realize there was any danger in making false predictions. These people constantly make false predictions, and get away with it, because the things they make predictions about either have mushy enough outcomes that they can bluster their way out of trouble, or happen so far in the future that few remember what they said.\n",
    "description": "",
    "tags": ["credibility","coronavirus","predictions","media","politics","expertise","trust","analysis"],
    "categories": [],
    "content": "→ Chinese Version\nCoronavirus and Credibility April 2020\nI recently saw a video of TV journalists and politicians confidently saying that the coronavirus would be no worse than the flu. What struck me about it was not just how mistaken they seemed, but how daring. How could they feel safe saying such things?\nThe answer, I realized, is that they didn\u0026rsquo;t think they could get caught. They didn\u0026rsquo;t realize there was any danger in making false predictions. These people constantly make false predictions, and get away with it, because the things they make predictions about either have mushy …"
  },{
    "title": "Corpdev",
    "url": "/paul_graham/essays_en/corpdev/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ Chinese Version\nCorpdev Don\u0026rsquo;t Talk to Corp Dev January 2015\nCorporate Development, aka corp dev, is the group within companies that buys other companies. If you\u0026rsquo;re talking to someone from corp dev, that\u0026rsquo;s why, whether you realize it yet or not.\nIt\u0026rsquo;s usually a mistake to talk to corp dev unless (a) you want to sell your company right now and (b) you\u0026rsquo;re sufficiently likely to get an offer at an acceptable price. In practice that means startups should only talk to corp dev when they\u0026rsquo;re either doing really well or really badly. If you\u0026rsquo;re doing really badly, meaning the company is about to die, you may as well talk to them, because you have nothing to lose. And if you\u0026rsquo;re doing really well, you can safely talk to them, because you both know the price will have to be high, and if they show the slightest sign of wasting your time, you\u0026rsquo;ll be confident enough to tell them to get lost.\n",
    "description": "",
    "tags": ["corpdev","M\u0026A","acquisition","startups","corporate","strategy","negotiation","warning"],
    "categories": [],
    "content": "→ Chinese Version\nCorpdev Don\u0026rsquo;t Talk to Corp Dev January 2015\nCorporate Development, aka corp dev, is the group within companies that buys other companies. If you\u0026rsquo;re talking to someone from corp dev, that\u0026rsquo;s why, whether you realize it yet or not.\nIt\u0026rsquo;s usually a mistake to talk to corp dev unless (a) you want to sell your company right now and (b) you\u0026rsquo;re sufficiently likely to get an offer at an acceptable price. In practice that means startups should only talk to corp dev when they\u0026rsquo;re either doing really well or really badly. If you\u0026rsquo;re doing really …"
  },{
    "title": "Could VC be a Casualty of the Recession?",
    "url": "/paul_graham/essays_en/divergence/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ Chinese Version\nCould VC be a Casualty of the Recession? December 2008\n(I originally wrote this at the request of a company producing a report about entrepreneurship. Unfortunately after reading it they decided it was too controversial to include.)\nVC funding will probably dry up somewhat during the present recession, like it usually does in bad times. But this time the result may be different. This time the number of new startups may not decrease. And that could be dangerous for VCs.\n",
    "description": "",
    "tags": ["startups","vc","venture capital","funding","entrepreneurship","economics","recession","y combinator"],
    "categories": [],
    "content": "→ Chinese Version\nCould VC be a Casualty of the Recession? December 2008\n(I originally wrote this at the request of a company producing a report about entrepreneurship. Unfortunately after reading it they decided it was too controversial to include.)\nVC funding will probably dry up somewhat during the present recession, like it usually does in bad times. But this time the result may be different. This time the number of new startups may not decrease. And that could be dangerous for VCs.\nWhen VC funding dried up after the Internet Bubble, startups dried up too. There were not a lot of new …"
  },{
    "title": "Crazy New Ideas",
    "url": "/paul_graham/essays_en/newideas/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nCrazy New Ideas May 2021\nThere\u0026rsquo;s one kind of opinion I\u0026rsquo;d be very afraid to express publicly. If someone I knew to be both a domain expert and a reasonable person proposed an idea that sounded preposterous, I\u0026rsquo;d be very reluctant to say \u0026ldquo;That will never work.\u0026rdquo;\nAnyone who has studied the history of ideas, and especially the history of science, knows that\u0026rsquo;s how big things start. Someone proposes an idea that sounds crazy, most people dismiss it, then it gradually takes over the world.\n",
    "description": "",
    "tags": ["ideas","innovation","paradigms","creativity","thinking","experts"],
    "categories": [],
    "content": "→ 中文版本\nCrazy New Ideas May 2021\nThere\u0026rsquo;s one kind of opinion I\u0026rsquo;d be very afraid to express publicly. If someone I knew to be both a domain expert and a reasonable person proposed an idea that sounded preposterous, I\u0026rsquo;d be very reluctant to say \u0026ldquo;That will never work.\u0026rdquo;\nAnyone who has studied the history of ideas, and especially the history of science, knows that\u0026rsquo;s how big things start. Someone proposes an idea that sounds crazy, most people dismiss it, then it gradually takes over the world.\nMost implausible-sounding ideas are in fact bad and could be safely …"
  },{
    "title": "Default Alive or Default Dead?",
    "url": "/paul_graham/essays_en/aord/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nDefault Alive or Default Dead? October 2015\nWhen I talk to a startup that\u0026rsquo;s been operating for more than 8 or 9 months, the first thing I want to know is almost always the same. Assuming their expenses remain constant and their revenue growth is what it has been over the last several months, do they make it to profitability on the money they have left? Or to put it more dramatically, by default do they live or die?\n",
    "description": "",
    "tags": ["startup","survival","growth","hiring","fundraising"],
    "categories": [],
    "content": "→ 中文版本\nDefault Alive or Default Dead? October 2015\nWhen I talk to a startup that\u0026rsquo;s been operating for more than 8 or 9 months, the first thing I want to know is almost always the same. Assuming their expenses remain constant and their revenue growth is what it has been over the last several months, do they make it to profitability on the money they have left? Or to put it more dramatically, by default do they live or die?\nThe startling thing is how often the founders themselves don\u0026rsquo;t know. Half the founders I talk to don\u0026rsquo;t know whether they\u0026rsquo;re default alive or default …"
  },{
    "title": "Design and Research",
    "url": "/paul_graham/essays_en/desres/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ Chinese Version\nDesign and Research January 2003\n(This article is derived from a keynote talk at the fall 2002 meeting of NEPLS.)\nVisitors to this country are often surprised to find that Americans like to begin a conversation by asking \u0026ldquo;what do you do?\u0026rdquo; I\u0026rsquo;ve never liked this question. I\u0026rsquo;ve rarely had a neat answer to it. But I think I have finally solved the problem. Now, when someone asks me what I do, I look them straight in the eye and say \u0026ldquo;I\u0026rsquo;m designing a new dialect of Lisp.\u0026rdquo; I recommend this answer to anyone who doesn\u0026rsquo;t like being asked what they do. The conversation will turn immediately to other topics.\n",
    "description": "",
    "tags": ["design","research","programming languages","lisp","user experience","software development","creativity"],
    "categories": [],
    "content": "→ Chinese Version\nDesign and Research January 2003\n(This article is derived from a keynote talk at the fall 2002 meeting of NEPLS.)\nVisitors to this country are often surprised to find that Americans like to begin a conversation by asking \u0026ldquo;what do you do?\u0026rdquo; I\u0026rsquo;ve never liked this question. I\u0026rsquo;ve rarely had a neat answer to it. But I think I have finally solved the problem. Now, when someone asks me what I do, I look them straight in the eye and say \u0026ldquo;I\u0026rsquo;m designing a new dialect of Lisp.\u0026rdquo; I recommend this answer to anyone who doesn\u0026rsquo;t like being asked …"
  },{
    "title": "Distraction",
    "url": "/paul_graham/essays_en/distraction/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ Chinese Version\nDistraction May 2008\nDisconnecting Distraction Note: The strategy described at the end of this essay didn\u0026rsquo;t work. It would work for a while, and then I\u0026rsquo;d gradually find myself using the Internet on my work computer. I\u0026rsquo;m trying other strategies now, but I think this time I\u0026rsquo;ll wait till I\u0026rsquo;m sure they work before writing about them.\nProcrastination feeds on distractions. Most people find it uncomfortable just to sit and do nothing; you avoid work by doing something else.\n",
    "description": "",
    "tags": ["distraction","procrastination","internet","productivity","focus","technology","psychology","essay"],
    "categories": [],
    "content": "→ Chinese Version\nDistraction May 2008\nDisconnecting Distraction Note: The strategy described at the end of this essay didn\u0026rsquo;t work. It would work for a while, and then I\u0026rsquo;d gradually find myself using the Internet on my work computer. I\u0026rsquo;m trying other strategies now, but I think this time I\u0026rsquo;ll wait till I\u0026rsquo;m sure they work before writing about them.\nProcrastination feeds on distractions. Most people find it uncomfortable just to sit and do nothing; you avoid work by doing something else.\nSo one way to beat procrastination is to starve it of distractions. But …"
  },{
    "title": "Do Things that Don't Scale",
    "url": "/paul_graham/essays_en/ds/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ Chinese Version\nDo Things that Don\u0026rsquo;t Scale Do Things that Don\u0026rsquo;t Scale Want to start a startup? Get funded by Y Combinator.\nJuly 2013\nOne of the most common types of advice we give at Y Combinator is to do things that don\u0026rsquo;t scale. A lot of would-be founders believe that startups either take off or don\u0026rsquo;t. You build something, make it available, and if you\u0026rsquo;ve made a better mousetrap, people beat a path to your door as promised. Or they don\u0026rsquo;t, in which case the market must not exist. [1]\n",
    "description": "",
    "tags": ["startups","entrepreneurship","scaling","user acquisition","y combinator","growth","advice","strategy"],
    "categories": [],
    "content": "→ Chinese Version\nDo Things that Don\u0026rsquo;t Scale Do Things that Don\u0026rsquo;t Scale Want to start a startup? Get funded by Y Combinator.\nJuly 2013\nOne of the most common types of advice we give at Y Combinator is to do things that don\u0026rsquo;t scale. A lot of would-be founders believe that startups either take off or don\u0026rsquo;t. You build something, make it available, and if you\u0026rsquo;ve made a better mousetrap, people beat a path to your door as promised. Or they don\u0026rsquo;t, in which case the market must not exist. [1]\nActually startups take off because the founders make them take off. There …"
  },{
    "title": "Donate Unrestricted",
    "url": "/paul_graham/essays_en/donate/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ Chinese Version\nDonate Unrestricted March 2021\nThe secret curse of the nonprofit world is restricted donations. If you haven\u0026rsquo;t been involved with nonprofits, you may never have heard this phrase before. But if you have been, it probably made you wince.\nRestricted donations mean donations where the donor limits what can be done with the money. This is common with big donations, perhaps the default. And yet it\u0026rsquo;s usually a bad idea. Usually the way the donor wants the money spent is not the way the nonprofit would have chosen. Otherwise there would have been no need to restrict the donation. But who has a better understanding of where money needs to be spent, the nonprofit or the donor?\n",
    "description": "",
    "tags": ["donation","philanthropy","nonprofits","charity","giving","restricted donations","unrestricted donations"],
    "categories": [],
    "content": "→ Chinese Version\nDonate Unrestricted March 2021\nThe secret curse of the nonprofit world is restricted donations. If you haven\u0026rsquo;t been involved with nonprofits, you may never have heard this phrase before. But if you have been, it probably made you wince.\nRestricted donations mean donations where the donor limits what can be done with the money. This is common with big donations, perhaps the default. And yet it\u0026rsquo;s usually a bad idea. Usually the way the donor wants the money spent is not the way the nonprofit would have chosen. Otherwise there would have been no need to restrict the …"
  },{
    "title": "Early",
    "url": "/paul_graham/essays_en/early/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nEarly October 2020\nOne of the biggest things holding people back from doing great work is the fear of making something lame. And this fear is not an irrational one. Many great projects go through a stage early on where they don\u0026rsquo;t seem very impressive, even to their creators. You have to push through this stage to reach the great work that lies beyond. But many people don\u0026rsquo;t. Most people don\u0026rsquo;t even reach the stage of making something they\u0026rsquo;re embarrassed by, let alone continue past it. They\u0026rsquo;re too frightened even to start.\n",
    "description": "",
    "tags": ["early work","creativity","judgment","skepticism","silicon valley"],
    "categories": [],
    "content": "→ 中文版本\nEarly October 2020\nOne of the biggest things holding people back from doing great work is the fear of making something lame. And this fear is not an irrational one. Many great projects go through a stage early on where they don\u0026rsquo;t seem very impressive, even to their creators. You have to push through this stage to reach the great work that lies beyond. But many people don\u0026rsquo;t. Most people don\u0026rsquo;t even reach the stage of making something they\u0026rsquo;re embarrassed by, let alone continue past it. They\u0026rsquo;re too frightened even to start.\nImagine if we could turn off the fear …"
  },{
    "title": "Earnest",
    "url": "/paul_graham/essays_en/earnest/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ Chinese Version\nEarnest December 2020\nJessica and I have certain words that have special significance when we\u0026rsquo;re talking about startups. The highest compliment we can pay to founders is to describe them as \u0026ldquo;earnest.\u0026rdquo; This is not by itself a guarantee of success. You could be earnest but incapable. But when founders are both formidable (another of our words) and earnest, they\u0026rsquo;re as close to unstoppable as you get.\nEarnestness sounds like a boring, even Victorian virtue. It seems a bit of an anachronism that people in Silicon Valley would care about it. Why does this matter so much?\n",
    "description": "",
    "tags": ["earnestness","motivation","founders","startups","silicon valley","nerds","character","success"],
    "categories": [],
    "content": "→ Chinese Version\nEarnest December 2020\nJessica and I have certain words that have special significance when we\u0026rsquo;re talking about startups. The highest compliment we can pay to founders is to describe them as \u0026ldquo;earnest.\u0026rdquo; This is not by itself a guarantee of success. You could be earnest but incapable. But when founders are both formidable (another of our words) and earnest, they\u0026rsquo;re as close to unstoppable as you get.\nEarnestness sounds like a boring, even Victorian virtue. It seems a bit of an anachronism that people in Silicon Valley would care about it. Why does this …"
  },{
    "title": "Economic Inequality",
    "url": "/paul_graham/essays_en/ineq/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ Chinese Version\nEconomic Inequality January 2016\nSince the 1970s, economic inequality in the US has increased dramatically. And in particular, the rich have gotten a lot richer. Nearly everyone who writes about the topic says that economic inequality should be decreased.\nI\u0026rsquo;m interested in this question because I was one of the founders of a company called Y Combinator that helps people start startups. Almost by definition, if a startup succeeds, its founders become rich. Which means by helping startup founders I\u0026rsquo;ve been helping to increase economic inequality. If economic inequality should be decreased, I shouldn\u0026rsquo;t be helping founders. No one should be.\n",
    "description": "",
    "tags": ["economic inequality","wealth","poverty","startups","economics","social mobility","technology"],
    "categories": [],
    "content": "→ Chinese Version\nEconomic Inequality January 2016\nSince the 1970s, economic inequality in the US has increased dramatically. And in particular, the rich have gotten a lot richer. Nearly everyone who writes about the topic says that economic inequality should be decreased.\nI\u0026rsquo;m interested in this question because I was one of the founders of a company called Y Combinator that helps people start startups. Almost by definition, if a startup succeeds, its founders become rich. Which means by helping startup founders I\u0026rsquo;ve been helping to increase economic inequality. If economic …"
  },{
    "title": "Fashionable Problems",
    "url": "/paul_graham/essays_en/fp/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nFashionable Problems December 2019\nI\u0026rsquo;ve seen the same pattern in many different fields: even though lots of people have worked hard in the field, only a small fraction of the space of possibilities has been explored, because they\u0026rsquo;ve all worked on similar things.\nEven the smartest, most imaginative people are surprisingly conservative when deciding what to work on. People who would never dream of being fashionable in any other way get sucked into working on fashionable problems.\n",
    "description": "",
    "tags": ["fashionable","problems","innovation","thinking","work"],
    "categories": [],
    "content": "→ 中文版本\nFashionable Problems December 2019\nI\u0026rsquo;ve seen the same pattern in many different fields: even though lots of people have worked hard in the field, only a small fraction of the space of possibilities has been explored, because they\u0026rsquo;ve all worked on similar things.\nEven the smartest, most imaginative people are surprisingly conservative when deciding what to work on. People who would never dream of being fashionable in any other way get sucked into working on fashionable problems.\nIf you want to try working on unfashionable problems, one of the best places to look is in fields …"
  },{
    "title": "Fierce Nerds",
    "url": "/paul_graham/essays_en/fn/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nFierce Nerds May 2021\nMost people think of nerds as quiet, diffident people. In ordinary social situations they are — as quiet and diffident as the star quarterback would be if he found himself in the middle of a physics symposium. And for the same reason: they are fish out of water. But the apparent diffidence of nerds is an illusion due to the fact that when non-nerds observe them, it\u0026rsquo;s usually in ordinary social situations. In fact some nerds are quite fierce.\n",
    "description": "",
    "tags": ["nerds","success","personality","technology","competition"],
    "categories": [],
    "content": "→ 中文版本\nFierce Nerds May 2021\nMost people think of nerds as quiet, diffident people. In ordinary social situations they are — as quiet and diffident as the star quarterback would be if he found himself in the middle of a physics symposium. And for the same reason: they are fish out of water. But the apparent diffidence of nerds is an illusion due to the fact that when non-nerds observe them, it\u0026rsquo;s usually in ordinary social situations. In fact some nerds are quite fierce.\nThe fierce nerds are a small but interesting group. They are as a rule extremely competitive — more competitive, …"
  },{
    "title": "Filters that Fight Back",
    "url": "/paul_graham/essays_en/ffb/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ Chinese Version\nFilters that Fight Back August 2003\nWe may be able to improve the accuracy of Bayesian spam filters by having them follow links to see what\u0026rsquo;s waiting at the other end. Richard Jowsey of death2spam now does this in borderline cases, and reports that it works well.\nWhy only do it in borderline cases? And why only do it once?\nAs I mentioned in Will Filters Kill Spam?, following all the urls in a spam would have an amusing side-effect. If popular email clients did this in order to filter spam, the spammer\u0026rsquo;s servers would take a serious pounding. The more I think about this, the better an idea it seems. This isn\u0026rsquo;t just amusing; it would be hard to imagine a more perfectly targeted counterattack on spammers.\n",
    "description": "",
    "tags": ["spam filters","email","technology","auto-retrieval","spammers","counterattack","bayesian","security"],
    "categories": [],
    "content": "→ Chinese Version\nFilters that Fight Back August 2003\nWe may be able to improve the accuracy of Bayesian spam filters by having them follow links to see what\u0026rsquo;s waiting at the other end. Richard Jowsey of death2spam now does this in borderline cases, and reports that it works well.\nWhy only do it in borderline cases? And why only do it once?\nAs I mentioned in Will Filters Kill Spam?, following all the urls in a spam would have an amusing side-effect. If popular email clients did this in order to filter spam, the spammer\u0026rsquo;s servers would take a serious pounding. The more I think about …"
  },{
    "title": "Five Founders",
    "url": "/paul_graham/essays_en/5founders/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nFive Founders Five Founders April 2009\nInc recently asked me who I thought were the 5 most interesting startup founders of the last 30 years. How do you decide who\u0026rsquo;s the most interesting? The best test seemed to be influence: who are the 5 who\u0026rsquo;ve influenced me most? Who do I use as examples when I\u0026rsquo;m talking to companies we fund? Who do I find myself quoting?\nSteve Jobs I\u0026rsquo;d guess Steve is the most influential founder not just for me but for most people you could ask. A lot of startup culture is Apple culture. He was the original young founder. And while the concept of \u0026ldquo;insanely great\u0026rdquo; already existed in the arts, it was a novel idea to introduce into a company in the 1980s.\n",
    "description": "",
    "tags": ["startup","founders","steve jobs","google","paul buchheit","sam altman"],
    "categories": [],
    "content": "→ 中文版本\nFive Founders Five Founders April 2009\nInc recently asked me who I thought were the 5 most interesting startup founders of the last 30 years. How do you decide who\u0026rsquo;s the most interesting? The best test seemed to be influence: who are the 5 who\u0026rsquo;ve influenced me most? Who do I use as examples when I\u0026rsquo;m talking to companies we fund? Who do I find myself quoting?\nSteve Jobs I\u0026rsquo;d guess Steve is the most influential founder not just for me but for most people you could ask. A lot of startup culture is Apple culture. He was the original young founder. And while the …"
  },{
    "title": "Five Questions about Language Design",
    "url": "/paul_graham/essays_en/langdes/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nFive Questions about Language Design May 2001\n(These are some notes I made for a panel discussion on programming language design at MIT on May 10, 2001.)\n1. Programming Languages Are for People. Programming languages are how people talk to computers. The computer would be just as happy speaking any language that was unambiguous. The reason we have high level languages is because people can\u0026rsquo;t deal with machine language. The point of programming languages is to prevent our poor frail human brains from being overwhelmed by a mass of detail.\n",
    "description": "",
    "tags": ["programming_languages","language_design","hacking","lisp","software_development","computer_science","technology"],
    "categories": [],
    "content": "→ 中文版本\nFive Questions about Language Design May 2001\n(These are some notes I made for a panel discussion on programming language design at MIT on May 10, 2001.)\n1. Programming Languages Are for People. Programming languages are how people talk to computers. The computer would be just as happy speaking any language that was unambiguous. The reason we have high level languages is because people can\u0026rsquo;t deal with machine language. The point of programming languages is to prevent our poor frail human brains from being overwhelmed by a mass of detail.\nArchitects know that some kinds of design …"
  },{
    "title": "Founder Mode",
    "url": "/paul_graham/essays_en/foundermode/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nFounder Mode September 2024\nAt a YC event last week Brian Chesky gave a talk that everyone who was there will remember. Most founders I talked to afterward said it was the best they\u0026rsquo;d ever heard. Ron Conway, for the first time in his life, forgot to take notes. I\u0026rsquo;m not going to try to reproduce it here. Instead I want to talk about a question it raised.\nThe theme of Brian\u0026rsquo;s talk was that the conventional wisdom about how to run larger companies is mistaken. As Airbnb grew, well-meaning people advised him that he had to run the company in a certain way for it to scale. Their advice could be optimistically summarized as \u0026ldquo;hire good people and give them room to do their jobs.\u0026rdquo; He followed this advice and the results were disastrous. So he had to figure out a better way on his own, which he did partly by studying how Steve Jobs ran Apple. So far it seems to be working. Airbnb\u0026rsquo;s free cash flow margin is now among the best in Silicon Valley.\n",
    "description": "",
    "tags": ["founders","management","startups","leadership","YC"],
    "categories": [],
    "content": "→ 中文版本\nFounder Mode September 2024\nAt a YC event last week Brian Chesky gave a talk that everyone who was there will remember. Most founders I talked to afterward said it was the best they\u0026rsquo;d ever heard. Ron Conway, for the first time in his life, forgot to take notes. I\u0026rsquo;m not going to try to reproduce it here. Instead I want to talk about a question it raised.\nThe theme of Brian\u0026rsquo;s talk was that the conventional wisdom about how to run larger companies is mistaken. As Airbnb grew, well-meaning people advised him that he had to run the company in a certain way for it to scale. …"
  },{
    "title": "Frighteningly Ambitious Startup Ideas",
    "url": "/paul_graham/essays_en/ambitious/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nFrighteningly Ambitious Startup Ideas March 2012\nWant to start a startup? Get funded by Y Combinator.\nOne of the more surprising things I\u0026rsquo;ve noticed while working on Y Combinator is how frightening the most ambitious startup ideas are. In this essay I\u0026rsquo;m going to demonstrate this phenomenon by describing some. Any one of them could make you a billionaire. That might sound like an attractive prospect, and yet when I describe these ideas you may notice you find yourself shrinking away from them.\n",
    "description": "",
    "tags": ["startup","ambition","ideas","yc","vision"],
    "categories": [],
    "content": "→ 中文版本\nFrighteningly Ambitious Startup Ideas March 2012\nWant to start a startup? Get funded by Y Combinator.\nOne of the more surprising things I\u0026rsquo;ve noticed while working on Y Combinator is how frightening the most ambitious startup ideas are. In this essay I\u0026rsquo;m going to demonstrate this phenomenon by describing some. Any one of them could make you a billionaire. That might sound like an attractive prospect, and yet when I describe these ideas you may notice you find yourself shrinking away from them.\nDon\u0026rsquo;t worry, it\u0026rsquo;s not a sign of weakness. Arguably it\u0026rsquo;s a sign of …"
  },{
    "title": "General and Surprising",
    "url": "/paul_graham/essays_en/sun/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nGeneral and Surprising September 2017\nThe most valuable insights are both general and surprising. F = ma for example. But general and surprising is a hard combination to achieve. That territory tends to be picked clean, precisely because those insights are so valuable.\nOrdinarily, the best that people can do is one without the other: either surprising without being general (e.g. gossip), or general without being surprising (e.g. platitudes).\n",
    "description": "",
    "tags": ["ideas","insights","creativity","novelty","writing","thinking"],
    "categories": [],
    "content": "→ 中文版本\nGeneral and Surprising September 2017\nThe most valuable insights are both general and surprising. F = ma for example. But general and surprising is a hard combination to achieve. That territory tends to be picked clean, precisely because those insights are so valuable.\nOrdinarily, the best that people can do is one without the other: either surprising without being general (e.g. gossip), or general without being surprising (e.g. platitudes).\nWhere things get interesting is the moderately valuable insights. You get those from small additions of whichever quality was missing. The more …"
  },{
    "title": "Good and Bad Procrastination",
    "url": "/paul_graham/essays_en/procrastination/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nGood and Bad Procrastination December 2005\nThe most impressive people I know are all terrible procrastinators. So could it be that procrastination isn\u0026rsquo;t always bad?\nMost people who write about procrastination write about how to cure it. But this is, strictly speaking, impossible. There are an infinite number of things you could be doing. No matter what you work on, you\u0026rsquo;re not working on everything else. So the question is not how to avoid procrastination, but how to procrastinate well.\n",
    "description": "",
    "tags": ["procrastination","productivity","work","time_management"],
    "categories": [],
    "content": "→ 中文版本\nGood and Bad Procrastination December 2005\nThe most impressive people I know are all terrible procrastinators. So could it be that procrastination isn\u0026rsquo;t always bad?\nMost people who write about procrastination write about how to cure it. But this is, strictly speaking, impossible. There are an infinite number of things you could be doing. No matter what you work on, you\u0026rsquo;re not working on everything else. So the question is not how to avoid procrastination, but how to procrastinate well.\nThere are three variants of procrastination, depending on what you do instead of working …"
  },{
    "title": "Good Writing",
    "url": "/paul_graham/essays_en/goodwriting/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nGood Writing May 2025\nThere are two senses in which writing can be good: it can sound good, and the ideas can be right. It can have nice, flowing sentences, and it can draw correct conclusions about important things. It might seem as if these two kinds of good would be unrelated, like the speed of a car and the color it\u0026rsquo;s painted. And yet I don\u0026rsquo;t think they are. I think writing that sounds good is more likely to be right.\n",
    "description": "",
    "tags": ["writing","style","ideas","rhythm","clarity"],
    "categories": [],
    "content": "→ 中文版本\nGood Writing May 2025\nThere are two senses in which writing can be good: it can sound good, and the ideas can be right. It can have nice, flowing sentences, and it can draw correct conclusions about important things. It might seem as if these two kinds of good would be unrelated, like the speed of a car and the color it\u0026rsquo;s painted. And yet I don\u0026rsquo;t think they are. I think writing that sounds good is more likely to be right.\nSo here we have the most exciting kind of idea: one that seems both preposterous and true. Let\u0026rsquo;s examine it. How can this possibly be true?\nI know …"
  },{
    "title": "Great Hackers",
    "url": "/paul_graham/essays_en/gh/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nGreat Hackers July 2004\n(This essay is derived from a talk at Oscon 2004.)\nA few months ago I finished a new book, and in reviews I keep noticing words like \u0026ldquo;provocative\u0026rsquo;\u0026rsquo; and \u0026ldquo;controversial.\u0026rsquo;\u0026rsquo; To say nothing of \u0026ldquo;idiotic.''\nI didn\u0026rsquo;t mean to make the book controversial. I was trying to make it efficient. I didn\u0026rsquo;t want to waste people\u0026rsquo;s time telling them things they already knew. It\u0026rsquo;s more efficient just to give them the diffs. But I suppose that\u0026rsquo;s bound to yield an alarming book.\n",
    "description": "",
    "tags": ["hackers","programming","productivity","software","technology","work"],
    "categories": [],
    "content": "→ 中文版本\nGreat Hackers July 2004\n(This essay is derived from a talk at Oscon 2004.)\nA few months ago I finished a new book, and in reviews I keep noticing words like \u0026ldquo;provocative\u0026rsquo;\u0026rsquo; and \u0026ldquo;controversial.\u0026rsquo;\u0026rsquo; To say nothing of \u0026ldquo;idiotic.''\nI didn\u0026rsquo;t mean to make the book controversial. I was trying to make it efficient. I didn\u0026rsquo;t want to waste people\u0026rsquo;s time telling them things they already knew. It\u0026rsquo;s more efficient just to give them the diffs. But I suppose that\u0026rsquo;s bound to yield an alarming book.\nEdisons There\u0026rsquo;s no controversy …"
  },{
    "title": "Hackers and Painters",
    "url": "/paul_graham/essays_en/hp/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nHackers and Painters May 2003\n(This essay is derived from a guest lecture at Harvard, which incorporated an earlier talk at Northeastern.)\nWhen I finished grad school in computer science I went to art school to study painting. A lot of people seemed surprised that someone interested in computers would also be interested in painting. They seemed to think that hacking and painting were very different kinds of work\u0026ndash; that hacking was cold, precise, and methodical, and that painting was the frenzied expression of some primal urge.\n",
    "description": "",
    "tags": ["hackers","painting","programming","software design","computer science","creativity","art"],
    "categories": [],
    "content": "→ 中文版本\nHackers and Painters May 2003\n(This essay is derived from a guest lecture at Harvard, which incorporated an earlier talk at Northeastern.)\nWhen I finished grad school in computer science I went to art school to study painting. A lot of people seemed surprised that someone interested in computers would also be interested in painting. They seemed to think that hacking and painting were very different kinds of work\u0026ndash; that hacking was cold, precise, and methodical, and that painting was the frenzied expression of some primal urge.\nBoth of these images are wrong. Hacking and painting …"
  },{
    "title": "Haters",
    "url": "/paul_graham/essays_en/fh/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nHaters January 2020\n(I originally intended this for startup founders, who are often surprised by the attention they get as their companies grow, but it applies equally to anyone who becomes famous.)\nIf you become sufficiently famous, you\u0026rsquo;ll acquire some fans who like you too much. These people are sometimes called \u0026ldquo;fanboys,\u0026rdquo; and though I dislike that term, I\u0026rsquo;m going to have to use it here. We need some word for them, because this is a distinct phenomenon from someone simply liking your work.\n",
    "description": "",
    "tags": ["fame","psychology","criticism","success","mindset"],
    "categories": [],
    "content": "→ 中文版本\nHaters January 2020\n(I originally intended this for startup founders, who are often surprised by the attention they get as their companies grow, but it applies equally to anyone who becomes famous.)\nIf you become sufficiently famous, you\u0026rsquo;ll acquire some fans who like you too much. These people are sometimes called \u0026ldquo;fanboys,\u0026rdquo; and though I dislike that term, I\u0026rsquo;m going to have to use it here. We need some word for them, because this is a distinct phenomenon from someone simply liking your work.\nA fanboy is obsessive and uncritical. Liking you becomes part of their …"
  },{
    "title": "Having Kids",
    "url": "/paul_graham/essays_en/kids/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nHaving Kids December 2019\nBefore I had kids, I was afraid of having kids. Up to that point I felt about kids the way the young Augustine felt about living virtuously. I\u0026rsquo;d have been sad to think I\u0026rsquo;d never have children. But did I want them now? No.\nIf I had kids, I\u0026rsquo;d become a parent, and parents, as I\u0026rsquo;d known since I was a kid, were uncool. They were dull and responsible and had no fun. And while it\u0026rsquo;s not surprising that kids would believe that, to be honest I hadn\u0026rsquo;t seen much as an adult to change my mind. Whenever I\u0026rsquo;d noticed parents with kids, the kids seemed to be terrors, and the parents pathetic harried creatures, even when they prevailed.\n",
    "description": "",
    "tags": ["parenting","children","family","personal_growth","happiness","work_life_balance","ambition"],
    "categories": [],
    "content": "→ 中文版本\nHaving Kids December 2019\nBefore I had kids, I was afraid of having kids. Up to that point I felt about kids the way the young Augustine felt about living virtuously. I\u0026rsquo;d have been sad to think I\u0026rsquo;d never have children. But did I want them now? No.\nIf I had kids, I\u0026rsquo;d become a parent, and parents, as I\u0026rsquo;d known since I was a kid, were uncool. They were dull and responsible and had no fun. And while it\u0026rsquo;s not surprising that kids would believe that, to be honest I hadn\u0026rsquo;t seen much as an adult to change my mind. Whenever I\u0026rsquo;d noticed parents with kids, …"
  },{
    "title": "Heresy",
    "url": "/paul_graham/essays_en/heresy/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nHeresy April 2022\nOne of the most surprising things I\u0026rsquo;ve witnessed in my lifetime is the rebirth of the concept of heresy.\nIn his excellent biography of Newton, Richard Westfall writes about the moment when he was elected a fellow of Trinity College: \u0026ldquo;Supported comfortably, Newton was free to devote himself wholly to whatever he chose. To remain on, he had only to avoid the three unforgivable sins: crime, heresy, and marriage.\u0026rdquo; [1] The first time I read that, in the 1990s, it sounded amusingly medieval. How strange, to have to avoid committing heresy. But when I reread it 20 years later it sounded like a description of contemporary employment.\n",
    "description": "",
    "tags": ["heresy","free speech","tolerance","censorship","social dynamics"],
    "categories": [],
    "content": "→ 中文版本\nHeresy April 2022\nOne of the most surprising things I\u0026rsquo;ve witnessed in my lifetime is the rebirth of the concept of heresy.\nIn his excellent biography of Newton, Richard Westfall writes about the moment when he was elected a fellow of Trinity College: \u0026ldquo;Supported comfortably, Newton was free to devote himself wholly to whatever he chose. To remain on, he had only to avoid the three unforgivable sins: crime, heresy, and marriage.\u0026rdquo; [1] The first time I read that, in the 1990s, it sounded amusingly medieval. How strange, to have to avoid committing heresy. But when I reread …"
  },{
    "title": "High Resolution Fundraising",
    "url": "/paul_graham/essays_en/hiresfund/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nHigh Resolution Fundraising September 2010\nThe reason startups have been using more convertible notes in angel rounds is that they make deals close faster. By making it easier for startups to give different prices to different investors, they help them break the sort of deadlock that happens when investors all wait to see who else is going to invest.\nBy far the biggest influence on investors\u0026rsquo; opinions of a startup is the opinion of other investors. There are very, very few who simply decide for themselves. Any startup founder can tell you the most common question they hear from investors is not about the founders or the product, but \u0026ldquo;who else is investing?\u0026rdquo;\n",
    "description": "",
    "tags": ["fundraising","angel investors","convertible notes","startups","venture capital","valuation"],
    "categories": [],
    "content": "→ 中文版本\nHigh Resolution Fundraising September 2010\nThe reason startups have been using more convertible notes in angel rounds is that they make deals close faster. By making it easier for startups to give different prices to different investors, they help them break the sort of deadlock that happens when investors all wait to see who else is going to invest.\nBy far the biggest influence on investors\u0026rsquo; opinions of a startup is the opinion of other investors. There are very, very few who simply decide for themselves. Any startup founder can tell you the most common question they hear from …"
  },{
    "title": "Hiring is Obsolete",
    "url": "/paul_graham/essays_en/hiring/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nHiring is Obsolete May 2005\n(This essay is derived from a talk at the Berkeley CSUA.)\nThe three big powers on the Internet now are Yahoo, Google, and Microsoft. Average age of their founders: 24. So it is pretty well established now that grad students can start successful companies. And if grad students can do it, why not undergrads?\nLike everything else in technology, the cost of starting a startup has decreased dramatically. Now it\u0026rsquo;s so low that it has disappeared into the noise. The main cost of starting a Web-based startup is food and rent. Which means it doesn\u0026rsquo;t cost much more to start a company than to be a total slacker. You can probably start a startup on ten thousand dollars of seed funding, if you\u0026rsquo;re prepared to live on ramen.\n",
    "description": "",
    "tags": ["startups","hiring","investors","founders","undergraduates","risk","product development"],
    "categories": [],
    "content": "→ 中文版本\nHiring is Obsolete May 2005\n(This essay is derived from a talk at the Berkeley CSUA.)\nThe three big powers on the Internet now are Yahoo, Google, and Microsoft. Average age of their founders: 24. So it is pretty well established now that grad students can start successful companies. And if grad students can do it, why not undergrads?\nLike everything else in technology, the cost of starting a startup has decreased dramatically. Now it\u0026rsquo;s so low that it has disappeared into the noise. The main cost of starting a Web-based startup is food and rent. Which means it doesn\u0026rsquo;t cost …"
  },{
    "title": "Holding a Program in One's Head",
    "url": "/paul_graham/essays_en/head/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nHolding a Program in One\u0026rsquo;s Head August 2007\nA good programmer working intensively on his own code can hold it in his mind the way a mathematician holds a problem he\u0026rsquo;s working on. Mathematicians don\u0026rsquo;t answer questions by working them out on paper the way schoolchildren are taught to. They do more in their heads: they try to understand a problem space well enough that they can walk around it the way you can walk around the memory of the house you grew up in. At its best programming is the same. You hold the whole program in your head, and you can manipulate it at will.\n",
    "description": "",
    "tags": ["programming","productivity","software development","coding","focus"],
    "categories": [],
    "content": "→ 中文版本\nHolding a Program in One\u0026rsquo;s Head August 2007\nA good programmer working intensively on his own code can hold it in his mind the way a mathematician holds a problem he\u0026rsquo;s working on. Mathematicians don\u0026rsquo;t answer questions by working them out on paper the way schoolchildren are taught to. They do more in their heads: they try to understand a problem space well enough that they can walk around it the way you can walk around the memory of the house you grew up in. At its best programming is the same. You hold the whole program in your head, and you can manipulate it at will. …"
  },{
    "title": "How Art Can Be Good",
    "url": "/paul_graham/essays_en/goodart/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nHow Art Can Be Good December 2006\nI grew up believing that taste is just a matter of personal preference. Each person has things they like, but no one\u0026rsquo;s preferences are any better than anyone else\u0026rsquo;s. There is no such thing as good taste.\nLike a lot of things I grew up believing, this turns out to be false, and I\u0026rsquo;m going to try to explain why.\nOne problem with saying there\u0026rsquo;s no such thing as good taste is that it also means there\u0026rsquo;s no such thing as good art. If there were good art, then people who liked it would have better taste than people who didn\u0026rsquo;t. So if you discard taste, you also have to discard the idea of art being good, and artists being good at making it.\n",
    "description": "",
    "tags": ["taste","art","subjectivity","audience","standards"],
    "categories": [],
    "content": "→ 中文版本\nHow Art Can Be Good December 2006\nI grew up believing that taste is just a matter of personal preference. Each person has things they like, but no one\u0026rsquo;s preferences are any better than anyone else\u0026rsquo;s. There is no such thing as good taste.\nLike a lot of things I grew up believing, this turns out to be false, and I\u0026rsquo;m going to try to explain why.\nOne problem with saying there\u0026rsquo;s no such thing as good taste is that it also means there\u0026rsquo;s no such thing as good art. If there were good art, then people who liked it would have better taste than people who …"
  },{
    "title": "How Not to Die",
    "url": "/paul_graham/essays_en/die/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ Chinese Version\nHow Not to Die August 2007\n(This is a talk I gave at the last Y Combinator dinner of the summer. Usually we don\u0026rsquo;t have a speaker at the last dinner; it\u0026rsquo;s more of a party. But it seemed worth spoiling the atmosphere if I could save some of the startups from preventable deaths. So at the last minute I cooked up this rather grim talk. I didn\u0026rsquo;t mean this as an essay; I wrote it down because I only had two hours before dinner and think fastest while writing.)\n",
    "description": "",
    "tags": ["startups","survival","persistence","entrepreneurship","motivation","failure","success","advice"],
    "categories": [],
    "content": "→ Chinese Version\nHow Not to Die August 2007\n(This is a talk I gave at the last Y Combinator dinner of the summer. Usually we don\u0026rsquo;t have a speaker at the last dinner; it\u0026rsquo;s more of a party. But it seemed worth spoiling the atmosphere if I could save some of the startups from preventable deaths. So at the last minute I cooked up this rather grim talk. I didn\u0026rsquo;t mean this as an essay; I wrote it down because I only had two hours before dinner and think fastest while writing.)\nA couple days ago I told a reporter that we expected about a third of the companies we funded to succeed. …"
  },{
    "title": "How People Get Rich Now",
    "url": "/paul_graham/essays_en/richnow/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nHow People Get Rich Now April 2021\nEvery year since 1982, Forbes magazine has published a list of the richest Americans. If we compare the 100 richest people in 1982 to the 100 richest in 2020, we notice some big differences.\nIn 1982 the most common source of wealth was inheritance. Of the 100 richest people, 60 inherited from an ancestor. There were 10 du Pont heirs alone. By 2020 the number of heirs had been cut in half, accounting for only 27 of the biggest 100 fortunes.\n",
    "description": "",
    "tags": ["wealth","entrepreneurship","technology","economics","inequality","startup"],
    "categories": [],
    "content": "→ 中文版本\nHow People Get Rich Now April 2021\nEvery year since 1982, Forbes magazine has published a list of the richest Americans. If we compare the 100 richest people in 1982 to the 100 richest in 2020, we notice some big differences.\nIn 1982 the most common source of wealth was inheritance. Of the 100 richest people, 60 inherited from an ancestor. There were 10 du Pont heirs alone. By 2020 the number of heirs had been cut in half, accounting for only 27 of the biggest 100 fortunes.\nWhy would the percentage of heirs decrease? Not because inheritance taxes increased. In fact, they decreased …"
  },{
    "title": "How to Be an Angel Investor",
    "url": "/paul_graham/essays_en/angelinvesting/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nHow to Be an Angel Investor March 2009\n(This essay is derived from a talk at AngelConf.)\nWhen we sold our startup in 1998 I thought one day I\u0026rsquo;d do some angel investing. Seven years later I still hadn\u0026rsquo;t started. I put it off because it seemed mysterious and complicated. It turns out to be easier than I expected, and also more interesting.\nThe part I thought was hard, the mechanics of investing, really isn\u0026rsquo;t. You give a startup money and they give you stock. You\u0026rsquo;ll probably get either preferred stock, which means stock with extra rights like getting your money back first in a sale, or convertible debt, which means (on paper) you\u0026rsquo;re lending the company money, and the debt converts to stock at the next sufficiently big funding round. [1]\n",
    "description": "",
    "tags": ["angel","investing","startup","funding","advice"],
    "categories": [],
    "content": "→ 中文版本\nHow to Be an Angel Investor March 2009\n(This essay is derived from a talk at AngelConf.)\nWhen we sold our startup in 1998 I thought one day I\u0026rsquo;d do some angel investing. Seven years later I still hadn\u0026rsquo;t started. I put it off because it seemed mysterious and complicated. It turns out to be easier than I expected, and also more interesting.\nThe part I thought was hard, the mechanics of investing, really isn\u0026rsquo;t. You give a startup money and they give you stock. You\u0026rsquo;ll probably get either preferred stock, which means stock with extra rights like getting your money back …"
  },{
    "title": "How to Be an Expert in a Changing World",
    "url": "/paul_graham/essays_en/ecw/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ Chinese Version\nHow to Be an Expert in a Changing World December 2014\nIf the world were static, we could have monotonically increasing confidence in our beliefs. The more (and more varied) experience a belief survived, the less likely it would be false. Most people implicitly believe something like this about their opinions. And they\u0026rsquo;re justified in doing so with opinions about things that don\u0026rsquo;t change much, like human nature. But you can\u0026rsquo;t trust your opinions in the same way about things that change, which could include practically everything else.\n",
    "description": "",
    "tags": ["expertise","change","beliefs","startups","investing","adaptation","ideas","future"],
    "categories": [],
    "content": "→ Chinese Version\nHow to Be an Expert in a Changing World December 2014\nIf the world were static, we could have monotonically increasing confidence in our beliefs. The more (and more varied) experience a belief survived, the less likely it would be false. Most people implicitly believe something like this about their opinions. And they\u0026rsquo;re justified in doing so with opinions about things that don\u0026rsquo;t change much, like human nature. But you can\u0026rsquo;t trust your opinions in the same way about things that change, which could include practically everything else.\nWhen experts are wrong, …"
  },{
    "title": "How to Be Silicon Valley",
    "url": "/paul_graham/essays_en/siliconvalley/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nHow to Be Silicon Valley May 2006\n(This essay is derived from a keynote at Xtech.)\nCould you reproduce Silicon Valley elsewhere, or is there something unique about it?\nIt wouldn\u0026rsquo;t be surprising if it were hard to reproduce in other countries, because you couldn\u0026rsquo;t reproduce it in most of the US either. What does it take to make a silicon valley even here?\nWhat it takes is the right people. If you could get the right ten thousand people to move from Silicon Valley to Buffalo, Buffalo would become Silicon Valley. [1]\n",
    "description": "",
    "tags": ["silicon_valley","technology_hubs","nerds","investors","universities","innovation"],
    "categories": [],
    "content": "→ 中文版本\nHow to Be Silicon Valley May 2006\n(This essay is derived from a keynote at Xtech.)\nCould you reproduce Silicon Valley elsewhere, or is there something unique about it?\nIt wouldn\u0026rsquo;t be surprising if it were hard to reproduce in other countries, because you couldn\u0026rsquo;t reproduce it in most of the US either. What does it take to make a silicon valley even here?\nWhat it takes is the right people. If you could get the right ten thousand people to move from Silicon Valley to Buffalo, Buffalo would become Silicon Valley. [1]\nThat\u0026rsquo;s a striking departure from the past. Up till a …"
  },{
    "title": "How to Convince Investors",
    "url": "/paul_graham/essays_en/convince/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nHow to Convince Investors August 2013\nWhen people hurt themselves lifting heavy things, it\u0026rsquo;s usually because they try to lift with their back. The right way to lift heavy things is to let your legs do the work. Inexperienced founders make the same mistake when trying to convince investors. They try to convince with their pitch. Most would be better off if they let their startup do the work—if they started by understanding why their startup is worth investing in, then simply explained this well to investors.\n",
    "description": "",
    "tags": ["investors","fundraising","pitch","startup","Y-Combinator","confidence","truth"],
    "categories": [],
    "content": "→ 中文版本\nHow to Convince Investors August 2013\nWhen people hurt themselves lifting heavy things, it\u0026rsquo;s usually because they try to lift with their back. The right way to lift heavy things is to let your legs do the work. Inexperienced founders make the same mistake when trying to convince investors. They try to convince with their pitch. Most would be better off if they let their startup do the work—if they started by understanding why their startup is worth investing in, then simply explained this well to investors.\nInvestors are looking for startups that will be very successful. But that …"
  },{
    "title": "How to Disagree",
    "url": "/paul_graham/essays_en/disagree/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ Chinese Version\nHow to Disagree March 2008\nThe web is turning writing into a conversation. Twenty years ago, writers wrote and readers read. The web lets readers respond, and increasingly they do—in comment threads, on forums, and in their own blog posts.\nMany who respond to something disagree with it. That\u0026rsquo;s to be expected. Agreeing tends to motivate people less than disagreeing. And when you agree there\u0026rsquo;s less to say. You could expand on something the author said, but he has probably already explored the most interesting implications. When you disagree you\u0026rsquo;re entering territory he may not have explored.\n",
    "description": "",
    "tags": ["disagreement","argument","communication","writing","critical thinking","logic","philosophy","debate"],
    "categories": [],
    "content": "→ Chinese Version\nHow to Disagree March 2008\nThe web is turning writing into a conversation. Twenty years ago, writers wrote and readers read. The web lets readers respond, and increasingly they do—in comment threads, on forums, and in their own blog posts.\nMany who respond to something disagree with it. That\u0026rsquo;s to be expected. Agreeing tends to motivate people less than disagreeing. And when you agree there\u0026rsquo;s less to say. You could expand on something the author said, but he has probably already explored the most interesting implications. When you disagree you\u0026rsquo;re entering …"
  },{
    "title": "How to Do Great Work",
    "url": "/paul_graham/essays_en/greatwork/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nHow to Do Great Work July 2023\nIf you collected lists of techniques for doing great work in a lot of different fields, what would the intersection look like? I decided to find out by making it.\nPartly my goal was to create a guide that could be used by someone working in any field. But I was also curious about the shape of the intersection. And one thing this exercise shows is that it does have a definite shape; it\u0026rsquo;s not just a point labelled \u0026ldquo;work hard.\u0026rdquo;\n",
    "description": "",
    "tags": ["great work","creativity","curiosity","originality","expertise"],
    "categories": [],
    "content": "→ 中文版本\nHow to Do Great Work July 2023\nIf you collected lists of techniques for doing great work in a lot of different fields, what would the intersection look like? I decided to find out by making it.\nPartly my goal was to create a guide that could be used by someone working in any field. But I was also curious about the shape of the intersection. And one thing this exercise shows is that it does have a definite shape; it\u0026rsquo;s not just a point labelled \u0026ldquo;work hard.\u0026rdquo;\nThe following recipe assumes you\u0026rsquo;re very ambitious.\nThe first step is to decide what to work on. The work you …"
  },{
    "title": "How to Do Philosophy",
    "url": "/paul_graham/essays_en/philosophy/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nHow to Do Philosophy September 2007\nIn high school I decided I was going to study philosophy in college. I had several motives, some more honorable than others. One of the less honorable was to shock people. College was regarded as job training where I grew up, so studying philosophy seemed an impressively impractical thing to do. Sort of like slashing holes in your clothes or putting a safety pin through your ear, which were other forms of impressive impracticality then just coming into fashion.\n",
    "description": "",
    "tags": ["philosophy","wisdom","thinking","language","logic","reasoning","education"],
    "categories": [],
    "content": "→ 中文版本\nHow to Do Philosophy September 2007\nIn high school I decided I was going to study philosophy in college. I had several motives, some more honorable than others. One of the less honorable was to shock people. College was regarded as job training where I grew up, so studying philosophy seemed an impressively impractical thing to do. Sort of like slashing holes in your clothes or putting a safety pin through your ear, which were other forms of impressive impracticality then just coming into fashion.\nBut I had some more honest motives as well. I thought studying philosophy would be a …"
  },{
    "title": "How to Do What You Love",
    "url": "/paul_graham/essays_en/love/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nHow to Do What You Love January 2006\nTo do something well you have to like it. That idea is not exactly novel. We\u0026rsquo;ve got it down to four words: \u0026ldquo;Do what you love.\u0026rdquo; But it\u0026rsquo;s not enough just to tell people that. Doing what you love is complicated.\nThe very idea is foreign to what most of us learn as kids. When I was a kid, it seemed as if work and fun were opposites by definition. Life had two states: some of the time adults were making you do things, and that was called work; the rest of the time you could do what you wanted, and that was called playing. Occasionally the things adults made you do were fun, just as, occasionally, playing wasn\u0026rsquo;t — for example, if you fell and hurt yourself. But except for these few anomalous cases, work was pretty much defined as not-fun.\n",
    "description": "",
    "tags": ["career","work","passion","love","fulfillment","prestige","money","happiness","success","life_advice"],
    "categories": [],
    "content": "→ 中文版本\nHow to Do What You Love January 2006\nTo do something well you have to like it. That idea is not exactly novel. We\u0026rsquo;ve got it down to four words: \u0026ldquo;Do what you love.\u0026rdquo; But it\u0026rsquo;s not enough just to tell people that. Doing what you love is complicated.\nThe very idea is foreign to what most of us learn as kids. When I was a kid, it seemed as if work and fun were opposites by definition. Life had two states: some of the time adults were making you do things, and that was called work; the rest of the time you could do what you wanted, and that was called playing. …"
  },{
    "title": "How to Fund a Startup",
    "url": "/paul_graham/essays_en/startupfunding/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ Chinese Version\nHow to Fund a Startup November 2005\nWant to start a startup? Get funded by Y Combinator.\nVenture funding works like gears. A typical startup goes through several rounds of funding, and at each round you want to take just enough money to reach the speed where you can shift into the next gear.\nFew startups get it quite right. Many are underfunded. A few are overfunded, which is like trying to start driving in third gear.\n",
    "description": "",
    "tags": ["venture capital","angel investors","funding","startups","entrepreneurship"],
    "categories": [],
    "content": "→ Chinese Version\nHow to Fund a Startup November 2005\nWant to start a startup? Get funded by Y Combinator.\nVenture funding works like gears. A typical startup goes through several rounds of funding, and at each round you want to take just enough money to reach the speed where you can shift into the next gear.\nFew startups get it quite right. Many are underfunded. A few are overfunded, which is like trying to start driving in third gear.\nI think it would help founders to understand funding better—not just the mechanics of it, but what investors are thinking. I was surprised recently when I …"
  },{
    "title": "How to Get New Ideas",
    "url": "/paul_graham/essays_en/getideas/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nHow to Get New Ideas January 2023\n(Someone fed my essays into GPT to make something that could answer questions based on them, then asked it where good ideas come from. The answer was ok, but not what I would have said. This is what I would have said.)\nThe way to get new ideas is to notice anomalies: what seems strange, or missing, or broken? You can see anomalies in everyday life (much of standup comedy is based on this), but the best place to look for them is at the frontiers of knowledge.\n",
    "description": "",
    "tags": ["ideas","creativity","innovation","knowledge","learning"],
    "categories": [],
    "content": "→ 中文版本\nHow to Get New Ideas January 2023\n(Someone fed my essays into GPT to make something that could answer questions based on them, then asked it where good ideas come from. The answer was ok, but not what I would have said. This is what I would have said.)\nThe way to get new ideas is to notice anomalies: what seems strange, or missing, or broken? You can see anomalies in everyday life (much of standup comedy is based on this), but the best place to look for them is at the frontiers of knowledge.\nKnowledge grows fractally. From a distance its edges look smooth, but when you learn enough to …"
  },{
    "title": "How to Get Startup Ideas",
    "url": "/paul_graham/essays_en/startupideas/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ Chinese Version\nHow to Get Startup Ideas November 2012\nThe way to get startup ideas is not to try to think of startup ideas. It\u0026rsquo;s to look for problems, preferably problems you have yourself.\nThe very best startup ideas tend to have three things in common: they\u0026rsquo;re something the founders themselves want, that they themselves can build, and that few others realize are worth doing. Microsoft, Apple, Yahoo, Google, and Facebook all began this way.\n",
    "description": "",
    "tags": ["startup ideas","innovation","entrepreneurship","problem solving","creativity"],
    "categories": [],
    "content": "→ Chinese Version\nHow to Get Startup Ideas November 2012\nThe way to get startup ideas is not to try to think of startup ideas. It\u0026rsquo;s to look for problems, preferably problems you have yourself.\nThe very best startup ideas tend to have three things in common: they\u0026rsquo;re something the founders themselves want, that they themselves can build, and that few others realize are worth doing. Microsoft, Apple, Yahoo, Google, and Facebook all began this way.\nProblems Why is it so important to work on a problem you have? Among other things, it ensures the problem really exists. It sounds obvious …"
  },{
    "title": "How to Lose Time and Money",
    "url": "/paul_graham/essays_en/selfindulgence/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nHow to Lose Time and Money July 2010\nWhen we sold our startup in 1998 I suddenly got a lot of money. I now had to think about something I hadn\u0026rsquo;t had to think about before: how not to lose it. I knew it was possible to go from rich to poor, just as it was possible to go from poor to rich. But while I\u0026rsquo;d spent a lot of the past several years studying the paths from poor to rich, I knew practically nothing about the paths from rich to poor. Now, in order to avoid them, I had to learn where they were.\n",
    "description": "",
    "tags": ["time_management","money","investing","self_indulgence","productivity"],
    "categories": [],
    "content": "→ 中文版本\nHow to Lose Time and Money July 2010\nWhen we sold our startup in 1998 I suddenly got a lot of money. I now had to think about something I hadn\u0026rsquo;t had to think about before: how not to lose it. I knew it was possible to go from rich to poor, just as it was possible to go from poor to rich. But while I\u0026rsquo;d spent a lot of the past several years studying the paths from poor to rich, I knew practically nothing about the paths from rich to poor. Now, in order to avoid them, I had to learn where they were.\nSo I started to pay attention to how fortunes are lost. If you\u0026rsquo;d asked me …"
  },{
    "title": "How to Make Pittsburgh a Startup Hub",
    "url": "/paul_graham/essays_en/pgh/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nHow to Make Pittsburgh a Startup Hub April 2016\n(This is a talk I gave at an event called Opt412 in Pittsburgh. Much of it will apply to other towns. But not all, because as I say in the talk, Pittsburgh has some important advantages over most would-be startup hubs.)\nWhat would it take to make Pittsburgh into a startup hub, like Silicon Valley? I understand Pittsburgh pretty well, because I grew up here, in Monroeville. And I understand Silicon Valley pretty well because that\u0026rsquo;s where I live now. Could you get that kind of startup ecosystem going here?\n",
    "description": "",
    "tags": ["startup hubs","pittsburgh","cities","entrepreneurship","innovation","universities","investors"],
    "categories": [],
    "content": "→ 中文版本\nHow to Make Pittsburgh a Startup Hub April 2016\n(This is a talk I gave at an event called Opt412 in Pittsburgh. Much of it will apply to other towns. But not all, because as I say in the talk, Pittsburgh has some important advantages over most would-be startup hubs.)\nWhat would it take to make Pittsburgh into a startup hub, like Silicon Valley? I understand Pittsburgh pretty well, because I grew up here, in Monroeville. And I understand Silicon Valley pretty well because that\u0026rsquo;s where I live now. Could you get that kind of startup ecosystem going here?\nWhen I agreed to speak here, …"
  },{
    "title": "How to Make Wealth",
    "url": "/paul_graham/essays_en/wealth/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nHow to Make Wealth May 2004\n(This essay was originally published in Hackers \u0026amp; Painters.)\nWant to start a startup? Get funded by Y Combinator.\nIf you wanted to get rich, how would you do it? I think your best bet would be to start or join a startup. That\u0026rsquo;s been a reliable way to get rich for hundreds of years. The word \u0026ldquo;startup\u0026rdquo; dates from the 1960s, but what happens in one is very similar to the venture-backed trading voyages of the Middle Ages.\n",
    "description": "",
    "tags": ["wealth creation","startups","technology","economics","business","innovation"],
    "categories": [],
    "content": "→ 中文版本\nHow to Make Wealth May 2004\n(This essay was originally published in Hackers \u0026amp; Painters.)\nWant to start a startup? Get funded by Y Combinator.\nIf you wanted to get rich, how would you do it? I think your best bet would be to start or join a startup. That\u0026rsquo;s been a reliable way to get rich for hundreds of years. The word \u0026ldquo;startup\u0026rdquo; dates from the 1960s, but what happens in one is very similar to the venture-backed trading voyages of the Middle Ages.\nStartups usually involve technology, so much so that the phrase \u0026ldquo;high-tech startup\u0026rdquo; is almost redundant. A …"
  },{
    "title": "How to Present to Investors",
    "url": "/paul_graham/essays_en/investors/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nHow to Present to Investors August 2006\nWant to start a startup? Get funded by Y Combinator.\nIn a few days it will be Demo Day, when the startups we funded this summer present to investors. Y Combinator funds startups twice a year, in January and June. Ten weeks later we invite all the investors we know to hear them present what they\u0026rsquo;ve built so far.\nTen weeks is not much time. The average startup probably doesn\u0026rsquo;t have much to show for itself after ten weeks. But the average startup fails. When you look at the ones that went on to do great things, you find a lot that began with someone pounding out a prototype in a week or two of nonstop work. Startups are a counterexample to the rule that haste makes waste.\n",
    "description": "",
    "tags": ["investors","presentation","startups","funding","pitch","advice"],
    "categories": [],
    "content": "→ 中文版本\nHow to Present to Investors August 2006\nWant to start a startup? Get funded by Y Combinator.\nIn a few days it will be Demo Day, when the startups we funded this summer present to investors. Y Combinator funds startups twice a year, in January and June. Ten weeks later we invite all the investors we know to hear them present what they\u0026rsquo;ve built so far.\nTen weeks is not much time. The average startup probably doesn\u0026rsquo;t have much to show for itself after ten weeks. But the average startup fails. When you look at the ones that went on to do great things, you find a lot that began …"
  },{
    "title": "How to Raise Money",
    "url": "/paul_graham/essays_en/fr/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nHow to Raise Money Want to start a startup? Get funded by Y Combinator.\nSeptember 2013\nMost startups that raise money do it more than once. A typical trajectory might be (1) to get started with a few tens of thousands from something like Y Combinator or individual angels, then (2) raise a few hundred thousand to a few million to build the company, and then (3) once the company is clearly succeeding, raise one or more later rounds to accelerate growth.\n",
    "description": "",
    "tags": ["fundraising","investors","startups","money","YC"],
    "categories": [],
    "content": "→ 中文版本\nHow to Raise Money Want to start a startup? Get funded by Y Combinator.\nSeptember 2013\nMost startups that raise money do it more than once. A typical trajectory might be (1) to get started with a few tens of thousands from something like Y Combinator or individual angels, then (2) raise a few hundred thousand to a few million to build the company, and then (3) once the company is clearly succeeding, raise one or more later rounds to accelerate growth.\nReality can be messier. Some companies raise money twice in phase 2. Others skip phase 1 and go straight to phase 2. And at Y Combinator …"
  },{
    "title": "How to Start a Startup",
    "url": "/paul_graham/essays_en/start/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nHow to Start a Startup Want to start a startup? Get funded by Y Combinator.\nMarch 2005\n(This essay is derived from a talk at the Harvard Computer Society.)\nYou need three things to create a successful startup: to start with good people, to make something customers actually want, and to spend as little money as possible. Most startups that fail do it because they fail at one of these. A startup that does all three will probably succeed.\n",
    "description": "",
    "tags": ["startups","entrepreneurship","business","funding","innovation","technology"],
    "categories": [],
    "content": "→ 中文版本\nHow to Start a Startup Want to start a startup? Get funded by Y Combinator.\nMarch 2005\n(This essay is derived from a talk at the Harvard Computer Society.)\nYou need three things to create a successful startup: to start with good people, to make something customers actually want, and to spend as little money as possible. Most startups that fail do it because they fail at one of these. A startup that does all three will probably succeed.\nAnd that\u0026rsquo;s kind of exciting, when you think about it, because all three are doable. Hard, but doable. And since a startup that succeeds ordinarily …"
  },{
    "title": "How to Start Google",
    "url": "/paul_graham/essays_en/google/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nHow to Start Google March 2024\n(This is a talk I gave to 14 and 15 year olds about what to do now if they might want to start a startup later. Lots of schools think they should tell students something about startups. This is what I think they should tell them.)\nMost of you probably think that when you\u0026rsquo;re released into the so-called real world you\u0026rsquo;ll eventually have to get some kind of job. That\u0026rsquo;s not true, and today I\u0026rsquo;m going to talk about a trick you can use to avoid ever having to get a job.\n",
    "description": "",
    "tags": ["startups","google","projects","cofounders","education"],
    "categories": [],
    "content": "→ 中文版本\nHow to Start Google March 2024\n(This is a talk I gave to 14 and 15 year olds about what to do now if they might want to start a startup later. Lots of schools think they should tell students something about startups. This is what I think they should tell them.)\nMost of you probably think that when you\u0026rsquo;re released into the so-called real world you\u0026rsquo;ll eventually have to get some kind of job. That\u0026rsquo;s not true, and today I\u0026rsquo;m going to talk about a trick you can use to avoid ever having to get a job.\nThe trick is to start your own company. So it\u0026rsquo;s not a trick for …"
  },{
    "title": "How to Think for Yourself",
    "url": "/paul_graham/essays_en/think/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nHow to Think for Yourself November 2020\nThere are some kinds of work that you can\u0026rsquo;t do well without thinking differently from your peers. To be a successful scientist, for example, it\u0026rsquo;s not enough just to be correct. Your ideas have to be both correct and novel. You can\u0026rsquo;t publish papers saying things other people already know. You need to say things no one else has realized yet.\nThe same is true for investors. It\u0026rsquo;s not enough for a public market investor to predict correctly how a company will do. If a lot of other people make the same prediction, the stock price will already reflect it, and there\u0026rsquo;s no room to make money. The only valuable insights are the ones most other investors don\u0026rsquo;t share.\n",
    "description": "",
    "tags": ["independent thinking","curiosity","originality","conformity","innovation","ideas"],
    "categories": [],
    "content": "→ 中文版本\nHow to Think for Yourself November 2020\nThere are some kinds of work that you can\u0026rsquo;t do well without thinking differently from your peers. To be a successful scientist, for example, it\u0026rsquo;s not enough just to be correct. Your ideas have to be both correct and novel. You can\u0026rsquo;t publish papers saying things other people already know. You need to say things no one else has realized yet.\nThe same is true for investors. It\u0026rsquo;s not enough for a public market investor to predict correctly how a company will do. If a lot of other people make the same prediction, the stock price …"
  },{
    "title": "How to Work Hard",
    "url": "/paul_graham/essays_en/hwh/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nHow to Work Hard June 2021\nIt might not seem there\u0026rsquo;s much to learn about how to work hard. Anyone who\u0026rsquo;s been to school knows what it entails, even if they chose not to do it. There are 12 year olds who work amazingly hard. And yet when I ask if I know more about working hard now than when I was in school, the answer is definitely yes.\n",
    "description": "",
    "tags": ["hard work","productivity","success","work ethic","motivation","discipline","personal development"],
    "categories": [],
    "content": "→ 中文版本\nHow to Work Hard June 2021\nIt might not seem there\u0026rsquo;s much to learn about how to work hard. Anyone who\u0026rsquo;s been to school knows what it entails, even if they chose not to do it. There are 12 year olds who work amazingly hard. And yet when I ask if I know more about working hard now than when I was in school, the answer is definitely yes.\nOne thing I know is that if you want to do great things, you\u0026rsquo;ll have to work very hard. I wasn\u0026rsquo;t sure of that as a kid. Schoolwork varied in difficulty; one didn\u0026rsquo;t always have to work super hard to do well. And some of the …"
  },{
    "title": "How Y Combinator Started",
    "url": "/paul_graham/essays_en/ycstart/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版\nHow Y Combinator Started March 2012\nY Combinator\u0026rsquo;s 7th birthday was March 11. As usual we were so busy we didn\u0026rsquo;t notice till a few days after. I don\u0026rsquo;t think we\u0026rsquo;ve ever managed to remember our birthday on our birthday.\nOn March 11 2005, Jessica and I were walking home from dinner in Harvard Square. Jessica was working at an investment bank at the time, but she didn\u0026rsquo;t like it much, so she had interviewed for a job as director of marketing at a Boston VC fund. The VC fund was doing what now seems a comically familiar thing for a VC fund to do: taking a long time to make up their mind.\n",
    "description": "",
    "tags": ["Y Combinator","startups","founding","history","angel investing","Silicon Valley"],
    "categories": [],
    "content": "→ 中文版\nHow Y Combinator Started March 2012\nY Combinator\u0026rsquo;s 7th birthday was March 11. As usual we were so busy we didn\u0026rsquo;t notice till a few days after. I don\u0026rsquo;t think we\u0026rsquo;ve ever managed to remember our birthday on our birthday.\nOn March 11 2005, Jessica and I were walking home from dinner in Harvard Square. Jessica was working at an investment bank at the time, but she didn\u0026rsquo;t like it much, so she had interviewed for a job as director of marketing at a Boston VC fund. The VC fund was doing what now seems a comically familiar thing for a VC fund to do: taking a long …"
  },{
    "title": "How You Know",
    "url": "/paul_graham/essays_en/know/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nHow You Know December 2014\nI\u0026rsquo;ve read Villehardouin\u0026rsquo;s chronicle of the Fourth Crusade at least two times, maybe three. And yet if I had to write down everything I remember from it, I doubt it would amount to much more than a page. Multiply this times several hundred, and I get an uneasy feeling when I look at my bookshelves. What use is it to read all these books if I remember so little from them?\n",
    "description": "",
    "tags": ["knowledge","learning","memory","reading","experience","mental_models","education"],
    "categories": [],
    "content": "→ 中文版本\nHow You Know December 2014\nI\u0026rsquo;ve read Villehardouin\u0026rsquo;s chronicle of the Fourth Crusade at least two times, maybe three. And yet if I had to write down everything I remember from it, I doubt it would amount to much more than a page. Multiply this times several hundred, and I get an uneasy feeling when I look at my bookshelves. What use is it to read all these books if I remember so little from them?\nA few months ago, as I was reading Constance Reid\u0026rsquo;s excellent biography of Hilbert, I figured out if not the answer to this question, at least something that made me feel …"
  },{
    "title": "Ideas for Startups",
    "url": "/paul_graham/essays_en/ideas/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nIdeas for Startups Want to start a startup? Get funded by Y Combinator.\nOctober 2005\n(This essay is derived from a talk at the 2005 Startup School.)\nHow do you get good ideas for startups? That\u0026rsquo;s probably the number one question people ask me.\nI\u0026rsquo;d like to reply with another question: why do people think it\u0026rsquo;s hard to come up with ideas for startups?\nThat might seem a stupid thing to ask. Why do they think it\u0026rsquo;s hard? If people can\u0026rsquo;t do it, then it is hard, at least for them. Right?\n",
    "description": "",
    "tags": ["startups","ideas","entrepreneurship","innovation","business strategy","Y Combinator","problem solving"],
    "categories": [],
    "content": "→ 中文版本\nIdeas for Startups Want to start a startup? Get funded by Y Combinator.\nOctober 2005\n(This essay is derived from a talk at the 2005 Startup School.)\nHow do you get good ideas for startups? That\u0026rsquo;s probably the number one question people ask me.\nI\u0026rsquo;d like to reply with another question: why do people think it\u0026rsquo;s hard to come up with ideas for startups?\nThat might seem a stupid thing to ask. Why do they think it\u0026rsquo;s hard? If people can\u0026rsquo;t do it, then it is hard, at least for them. Right?\nWell, maybe not. What people usually say is not that they can\u0026rsquo;t think of …"
  },{
    "title": "If Lisp is So Great",
    "url": "/paul_graham/essays_en/iflisp/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ Chinese Version\nIf Lisp is So Great May 2003\nIf Lisp is so great, why don\u0026rsquo;t more people use it? I was asked this question by a student in the audience at a talk I gave recently. Not for the first time, either.\nIn languages, as in so many things, there\u0026rsquo;s not much correlation between popularity and quality. Why does John Grisham (King of Torts sales rank, 44) outsell Jane Austen (Pride and Prejudice sales rank, 6191)? Would even Grisham claim that it\u0026rsquo;s because he\u0026rsquo;s a better writer?\n",
    "description": "",
    "tags": ["Lisp","programming languages","software development","technology","innovation","popularity"],
    "categories": [],
    "content": "→ Chinese Version\nIf Lisp is So Great May 2003\nIf Lisp is so great, why don\u0026rsquo;t more people use it? I was asked this question by a student in the audience at a talk I gave recently. Not for the first time, either.\nIn languages, as in so many things, there\u0026rsquo;s not much correlation between popularity and quality. Why does John Grisham (King of Torts sales rank, 44) outsell Jane Austen (Pride and Prejudice sales rank, 6191)? Would even Grisham claim that it\u0026rsquo;s because he\u0026rsquo;s a better writer?\nHere\u0026rsquo;s the first sentence of Pride and Prejudice: \u0026ldquo;It is a truth universally …"
  },{
    "title": "Inequality",
    "url": "/paul_graham/essays_en/inequality/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nInequality August 2005\n(This essay is derived from a talk at Defcon 2005.)\nSuppose you wanted to get rid of economic inequality. There are two ways to do it: give money to the poor, or take it away from the rich. But they amount to the same thing, because if you want to give money to the poor, you have to get it from somewhere. You can\u0026rsquo;t get it from the poor, or they just end up where they started. You have to get it from the rich.\n",
    "description": "",
    "tags": ["inequality","risk","startups","economics","wealth","growth"],
    "categories": [],
    "content": "→ 中文版本\nInequality August 2005\n(This essay is derived from a talk at Defcon 2005.)\nSuppose you wanted to get rid of economic inequality. There are two ways to do it: give money to the poor, or take it away from the rich. But they amount to the same thing, because if you want to give money to the poor, you have to get it from somewhere. You can\u0026rsquo;t get it from the poor, or they just end up where they started. You have to get it from the rich.\nThere is of course a way to make the poor richer without simply shifting money from the rich. You could help the poor become more productive — for …"
  },{
    "title": "Introduction to ANSI Common Lisp",
    "url": "/paul_graham/essays_en/acl1txtt1748944359/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nIntroduction to ANSI Common Lisp Introduction to ANSI Common Lisp\n(This is the first chapter of ANSI Common Lisp, by Paul Graham. Copyright 1995, Prentice-Hall.)\nIntroduction John McCarthy and his students began work on the first Lisp implementation in 1958. After Fortran, Lisp is the oldest language still in use. [1] What\u0026rsquo;s more remarkable is that it is still in the forefront of programming language technology. Programmers who know Lisp will tell you, there is something about this language that sets it apart.\n",
    "description": "",
    "tags": ["lisp","programming","ansi common lisp","introduction","technology"],
    "categories": [],
    "content": "→ 中文版本\nIntroduction to ANSI Common Lisp Introduction to ANSI Common Lisp\n(This is the first chapter of ANSI Common Lisp, by Paul Graham. Copyright 1995, Prentice-Hall.)\nIntroduction John McCarthy and his students began work on the first Lisp implementation in 1958. After Fortran, Lisp is the oldest language still in use. [1] What\u0026rsquo;s more remarkable is that it is still in the forefront of programming language technology. Programmers who know Lisp will tell you, there is something about this language that sets it apart.\nPart of what makes Lisp distinctive is that it is designed to evolve. …"
  },{
    "title": "Investor Herd Dynamics",
    "url": "/paul_graham/essays_en/herd/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nInvestor Herd Dynamics August 2013\nThe biggest component in most investors\u0026rsquo; opinion of you is the opinion of other investors. Which is of course a recipe for exponential growth. When one investor wants to invest in you, that makes other investors want to, which makes others want to, and so on.\nSometimes inexperienced founders mistakenly conclude that manipulating these forces is the essence of fundraising. They hear stories about stampedes to invest in successful startups, and think it\u0026rsquo;s therefore the mark of a successful startup to have this happen. But actually the two are not that highly correlated. Lots of startups that cause stampedes end up flaming out (in extreme cases, partly as a result of the stampede), and lots of very successful startups were only moderately popular with investors the first time they raised money.\n",
    "description": "",
    "tags": ["investors","herd behavior","fundraising","venture capital","psychology"],
    "categories": [],
    "content": "→ 中文版本\nInvestor Herd Dynamics August 2013\nThe biggest component in most investors\u0026rsquo; opinion of you is the opinion of other investors. Which is of course a recipe for exponential growth. When one investor wants to invest in you, that makes other investors want to, which makes others want to, and so on.\nSometimes inexperienced founders mistakenly conclude that manipulating these forces is the essence of fundraising. They hear stories about stampedes to invest in successful startups, and think it\u0026rsquo;s therefore the mark of a successful startup to have this happen. But actually the two are …"
  },{
    "title": "Is It Worth Being Wise?",
    "url": "/paul_graham/essays_en/wisdom/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版\nIs It Worth Being Wise? February 2007\nA few days ago I finally figured out something I\u0026rsquo;ve wondered about for 25 years: the relationship between wisdom and intelligence. Anyone can see they\u0026rsquo;re not the same by the number of people who are smart, but not very wise. And yet intelligence and wisdom do seem related. How?\nWhat is wisdom? I\u0026rsquo;d say it\u0026rsquo;s knowing what to do in a lot of situations. I\u0026rsquo;m not trying to make a deep point here about the true nature of wisdom, just to figure out how we use the word. A wise person is someone who usually knows the right thing to do.\n",
    "description": "",
    "tags": ["wisdom","intelligence","philosophy","education","psychology"],
    "categories": [],
    "content": "→ 中文版\nIs It Worth Being Wise? February 2007\nA few days ago I finally figured out something I\u0026rsquo;ve wondered about for 25 years: the relationship between wisdom and intelligence. Anyone can see they\u0026rsquo;re not the same by the number of people who are smart, but not very wise. And yet intelligence and wisdom do seem related. How?\nWhat is wisdom? I\u0026rsquo;d say it\u0026rsquo;s knowing what to do in a lot of situations. I\u0026rsquo;m not trying to make a deep point here about the true nature of wisdom, just to figure out how we use the word. A wise person is someone who usually knows the right thing to …"
  },{
    "title": "Is There Such a Thing as Good Taste?",
    "url": "/paul_graham/essays_en/goodtaste/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nIs There Such a Thing as Good Taste? November 2021\n(This essay is derived from a talk at the Cambridge Union.)\nWhen I was a kid, I\u0026rsquo;d have said there wasn\u0026rsquo;t. My father told me so. Some people like some things, and other people like other things, and who\u0026rsquo;s to say who\u0026rsquo;s right?\nIt seemed so obvious that there was no such thing as good taste that it was only through indirect evidence that I realized my father was wrong. And that\u0026rsquo;s what I\u0026rsquo;m going to give you here: a proof by reductio ad absurdum. If we start from the premise that there\u0026rsquo;s no such thing as good taste, we end up with conclusions that are obviously false, and therefore the premise must be wrong.\n",
    "description": "",
    "tags": ["taste","art","subjectivity","objectivity","aesthetics"],
    "categories": [],
    "content": "→ 中文版本\nIs There Such a Thing as Good Taste? November 2021\n(This essay is derived from a talk at the Cambridge Union.)\nWhen I was a kid, I\u0026rsquo;d have said there wasn\u0026rsquo;t. My father told me so. Some people like some things, and other people like other things, and who\u0026rsquo;s to say who\u0026rsquo;s right?\nIt seemed so obvious that there was no such thing as good taste that it was only through indirect evidence that I realized my father was wrong. And that\u0026rsquo;s what I\u0026rsquo;m going to give you here: a proof by reductio ad absurdum. If we start from the premise that there\u0026rsquo;s no such thing …"
  },{
    "title": "It's Charisma, Stupid",
    "url": "/paul_graham/essays_en/charisma/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nIt\u0026rsquo;s Charisma, Stupid November 2004, corrected June 2006\nOccam\u0026rsquo;s razor says we should prefer the simpler of two explanations. I begin by reminding readers of this principle because I\u0026rsquo;m about to propose a theory that will offend both liberals and conservatives. But Occam\u0026rsquo;s razor means, in effect, that if you want to disagree with it, you have a hell of a coincidence to explain.\nTheory: In US presidential elections, the more charismatic candidate wins.\n",
    "description": "",
    "tags": ["charisma","politics","elections","voting","presidents","analysis"],
    "categories": [],
    "content": "→ 中文版本\nIt\u0026rsquo;s Charisma, Stupid November 2004, corrected June 2006\nOccam\u0026rsquo;s razor says we should prefer the simpler of two explanations. I begin by reminding readers of this principle because I\u0026rsquo;m about to propose a theory that will offend both liberals and conservatives. But Occam\u0026rsquo;s razor means, in effect, that if you want to disagree with it, you have a hell of a coincidence to explain.\nTheory: In US presidential elections, the more charismatic candidate wins.\nPeople who write about politics, whether on the left or the right, have a consistent bias: they take politics …"
  },{
    "title": "Java's Cover",
    "url": "/paul_graham/essays_en/javacover/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nJava\u0026rsquo;s Cover April 2001\nThis essay developed out of conversations I\u0026rsquo;ve had with several other programmers about why Java smelled suspicious. It\u0026rsquo;s not a critique of Java! It is a case study of hacker\u0026rsquo;s radar.\nOver time, hackers develop a nose for good (and bad) technology. I thought it might be interesting to try and write down what made Java seem suspect to me.\nSome people who\u0026rsquo;ve read this think it\u0026rsquo;s an interesting attempt to write about something that hasn\u0026rsquo;t been written about before. Others say I will get in trouble for appearing to be writing about things I don\u0026rsquo;t understand. So, just in case it does any good, let me clarify that I\u0026rsquo;m not writing here about Java (which I have never used) but about hacker\u0026rsquo;s radar (which I have thought about a lot).\n",
    "description": "",
    "tags": ["java","programming","technology","programming_languages","hacker_culture","design"],
    "categories": [],
    "content": "→ 中文版本\nJava\u0026rsquo;s Cover April 2001\nThis essay developed out of conversations I\u0026rsquo;ve had with several other programmers about why Java smelled suspicious. It\u0026rsquo;s not a critique of Java! It is a case study of hacker\u0026rsquo;s radar.\nOver time, hackers develop a nose for good (and bad) technology. I thought it might be interesting to try and write down what made Java seem suspect to me.\nSome people who\u0026rsquo;ve read this think it\u0026rsquo;s an interesting attempt to write about something that hasn\u0026rsquo;t been written about before. Others say I will get in trouble for appearing to be writing …"
  },{
    "title": "Jessica Livingston",
    "url": "/paul_graham/essays_en/jessica/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nJessica Livingston November 2015\nA few months ago an article about Y Combinator said that early on it had been a \u0026ldquo;one-man show.\u0026rdquo; It\u0026rsquo;s sadly common to read that sort of thing. But the problem with that description is not just that it\u0026rsquo;s unfair. It\u0026rsquo;s also misleading. Much of what\u0026rsquo;s most novel about YC is due to Jessica Livingston. If you don\u0026rsquo;t understand her, you don\u0026rsquo;t understand YC. So let me tell you a little about Jessica.\n",
    "description": "",
    "tags": ["jessica_livingston","y_combinator","startups","founders","women_in_tech","leadership","culture"],
    "categories": [],
    "content": "→ 中文版本\nJessica Livingston November 2015\nA few months ago an article about Y Combinator said that early on it had been a \u0026ldquo;one-man show.\u0026rdquo; It\u0026rsquo;s sadly common to read that sort of thing. But the problem with that description is not just that it\u0026rsquo;s unfair. It\u0026rsquo;s also misleading. Much of what\u0026rsquo;s most novel about YC is due to Jessica Livingston. If you don\u0026rsquo;t understand her, you don\u0026rsquo;t understand YC. So let me tell you a little about Jessica.\nYC had 4 founders. Jessica and I decided one night to start it, and the next day we recruited my friends Robert Morris …"
  },{
    "title": "Keep Your Identity Small",
    "url": "/paul_graham/essays_en/identity/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ Chinese Version\nKeep Your Identity Small February 2009\nI finally realized today why politics and religion yield such uniquely useless discussions.\nAs a rule, any mention of religion on an online forum degenerates into a religious argument. Why? Why does this happen with religion and not with Javascript or baking or other topics people talk about on forums?\nWhat\u0026rsquo;s different about religion is that people don\u0026rsquo;t feel they need to have any particular expertise to have opinions about it. All they need is strongly held beliefs, and anyone can have those. No thread about Javascript will grow as fast as one about religion, because people feel they have to be over some threshold of expertise to post comments about that. But on religion everyone\u0026rsquo;s an expert.\n",
    "description": "",
    "tags": ["identity","politics","religion","philosophy","psychology","critical thinking","self-improvement"],
    "categories": [],
    "content": "→ Chinese Version\nKeep Your Identity Small February 2009\nI finally realized today why politics and religion yield such uniquely useless discussions.\nAs a rule, any mention of religion on an online forum degenerates into a religious argument. Why? Why does this happen with religion and not with Javascript or baking or other topics people talk about on forums?\nWhat\u0026rsquo;s different about religion is that people don\u0026rsquo;t feel they need to have any particular expertise to have opinions about it. All they need is strongly held beliefs, and anyone can have those. No thread about Javascript will …"
  },{
    "title": "Laundry",
    "url": "/paul_graham/essays_en/laundry/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nLaundry A Version 1.0\nOctober 2004\nAs E. B. White said, \u0026ldquo;good writing is rewriting.\u0026rdquo; I didn\u0026rsquo;t realize this when I was in school. In writing, as in math and science, they only show you the finished product. You don\u0026rsquo;t see all the false starts. This gives students a misleading view of how things get made.\nPart of the reason it happens is that writers don\u0026rsquo;t want people to see their mistakes. But I\u0026rsquo;m willing to let people see an early draft if it will show how much you have to rewrite to beat an essay into shape.\n",
    "description": "",
    "tags": ["writing","essays","education","montaigne","rewriting","creativity","learning"],
    "categories": [],
    "content": "→ 中文版本\nLaundry A Version 1.0\nOctober 2004\nAs E. B. White said, \u0026ldquo;good writing is rewriting.\u0026rdquo; I didn\u0026rsquo;t realize this when I was in school. In writing, as in math and science, they only show you the finished product. You don\u0026rsquo;t see all the false starts. This gives students a misleading view of how things get made.\nPart of the reason it happens is that writers don\u0026rsquo;t want people to see their mistakes. But I\u0026rsquo;m willing to let people see an early draft if it will show how much you have to rewrite to beat an essay into shape.\nBelow is the oldest version I can find of …"
  },{
    "title": "Learning from Founders",
    "url": "/paul_graham/essays_en/foundersatwork/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nLearning from Founders January 2007\n(Foreword to Jessica Livingston\u0026rsquo;s Founders at Work.)\nApparently sprinters reach their highest speed right out of the blocks, and spend the rest of the race slowing down. The winners slow down the least. It\u0026rsquo;s that way with most startups too. The earliest phase is usually the most productive. That\u0026rsquo;s when they have the really big ideas. Imagine what Apple was like when 100% of its employees were either Steve Jobs or Steve Wozniak.\n",
    "description": "",
    "tags": ["founders","productivity","startups","professionalism","Jessica Livingston"],
    "categories": [],
    "content": "→ 中文版本\nLearning from Founders January 2007\n(Foreword to Jessica Livingston\u0026rsquo;s Founders at Work.)\nApparently sprinters reach their highest speed right out of the blocks, and spend the rest of the race slowing down. The winners slow down the least. It\u0026rsquo;s that way with most startups too. The earliest phase is usually the most productive. That\u0026rsquo;s when they have the really big ideas. Imagine what Apple was like when 100% of its employees were either Steve Jobs or Steve Wozniak.\nThe striking thing about this phase is that it\u0026rsquo;s completely different from most people\u0026rsquo;s idea …"
  },{
    "title": "Let the Other 95% of Great Programmers In",
    "url": "/paul_graham/essays_en/95/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nLet the Other 95% of Great Programmers In Let the Other 95% of Great Programmers In December 2014\nAmerican technology companies want the government to make immigration easier because they say they can\u0026rsquo;t find enough programmers in the US. Anti-immigration people say that instead of letting foreigners take these jobs, we should train more Americans to be programmers. Who\u0026rsquo;s right?\nThe technology companies are right. What the anti-immigration people don\u0026rsquo;t understand is that there is a huge variation in ability between competent programmers and exceptional ones, and while you can train people to be competent, you can\u0026rsquo;t train them to be exceptional. Exceptional programmers have an aptitude for and interest in programming that is not merely the product of training. [1]\n",
    "description": "",
    "tags": ["programming","immigration","technology","talent","silicon valley"],
    "categories": [],
    "content": "→ 中文版本\nLet the Other 95% of Great Programmers In Let the Other 95% of Great Programmers In December 2014\nAmerican technology companies want the government to make immigration easier because they say they can\u0026rsquo;t find enough programmers in the US. Anti-immigration people say that instead of letting foreigners take these jobs, we should train more Americans to be programmers. Who\u0026rsquo;s right?\nThe technology companies are right. What the anti-immigration people don\u0026rsquo;t understand is that there is a huge variation in ability between competent programmers and exceptional ones, and while …"
  },{
    "title": "Lies We Tell Kids",
    "url": "/paul_graham/essays_en/lies/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nLies We Tell Kids May 2008\nAdults lie constantly to kids. I\u0026rsquo;m not saying we should stop, but I think we should at least examine which lies we tell and why.\nThere may also be a benefit to us. We were all lied to as kids, and some of the lies we were told still affect us. So by studying the ways adults lie to kids, we may be able to clear our heads of lies we were told.\n",
    "description": "",
    "tags": ["parenting","children","lying","education","truth","childhood","society","psychology","growing_up"],
    "categories": [],
    "content": "→ 中文版本\nLies We Tell Kids May 2008\nAdults lie constantly to kids. I\u0026rsquo;m not saying we should stop, but I think we should at least examine which lies we tell and why.\nThere may also be a benefit to us. We were all lied to as kids, and some of the lies we were told still affect us. So by studying the ways adults lie to kids, we may be able to clear our heads of lies we were told.\nI\u0026rsquo;m using the word \u0026ldquo;lie\u0026rdquo; in a very general sense: not just overt falsehoods, but also all the more subtle ways we mislead kids. Though \u0026ldquo;lie\u0026rdquo; has negative connotations, I don\u0026rsquo;t mean …"
  },{
    "title": "Life is Short",
    "url": "/paul_graham/essays_en/vb/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nLife is Short January 2016\nLife is short, as everyone knows. When I was a kid I used to wonder about this. Is life actually short, or are we really complaining about its finiteness? Would we be just as likely to feel life was short if we lived 10 times as long?\nSince there didn\u0026rsquo;t seem any way to answer this question, I stopped wondering about it. Then I had kids. That gave me a way to answer the question, and the answer is that life actually is short.\n",
    "description": "",
    "tags": ["time","priorities","bullshit","meaningful life","regret","parenting"],
    "categories": [],
    "content": "→ 中文版本\nLife is Short January 2016\nLife is short, as everyone knows. When I was a kid I used to wonder about this. Is life actually short, or are we really complaining about its finiteness? Would we be just as likely to feel life was short if we lived 10 times as long?\nSince there didn\u0026rsquo;t seem any way to answer this question, I stopped wondering about it. Then I had kids. That gave me a way to answer the question, and the answer is that life actually is short.\nHaving kids showed me how to convert a continuous quantity, time, into discrete quantities. You only get 52 weekends with your 2 …"
  },{
    "title": "Lisp for Web-Based Applications",
    "url": "/paul_graham/essays_en/lwba/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "Lisp for Web-Based Applications After a link to Beating the Averages was posted on slashdot, some readers wanted to hear in more detail about the specific technical advantages we got from using Lisp in Viaweb. For those who are interested, here are some excerpts from a talk I gave in April 2001 at BBN Labs in Cambridge, MA.\nBBN Talk Excerpts (ASCII)\n",
    "description": "",
    "tags": ["lisp","web","programming","software","technology","viaweb","startups"],
    "categories": [],
    "content": "Lisp for Web-Based Applications After a link to Beating the Averages was posted on slashdot, some readers wanted to hear in more detail about the specific technical advantages we got from using Lisp in Viaweb. For those who are interested, here are some excerpts from a talk I gave in April 2001 at BBN Labs in Cambridge, MA.\nBBN Talk Excerpts (ASCII)\n"
  },{
    "title": "Made in USA",
    "url": "/paul_graham/essays_en/usa/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nMade in USA November 2004\n(This is a new essay for the Japanese edition of Hackers \u0026amp; Painters. It tries to explain why Americans make some things well and others badly.)\nA few years ago an Italian friend of mine travelled by train from Boston to Providence. She had only been in America for a couple weeks and hadn\u0026rsquo;t seen much of the country yet. She arrived looking astonished. \u0026ldquo;It\u0026rsquo;s so ugly!\u0026rdquo;\n",
    "description": "",
    "tags": ["american_culture","design","manufacturing","innovation","business","comparison"],
    "categories": [],
    "content": "→ 中文版本\nMade in USA November 2004\n(This is a new essay for the Japanese edition of Hackers \u0026amp; Painters. It tries to explain why Americans make some things well and others badly.)\nA few years ago an Italian friend of mine travelled by train from Boston to Providence. She had only been in America for a couple weeks and hadn\u0026rsquo;t seen much of the country yet. She arrived looking astonished. \u0026ldquo;It\u0026rsquo;s so ugly!\u0026rdquo;\nPeople from other rich countries can scarcely imagine the squalor of the man-made bits of America. In travel books they show you mostly natural environments: the Grand …"
  },{
    "title": "Maker's Schedule, Manager's Schedule",
    "url": "/paul_graham/essays_en/makersschedule/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "Maker\u0026rsquo;s Schedule, Manager\u0026rsquo;s Schedule July 2009\n\u0026ldquo;\u0026hellip;the mere consciousness of an engagement will sometimes worry a whole day.\u0026rdquo; – Charles Dickens\nOne reason programmers dislike meetings so much is that they\u0026rsquo;re on a different type of schedule from other people. Meetings cost them more.\nThere are two types of schedule, which I\u0026rsquo;ll call the manager\u0026rsquo;s schedule and the maker\u0026rsquo;s schedule. The manager\u0026rsquo;s schedule is for bosses. It\u0026rsquo;s embodied in the traditional appointment book, with each day cut into one hour intervals. You can block off several hours for a single task if you need to, but by default you change what you\u0026rsquo;re doing every hour.\n",
    "description": "",
    "tags": ["time","management","productivity","programming","schedule","work","meetings","startup","ycombinator"],
    "categories": [],
    "content": "Maker\u0026rsquo;s Schedule, Manager\u0026rsquo;s Schedule July 2009\n\u0026ldquo;\u0026hellip;the mere consciousness of an engagement will sometimes worry a whole day.\u0026rdquo; – Charles Dickens\nOne reason programmers dislike meetings so much is that they\u0026rsquo;re on a different type of schedule from other people. Meetings cost them more.\nThere are two types of schedule, which I\u0026rsquo;ll call the manager\u0026rsquo;s schedule and the maker\u0026rsquo;s schedule. The manager\u0026rsquo;s schedule is for bosses. It\u0026rsquo;s embodied in the traditional appointment book, with each day cut into one hour intervals. You can block off …"
  },{
    "title": "Maybe",
    "url": "/paul_graham/essays_en/maybe/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nMaybe February 2009\nA lot of cities look at Silicon Valley and ask \u0026ldquo;How could we make something like that happen here?\u0026rdquo; The organic way to do it is to establish a first-rate university in a place where rich people want to live. That\u0026rsquo;s how Silicon Valley happened. But could you shortcut the process by funding startups?\nPossibly. Let\u0026rsquo;s consider what it would take.\nThe first thing to understand is that encouraging startups is a different problem from encouraging startups in a particular city. The latter is much more expensive.\n",
    "description": "",
    "tags": ["silicon valley","startups","funding","cities","entrepreneurship"],
    "categories": [],
    "content": "→ 中文版本\nMaybe February 2009\nA lot of cities look at Silicon Valley and ask \u0026ldquo;How could we make something like that happen here?\u0026rdquo; The organic way to do it is to establish a first-rate university in a place where rich people want to live. That\u0026rsquo;s how Silicon Valley happened. But could you shortcut the process by funding startups?\nPossibly. Let\u0026rsquo;s consider what it would take.\nThe first thing to understand is that encouraging startups is a different problem from encouraging startups in a particular city. The latter is much more expensive.\nPeople sometimes think they could …"
  },{
    "title": "Mean",
    "url": "/paul_graham/essays_en/mean/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nMean November 2014\nIt struck me recently how few of the most successful people I know are mean. There are exceptions, but remarkably few.\nMeanness isn\u0026rsquo;t rare. In fact, one of the things the internet has shown us is how mean people can be. A few decades ago, only famous people and professional writers got to publish their opinions. Now everyone can, and we can all see the long tail of meanness that had previously been hidden.\n",
    "description": "",
    "tags": ["character","success","kindness","entrepreneurship","leadership"],
    "categories": [],
    "content": "→ 中文版本\nMean November 2014\nIt struck me recently how few of the most successful people I know are mean. There are exceptions, but remarkably few.\nMeanness isn\u0026rsquo;t rare. In fact, one of the things the internet has shown us is how mean people can be. A few decades ago, only famous people and professional writers got to publish their opinions. Now everyone can, and we can all see the long tail of meanness that had previously been hidden.\nAnd yet while there are clearly a lot of mean people out there, there are next to none among the most successful people I know. What\u0026rsquo;s going on here? …"
  },{
    "title": "Microsoft is Dead",
    "url": "/paul_graham/essays_en/microsoft/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nMicrosoft is Dead April 2007\nA few days ago I suddenly realized Microsoft was dead. I was talking to a young startup founder about how Google was different from Yahoo. I said that Yahoo had been warped from the start by their fear of Microsoft. That was why they\u0026rsquo;d positioned themselves as a \u0026ldquo;media company\u0026rdquo; instead of a technology company. Then I looked at his face and realized he didn\u0026rsquo;t understand. It was as if I\u0026rsquo;d told him how much girls liked Barry Manilow in the mid 80s. Barry who? Microsoft? He didn\u0026rsquo;t say anything, but I could tell he didn\u0026rsquo;t quite believe anyone would be frightened of them.\n",
    "description": "",
    "tags": ["microsoft","google","apple","web","software","technology"],
    "categories": [],
    "content": "→ 中文版本\nMicrosoft is Dead April 2007\nA few days ago I suddenly realized Microsoft was dead. I was talking to a young startup founder about how Google was different from Yahoo. I said that Yahoo had been warped from the start by their fear of Microsoft. That was why they\u0026rsquo;d positioned themselves as a \u0026ldquo;media company\u0026rdquo; instead of a technology company. Then I looked at his face and realized he didn\u0026rsquo;t understand. It was as if I\u0026rsquo;d told him how much girls liked Barry Manilow in the mid 80s. Barry who? Microsoft? He didn\u0026rsquo;t say anything, but I could tell he didn\u0026rsquo;t …"
  },{
    "title": "Mind the Gap",
    "url": "/paul_graham/essays_en/gap/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nMind the Gap May 2004\nWhen people care enough about something to do it well, those who do it best tend to be far better than everyone else. There\u0026rsquo;s a huge gap between Leonardo and second-rate contemporaries like Borgognone. You see the same gap between Raymond Chandler and the average writer of detective novels. A top-ranked professional chess player could play ten thousand games against an ordinary club player without losing once.\n",
    "description": "",
    "tags": ["wealth","income","inequality","technology","society","economics"],
    "categories": [],
    "content": "→ 中文版本\nMind the Gap May 2004\nWhen people care enough about something to do it well, those who do it best tend to be far better than everyone else. There\u0026rsquo;s a huge gap between Leonardo and second-rate contemporaries like Borgognone. You see the same gap between Raymond Chandler and the average writer of detective novels. A top-ranked professional chess player could play ten thousand games against an ordinary club player without losing once.\nLike chess or painting or writing novels, making money is a very specialized skill. But for some reason we treat this skill differently. No one …"
  },{
    "title": "Mod",
    "url": "/paul_graham/essays_en/mod/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "Mod The Two Kinds of Moderate December 2019\nThere are two distinct ways to be politically moderate: on purpose and by accident. Intentional moderates are trimmers, deliberately choosing a position mid-way between the extremes of right and left. Accidental moderates end up in the middle, on average, because they make up their own minds about each question, and the far right and far left are roughly equally wrong.\nYou can distinguish intentional from accidental moderates by the distribution of their opinions. If the far left opinion on some matter is 0 and the far right opinion 100, an intentional moderate\u0026rsquo;s opinion on every question will be near 50. Whereas an accidental moderate\u0026rsquo;s opinions will be scattered over a broad range, but will, like those of the intentional moderate, average to about 50.\n",
    "description": "",
    "tags": ["politics","moderation","independent thinking","ideology","courage"],
    "categories": [],
    "content": "Mod The Two Kinds of Moderate December 2019\nThere are two distinct ways to be politically moderate: on purpose and by accident. Intentional moderates are trimmers, deliberately choosing a position mid-way between the extremes of right and left. Accidental moderates end up in the middle, on average, because they make up their own minds about each question, and the far right and far left are roughly equally wrong.\nYou can distinguish intentional from accidental moderates by the distribution of their opinions. If the far left opinion on some matter is 0 and the far right opinion 100, an …"
  },{
    "title": "Modeling a Wealth Tax",
    "url": "/paul_graham/essays_en/wtax/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版\nModeling a Wealth Tax August 2020\nSome politicians are proposing to introduce wealth taxes in addition to income and capital gains taxes. Let\u0026rsquo;s try modeling the effects of various levels of wealth tax to see what they would mean in practice for a startup founder.\nSuppose you start a successful startup in your twenties, and then live for another 60 years. How much of your stock will a wealth tax consume?\n",
    "description": "",
    "tags": ["wealth tax","economics","startups","taxation","policy"],
    "categories": [],
    "content": "→ 中文版\nModeling a Wealth Tax August 2020\nSome politicians are proposing to introduce wealth taxes in addition to income and capital gains taxes. Let\u0026rsquo;s try modeling the effects of various levels of wealth tax to see what they would mean in practice for a startup founder.\nSuppose you start a successful startup in your twenties, and then live for another 60 years. How much of your stock will a wealth tax consume?\nIf the wealth tax applies to all your assets, it\u0026rsquo;s easy to calculate its effect. A wealth tax of 1% means you get to keep 99% of your stock each year. After 60 years the …"
  },{
    "title": "News from the Front",
    "url": "/paul_graham/essays_en/colleges/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nNews from the Front September 2007\nA few weeks ago I had a thought so heretical that it really surprised me. It may not matter all that much where you go to college.\nFor me, as for a lot of middle class kids, getting into a good college was more or less the meaning of life when I was growing up. What was I? A student. To do that well meant to get good grades. Why did one have to get good grades? To get into a good college. And why did one want to do that? There seemed to be several reasons: you\u0026rsquo;d learn more, get better jobs, make more money. But it didn\u0026rsquo;t matter exactly what the benefits would be. College was a bottleneck through which all your future prospects passed; everything would be better if you went to a better college.\n",
    "description": "",
    "tags": ["college","university","success","education","Y-Combinator","admissions"],
    "categories": [],
    "content": "→ 中文版本\nNews from the Front September 2007\nA few weeks ago I had a thought so heretical that it really surprised me. It may not matter all that much where you go to college.\nFor me, as for a lot of middle class kids, getting into a good college was more or less the meaning of life when I was growing up. What was I? A student. To do that well meant to get good grades. Why did one have to get good grades? To get into a good college. And why did one want to do that? There seemed to be several reasons: you\u0026rsquo;d learn more, get better jobs, make more money. But it didn\u0026rsquo;t matter exactly what …"
  },{
    "title": "Not Not",
    "url": "/paul_graham/essays_en/notnot/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nNot Not March 2007\n(This essay is derived from talks at the 2007 Startup School and the Berkeley CSUA.)\nWe\u0026rsquo;ve now been doing Y Combinator long enough to have some data about success rates. Our first batch, in the summer of 2005, had eight startups in it. Of those eight, it now looks as if at least four succeeded. Three have been acquired: Reddit was a merger of two, Reddit and Infogami, and a third was acquired that we can\u0026rsquo;t talk about yet. Another from that batch was Loopt, which is doing so well they could probably be acquired in about ten minutes if they wanted to.\n",
    "description": "",
    "tags": ["entrepreneurship","startup advice","y combinator","founders","risk taking"],
    "categories": [],
    "content": "→ 中文版本\nNot Not March 2007\n(This essay is derived from talks at the 2007 Startup School and the Berkeley CSUA.)\nWe\u0026rsquo;ve now been doing Y Combinator long enough to have some data about success rates. Our first batch, in the summer of 2005, had eight startups in it. Of those eight, it now looks as if at least four succeeded. Three have been acquired: Reddit was a merger of two, Reddit and Infogami, and a third was acquired that we can\u0026rsquo;t talk about yet. Another from that batch was Loopt, which is doing so well they could probably be acquired in about ten minutes if they wanted to.\nSo …"
  },{
    "title": "Novelty and Heresy",
    "url": "/paul_graham/essays_en/nov/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nNovelty and Heresy November 2019\nIf you discover something new, there\u0026rsquo;s a significant chance you\u0026rsquo;ll be accused of some form of heresy.\nTo discover new things, you have to work on ideas that are good but non-obvious; if an idea is obviously good, other people are probably already working on it. One common way for a good idea to be non-obvious is for it to be hidden in the shadow of some mistaken assumption that people are very attached to. But anything you discover from working on such an idea will tend to contradict the mistaken assumption that was concealing it. And you will thus get a lot of heat from people attached to the mistaken assumption. Galileo and Darwin are famous examples of this phenomenon, but it\u0026rsquo;s probably always an ingredient in the resistance to new ideas.\n",
    "description": "",
    "tags": ["innovation","heresy","new ideas","thinking","discovery","paradigms"],
    "categories": [],
    "content": "→ 中文版本\nNovelty and Heresy November 2019\nIf you discover something new, there\u0026rsquo;s a significant chance you\u0026rsquo;ll be accused of some form of heresy.\nTo discover new things, you have to work on ideas that are good but non-obvious; if an idea is obviously good, other people are probably already working on it. One common way for a good idea to be non-obvious is for it to be hidden in the shadow of some mistaken assumption that people are very attached to. But anything you discover from working on such an idea will tend to contradict the mistaken assumption that was concealing it. And you …"
  },{
    "title": "Organic Startup Ideas",
    "url": "/paul_graham/essays_en/organic/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "Organic Startup Ideas April 2010\nWant to start a startup? Get funded by Y Combinator.\nThe best way to come up with startup ideas is to ask yourself the question: what do you wish someone would make for you?\nThere are two types of startup ideas: those that grow organically out of your own life, and those that you decide, from afar, are going to be necessary to some class of users other than you. Apple was the first type. Apple happened because Steve Wozniak wanted a computer. Unlike most people who wanted computers, he could design one, so he did. And since lots of other people wanted the same thing, Apple was able to sell enough of them to get the company rolling. They still rely on this principle today, incidentally. The iPhone is the phone Steve Jobs wants. [1]\n",
    "description": "",
    "tags": ["startups","ideas","entrepreneurship","innovation","Y Combinator","product development"],
    "categories": [],
    "content": "Organic Startup Ideas April 2010\nWant to start a startup? Get funded by Y Combinator.\nThe best way to come up with startup ideas is to ask yourself the question: what do you wish someone would make for you?\nThere are two types of startup ideas: those that grow organically out of your own life, and those that you decide, from afar, are going to be necessary to some class of users other than you. Apple was the first type. Apple happened because Steve Wozniak wanted a computer. Unlike most people who wanted computers, he could design one, so he did. And since lots of other people wanted the same …"
  },{
    "title": "Orthodox Privilege",
    "url": "/paul_graham/essays_en/orth/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "Orthodox Privilege July 2020\n\u0026ldquo;Few people are capable of expressing with equanimity opinions which differ from the prejudices of their social environment. Most people are even incapable of forming such opinions.\u0026quot;— Einstein\nThere has been a lot of talk about privilege lately. Although the concept is overused, there is something to it, and in particular to the idea that privilege makes you blind — that you can\u0026rsquo;t see things that are visible to someone whose life is very different from yours.\n",
    "description": "",
    "tags": ["privilege","conformity","independent thinking","social norms","controversy","freedom of speech"],
    "categories": [],
    "content": "Orthodox Privilege July 2020\n\u0026ldquo;Few people are capable of expressing with equanimity opinions which differ from the prejudices of their social environment. Most people are even incapable of forming such opinions.\u0026quot;— Einstein\nThere has been a lot of talk about privilege lately. Although the concept is overused, there is something to it, and in particular to the idea that privilege makes you blind — that you can\u0026rsquo;t see things that are visible to someone whose life is very different from yours.\nBut one of the most pervasive examples of this kind of blindness is one that I …"
  },{
    "title": "Persuade xor Discover",
    "url": "/paul_graham/essays_en/discover/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ Chinese Version\nPersuade xor Discover September 2009\nWhen meeting people you don\u0026rsquo;t know very well, the convention is to seem extra friendly. You smile and say \u0026ldquo;pleased to meet you,\u0026rdquo; whether you are or not. There\u0026rsquo;s nothing dishonest about this. Everyone knows that these little social lies aren\u0026rsquo;t meant to be taken literally, just as everyone knows that \u0026ldquo;Can you pass the salt?\u0026rdquo; is only grammatically a question.\nI\u0026rsquo;m perfectly willing to smile and say \u0026ldquo;pleased to meet you\u0026rdquo; when meeting new people. But there is another set of customs for being ingratiating in print that are not so harmless.\n",
    "description": "",
    "tags": ["writing","persuasion","discovery","truth","essay","honesty","ideas","philosophy"],
    "categories": [],
    "content": "→ Chinese Version\nPersuade xor Discover September 2009\nWhen meeting people you don\u0026rsquo;t know very well, the convention is to seem extra friendly. You smile and say \u0026ldquo;pleased to meet you,\u0026rdquo; whether you are or not. There\u0026rsquo;s nothing dishonest about this. Everyone knows that these little social lies aren\u0026rsquo;t meant to be taken literally, just as everyone knows that \u0026ldquo;Can you pass the salt?\u0026rdquo; is only grammatically a question.\nI\u0026rsquo;m perfectly willing to smile and say \u0026ldquo;pleased to meet you\u0026rdquo; when meeting new people. But there is another set of customs for …"
  },{
    "title": "Post-Medium Publishing",
    "url": "/paul_graham/essays_en/publishing/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "Post-Medium Publishing September 2009\nPublishers of all types, from news to music, are unhappy that consumers won\u0026rsquo;t pay for content anymore. At least, that\u0026rsquo;s how they see it.\nIn fact consumers never really were paying for content, and publishers weren\u0026rsquo;t really selling it either. If the content was what they were selling, why has the price of books or music or movies always depended mostly on the format? Why didn\u0026rsquo;t better content cost more? [1]\n",
    "description": "",
    "tags": ["publishing","media","content","digital","business models"],
    "categories": [],
    "content": "Post-Medium Publishing September 2009\nPublishers of all types, from news to music, are unhappy that consumers won\u0026rsquo;t pay for content anymore. At least, that\u0026rsquo;s how they see it.\nIn fact consumers never really were paying for content, and publishers weren\u0026rsquo;t really selling it either. If the content was what they were selling, why has the price of books or music or movies always depended mostly on the format? Why didn\u0026rsquo;t better content cost more? [1]\nA copy of Time costs $5 for 58 pages, or 8.6 cents a page. The Economist costs $7 for 86 pages, or 8.1 cents a page. Better …"
  },{
    "title": "Pow",
    "url": "/paul_graham/essays_en/pow/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nPow January 2017\nPeople who are powerful but uncharismatic will tend to be disliked. Their power makes them a target for criticism that they don\u0026rsquo;t have the charisma to disarm. That was Hillary Clinton\u0026rsquo;s problem. It also tends to be a problem for any CEO who is more of a builder than a schmoozer. And yet the builder-type CEO is (like Hillary) probably the best person for the job.\n",
    "description": "",
    "tags": ["power","charisma","leadership","human_nature"],
    "categories": [],
    "content": "→ 中文版本\nPow January 2017\nPeople who are powerful but uncharismatic will tend to be disliked. Their power makes them a target for criticism that they don\u0026rsquo;t have the charisma to disarm. That was Hillary Clinton\u0026rsquo;s problem. It also tends to be a problem for any CEO who is more of a builder than a schmoozer. And yet the builder-type CEO is (like Hillary) probably the best person for the job.\nI don\u0026rsquo;t think there is any solution to this problem. It\u0026rsquo;s human nature. The best we can do is to recognize that it\u0026rsquo;s happening, and to understand that being a magnet for criticism …"
  },{
    "title": "Progbot",
    "url": "/paul_graham/essays_en/progbot/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nProgbot January 1993 (This essay is from the introduction to On Lisp.)\nIt\u0026rsquo;s a long-standing principle of programming style that the functional elements of a program should not be too large. If some component of a program grows beyond the stage where it\u0026rsquo;s readily comprehensible, it becomes a mass of complexity which conceals errors as easily as a big city conceals fugitives. Such software will be hard to read, hard to test, and hard to debug.\n",
    "description": "",
    "tags": ["lisp","programming","bottom_up_design","software_engineering"],
    "categories": [],
    "content": "→ 中文版本\nProgbot January 1993 (This essay is from the introduction to On Lisp.)\nIt\u0026rsquo;s a long-standing principle of programming style that the functional elements of a program should not be too large. If some component of a program grows beyond the stage where it\u0026rsquo;s readily comprehensible, it becomes a mass of complexity which conceals errors as easily as a big city conceals fugitives. Such software will be hard to read, hard to test, and hard to debug.\nIn accordance with this principle, a large program must be divided into pieces, and the larger the program, the more it must be …"
  },{
    "title": "Prop62",
    "url": "/paul_graham/essays_en/prop62/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nProp62 November 2016\nIf you\u0026rsquo;re a California voter, there is an important proposition on your ballot this year: Proposition 62, which bans the death penalty.\nWhen I was younger I used to think the debate about the death penalty was about when it\u0026rsquo;s ok to take a human life. Is it ok to kill a killer?\nBut that is not the issue here.\nThe real world does not work like the version I was shown on TV growing up. The police often arrest the wrong person. Defendants\u0026rsquo; lawyers are often incompetent. And prosecutors are often motivated more by publicity than justice.\n",
    "description": "",
    "tags": ["death_penalty","california","justice","voting","social_issues"],
    "categories": [],
    "content": "→ 中文版本\nProp62 November 2016\nIf you\u0026rsquo;re a California voter, there is an important proposition on your ballot this year: Proposition 62, which bans the death penalty.\nWhen I was younger I used to think the debate about the death penalty was about when it\u0026rsquo;s ok to take a human life. Is it ok to kill a killer?\nBut that is not the issue here.\nThe real world does not work like the version I was shown on TV growing up. The police often arrest the wrong person. Defendants\u0026rsquo; lawyers are often incompetent. And prosecutors are often motivated more by publicity than justice.\nIn the real …"
  },{
    "title": "Property",
    "url": "/paul_graham/essays_en/property/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nProperty March 2012\nAs a child I read a book of stories about a famous judge in eighteenth century Japan called Ooka Tadasuke. One of the cases he decided was brought by the owner of a food shop. A poor student who could afford only rice was eating his rice while enjoying the delicious cooking smells coming from the food shop. The owner wanted the student to pay for the smells he was enjoying.\n",
    "description": "",
    "tags": ["property","copyright","intellectual_property","technology","law"],
    "categories": [],
    "content": "→ 中文版本\nProperty March 2012\nAs a child I read a book of stories about a famous judge in eighteenth century Japan called Ooka Tadasuke. One of the cases he decided was brought by the owner of a food shop. A poor student who could afford only rice was eating his rice while enjoying the delicious cooking smells coming from the food shop. The owner wanted the student to pay for the smells he was enjoying.\nThe student was stealing his smells!\nThis story often comes to mind when I hear the RIAA and MPAA accusing people of stealing music and movies.\nIt sounds ridiculous to us to treat smells as …"
  },{
    "title": "Putting Ideas into Words",
    "url": "/paul_graham/essays_en/words/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版\nPutting Ideas into Words February 2022\nWriting about something, even something you know well, usually shows you that you didn\u0026rsquo;t know it as well as you thought. Putting ideas into words is a severe test. The first words you choose are usually wrong; you have to rewrite sentences over and over to get them exactly right. And your ideas won\u0026rsquo;t just be imprecise, but incomplete too. Half the ideas that end up in an essay will be ones you thought of while you were writing it. Indeed, that\u0026rsquo;s why I write them.\n",
    "description": "",
    "tags": ["writing","ideas","language","thinking","communication"],
    "categories": [],
    "content": "→ 中文版\nPutting Ideas into Words February 2022\nWriting about something, even something you know well, usually shows you that you didn\u0026rsquo;t know it as well as you thought. Putting ideas into words is a severe test. The first words you choose are usually wrong; you have to rewrite sentences over and over to get them exactly right. And your ideas won\u0026rsquo;t just be imprecise, but incomplete too. Half the ideas that end up in an essay will be ones you thought of while you were writing it. Indeed, that\u0026rsquo;s why I write them.\nOnce you publish something, the convention is that whatever you wrote …"
  },{
    "title": "Ramen Profitable",
    "url": "/paul_graham/essays_en/ramenprofitable/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nRamen Profitable July 2009\nNow that the term \u0026ldquo;ramen profitable\u0026rdquo; has become widespread, I ought to explain precisely what the idea entails.\nRamen profitable means a startup makes just enough to pay the founders\u0026rsquo; living expenses. This is a different form of profitability than startups have traditionally aimed for. Traditional profitability means a big bet is finally paying off, whereas the main importance of ramen profitability is that it buys you time. [1]\n",
    "description": "",
    "tags": ["startup","founder","entrepreneur","profitability","funding","yc","ramen_profitable"],
    "categories": [],
    "content": "→ 中文版本\nRamen Profitable July 2009\nNow that the term \u0026ldquo;ramen profitable\u0026rdquo; has become widespread, I ought to explain precisely what the idea entails.\nRamen profitable means a startup makes just enough to pay the founders\u0026rsquo; living expenses. This is a different form of profitability than startups have traditionally aimed for. Traditional profitability means a big bet is finally paying off, whereas the main importance of ramen profitability is that it buys you time. [1]\nIn the past, a startup would usually become profitable only after raising and spending quite a lot of money. A …"
  },{
    "title": "Relentlessly Resourceful",
    "url": "/paul_graham/essays_en/relres/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nRelentlessly Resourceful March 2009\nA couple days ago I finally got being a good startup founder down to two words: relentlessly resourceful.\nTill then the best I\u0026rsquo;d managed was to get the opposite quality down to one: hapless. Most dictionaries say hapless means unlucky. But the dictionaries are not doing a very good job. A team that outplays its opponents but loses because of a bad decision by the referee could be called unlucky, but not hapless. Hapless implies passivity. To be hapless is to be battered by circumstances — to let the world have its way with you, instead of having your way with the world. [1]\n",
    "description": "",
    "tags": ["startup","resourcefulness","founders","entrepreneurship","success","persistence"],
    "categories": [],
    "content": "→ 中文版本\nRelentlessly Resourceful March 2009\nA couple days ago I finally got being a good startup founder down to two words: relentlessly resourceful.\nTill then the best I\u0026rsquo;d managed was to get the opposite quality down to one: hapless. Most dictionaries say hapless means unlucky. But the dictionaries are not doing a very good job. A team that outplays its opponents but loses because of a bad decision by the referee could be called unlucky, but not hapless. Hapless implies passivity. To be hapless is to be battered by circumstances — to let the world have its way with you, instead of having …"
  },{
    "title": "Return of the Mac",
    "url": "/paul_graham/essays_en/mac/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "Return of the Mac March 2005\nAll the best hackers I know are gradually switching to Macs. My friend Robert said his whole research group at MIT recently bought themselves Powerbooks. These guys are not the graphic designers and grandmas who were buying Macs at Apple\u0026rsquo;s low point in the mid 1990s. They\u0026rsquo;re about as hardcore OS hackers as you can get.\nThe reason, of course, is OS X. Powerbooks are beautifully designed and run FreeBSD. What more do you need to know?\n",
    "description": "",
    "tags": ["mac","apple","programming","hackers","technology","os","computers","software"],
    "categories": [],
    "content": "Return of the Mac March 2005\nAll the best hackers I know are gradually switching to Macs. My friend Robert said his whole research group at MIT recently bought themselves Powerbooks. These guys are not the graphic designers and grandmas who were buying Macs at Apple\u0026rsquo;s low point in the mid 1990s. They\u0026rsquo;re about as hardcore OS hackers as you can get.\nThe reason, of course, is OS X. Powerbooks are beautifully designed and run FreeBSD. What more do you need to know?\nI got a Powerbook at the end of last year. When my IBM Thinkpad\u0026rsquo;s hard disk died soon after, it became my only …"
  },{
    "title": "Revenge of the Nerds",
    "url": "/paul_graham/essays_en/icad/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nRevenge of the Nerds Want to start a startup? Get funded by Y Combinator.\nMay 2002\n\u0026ldquo;We were after the C++ programmers. We managed to drag a lot of them about halfway to Lisp.\u0026rdquo;\nGuy Steele, co-author of the Java spec In the software business there is an ongoing struggle between the pointy-headed academics, and another equally formidable force, the pointy-haired bosses. Everyone knows who the pointy-haired boss is, right? I think most people in the technology world not only recognize this cartoon character, but know the actual person in their company that he is modelled upon.\n",
    "description": "",
    "tags": ["Lisp","programming languages","software development","technology","innovation","startups"],
    "categories": [],
    "content": "→ 中文版本\nRevenge of the Nerds Want to start a startup? Get funded by Y Combinator.\nMay 2002\n\u0026ldquo;We were after the C++ programmers. We managed to drag a lot of them about halfway to Lisp.\u0026rdquo;\nGuy Steele, co-author of the Java spec In the software business there is an ongoing struggle between the pointy-headed academics, and another equally formidable force, the pointy-haired bosses. Everyone knows who the pointy-haired boss is, right? I think most people in the technology world not only recognize this cartoon character, but know the actual person in their company that he is modelled upon. …"
  },{
    "title": "RSS",
    "url": "/paul_graham/essays_en/rss/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nRSS Aaron Swartz created a scraped feed of the essays page.\nNote: This appears to be a very brief note about RSS feed creation for Paul Graham\u0026rsquo;s essays page, created by Aaron Swartz.\n",
    "description": "",
    "tags": ["rss","aaron swartz","web feeds","syndication"],
    "categories": [],
    "content": "→ 中文版本\nRSS Aaron Swartz created a scraped feed of the essays page.\nNote: This appears to be a very brief note about RSS feed creation for Paul Graham\u0026rsquo;s essays page, created by Aaron Swartz.\n"
  },{
    "title": "Schlep Blindness",
    "url": "/paul_graham/essays_en/schlep/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nSchlep Blindness January 2012\nThere are great startup ideas lying around unexploited right under our noses. One reason we don\u0026rsquo;t see them is a phenomenon I call schlep blindness. Schlep was originally a Yiddish word but has passed into general use in the US. It means a tedious, unpleasant task.\nNo one likes schleps, but hackers especially dislike them. Most hackers who start startups wish they could do it by just writing some clever software, putting it on a server somewhere, and watching the money roll in—without ever having to talk to users, or negotiate with other companies, or deal with other people\u0026rsquo;s broken code. Maybe that\u0026rsquo;s possible, but I haven\u0026rsquo;t seen it.\n",
    "description": "",
    "tags": ["schlep","startup","programming","entrepreneurship","y_combinator","hard_problems"],
    "categories": [],
    "content": "→ 中文版本\nSchlep Blindness January 2012\nThere are great startup ideas lying around unexploited right under our noses. One reason we don\u0026rsquo;t see them is a phenomenon I call schlep blindness. Schlep was originally a Yiddish word but has passed into general use in the US. It means a tedious, unpleasant task.\nNo one likes schleps, but hackers especially dislike them. Most hackers who start startups wish they could do it by just writing some clever software, putting it on a server somewhere, and watching the money roll in—without ever having to talk to users, or negotiate with other companies, or …"
  },{
    "title": "See Randomness",
    "url": "/paul_graham/essays_en/randomness/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nSee Randomness April 2006, rev August 2009\nPlato quotes Socrates as saying \u0026ldquo;the unexamined life is not worth living.\u0026rdquo; Part of what he meant was that the proper role of humans is to think, just as the proper role of anteaters is to poke their noses into anthills.\nA lot of ancient philosophy had the quality — and I don\u0026rsquo;t mean this in an insulting way — of the kind of conversations freshmen have late at night in common rooms: What is our purpose? Well, we humans are as conspicuously different from other animals as the anteater. In our case the distinguishing feature is the ability to reason. So obviously that is what we should be doing, and a human who doesn\u0026rsquo;t is doing a bad job of being human — is no better than an animal. Now we\u0026rsquo;d give a different answer. At least, someone Socrates\u0026rsquo;s age would. We\u0026rsquo;d ask why we even suppose we have a \u0026ldquo;purpose\u0026rdquo; in life. We may be better adapted for some things than others; we may be happier doing things we\u0026rsquo;re adapted for; but why assume purpose?\n",
    "description": "",
    "tags": ["philosophy","thinking","randomness","ideas","reason","evolution","dawkins"],
    "categories": [],
    "content": "→ 中文版本\nSee Randomness April 2006, rev August 2009\nPlato quotes Socrates as saying \u0026ldquo;the unexamined life is not worth living.\u0026rdquo; Part of what he meant was that the proper role of humans is to think, just as the proper role of anteaters is to poke their noses into anthills.\nA lot of ancient philosophy had the quality — and I don\u0026rsquo;t mean this in an insulting way — of the kind of conversations freshmen have late at night in common rooms: What is our purpose? Well, we humans are as conspicuously different from other animals as the anteater. In our case the distinguishing feature is …"
  },{
    "title": "Six Principles for Making New Things",
    "url": "/paul_graham/essays_en/newthings/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nSix Principles for Making New Things February 2008\nThe fiery reaction to the release of Arc had an unexpected consequence: it made me realize I had a design philosophy. The main complaint of the more articulate critics was that Arc seemed so flimsy. After years of working on it, all I had to show for myself were a few thousand lines of macros? Why hadn\u0026rsquo;t I worked on more substantial problems?\n",
    "description": "",
    "tags": ["innovation","design","simplicity","startups","creativity","problem-solving"],
    "categories": [],
    "content": "→ 中文版本\nSix Principles for Making New Things February 2008\nThe fiery reaction to the release of Arc had an unexpected consequence: it made me realize I had a design philosophy. The main complaint of the more articulate critics was that Arc seemed so flimsy. After years of working on it, all I had to show for myself were a few thousand lines of macros? Why hadn\u0026rsquo;t I worked on more substantial problems?\nAs I was mulling over these remarks it struck me how familiar they seemed. This was exactly the kind of thing people said at first about Viaweb, and Y Combinator, and most of my essays.\nWhen …"
  },{
    "title": "Snapshot: Viaweb, June 1998",
    "url": "/paul_graham/essays_en/vw/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nSnapshot: Viaweb, June 1998 January 2012\nA few hours before the Yahoo acquisition was announced in June 1998 I took a snapshot of Viaweb\u0026rsquo;s site. I thought it might be interesting to look at one day.The first thing one notices is is how tiny the pages are. Screens were a lot smaller in 1998. If I remember correctly, our frontpage used to just fit in the size window people typically used then.Browsers then (IE 6 was still 3 years in the future) had few fonts and they weren\u0026rsquo;t antialiased. If you wanted to make pages that looked good, you had to render display text as images.You may notice a certain similarity between the Viaweb and Y Combinator logos. We did that as an inside joke when we started YC. Considering how basic a red circle is, it seemed surprising to me when we started Viaweb how few other companies used one as their logo. A bit later I realized why.On the Company page you\u0026rsquo;ll notice a mysterious individual called John McArtyem. Robert Morris (aka Rtm) was so publicity averse after the Worm that he didn\u0026rsquo;t want his name on the site. I managed to get him to agree to a compromise: we could use his bio but not his name. He has since relaxed a bit on that point.Trevor graduated at about the same time the acquisition closed, so in the course of 4 days he went from impecunious grad student to millionaire PhD. The culmination of my career as a writer of press releases was one celebrating his graduation, illustrated with a drawing I did of him during a meeting.(Trevor also appears as Trevino Bagwell in our directory of web designers merchants could hire to build stores for them. We inserted him as a ringer in case some competitor tried to spam our web designers. We assumed his logo would deter any actual customers, but it did not.)Back in the 90s, to get users you had to get mentioned in magazines and newspapers. There were not the same ways to get found online that there are today. So we used to pay a PR firm $16,000 a month to get us mentioned in the press. Fortunately reporters liked us.In our advice about getting traffic from search engines (I don't think the term SEO had been coined yet), we say there are only 7 that matter: Yahoo, AltaVista, Excite, WebCrawler, InfoSeek, Lycos, and HotBot. Notice anything missing? Google was incorporated that September.We supported online transactions via a company called Cybercash, since if we lacked that feature we'd have gotten beaten up in product comparisons. But Cybercash was so bad and most stores' order volumes were so low that it was better if merchants processed orders like phone orders. We had a page in our site trying to talk merchants out of doing real time authorizations.The whole site was organized like a funnel, directing people to the test drive. It was a novel thing to be able to try out software online. We put cgi-bin in our dynamic urls to fool competitors about how our software worked.We had some well known users. Needless to say, Frederick's of Hollywood got the most traffic. We charged a flat fee of $300/month for big stores, so it was a little alarming to have users who got lots of traffic. I once calculated how much Frederick\u0026rsquo;s was costing us in bandwidth, and it was about $300/month.Since we hosted all the stores, which together were getting just over 10 million page views per month in June 1998, we consumed what at the time seemed a lot of bandwidth. We had 2 T1s (3 Mb/sec) coming into our offices. In those days there was no AWS. Even colocating servers seemed too risky, considering how often things went wrong with them. So we had our servers in our offices. Or more precisely, in Trevor\u0026rsquo;s office. In return for the unique privilege of sharing his office with no other humans, he had to share it with 6 shrieking tower servers. His office was nicknamed the Hot Tub on account of the heat they generated. Most days his stack of window air conditioners could keep up.For describing pages, we had a template language called RTML, which supposedly stood for something, but which in fact I named after Rtm. RTML was Common Lisp augmented by some macros and libraries, and concealed under a structure editor that made it look like it had syntax.Since we did continuous releases, our software didn\u0026rsquo;t actually have versions. But in those days the trade press expected versions, so we made them up. If we wanted to get lots of attention, we made the version number an integer. That \u0026ldquo;version 4.0\u0026rdquo; icon was generated by our own button generator, incidentally. The whole Viaweb site was made with our software, even though it wasn\u0026rsquo;t an online store, because we wanted to experience what our users did.At the end of 1997, we released a general purpose shopping search engine called Shopfind. It was pretty advanced for the time. It had a programmable crawler that could crawl most of the different stores online and pick out the products.\n",
    "description": "",
    "tags": ["Viaweb","Yahoo","acquisition","web development","history","technology"],
    "categories": [],
    "content": "→ 中文版本\nSnapshot: Viaweb, June 1998 January 2012\nA few hours before the Yahoo acquisition was announced in June 1998 I took a snapshot of Viaweb\u0026rsquo;s site. I thought it might be interesting to look at one day.The first thing one notices is is how tiny the pages are. Screens were a lot smaller in 1998. If I remember correctly, our frontpage used to just fit in the size window people typically used then.Browsers then (IE 6 was still 3 years in the future) had few fonts and they weren\u0026rsquo;t antialiased. If you wanted to make pages that looked good, you had to render display text as images.You …"
  },{
    "title": "Some Heroes",
    "url": "/paul_graham/essays_en/heroes/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nSome Heroes April 2008\nThere are some topics I save up because they\u0026rsquo;ll be so much fun to write about. This is one of them: a list of my heroes.\nI\u0026rsquo;m not claiming this is a list of the n most admirable people. Who could make such a list, even if they wanted to? Einstein isn\u0026rsquo;t on the list, for example, even though he probably deserves to be on any shortlist of admirable people. I once asked a physicist friend if Einstein was really as smart as his fame implies, and she said that yes, he was. So why isn\u0026rsquo;t he on the list? Because I had to ask. This is a list of people who\u0026rsquo;ve influenced me, not people who would have if I understood their work.\n",
    "description": "",
    "tags": ["heroes","role models","excellence","honesty","dedication","influence"],
    "categories": [],
    "content": "→ 中文版本\nSome Heroes April 2008\nThere are some topics I save up because they\u0026rsquo;ll be so much fun to write about. This is one of them: a list of my heroes.\nI\u0026rsquo;m not claiming this is a list of the n most admirable people. Who could make such a list, even if they wanted to? Einstein isn\u0026rsquo;t on the list, for example, even though he probably deserves to be on any shortlist of admirable people. I once asked a physicist friend if Einstein was really as smart as his fame implies, and she said that yes, he was. So why isn\u0026rsquo;t he on the list? Because I had to ask. This is a list of people …"
  },{
    "title": "Startup = Growth",
    "url": "/paul_graham/essays_en/growth/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nStartup = Growth Want to start a startup? Get funded by Y Combinator.\nSeptember 2012\nA startup is a company designed to grow fast. Being newly founded does not in itself make a company a startup. Nor is it necessary for a startup to work on technology, or take venture funding, or have some sort of \u0026ldquo;exit.\u0026rdquo; The only essential thing is growth. Everything else we associate with startups follows from growth.\n",
    "description": "",
    "tags": ["startups","growth","venture capital","funding","business"],
    "categories": [],
    "content": "→ 中文版本\nStartup = Growth Want to start a startup? Get funded by Y Combinator.\nSeptember 2012\nA startup is a company designed to grow fast. Being newly founded does not in itself make a company a startup. Nor is it necessary for a startup to work on technology, or take venture funding, or have some sort of \u0026ldquo;exit.\u0026rdquo; The only essential thing is growth. Everything else we associate with startups follows from growth.\nIf you want to start one it\u0026rsquo;s important to understand that. Startups are so hard that you can\u0026rsquo;t be pointed off to the side and hope to succeed. You have to know …"
  },{
    "title": "Startup Investing Trends",
    "url": "/paul_graham/essays_en/invtrend/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nStartup Investing Trends June 2013\n(This talk was written for an audience of investors.)\nY Combinator has now funded 564 startups including the current batch, which has 53. The total valuation of the 287 that have valuations (either by raising an equity round, getting acquired, or dying) is about $11.7 billion, and the 511 prior to the current batch have collectively raised about $1.7 billion. [1]\nAs usual those numbers are dominated by a few big winners. The top 10 startups account for 8.6 of that 11.7 billion. But there is a peloton of younger startups behind them. There are about 40 more that have a shot at being really big.\n",
    "description": "",
    "tags": ["investing","startups","trends","venture_capital","angels","funding"],
    "categories": [],
    "content": "→ 中文版本\nStartup Investing Trends June 2013\n(This talk was written for an audience of investors.)\nY Combinator has now funded 564 startups including the current batch, which has 53. The total valuation of the 287 that have valuations (either by raising an equity round, getting acquired, or dying) is about $11.7 billion, and the 511 prior to the current batch have collectively raised about $1.7 billion. [1]\nAs usual those numbers are dominated by a few big winners. The top 10 startups account for 8.6 of that 11.7 billion. But there is a peloton of younger startups behind them. There are about 40 …"
  },{
    "title": "Startups in 13 Sentences",
    "url": "/paul_graham/essays_en/13sentences/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nStartups in 13 Sentences Want to start a startup? Get funded by Y Combinator. Watch how this essay was written. February 2009\nOne of the things I always tell startups is a principle I learned from Paul Buchheit: it\u0026rsquo;s better to make a few people really happy than to make a lot of people semi-happy. I was saying recently to a reporter that if I could only tell startups 10 things, this would be one of them. Then I thought: what would the other 9 be?\n",
    "description": "",
    "tags": ["startup","founders","users","launch","advice"],
    "categories": [],
    "content": "→ 中文版本\nStartups in 13 Sentences Want to start a startup? Get funded by Y Combinator. Watch how this essay was written. February 2009\nOne of the things I always tell startups is a principle I learned from Paul Buchheit: it\u0026rsquo;s better to make a few people really happy than to make a lot of people semi-happy. I was saying recently to a reporter that if I could only tell startups 10 things, this would be one of them. Then I thought: what would the other 9 be?\nWhen I made the list there turned out to be 13:\nPick good cofounders. Cofounders are for a startup what location is for real estate. You …"
  },{
    "title": "Stuff",
    "url": "/paul_graham/essays_en/stuff/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nStuff July 2007\nI have too much stuff. Most people in America do. In fact, the poorer people are, the more stuff they seem to have. Hardly anyone is so poor that they can\u0026rsquo;t afford a front yard full of old cars.\nIt wasn\u0026rsquo;t always this way. Stuff used to be rare and valuable. You can still see evidence of that if you look for it. For example, in my house in Cambridge, which was built in 1876, the bedrooms don\u0026rsquo;t have closets. In those days people\u0026rsquo;s stuff fit in a chest of drawers. Even as recently as a few decades ago there was a lot less stuff. When I look back at photos from the 1970s, I\u0026rsquo;m surprised how empty houses look. As a kid I had what I thought was a huge fleet of toy cars, but they\u0026rsquo;d be dwarfed by the number of toys my nephews have. All together my Matchboxes and Corgis took up about a third of the surface of my bed. In my nephews\u0026rsquo; rooms the bed is the only clear space.\n",
    "description": "",
    "tags": ["materialism","consumerism","minimalism","possessions","lifestyle"],
    "categories": [],
    "content": "→ 中文版本\nStuff July 2007\nI have too much stuff. Most people in America do. In fact, the poorer people are, the more stuff they seem to have. Hardly anyone is so poor that they can\u0026rsquo;t afford a front yard full of old cars.\nIt wasn\u0026rsquo;t always this way. Stuff used to be rare and valuable. You can still see evidence of that if you look for it. For example, in my house in Cambridge, which was built in 1876, the bedrooms don\u0026rsquo;t have closets. In those days people\u0026rsquo;s stuff fit in a chest of drawers. Even as recently as a few decades ago there was a lot less stuff. When I look back at …"
  },{
    "title": "Succinctness is Power",
    "url": "/paul_graham/essays_en/power/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nSuccinctness is Power May 2002\n\u0026ldquo;The quantity of meaning compressed into a small space by algebraic signs, is another circumstance that facilitates the reasonings we are accustomed to carry on by their aid.\u0026rdquo; - Charles Babbage, quoted in Iverson\u0026rsquo;s Turing Award Lecture\nIn the discussion about issues raised by Revenge of the Nerds on the LL1 mailing list, Paul Prescod wrote something that stuck in my mind. Python\u0026rsquo;s goal is regularity and readability, not succinctness. On the face of it, this seems a rather damning thing to claim about a programming language. As far as I can tell, succinctness = power. If so, then substituting, we get Python\u0026rsquo;s goal is regularity and readability, not power. and this doesn\u0026rsquo;t seem a tradeoff (if it is a tradeoff) that you\u0026rsquo;d want to make. It\u0026rsquo;s not far from saying that Python\u0026rsquo;s goal is not to be effective as a programming language.\n",
    "description": "",
    "tags": ["programming","language_design","succinctness","software_development"],
    "categories": [],
    "content": "→ 中文版本\nSuccinctness is Power May 2002\n\u0026ldquo;The quantity of meaning compressed into a small space by algebraic signs, is another circumstance that facilitates the reasonings we are accustomed to carry on by their aid.\u0026rdquo; - Charles Babbage, quoted in Iverson\u0026rsquo;s Turing Award Lecture\nIn the discussion about issues raised by Revenge of the Nerds on the LL1 mailing list, Paul Prescod wrote something that stuck in my mind. Python\u0026rsquo;s goal is regularity and readability, not succinctness. On the face of it, this seems a rather damning thing to claim about a programming language. As far …"
  },{
    "title": "Superlinear Returns",
    "url": "/paul_graham/essays_en/superlinear/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nSuperlinear Returns October 2023\nOne of the most important things I didn\u0026rsquo;t understand about the world when I was a child is the degree to which the returns for performance are superlinear.\nTeachers and coaches implicitly told us the returns were linear. \u0026ldquo;You get out,\u0026rdquo; I heard a thousand times, \u0026ldquo;what you put in.\u0026rdquo; They meant well, but this is rarely true. If your product is only half as good as your competitor\u0026rsquo;s, you don\u0026rsquo;t get half as many customers. You get no customers, and you go out of business.\n",
    "description": "",
    "tags": ["superlinear","exponential","performance","work","success","ambition","learning"],
    "categories": [],
    "content": "→ 中文版本\nSuperlinear Returns October 2023\nOne of the most important things I didn\u0026rsquo;t understand about the world when I was a child is the degree to which the returns for performance are superlinear.\nTeachers and coaches implicitly told us the returns were linear. \u0026ldquo;You get out,\u0026rdquo; I heard a thousand times, \u0026ldquo;what you put in.\u0026rdquo; They meant well, but this is rarely true. If your product is only half as good as your competitor\u0026rsquo;s, you don\u0026rsquo;t get half as many customers. You get no customers, and you go out of business.\nIt\u0026rsquo;s obviously true that the returns for …"
  },{
    "title": "Tablets",
    "url": "/paul_graham/essays_en/tablets/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nTablets December 2010\nI was thinking recently how inconvenient it was not to have a general term for iPhones, iPads, and the corresponding things running Android. The closest to a general term seems to be \u0026ldquo;mobile devices,\u0026rdquo; but that (a) applies to any mobile phone, and (b) doesn\u0026rsquo;t really capture what\u0026rsquo;s distinctive about the iPad.\nAfter a few seconds it struck me that what we\u0026rsquo;ll end up calling these things is tablets. The only reason we even consider calling them \u0026ldquo;mobile devices\u0026rdquo; is that the iPhone preceded the iPad. If the iPad had come first, we wouldn\u0026rsquo;t think of the iPhone as a phone; we\u0026rsquo;d think of it as a tablet small enough to hold up to your ear.\n",
    "description": "",
    "tags": ["tablets","mobile devices","software","ephemeralization","Apple","iPhone","iPad"],
    "categories": [],
    "content": "→ 中文版本\nTablets December 2010\nI was thinking recently how inconvenient it was not to have a general term for iPhones, iPads, and the corresponding things running Android. The closest to a general term seems to be \u0026ldquo;mobile devices,\u0026rdquo; but that (a) applies to any mobile phone, and (b) doesn\u0026rsquo;t really capture what\u0026rsquo;s distinctive about the iPad.\nAfter a few seconds it struck me that what we\u0026rsquo;ll end up calling these things is tablets. The only reason we even consider calling them \u0026ldquo;mobile devices\u0026rdquo; is that the iPhone preceded the iPad. If the iPad had come first, we …"
  },{
    "title": "Taste for Makers",
    "url": "/paul_graham/essays_en/taste/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nTaste for Makers February 2002\n\u0026ldquo;\u0026hellip;Copernicus\u0026rsquo; aesthetic objections to [equants] provided one essential motive for his rejection of the Ptolemaic system\u0026hellip;.\u0026rdquo;\nThomas Kuhn, The Copernican Revolution \u0026ldquo;All of us had been trained by Kelly Johnson and believed fanatically in his insistence that an airplane that looked beautiful would fly the same way.\u0026rdquo;\nBen Rich, Skunk Works \u0026ldquo;Beauty is the first test: there is no permanent place in this world for ugly mathematics.\u0026rdquo;\n",
    "description": "",
    "tags": ["taste","design","beauty","aesthetics","simplicity","creativity","art"],
    "categories": [],
    "content": "→ 中文版本\nTaste for Makers February 2002\n\u0026ldquo;\u0026hellip;Copernicus\u0026rsquo; aesthetic objections to [equants] provided one essential motive for his rejection of the Ptolemaic system\u0026hellip;.\u0026rdquo;\nThomas Kuhn, The Copernican Revolution \u0026ldquo;All of us had been trained by Kelly Johnson and believed fanatically in his insistence that an airplane that looked beautiful would fly the same way.\u0026rdquo;\nBen Rich, Skunk Works \u0026ldquo;Beauty is the first test: there is no permanent place in this world for ugly mathematics.\u0026rdquo;\nG. H. Hardy, A Mathematician\u0026rsquo;s Apology I was talking recently to a …"
  },{
    "title": "The 18 Mistakes That Kill Startups",
    "url": "/paul_graham/essays_en/startupmistakes/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ Chinese Version\nThe 18 Mistakes That Kill Startups October 2006\nIn the Q \u0026amp; A period after a recent talk, someone asked what made startups fail. After standing there gaping for a few seconds I realized this was kind of a trick question. It\u0026rsquo;s equivalent to asking how to make a startup succeed — if you avoid every cause of failure, you succeed — and that\u0026rsquo;s too big a question to answer on the fly.\n",
    "description": "",
    "tags": ["startups","mistakes","failure","entrepreneurship","business advice"],
    "categories": [],
    "content": "→ Chinese Version\nThe 18 Mistakes That Kill Startups October 2006\nIn the Q \u0026amp; A period after a recent talk, someone asked what made startups fail. After standing there gaping for a few seconds I realized this was kind of a trick question. It\u0026rsquo;s equivalent to asking how to make a startup succeed — if you avoid every cause of failure, you succeed — and that\u0026rsquo;s too big a question to answer on the fly.\nAfterwards I realized it could be helpful to look at the problem from this direction. If you have a list of all the things you shouldn\u0026rsquo;t do, you can turn that into a recipe for …"
  },{
    "title": "The Age of the Essay",
    "url": "/paul_graham/essays_en/essay/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ Chinese Version\nThe Age of the Essay September 2004\nRemember the essays you had to write in high school? Topic sentence, introductory paragraph, supporting paragraphs, conclusion. The conclusion being, say, that Ahab in Moby Dick was a Christ-like figure.\nOy. So I\u0026rsquo;m going to try to give the other side of the story: what an essay really is, and how you write one. Or at least, how I write one.\n",
    "description": "",
    "tags": ["essay","writing","education","montaigne","literature","history","creativity","observation"],
    "categories": [],
    "content": "→ Chinese Version\nThe Age of the Essay September 2004\nRemember the essays you had to write in high school? Topic sentence, introductory paragraph, supporting paragraphs, conclusion. The conclusion being, say, that Ahab in Moby Dick was a Christ-like figure.\nOy. So I\u0026rsquo;m going to try to give the other side of the story: what an essay really is, and how you write one. Or at least, how I write one.\nMods The most obvious difference between real essays and the things one has to write in school is that real essays are not exclusively about English literature. Certainly schools should teach …"
  },{
    "title": "The Airbnbs",
    "url": "/paul_graham/essays_en/airbnbs/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nThe Airbnbs December 2020\nTo celebrate Airbnb\u0026rsquo;s IPO and to help future founders, I thought it might be useful to explain what was special about Airbnb.\nWhat was special about the Airbnbs was how earnest they were. They did nothing half-way, and we could sense this even in the interview. Sometimes after we interviewed a startup we\u0026rsquo;d be uncertain what to do, and have to talk it over. Other times we\u0026rsquo;d just look at one another and smile. The Airbnbs\u0026rsquo; interview was that kind. We didn\u0026rsquo;t even like the idea that much. Nor did users, at that stage; they had no growth. But the founders seemed so full of energy that it was impossible not to like them.\n",
    "description": "",
    "tags": ["airbnb","founders","startup","yc","entrepreneurship"],
    "categories": [],
    "content": "→ 中文版本\nThe Airbnbs December 2020\nTo celebrate Airbnb\u0026rsquo;s IPO and to help future founders, I thought it might be useful to explain what was special about Airbnb.\nWhat was special about the Airbnbs was how earnest they were. They did nothing half-way, and we could sense this even in the interview. Sometimes after we interviewed a startup we\u0026rsquo;d be uncertain what to do, and have to talk it over. Other times we\u0026rsquo;d just look at one another and smile. The Airbnbs\u0026rsquo; interview was that kind. We didn\u0026rsquo;t even like the idea that much. Nor did users, at that stage; they had no …"
  },{
    "title": "The Anatomy of Determination",
    "url": "/paul_graham/essays_en/determination/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ Chinese Version\nThe Anatomy of Determination September 2009\nLike all investors, we spend a lot of time trying to learn how to predict which startups will succeed. We probably spend more time thinking about it than most, because we invest the earliest. Prediction is usually all we have to rely on.\nWe learned quickly that the most important predictor of success is determination. At first we thought it might be intelligence. Everyone likes to believe that\u0026rsquo;s what makes startups succeed. It makes a better story that a company won because its founders were so smart. The PR people and reporters who spread such stories probably believe them themselves. But while it certainly helps to be smart, it\u0026rsquo;s not the deciding factor. There are plenty of people as smart as Bill Gates who achieve nothing.\n",
    "description": "",
    "tags": ["determination","willpower","discipline","ambition","startups","success","psychology","achievement"],
    "categories": [],
    "content": "→ Chinese Version\nThe Anatomy of Determination September 2009\nLike all investors, we spend a lot of time trying to learn how to predict which startups will succeed. We probably spend more time thinking about it than most, because we invest the earliest. Prediction is usually all we have to rely on.\nWe learned quickly that the most important predictor of success is determination. At first we thought it might be intelligence. Everyone likes to believe that\u0026rsquo;s what makes startups succeed. It makes a better story that a company won because its founders were so smart. The PR people and …"
  },{
    "title": "The Best Essay",
    "url": "/paul_graham/essays_en/best/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nThe Best Essay March 2024\nDespite its title this isn\u0026rsquo;t meant to be the best essay. My goal here is to figure out what the best essay would be like.\nIt would be well-written, but you can write well about any topic. What made it special would be what it was about.\nObviously some topics would be better than others. It probably wouldn\u0026rsquo;t be about this year\u0026rsquo;s lipstick colors. But it wouldn\u0026rsquo;t be vaporous talk about elevated themes either. A good essay has to be surprising. It has to tell people something they don\u0026rsquo;t already know.\n",
    "description": "",
    "tags": ["essay","writing","creativity","discovery","ideas","philosophy"],
    "categories": [],
    "content": "→ 中文版本\nThe Best Essay March 2024\nDespite its title this isn\u0026rsquo;t meant to be the best essay. My goal here is to figure out what the best essay would be like.\nIt would be well-written, but you can write well about any topic. What made it special would be what it was about.\nObviously some topics would be better than others. It probably wouldn\u0026rsquo;t be about this year\u0026rsquo;s lipstick colors. But it wouldn\u0026rsquo;t be vaporous talk about elevated themes either. A good essay has to be surprising. It has to tell people something they don\u0026rsquo;t already know.\nThe best essay would be on the most …"
  },{
    "title": "The Bus Ticket Theory of Genius",
    "url": "/paul_graham/essays_en/genius/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nThe Bus Ticket Theory of Genius November 2019\nEveryone knows that to do great work you need both natural ability and determination. But there\u0026rsquo;s a third ingredient that\u0026rsquo;s not as well understood: an obsessive interest in a particular topic.\nTo explain this point I need to burn my reputation with some group of people, and I\u0026rsquo;m going to choose bus ticket collectors. There are people who collect old bus tickets. Like many collectors, they have an obsessive interest in the minutiae of what they collect. They can keep track of distinctions between different types of bus tickets that would be hard for the rest of us to remember. Because we don\u0026rsquo;t care enough. What\u0026rsquo;s the point of spending so much time thinking about old bus tickets?\n",
    "description": "",
    "tags": ["genius","creativity","obsession","interest","innovation","learning"],
    "categories": [],
    "content": "→ 中文版本\nThe Bus Ticket Theory of Genius November 2019\nEveryone knows that to do great work you need both natural ability and determination. But there\u0026rsquo;s a third ingredient that\u0026rsquo;s not as well understood: an obsessive interest in a particular topic.\nTo explain this point I need to burn my reputation with some group of people, and I\u0026rsquo;m going to choose bus ticket collectors. There are people who collect old bus tickets. Like many collectors, they have an obsessive interest in the minutiae of what they collect. They can keep track of distinctions between different types of bus …"
  },{
    "title": "The Equity Equation",
    "url": "/paul_graham/essays_en/equity/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ Chinese Version\nThe Equity Equation July 2007\nAn investor wants to give you money for a certain percentage of your startup. Should you take it? You\u0026rsquo;re about to hire your first employee. How much stock should you give him?\nThese are some of the hardest questions founders face. And yet both have the same answer:\n1/(1 - n)\nWhenever you\u0026rsquo;re trading stock in your company for anything, whether it\u0026rsquo;s money or an employee or a deal with another company, the test for whether to do it is the same. You should give up n% of your company if what you trade it for improves your average outcome enough that the (100 - n)% you have left is worth more than the whole company was before.\n",
    "description": "",
    "tags": ["equity","startups","fundraising","hiring","valuation","investors","employees","stock"],
    "categories": [],
    "content": "→ Chinese Version\nThe Equity Equation July 2007\nAn investor wants to give you money for a certain percentage of your startup. Should you take it? You\u0026rsquo;re about to hire your first employee. How much stock should you give him?\nThese are some of the hardest questions founders face. And yet both have the same answer:\n1/(1 - n)\nWhenever you\u0026rsquo;re trading stock in your company for anything, whether it\u0026rsquo;s money or an employee or a deal with another company, the test for whether to do it is the same. You should give up n% of your company if what you trade it for improves your average …"
  },{
    "title": "The Fatal Pinch",
    "url": "/paul_graham/essays_en/pinch/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nThe Fatal Pinch December 2014\nMany startups go through a point a few months before they die where although they have a significant amount of money in the bank, they\u0026rsquo;re also losing a lot each month, and revenue growth is either nonexistent or mediocre. The company has, say, 6 months of runway. Or to put it more brutally, 6 months before they\u0026rsquo;re out of business. They expect to avoid that by raising more from investors. [1]\n",
    "description": "",
    "tags": ["fundraising","startups","entrepreneurship","business","survival"],
    "categories": [],
    "content": "→ 中文版本\nThe Fatal Pinch December 2014\nMany startups go through a point a few months before they die where although they have a significant amount of money in the bank, they\u0026rsquo;re also losing a lot each month, and revenue growth is either nonexistent or mediocre. The company has, say, 6 months of runway. Or to put it more brutally, 6 months before they\u0026rsquo;re out of business. They expect to avoid that by raising more from investors. [1]\nThat last sentence is the fatal one.\nThere may be nothing founders are so prone to delude themselves about as how interested investors will be in giving …"
  },{
    "title": "The Founder Visa",
    "url": "/paul_graham/essays_en/foundervisa/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nThe Founder Visa April 2009\nI usually avoid politics, but since we now seem to have an administration that\u0026rsquo;s open to suggestions, I\u0026rsquo;m going to risk making one. The single biggest thing the government could do to increase the number of startups in this country is a policy that would cost nothing: establish a new class of visa for startup founders.\nThe biggest constraint on the number of new startups that get created in the US is not tax policy or employment law or even Sarbanes-Oxley. It\u0026rsquo;s that we won\u0026rsquo;t let the people who want to start them into the country.\n",
    "description": "",
    "tags": ["founders","visa","immigration","startups","policy","economy"],
    "categories": [],
    "content": "→ 中文版本\nThe Founder Visa April 2009\nI usually avoid politics, but since we now seem to have an administration that\u0026rsquo;s open to suggestions, I\u0026rsquo;m going to risk making one. The single biggest thing the government could do to increase the number of startups in this country is a policy that would cost nothing: establish a new class of visa for startup founders.\nThe biggest constraint on the number of new startups that get created in the US is not tax policy or employment law or even Sarbanes-Oxley. It\u0026rsquo;s that we won\u0026rsquo;t let the people who want to start them into the country. …"
  },{
    "title": "The Future of Startup Funding",
    "url": "/paul_graham/essays_en/future/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nThe Future of Startup Funding Want to start a startup? Get funded by Y Combinator.\nAugust 2010\nTwo years ago I wrote about what I called \u0026ldquo;a huge, unexploited opportunity in startup funding:\u0026rdquo; the growing disconnect between VCs, whose current business model requires them to invest large amounts, and a large class of startups that need less than they used to. Increasingly, startups want a couple hundred thousand dollars, not a couple million. [1]\n",
    "description": "",
    "tags": ["future","startup funding","VCs","angels","super-angels","founders"],
    "categories": [],
    "content": "→ 中文版本\nThe Future of Startup Funding Want to start a startup? Get funded by Y Combinator.\nAugust 2010\nTwo years ago I wrote about what I called \u0026ldquo;a huge, unexploited opportunity in startup funding:\u0026rdquo; the growing disconnect between VCs, whose current business model requires them to invest large amounts, and a large class of startups that need less than they used to. Increasingly, startups want a couple hundred thousand dollars, not a couple million. [1]\nThe opportunity is a lot less unexploited now. Investors have poured into this territory from both directions. VCs are much more …"
  },{
    "title": "The Future of Web Startups",
    "url": "/paul_graham/essays_en/webstartups/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版\nThe Future of Web Startups October 2007\n(This essay is derived from a keynote at FOWA in October 2007.)\nThere\u0026rsquo;s something interesting happening right now. Startups are undergoing the same transformation that technology does when it becomes cheaper.\nIt\u0026rsquo;s a pattern we see over and over in technology. Initially there\u0026rsquo;s some device that\u0026rsquo;s very expensive and made in small quantities. Then someone discovers how to make them cheaply; many more get built; and as a result they can be used in new ways.\n",
    "description": "",
    "tags": ["web startups","future","technology","standardization","acquisition","risk"],
    "categories": [],
    "content": "→ 中文版\nThe Future of Web Startups October 2007\n(This essay is derived from a keynote at FOWA in October 2007.)\nThere\u0026rsquo;s something interesting happening right now. Startups are undergoing the same transformation that technology does when it becomes cheaper.\nIt\u0026rsquo;s a pattern we see over and over in technology. Initially there\u0026rsquo;s some device that\u0026rsquo;s very expensive and made in small quantities. Then someone discovers how to make them cheaply; many more get built; and as a result they can be used in new ways.\nComputers are a familiar example. When I was a kid, computers were big, …"
  },{
    "title": "The Hacker's Guide to Investors",
    "url": "/paul_graham/essays_en/guidetoinvestors/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nThe Hacker\u0026rsquo;s Guide to Investors April 2007\n(This essay is derived from a keynote talk at the 2007 ASES Summit at Stanford.)\nThe world of investors is a foreign one to most hackers—partly because investors are so unlike hackers, and partly because they tend to operate in secret. I\u0026rsquo;ve been dealing with this world for many years, both as a founder and an investor, and I still don\u0026rsquo;t fully understand it.\n",
    "description": "",
    "tags": ["investors","venture capital","angels","funding","startups"],
    "categories": [],
    "content": "→ 中文版本\nThe Hacker\u0026rsquo;s Guide to Investors April 2007\n(This essay is derived from a keynote talk at the 2007 ASES Summit at Stanford.)\nThe world of investors is a foreign one to most hackers—partly because investors are so unlike hackers, and partly because they tend to operate in secret. I\u0026rsquo;ve been dealing with this world for many years, both as a founder and an investor, and I still don\u0026rsquo;t fully understand it.\nIn this essay I\u0026rsquo;m going to list some of the more surprising things I\u0026rsquo;ve learned about investors. Some I only learned in the past year.\nTeaching hackers how to …"
  },{
    "title": "The Hardest Lessons for Startups to Learn",
    "url": "/paul_graham/essays_en/startuplessons/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ Chinese Version\nThe Hardest Lessons for Startups to Learn April 2006\n(This essay is derived from a talk at the 2006 Startup School.)\nThe startups we\u0026rsquo;ve funded so far are pretty quick, but they seem quicker to learn some lessons than others. I think it\u0026rsquo;s because some things about startups are kind of counterintuitive.\nWe\u0026rsquo;ve now invested in enough companies that I\u0026rsquo;ve learned a trick for determining which points are the counterintuitive ones: they\u0026rsquo;re the ones I have to keep repeating.\n",
    "description": "",
    "tags": ["startups","lessons","entrepreneurship","business","advice"],
    "categories": [],
    "content": "→ Chinese Version\nThe Hardest Lessons for Startups to Learn April 2006\n(This essay is derived from a talk at the 2006 Startup School.)\nThe startups we\u0026rsquo;ve funded so far are pretty quick, but they seem quicker to learn some lessons than others. I think it\u0026rsquo;s because some things about startups are kind of counterintuitive.\nWe\u0026rsquo;ve now invested in enough companies that I\u0026rsquo;ve learned a trick for determining which points are the counterintuitive ones: they\u0026rsquo;re the ones I have to keep repeating.\nSo I\u0026rsquo;m going to number these points, and maybe with future startups …"
  },{
    "title": "The Hardware Renaissance",
    "url": "/paul_graham/essays_en/hw/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nThe Hardware Renaissance Want to start a startup? Get funded by Y Combinator.\nOctober 2012\nOne advantage of Y Combinator\u0026rsquo;s early, broad focus is that we see trends before most other people. And one of the most conspicuous trends in the last batch was the large number of hardware startups. Out of 84 companies, 7 were making hardware. On the whole they\u0026rsquo;ve done better than the companies that weren\u0026rsquo;t.\n",
    "description": "",
    "tags": ["hardware","startups","Y Combinator","innovation","manufacturing","crowdfunding","technology trends"],
    "categories": [],
    "content": "→ 中文版本\nThe Hardware Renaissance Want to start a startup? Get funded by Y Combinator.\nOctober 2012\nOne advantage of Y Combinator\u0026rsquo;s early, broad focus is that we see trends before most other people. And one of the most conspicuous trends in the last batch was the large number of hardware startups. Out of 84 companies, 7 were making hardware. On the whole they\u0026rsquo;ve done better than the companies that weren\u0026rsquo;t.\nThey\u0026rsquo;ve faced resistance from investors of course. Investors have a deep-seated bias against hardware. But investors\u0026rsquo; opinions are a trailing indicator. The best …"
  },{
    "title": "The High-Res Society",
    "url": "/paul_graham/essays_en/highres/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nThe High-Res Society December 2008\nFor nearly all of history the success of a society was proportionate to its ability to assemble large and disciplined organizations. Those who bet on economies of scale generally won, which meant the largest organizations were the most successful ones.\nThings have already changed so much that this is hard for us to believe, but till just a few decades ago the largest organizations tended to be the most progressive. An ambitious kid graduating from college in 1960 wanted to work in the huge, gleaming offices of Ford, or General Electric, or NASA. Small meant small-time. Small in 1960 didn\u0026rsquo;t mean a cool little startup. It meant uncle Sid\u0026rsquo;s shoe store.\n",
    "description": "",
    "tags": ["startups","technology","society","future","innovation","economics"],
    "categories": [],
    "content": "→ 中文版本\nThe High-Res Society December 2008\nFor nearly all of history the success of a society was proportionate to its ability to assemble large and disciplined organizations. Those who bet on economies of scale generally won, which meant the largest organizations were the most successful ones.\nThings have already changed so much that this is hard for us to believe, but till just a few decades ago the largest organizations tended to be the most progressive. An ambitious kid graduating from college in 1960 wanted to work in the huge, gleaming offices of Ford, or General Electric, or NASA. Small …"
  },{
    "title": "The Hundred-Year Language",
    "url": "/paul_graham/essays_en/hundred/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nThe Hundred-Year Language April 2003\n(This essay is derived from a keynote talk at PyCon 2003.)\nIt\u0026rsquo;s hard to predict what life will be like in a hundred years. There are only a few things we can say with certainty. We know that everyone will drive flying cars, that zoning laws will be relaxed to allow buildings hundreds of stories tall, that it will be dark most of the time, and that women will all be trained in the martial arts. Here I want to zoom in on one detail of this picture. What kind of programming language will they use to write the software controlling those flying cars?\n",
    "description": "",
    "tags": ["programming languages","future","language design","evolution","Lisp","software development"],
    "categories": [],
    "content": "→ 中文版本\nThe Hundred-Year Language April 2003\n(This essay is derived from a keynote talk at PyCon 2003.)\nIt\u0026rsquo;s hard to predict what life will be like in a hundred years. There are only a few things we can say with certainty. We know that everyone will drive flying cars, that zoning laws will be relaxed to allow buildings hundreds of stories tall, that it will be dark most of the time, and that women will all be trained in the martial arts. Here I want to zoom in on one detail of this picture. What kind of programming language will they use to write the software controlling those flying …"
  },{
    "title": "The Island Test",
    "url": "/paul_graham/essays_en/island/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nThe Island Test July 2006\nI\u0026rsquo;ve discovered a handy test for figuring out what you\u0026rsquo;re addicted to. Imagine you were going to spend the weekend at a friend\u0026rsquo;s house on a little island off the coast of Maine. There are no shops on the island and you won\u0026rsquo;t be able to leave while you\u0026rsquo;re there. Also, you\u0026rsquo;ve never been to this house before, so you can\u0026rsquo;t assume it will have more than any house might.\n",
    "description": "",
    "tags": ["island_test","addiction","habits","minimalism","reading","writing","travel"],
    "categories": [],
    "content": "→ 中文版本\nThe Island Test July 2006\nI\u0026rsquo;ve discovered a handy test for figuring out what you\u0026rsquo;re addicted to. Imagine you were going to spend the weekend at a friend\u0026rsquo;s house on a little island off the coast of Maine. There are no shops on the island and you won\u0026rsquo;t be able to leave while you\u0026rsquo;re there. Also, you\u0026rsquo;ve never been to this house before, so you can\u0026rsquo;t assume it will have more than any house might.\nWhat, besides clothes and toiletries, do you make a point of packing? That\u0026rsquo;s what you\u0026rsquo;re addicted to. For example, if you find yourself packing a …"
  },{
    "title": "The Lesson to Unlearn",
    "url": "/paul_graham/essays_en/lesson/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nThe Lesson to Unlearn December 2019\nThe most damaging thing you learned in school wasn\u0026rsquo;t something you learned in any specific class. It was learning to get good grades.\nWhen I was in college, a particularly earnest philosophy grad student once told me that he never cared what grade he got in a class, only what he learned in it. This stuck in my mind because it was the only time I ever heard anyone say such a thing.\n",
    "description": "",
    "tags": ["education","learning","grades","school","teaching","students","testing","startup","philosophy"],
    "categories": [],
    "content": "→ 中文版本\nThe Lesson to Unlearn December 2019\nThe most damaging thing you learned in school wasn\u0026rsquo;t something you learned in any specific class. It was learning to get good grades.\nWhen I was in college, a particularly earnest philosophy grad student once told me that he never cared what grade he got in a class, only what he learned in it. This stuck in my mind because it was the only time I ever heard anyone say such a thing.\nFor me, as for most students, the measurement of what I was learning completely dominated actual learning in college. I was fairly earnest; I was genuinely interested …"
  },{
    "title": "The List of N Things",
    "url": "/paul_graham/essays_en/nthings/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nThe List of N Things September 2009\nI bet you the current issue of Cosmopolitan has an article whose title begins with a number. \u0026ldquo;7 Things He Won\u0026rsquo;t Tell You about Sex,\u0026rdquo; or something like that. Some popular magazines feature articles of this type on the cover of every issue. That can\u0026rsquo;t be happening by accident. Editors must know they attract readers.\nWhy do readers like the list of n things so much? Mainly because it\u0026rsquo;s easier to read than a regular article. [1] Structurally, the list of n things is a degenerate case of essay. An essay can go anywhere the writer wants. In a list of n things the writer agrees to constrain himself to a collection of points of roughly equal importance, and he tells the reader explicitly what they are.\n",
    "description": "",
    "tags": ["writing","essays","structure","communication","media","content creation"],
    "categories": [],
    "content": "→ 中文版本\nThe List of N Things September 2009\nI bet you the current issue of Cosmopolitan has an article whose title begins with a number. \u0026ldquo;7 Things He Won\u0026rsquo;t Tell You about Sex,\u0026rdquo; or something like that. Some popular magazines feature articles of this type on the cover of every issue. That can\u0026rsquo;t be happening by accident. Editors must know they attract readers.\nWhy do readers like the list of n things so much? Mainly because it\u0026rsquo;s easier to read than a regular article. [1] Structurally, the list of n things is a degenerate case of essay. An essay can go anywhere the …"
  },{
    "title": "The Need to Read",
    "url": "/paul_graham/essays_en/read/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nThe Need to Read November 2022\nIn the science fiction books I read as a kid, reading had often been replaced by some more efficient way of acquiring knowledge. Mysterious \u0026ldquo;tapes\u0026rdquo; would load it into one\u0026rsquo;s brain like a program being loaded into a computer.\nThat sort of thing is unlikely to happen anytime soon. Not just because it would be hard to build a replacement for reading, but because even if one existed, it would be insufficient. Reading about x doesn\u0026rsquo;t just teach you about x; it also teaches you how to write. [1]\n",
    "description": "",
    "tags": ["reading","writing","thinking","learning","knowledge","ideas"],
    "categories": [],
    "content": "→ 中文版本\nThe Need to Read November 2022\nIn the science fiction books I read as a kid, reading had often been replaced by some more efficient way of acquiring knowledge. Mysterious \u0026ldquo;tapes\u0026rdquo; would load it into one\u0026rsquo;s brain like a program being loaded into a computer.\nThat sort of thing is unlikely to happen anytime soon. Not just because it would be hard to build a replacement for reading, but because even if one existed, it would be insufficient. Reading about x doesn\u0026rsquo;t just teach you about x; it also teaches you how to write. [1]\nWould that matter? If we replaced reading, …"
  },{
    "title": "The New Funding Landscape",
    "url": "/paul_graham/essays_en/superangels/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nThe New Funding Landscape Want to start a startup? Get funded by Y Combinator.\nOctober 2010\nAfter barely changing at all for decades, the startup funding business is now in what could, at least by comparison, be called turmoil. At Y Combinator we\u0026rsquo;ve seen dramatic changes in the funding environment for startups. Fortunately one of them is much higher valuations.\nThe trends we\u0026rsquo;ve been seeing are probably not YC-specific. I wish I could say they were, but the main cause is probably just that we see trends first—partly because the startups we fund are very plugged into the Valley and are quick to take advantage of anything new, and partly because we fund so many that we have enough data points to see patterns clearly.\n",
    "description": "",
    "tags": ["superangels","venture capital","funding","startups","investing","valuation"],
    "categories": [],
    "content": "→ 中文版本\nThe New Funding Landscape Want to start a startup? Get funded by Y Combinator.\nOctober 2010\nAfter barely changing at all for decades, the startup funding business is now in what could, at least by comparison, be called turmoil. At Y Combinator we\u0026rsquo;ve seen dramatic changes in the funding environment for startups. Fortunately one of them is much higher valuations.\nThe trends we\u0026rsquo;ve been seeing are probably not YC-specific. I wish I could say they were, but the main cause is probably just that we see trends first—partly because the startups we fund are very plugged into the …"
  },{
    "title": "The Origins of Wokeness",
    "url": "/paul_graham/essays_en/woke/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版\nThe Origins of Wokeness January 2025\nThe word \u0026ldquo;prig\u0026rdquo; isn\u0026rsquo;t very common now, but if you look up the definition, it will sound familiar. Google\u0026rsquo;s isn\u0026rsquo;t bad: A self-righteously moralistic person who behaves as if superior to others. This sense of the word originated in the 18th century, and its age is an important clue: it shows that although wokeness is a comparatively recent phenomenon, it\u0026rsquo;s an instance of a much older one.\n",
    "description": "",
    "tags": ["woke","political_correctness","social_justice","culture","society"],
    "categories": [],
    "content": "→ 中文版\nThe Origins of Wokeness January 2025\nThe word \u0026ldquo;prig\u0026rdquo; isn\u0026rsquo;t very common now, but if you look up the definition, it will sound familiar. Google\u0026rsquo;s isn\u0026rsquo;t bad: A self-righteously moralistic person who behaves as if superior to others. This sense of the word originated in the 18th century, and its age is an important clue: it shows that although wokeness is a comparatively recent phenomenon, it\u0026rsquo;s an instance of a much older one.\nThere\u0026rsquo;s a certain kind of person who\u0026rsquo;s attracted to a shallow, exacting kind of moral purity, and who demonstrates his …"
  },{
    "title": "The Other Half of 'Artists Ship'",
    "url": "/paul_graham/essays_en/artistsship/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nThe Other Half of \u0026ldquo;Artists Ship\u0026rdquo; November 2008\nOne of the differences between big companies and startups is that big companies tend to have developed procedures to protect themselves against mistakes. A startup walks like a toddler, bashing into things and falling over all the time. A big company is more deliberate.\nThe gradual accumulation of checks in an organization is a kind of learning, based on disasters that have happened to it or others like it. After giving a contract to a supplier who goes bankrupt and fails to deliver, for example, a company might require all suppliers to prove they\u0026rsquo;re solvent before submitting bids.\n",
    "description": "",
    "tags": ["startup","management","bureaucracy","programming","shipping"],
    "categories": [],
    "content": "→ 中文版本\nThe Other Half of \u0026ldquo;Artists Ship\u0026rdquo; November 2008\nOne of the differences between big companies and startups is that big companies tend to have developed procedures to protect themselves against mistakes. A startup walks like a toddler, bashing into things and falling over all the time. A big company is more deliberate.\nThe gradual accumulation of checks in an organization is a kind of learning, based on disasters that have happened to it or others like it. After giving a contract to a supplier who goes bankrupt and fails to deliver, for example, a company might require all …"
  },{
    "title": "The Other Road Ahead",
    "url": "/paul_graham/essays_en/road/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nThe Other Road Ahead September 2001\n(This article explains why much of the next generation of software may be server-based, what that will mean for programmers, and why this new kind of software is a great opportunity for startups. It\u0026rsquo;s derived from a talk at BBN Labs.)\nIn the summer of 1995, my friend Robert Morris and I decided to start a startup. The PR campaign leading up to Netscape\u0026rsquo;s IPO was running full blast then, and there was a lot of talk in the press about online commerce. At the time there might have been thirty actual stores on the Web, all made by hand. If there were going to be a lot of online stores, there would need to be software for making them, so we decided to write some.\n",
    "description": "",
    "tags": ["web-based software","programming","startups","technology","software development","future"],
    "categories": [],
    "content": "→ 中文版本\nThe Other Road Ahead September 2001\n(This article explains why much of the next generation of software may be server-based, what that will mean for programmers, and why this new kind of software is a great opportunity for startups. It\u0026rsquo;s derived from a talk at BBN Labs.)\nIn the summer of 1995, my friend Robert Morris and I decided to start a startup. The PR campaign leading up to Netscape\u0026rsquo;s IPO was running full blast then, and there was a lot of talk in the press about online commerce. At the time there might have been thirty actual stores on the Web, all made by hand. If …"
  },{
    "title": "The Patent Pledge",
    "url": "/paul_graham/essays_en/patentpledge/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nThe Patent Pledge August 2011\nI realized recently that we may be able to solve part of the patent problem without waiting for the government.\nI\u0026rsquo;ve never been 100% sure whether patents help or hinder technological progress. When I was a kid I thought they helped. I thought they protected inventors from having their ideas stolen by big companies. Maybe that was truer in the past, when more things were physical. But regardless of whether patents are in general a good thing, there do seem to be bad ways of using them. And since bad uses of patents seem to be increasing, there is an increasing call for patent reform.\n",
    "description": "",
    "tags": ["patents","innovation","startups","legal reform","ethics"],
    "categories": [],
    "content": "→ 中文版本\nThe Patent Pledge August 2011\nI realized recently that we may be able to solve part of the patent problem without waiting for the government.\nI\u0026rsquo;ve never been 100% sure whether patents help or hinder technological progress. When I was a kid I thought they helped. I thought they protected inventors from having their ideas stolen by big companies. Maybe that was truer in the past, when more things were physical. But regardless of whether patents are in general a good thing, there do seem to be bad ways of using them. And since bad uses of patents seem to be increasing, there is an …"
  },{
    "title": "The Pooled-Risk Company Management Company",
    "url": "/paul_graham/essays_en/prcmc/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nThe Pooled-Risk Company Management Company July 2008\nAt this year\u0026rsquo;s startup school, David Heinemeier Hansson gave a talk in which he suggested that startup founders should do things the old fashioned way. Instead of hoping to get rich by building a valuable company and then selling stock in a \u0026ldquo;liquidity event,\u0026rdquo; founders should start companies that make money and live off the revenues.\nSounds like a good plan. Let\u0026rsquo;s think about the optimal way to do this.\n",
    "description": "",
    "tags": ["business","management","acquisitions","entrepreneurship"],
    "categories": [],
    "content": "→ 中文版本\nThe Pooled-Risk Company Management Company July 2008\nAt this year\u0026rsquo;s startup school, David Heinemeier Hansson gave a talk in which he suggested that startup founders should do things the old fashioned way. Instead of hoping to get rich by building a valuable company and then selling stock in a \u0026ldquo;liquidity event,\u0026rdquo; founders should start companies that make money and live off the revenues.\nSounds like a good plan. Let\u0026rsquo;s think about the optimal way to do this.\nOne disadvantage of living off the revenues of your company is that you have to keep running it. And as anyone …"
  },{
    "title": "The Power of the Marginal",
    "url": "/paul_graham/essays_en/marginal/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "The Power of the Marginal June 2006\n(This essay is derived from talks at Usenix 2006 and Railsconf 2006.)\nA couple years ago my friend Trevor and I went to look at the Apple garage. As we stood there, he said that as a kid growing up in Saskatchewan he\u0026rsquo;d been amazed at the dedication Jobs and Wozniak must have had to work in a garage.\n\u0026ldquo;Those guys must have been freezing!\u0026rdquo;\n",
    "description": "",
    "tags": ["marginal","outsiders","innovation","creativity","startup","technology","success","work","ideas"],
    "categories": [],
    "content": "The Power of the Marginal June 2006\n(This essay is derived from talks at Usenix 2006 and Railsconf 2006.)\nA couple years ago my friend Trevor and I went to look at the Apple garage. As we stood there, he said that as a kid growing up in Saskatchewan he\u0026rsquo;d been amazed at the dedication Jobs and Wozniak must have had to work in a garage.\n\u0026ldquo;Those guys must have been freezing!\u0026rdquo;\nThat\u0026rsquo;s one of California\u0026rsquo;s hidden advantages: the mild climate means there\u0026rsquo;s lots of marginal space. In cold places that margin gets trimmed off. There\u0026rsquo;s a sharper line between …"
  },{
    "title": "The Python Paradox",
    "url": "/paul_graham/essays_en/pypar/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "The Python Paradox August 2004\nIn a recent talk I said something that upset a lot of people: that you could get smarter programmers to work on a Python project than you could to work on a Java project.\nI didn\u0026rsquo;t mean by this that Java programmers are dumb. I meant that Python programmers are smart. It\u0026rsquo;s a lot of work to learn a new programming language. And people don\u0026rsquo;t learn Python because it will get them a job; they learn it because they genuinely like to program and aren\u0026rsquo;t satisfied with the languages they already know.\n",
    "description": "",
    "tags": ["python","programming","software development","hiring","technology"],
    "categories": [],
    "content": "The Python Paradox August 2004\nIn a recent talk I said something that upset a lot of people: that you could get smarter programmers to work on a Python project than you could to work on a Java project.\nI didn\u0026rsquo;t mean by this that Java programmers are dumb. I meant that Python programmers are smart. It\u0026rsquo;s a lot of work to learn a new programming language. And people don\u0026rsquo;t learn Python because it will get them a job; they learn it because they genuinely like to program and aren\u0026rsquo;t satisfied with the languages they already know.\nWhich makes them exactly the kind of …"
  },{
    "title": "The Real Reason to End the Death Penalty",
    "url": "/paul_graham/essays_en/real/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nThe Real Reason to End the Death Penalty April 2021\nWhen intellectuals talk about the death penalty, they talk about things like whether it\u0026rsquo;s permissible for the state to take someone\u0026rsquo;s life, whether the death penalty acts as a deterrent, and whether more death sentences are given to some groups than others. But in practice the debate about the death penalty is not about whether it\u0026rsquo;s ok to kill murderers. It\u0026rsquo;s about whether it\u0026rsquo;s ok to kill innocent people, because at least 4% of people on death row are innocent.\n",
    "description": "",
    "tags": ["death_penalty","justice","innocence","law","ethics","society"],
    "categories": [],
    "content": "→ 中文版本\nThe Real Reason to End the Death Penalty April 2021\nWhen intellectuals talk about the death penalty, they talk about things like whether it\u0026rsquo;s permissible for the state to take someone\u0026rsquo;s life, whether the death penalty acts as a deterrent, and whether more death sentences are given to some groups than others. But in practice the debate about the death penalty is not about whether it\u0026rsquo;s ok to kill murderers. It\u0026rsquo;s about whether it\u0026rsquo;s ok to kill innocent people, because at least 4% of people on death row are innocent.\nWhen I was a kid I imagined that it was …"
  },{
    "title": "The Reddits",
    "url": "/paul_graham/essays_en/reddits/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nThe Reddits March 2024\nI met the Reddits before we even started Y Combinator. In fact they were one of the reasons we started it.\nYC grew out of a talk I gave to the Harvard Computer Society (the undergrad computer club) about how to start a startup. Everyone else in the audience was probably local, but Steve and Alexis came up on the train from the University of Virginia, where they were seniors. Since they\u0026rsquo;d come so far I agreed to meet them for coffee. They told me about the startup idea we\u0026rsquo;d later fund them to drop: a way to order fast food on your cellphone.\n",
    "description": "",
    "tags": ["Reddit","Y Combinator","Steve Huffman","Alexis Ohanian","startup","technology"],
    "categories": [],
    "content": "→ 中文版本\nThe Reddits March 2024\nI met the Reddits before we even started Y Combinator. In fact they were one of the reasons we started it.\nYC grew out of a talk I gave to the Harvard Computer Society (the undergrad computer club) about how to start a startup. Everyone else in the audience was probably local, but Steve and Alexis came up on the train from the University of Virginia, where they were seniors. Since they\u0026rsquo;d come so far I agreed to meet them for coffee. They told me about the startup idea we\u0026rsquo;d later fund them to drop: a way to order fast food on your cellphone.\nThis was …"
  },{
    "title": "The Refragmentation",
    "url": "/paul_graham/essays_en/re/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nThe Refragmentation January 2016\nOne advantage of being old is that you can see change happen in your lifetime. A lot of the change I\u0026rsquo;ve seen is fragmentation. US politics is much more polarized than it used to be. Culturally we have ever less common ground. The creative class flocks to a handful of happy cities, abandoning the rest. And increasing economic inequality means the spread between rich and poor is growing too. I\u0026rsquo;d like to propose a hypothesis: that all these trends are instances of the same phenomenon. And moreover, that the cause is not some force that\u0026rsquo;s pulling us apart, but rather the erosion of forces that had been pushing us together.\n",
    "description": "",
    "tags": ["fragmentation","inequality","corporations","war","economy","society","change"],
    "categories": [],
    "content": "→ 中文版本\nThe Refragmentation January 2016\nOne advantage of being old is that you can see change happen in your lifetime. A lot of the change I\u0026rsquo;ve seen is fragmentation. US politics is much more polarized than it used to be. Culturally we have ever less common ground. The creative class flocks to a handful of happy cities, abandoning the rest. And increasing economic inequality means the spread between rich and poor is growing too. I\u0026rsquo;d like to propose a hypothesis: that all these trends are instances of the same phenomenon. And moreover, that the cause is not some force that\u0026rsquo;s …"
  },{
    "title": "The Right Kind of Stubborn",
    "url": "/paul_graham/essays_en/persistence/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nThe Right Kind of Stubborn July 2024\nSuccessful people tend to be persistent. New ideas often don\u0026rsquo;t work at first, but they\u0026rsquo;re not deterred. They keep trying and eventually find something that does.\nMere obstinacy, on the other hand, is a recipe for failure. Obstinate people are so annoying. They won\u0026rsquo;t listen. They beat their heads against a wall and get nowhere.\nBut is there any real difference between these two cases? Are persistent and obstinate people actually behaving differently? Or are they doing the same thing, and we just label them later as persistent or obstinate depending on whether they turned out to be right or not?\n",
    "description": "",
    "tags": ["persistence","determination","success","mindset","decision making"],
    "categories": [],
    "content": "→ 中文版本\nThe Right Kind of Stubborn July 2024\nSuccessful people tend to be persistent. New ideas often don\u0026rsquo;t work at first, but they\u0026rsquo;re not deterred. They keep trying and eventually find something that does.\nMere obstinacy, on the other hand, is a recipe for failure. Obstinate people are so annoying. They won\u0026rsquo;t listen. They beat their heads against a wall and get nowhere.\nBut is there any real difference between these two cases? Are persistent and obstinate people actually behaving differently? Or are they doing the same thing, and we just label them later as persistent or …"
  },{
    "title": "The Risk of Discovery",
    "url": "/paul_graham/essays_en/disc/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ Chinese Version\nThe Risk of Discovery January 2017\nBecause biographies of famous scientists tend to edit out their mistakes, we underestimate the degree of risk they were willing to take. And because anything a famous scientist did that wasn\u0026rsquo;t a mistake has probably now become the conventional wisdom, those choices don\u0026rsquo;t seem risky either.\nBiographies of Newton, for example, understandably focus more on physics than alchemy or theology. The impression we get is that his unerring judgment led him straight to truths no one else had noticed. How to explain all the time he spent on alchemy and theology? Well, smart people are often kind of crazy.\n",
    "description": "",
    "tags": ["discovery","risk","science","history","newton","physics","alchemy","theology"],
    "categories": [],
    "content": "→ Chinese Version\nThe Risk of Discovery January 2017\nBecause biographies of famous scientists tend to edit out their mistakes, we underestimate the degree of risk they were willing to take. And because anything a famous scientist did that wasn\u0026rsquo;t a mistake has probably now become the conventional wisdom, those choices don\u0026rsquo;t seem risky either.\nBiographies of Newton, for example, understandably focus more on physics than alchemy or theology. The impression we get is that his unerring judgment led him straight to truths no one else had noticed. How to explain all the time he spent on …"
  },{
    "title": "The Ronco Principle",
    "url": "/paul_graham/essays_en/ronco/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nThe Ronco Principle January 2015\nNo one, VC or angel, has invested in more of the top startups than Ron Conway. He knows what happened in every deal in the Valley, half the time because he arranged it.\nAnd yet he\u0026rsquo;s a super nice guy. In fact, nice is not the word. Ronco is good. I know of zero instances in which he has behaved badly. It\u0026rsquo;s hard even to imagine.\n",
    "description": "",
    "tags": ["investors","ethics","silicon valley","ron conway","startup ecosystem"],
    "categories": [],
    "content": "→ 中文版本\nThe Ronco Principle January 2015\nNo one, VC or angel, has invested in more of the top startups than Ron Conway. He knows what happened in every deal in the Valley, half the time because he arranged it.\nAnd yet he\u0026rsquo;s a super nice guy. In fact, nice is not the word. Ronco is good. I know of zero instances in which he has behaved badly. It\u0026rsquo;s hard even to imagine.\nWhen I first came to Silicon Valley I thought \u0026ldquo;How lucky that someone so powerful is so benevolent.\u0026rdquo; But gradually I realized it wasn\u0026rsquo;t luck. It was by being benevolent that Ronco became so powerful. …"
  },{
    "title": "The Roots of Lisp",
    "url": "/paul_graham/essays_en/rootsoflisp/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nThe Roots of Lisp May 2001\n(I wrote this article to help myself understand exactly what McCarthy discovered. You don\u0026rsquo;t need to know this stuff to program in Lisp, but it should be helpful to anyone who wants to understand the essence of Lisp — both in the sense of its origins and its semantic core. The fact that it has such a core is one of Lisp\u0026rsquo;s distinguishing features, and the reason why, unlike other languages, Lisp has dialects.)\n",
    "description": "",
    "tags": ["lisp","programming languages","computer science","history","john mccarthy"],
    "categories": [],
    "content": "→ 中文版本\nThe Roots of Lisp May 2001\n(I wrote this article to help myself understand exactly what McCarthy discovered. You don\u0026rsquo;t need to know this stuff to program in Lisp, but it should be helpful to anyone who wants to understand the essence of Lisp — both in the sense of its origins and its semantic core. The fact that it has such a core is one of Lisp\u0026rsquo;s distinguishing features, and the reason why, unlike other languages, Lisp has dialects.)\nIn 1960, John McCarthy published a remarkable paper in which he did for programming something like what Euclid did for geometry. He showed …"
  },{
    "title": "The Shape of the Essay Field",
    "url": "/paul_graham/essays_en/field/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nThe Shape of the Essay Field June 2025\nAn essay has to tell people something they don\u0026rsquo;t already know. But there are three different reasons people might not know something, and they yield three very different kinds of essays.\nOne reason people won\u0026rsquo;t know something is if it\u0026rsquo;s not important to know. That doesn\u0026rsquo;t mean it will make a bad essay. For example, you might write a good essay about a particular model of car. Readers would learn something from it. It would add to their picture of the world. For a handful of readers it might even spur some kind of epiphany. But unless this is a very unusual car it\u0026rsquo;s not critical for everyone to know about it. [1]\n",
    "description": "",
    "tags": ["essay","writing","creativity","thinking","education"],
    "categories": [],
    "content": "→ 中文版本\nThe Shape of the Essay Field June 2025\nAn essay has to tell people something they don\u0026rsquo;t already know. But there are three different reasons people might not know something, and they yield three very different kinds of essays.\nOne reason people won\u0026rsquo;t know something is if it\u0026rsquo;s not important to know. That doesn\u0026rsquo;t mean it will make a bad essay. For example, you might write a good essay about a particular model of car. Readers would learn something from it. It would add to their picture of the world. For a handful of readers it might even spur some kind of epiphany. …"
  },{
    "title": "The Submarine",
    "url": "/paul_graham/essays_en/submarine/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nThe Submarine April 2005\n\u0026ldquo;Suits make a corporate comeback,\u0026rdquo; says the New York Times. Why does this sound familiar? Maybe because the suit was also back in February, September 2004, June 2004, March 2004, September 2003, November 2002, April 2002, and February 2002. Why do the media keep running stories saying suits are back? Because PR firms tell them to. One of the most surprising things I discovered during my brief business career was the existence of the PR industry, lurking like a huge, quiet submarine beneath the news. Of the stories you read in traditional media that aren\u0026rsquo;t about politics, crimes, or disasters, more than half probably come from PR firms.\n",
    "description": "",
    "tags": ["PR","media","journalism","blogs","truth","writing"],
    "categories": [],
    "content": "→ 中文版本\nThe Submarine April 2005\n\u0026ldquo;Suits make a corporate comeback,\u0026rdquo; says the New York Times. Why does this sound familiar? Maybe because the suit was also back in February, September 2004, June 2004, March 2004, September 2003, November 2002, April 2002, and February 2002. Why do the media keep running stories saying suits are back? Because PR firms tell them to. One of the most surprising things I discovered during my brief business career was the existence of the PR industry, lurking like a huge, quiet submarine beneath the news. Of the stories you read in traditional media that …"
  },{
    "title": "The Top Idea in Your Mind",
    "url": "/paul_graham/essays_en/top/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nThe Top Idea in Your Mind July 2010\nI realized recently that what one thinks about in the shower in the morning is more important than I\u0026rsquo;d thought. I knew it was a good time to have ideas. Now I\u0026rsquo;d go further: now I\u0026rsquo;d say it\u0026rsquo;s hard to do a really good job on anything you don\u0026rsquo;t think about in the shower.\nEveryone who\u0026rsquo;s worked on difficult problems is probably familiar with the phenomenon of working hard to figure something out, failing, and then suddenly seeing the answer a bit later while doing something else. There\u0026rsquo;s a kind of thinking you do without trying to. I\u0026rsquo;m increasingly convinced this type of thinking is not merely helpful in solving hard problems, but necessary. The tricky part is, you can only control it indirectly. [1]\n",
    "description": "",
    "tags": ["thinking","attention","focus","productivity","startup","ideas"],
    "categories": [],
    "content": "→ 中文版本\nThe Top Idea in Your Mind July 2010\nI realized recently that what one thinks about in the shower in the morning is more important than I\u0026rsquo;d thought. I knew it was a good time to have ideas. Now I\u0026rsquo;d go further: now I\u0026rsquo;d say it\u0026rsquo;s hard to do a really good job on anything you don\u0026rsquo;t think about in the shower.\nEveryone who\u0026rsquo;s worked on difficult problems is probably familiar with the phenomenon of working hard to figure something out, failing, and then suddenly seeing the answer a bit later while doing something else. There\u0026rsquo;s a kind of thinking you do …"
  },{
    "title": "The Top of My Todo List",
    "url": "/paul_graham/essays_en/todo/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nThe Top of My Todo List April 2012\nA palliative care nurse called Bronnie Ware made a list of the biggest regrets of the dying. Her list seems plausible. I could see myself — can see myself — making at least 4 of these 5 mistakes.\nIf you had to compress them into a single piece of advice, it might be: don\u0026rsquo;t be a cog. The 5 regrets paint a portrait of post-industrial man, who shrinks himself into a shape that fits his circumstances, then turns dutifully till he stops.\n",
    "description": "",
    "tags": ["regrets","life lessons","priorities","happiness","friendship","dreams"],
    "categories": [],
    "content": "→ 中文版本\nThe Top of My Todo List April 2012\nA palliative care nurse called Bronnie Ware made a list of the biggest regrets of the dying. Her list seems plausible. I could see myself — can see myself — making at least 4 of these 5 mistakes.\nIf you had to compress them into a single piece of advice, it might be: don\u0026rsquo;t be a cog. The 5 regrets paint a portrait of post-industrial man, who shrinks himself into a shape that fits his circumstances, then turns dutifully till he stops.\nThe alarming thing is, the mistakes that produce these regrets are all errors of omission. You forget your dreams, …"
  },{
    "title": "The Trouble with the Segway",
    "url": "/paul_graham/essays_en/segway/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nThe Trouble with the Segway July 2009\nThe Segway hasn\u0026rsquo;t delivered on its initial promise, to put it mildly. There are several reasons why, but one is that people don\u0026rsquo;t want to be seen riding them. Someone riding a Segway looks like a dork.\nMy friend Trevor Blackwell built his own Segway, which we called the Segwell. He also built a one-wheeled version, the Eunicycle, which looks exactly like a regular unicycle till you realize the rider isn\u0026rsquo;t pedaling. He has ridden them both to downtown Mountain View to get coffee. When he rides the Eunicycle, people smile at him. But when he rides the Segwell, they shout abuse from their cars: \u0026ldquo;Too lazy to walk, ya fuckin homo?\u0026rdquo;\n",
    "description": "",
    "tags": ["segway","technology","design","human_behavior","innovation"],
    "categories": [],
    "content": "→ 中文版本\nThe Trouble with the Segway July 2009\nThe Segway hasn\u0026rsquo;t delivered on its initial promise, to put it mildly. There are several reasons why, but one is that people don\u0026rsquo;t want to be seen riding them. Someone riding a Segway looks like a dork.\nMy friend Trevor Blackwell built his own Segway, which we called the Segwell. He also built a one-wheeled version, the Eunicycle, which looks exactly like a regular unicycle till you realize the rider isn\u0026rsquo;t pedaling. He has ridden them both to downtown Mountain View to get coffee. When he rides the Eunicycle, people smile at him. But …"
  },{
    "title": "The Venture Capital Squeeze",
    "url": "/paul_graham/essays_en/vcsqueeze/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nThe Venture Capital Squeeze November 2005\nIn the next few years, venture capital funds will find themselves squeezed from four directions. They\u0026rsquo;re already stuck with a seller\u0026rsquo;s market, because of the huge amounts they raised at the end of the Bubble and still haven\u0026rsquo;t invested. This by itself is not the end of the world. In fact, it\u0026rsquo;s just a more extreme version of the norm in the VC business: too much money chasing too few deals.\n",
    "description": "",
    "tags": ["venture capital","startups","funding","technology","business","innovation"],
    "categories": [],
    "content": "→ 中文版本\nThe Venture Capital Squeeze November 2005\nIn the next few years, venture capital funds will find themselves squeezed from four directions. They\u0026rsquo;re already stuck with a seller\u0026rsquo;s market, because of the huge amounts they raised at the end of the Bubble and still haven\u0026rsquo;t invested. This by itself is not the end of the world. In fact, it\u0026rsquo;s just a more extreme version of the norm in the VC business: too much money chasing too few deals.\nUnfortunately, those few deals now want less and less money, because it\u0026rsquo;s getting so cheap to start a startup. The four causes: …"
  },{
    "title": "The Word 'Hacker'",
    "url": "/paul_graham/essays_en/gba/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nThe Word \u0026ldquo;Hacker\u0026rdquo; April 2004\nTo the popular press, \u0026ldquo;hacker\u0026rdquo; means someone who breaks into computers. Among programmers it means a good programmer. But the two meanings are connected. To programmers, \u0026ldquo;hacker\u0026rdquo; connotes mastery in the most literal sense: someone who can make a computer do what he wants—whether the computer wants to or not.\nTo add to the confusion, the noun \u0026ldquo;hack\u0026rdquo; also has two senses. It can be either a compliment or an insult. It\u0026rsquo;s called a hack when you do something in an ugly way. But when you do something so clever that you somehow beat the system, that\u0026rsquo;s also called a hack. The word is used more often in the former than the latter sense, probably because ugly solutions are more common than brilliant ones.\n",
    "description": "",
    "tags": ["hacker","programming","intellectual_freedom","innovation","civil_liberties","technology"],
    "categories": [],
    "content": "→ 中文版本\nThe Word \u0026ldquo;Hacker\u0026rdquo; April 2004\nTo the popular press, \u0026ldquo;hacker\u0026rdquo; means someone who breaks into computers. Among programmers it means a good programmer. But the two meanings are connected. To programmers, \u0026ldquo;hacker\u0026rdquo; connotes mastery in the most literal sense: someone who can make a computer do what he wants—whether the computer wants to or not.\nTo add to the confusion, the noun \u0026ldquo;hack\u0026rdquo; also has two senses. It can be either a compliment or an insult. It\u0026rsquo;s called a hack when you do something in an ugly way. But when you do something so clever …"
  },{
    "title": "Trolls",
    "url": "/paul_graham/essays_en/trolls/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nTrolls February 2008\nA user on Hacker News recently posted a comment that set me thinking: Something about hacker culture that never really set well with me was this — the nastiness. \u0026hellip; I just don\u0026rsquo;t understand why people troll like they do. I\u0026rsquo;ve thought a lot over the last couple years about the problem of trolls. It\u0026rsquo;s an old one, as old as forums, but we\u0026rsquo;re still just learning what the causes are and how to address them.\n",
    "description": "",
    "tags": ["trolls","online_communities","hacker_culture","behavior","psychology","forums"],
    "categories": [],
    "content": "→ 中文版本\nTrolls February 2008\nA user on Hacker News recently posted a comment that set me thinking: Something about hacker culture that never really set well with me was this — the nastiness. \u0026hellip; I just don\u0026rsquo;t understand why people troll like they do. I\u0026rsquo;ve thought a lot over the last couple years about the problem of trolls. It\u0026rsquo;s an old one, as old as forums, but we\u0026rsquo;re still just learning what the causes are and how to address them.\nThere are two senses of the word \u0026ldquo;troll.\u0026rdquo; In the original sense it meant someone, usually an outsider, who deliberately …"
  },{
    "title": "Two Kinds of Judgement",
    "url": "/paul_graham/essays_en/judgement/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nTwo Kinds of Judgement April 2007\nThere are two different ways people judge you. Sometimes judging you correctly is the end goal. But there\u0026rsquo;s a second much more common type of judgement where it isn\u0026rsquo;t. We tend to regard all judgements of us as the first type. We\u0026rsquo;d probably be happier if we realized which are and which aren\u0026rsquo;t.\nThe first type of judgement, the type where judging you is the end goal, include court cases, grades in classes, and most competitions. Such judgements can of course be mistaken, but because the goal is to judge you correctly, there\u0026rsquo;s usually some kind of appeals process. If you feel you\u0026rsquo;ve been misjudged, you can protest that you\u0026rsquo;ve been treated unfairly.\n",
    "description": "",
    "tags": ["judgement","psychology","success","rejection","college_admissions","hiring","decision_making"],
    "categories": [],
    "content": "→ 中文版本\nTwo Kinds of Judgement April 2007\nThere are two different ways people judge you. Sometimes judging you correctly is the end goal. But there\u0026rsquo;s a second much more common type of judgement where it isn\u0026rsquo;t. We tend to regard all judgements of us as the first type. We\u0026rsquo;d probably be happier if we realized which are and which aren\u0026rsquo;t.\nThe first type of judgement, the type where judging you is the end goal, include court cases, grades in classes, and most competitions. Such judgements can of course be mistaken, but because the goal is to judge you correctly, there\u0026rsquo;s …"
  },{
    "title": "Undergraduation",
    "url": "/paul_graham/essays_en/college/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nUndergraduation Want to start a startup? Get funded by Y Combinator.\nMarch 2005\n(Parts of this essay began as replies to students who wrote to me with questions.)\nRecently I\u0026rsquo;ve had several emails from computer science undergrads asking what to do in college. I might not be the best source of advice, because I was a philosophy major in college. But I took so many CS classes that most CS majors thought I was one. I was certainly a hacker, at least.\n",
    "description": "",
    "tags": ["college","education","programming","hacking","math","graduate-school","career-advice"],
    "categories": [],
    "content": "→ 中文版本\nUndergraduation Want to start a startup? Get funded by Y Combinator.\nMarch 2005\n(Parts of this essay began as replies to students who wrote to me with questions.)\nRecently I\u0026rsquo;ve had several emails from computer science undergrads asking what to do in college. I might not be the best source of advice, because I was a philosophy major in college. But I took so many CS classes that most CS majors thought I was one. I was certainly a hacker, at least.\nHacking What should you do in college to become a good hacker? There are two main things you can do: become very good at programming, …"
  },{
    "title": "Useful",
    "url": "/paul_graham/essays_en/useful/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nUseful How to Write Usefully\nFebruary 2020\nWhat should an essay be? Many people would say persuasive. That\u0026rsquo;s what a lot of us were taught essays should be. But I think we can aim for something more ambitious: that an essay should be useful.\nTo start with, that means it should be correct. But it\u0026rsquo;s not enough merely to be correct. It\u0026rsquo;s easy to make a statement correct by making it vague. That\u0026rsquo;s a common flaw in academic writing, for example. If you know nothing at all about an issue, you can\u0026rsquo;t go wrong by saying that the issue is a complex one, that there are many factors to be considered, that it\u0026rsquo;s a mistake to take too simplistic a view of it, and so on.\n",
    "description": "",
    "tags": ["writing","essay","creativity","advice","communication"],
    "categories": [],
    "content": "→ 中文版本\nUseful How to Write Usefully\nFebruary 2020\nWhat should an essay be? Many people would say persuasive. That\u0026rsquo;s what a lot of us were taught essays should be. But I think we can aim for something more ambitious: that an essay should be useful.\nTo start with, that means it should be correct. But it\u0026rsquo;s not enough merely to be correct. It\u0026rsquo;s easy to make a statement correct by making it vague. That\u0026rsquo;s a common flaw in academic writing, for example. If you know nothing at all about an issue, you can\u0026rsquo;t go wrong by saying that the issue is a complex one, that there are …"
  },{
    "title": "Web 2.0",
    "url": "/paul_graham/essays_en/web20/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版\nWeb 2.0 November 2005\nDoes \u0026ldquo;Web 2.0\u0026rdquo; mean anything? Till recently I thought it didn\u0026rsquo;t, but the truth turns out to be more complicated. Originally, yes, it was meaningless. Now it seems to have acquired a meaning. And yet those who dislike the term are probably right, because if it means what I think it does, we don\u0026rsquo;t need it.\nI first heard the phrase \u0026ldquo;Web 2.0\u0026rdquo; in the name of the Web 2.0 conference in 2004. At the time it was supposed to mean using \u0026ldquo;the web as a platform,\u0026rdquo; which I took to refer to web-based applications. [1]\n",
    "description": "",
    "tags": ["Web 2.0","Ajax","democracy","user experience","technology","startup"],
    "categories": [],
    "content": "→ 中文版\nWeb 2.0 November 2005\nDoes \u0026ldquo;Web 2.0\u0026rdquo; mean anything? Till recently I thought it didn\u0026rsquo;t, but the truth turns out to be more complicated. Originally, yes, it was meaningless. Now it seems to have acquired a meaning. And yet those who dislike the term are probably right, because if it means what I think it does, we don\u0026rsquo;t need it.\nI first heard the phrase \u0026ldquo;Web 2.0\u0026rdquo; in the name of the Web 2.0 conference in 2004. At the time it was supposed to mean using \u0026ldquo;the web as a platform,\u0026rdquo; which I took to refer to web-based applications. [1]\nSo I was …"
  },{
    "title": "Weird Languages",
    "url": "/paul_graham/essays_en/weird/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版\nWeird Languages August 2021\nWhen people say that in their experience all programming languages are basically equivalent, they\u0026rsquo;re making a statement not about languages but about the kind of programming they\u0026rsquo;ve done.\n99.5% of programming consists of gluing together calls to library functions. All popular languages are equally good at this. So one can easily spend one\u0026rsquo;s whole career operating in the intersection of popular programming languages.\nBut the other .5% of programming is disproportionately interesting. If you want to learn what it consists of, the weirdness of weird languages is a good clue to follow.\n",
    "description": "",
    "tags": ["programming languages","Lisp","macros","technology","software development"],
    "categories": [],
    "content": "→ 中文版\nWeird Languages August 2021\nWhen people say that in their experience all programming languages are basically equivalent, they\u0026rsquo;re making a statement not about languages but about the kind of programming they\u0026rsquo;ve done.\n99.5% of programming consists of gluing together calls to library functions. All popular languages are equally good at this. So one can easily spend one\u0026rsquo;s whole career operating in the intersection of popular programming languages.\nBut the other .5% of programming is disproportionately interesting. If you want to learn what it consists of, the weirdness of …"
  },{
    "title": "Welcome to Lisp",
    "url": "/paul_graham/essays_en/acl2txtt1748944359/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nWelcome to Lisp This chapter aims to get you programming as soon as possible. By the end of it you will know enough Common Lisp to begin writing programs.\n2.1 Form It is particularly true of Lisp that you learn it by using it, because Lisp is an interactive language. Any Lisp system will include an interactive front-end called the toplevel. You type Lisp expressions into the toplevel, and the system displays their values. Lisp usually displays a prompt to tell you that it\u0026rsquo;s waiting for you to type something. Many implementations of Common Lisp use \u0026gt; as the toplevel prompt. That\u0026rsquo;s what we\u0026rsquo;ll use here.\n",
    "description": "",
    "tags": ["lisp","programming","tutorial","learning","technology"],
    "categories": [],
    "content": "→ 中文版本\nWelcome to Lisp This chapter aims to get you programming as soon as possible. By the end of it you will know enough Common Lisp to begin writing programs.\n2.1 Form It is particularly true of Lisp that you learn it by using it, because Lisp is an interactive language. Any Lisp system will include an interactive front-end called the toplevel. You type Lisp expressions into the toplevel, and the system displays their values. Lisp usually displays a prompt to tell you that it\u0026rsquo;s waiting for you to type something. Many implementations of Common Lisp use \u0026gt; as the toplevel prompt. …"
  },{
    "title": "What Business Can Learn from Open Source",
    "url": "/paul_graham/essays_en/opensource/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "What Business Can Learn from Open Source August 2005\n(This essay is derived from a talk at Oscon 2005.)\nLately companies have been paying more attention to open source. Ten years ago there seemed a real danger Microsoft would extend its monopoly to servers. It seems safe to say now that open source has prevented that. A recent survey found 52% of companies are replacing Windows servers with Linux servers. [1]\n",
    "description": "",
    "tags": ["open source","business","workplace","productivity","innovation","management","blogging"],
    "categories": [],
    "content": "What Business Can Learn from Open Source August 2005\n(This essay is derived from a talk at Oscon 2005.)\nLately companies have been paying more attention to open source. Ten years ago there seemed a real danger Microsoft would extend its monopoly to servers. It seems safe to say now that open source has prevented that. A recent survey found 52% of companies are replacing Windows servers with Linux servers. [1]\nMore significant, I think, is which 52% they are. At this point, anyone proposing to run Windows on servers should be prepared to explain what they know about servers that Google, Yahoo, …"
  },{
    "title": "What Doesn't Seem Like Work?",
    "url": "/paul_graham/essays_en/work/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版\nWhat Doesn\u0026rsquo;t Seem Like Work? January 2015\nMy father is a mathematician. For most of my childhood he worked for Westinghouse, modelling nuclear reactors.\nHe was one of those lucky people who know early on what they want to do. When you talk to him about his childhood, there\u0026rsquo;s a clear watershed at about age 12, when he \u0026ldquo;got interested in maths.\u0026rdquo;\nHe grew up in the small Welsh seacoast town of Pwllheli. As we retraced his walk to school on Google Street View, he said that it had been nice growing up in the country.\n",
    "description": "",
    "tags": ["work","passion","career","happiness","success"],
    "categories": [],
    "content": "→ 中文版\nWhat Doesn\u0026rsquo;t Seem Like Work? January 2015\nMy father is a mathematician. For most of my childhood he worked for Westinghouse, modelling nuclear reactors.\nHe was one of those lucky people who know early on what they want to do. When you talk to him about his childhood, there\u0026rsquo;s a clear watershed at about age 12, when he \u0026ldquo;got interested in maths.\u0026rdquo;\nHe grew up in the small Welsh seacoast town of Pwllheli. As we retraced his walk to school on Google Street View, he said that it had been nice growing up in the country.\n\u0026ldquo;Didn\u0026rsquo;t it get boring when you got to be …"
  },{
    "title": "What Happened to Yahoo",
    "url": "/paul_graham/essays_en/yahoo/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版\nWhat Happened to Yahoo August 2010When I went to work for Yahoo after they bought our startup in 1998, it felt like the center of the world. It was supposed to be the next big thing. It was supposed to be what Google turned out to be.\nWhat went wrong? The problems that hosed Yahoo go back a long time, practically to the beginning of the company. They were already very visible when I got there in 1998. Yahoo had two problems Google didn\u0026rsquo;t: easy money, and ambivalence about being a technology company.\n",
    "description": "",
    "tags": ["Yahoo","Google","startups","business","technology","hacker culture"],
    "categories": [],
    "content": "→ 中文版\nWhat Happened to Yahoo August 2010When I went to work for Yahoo after they bought our startup in 1998, it felt like the center of the world. It was supposed to be the next big thing. It was supposed to be what Google turned out to be.\nWhat went wrong? The problems that hosed Yahoo go back a long time, practically to the beginning of the company. They were already very visible when I got there in 1998. Yahoo had two problems Google didn\u0026rsquo;t: easy money, and ambivalence about being a technology company.\nMoney The first time I met Jerry Yang, we thought we were meeting for different …"
  },{
    "title": "What I Did this Summer",
    "url": "/paul_graham/essays_en/sfp/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nWhat I Did this Summer October 2005\nThe first Summer Founders Program has just finished. We were surprised how well it went. Overall only about 10% of startups succeed, but if I had to guess now, I\u0026rsquo;d predict three or four of the eight startups we funded will make it.\nOf the startups that needed further funding, I believe all have either closed a round or are likely to soon. Two have already turned down (lowball) acquisition offers.\n",
    "description": "",
    "tags": ["y_combinator","summer_founders_program","startups","young_founders","entrepreneurship"],
    "categories": [],
    "content": "→ 中文版本\nWhat I Did this Summer October 2005\nThe first Summer Founders Program has just finished. We were surprised how well it went. Overall only about 10% of startups succeed, but if I had to guess now, I\u0026rsquo;d predict three or four of the eight startups we funded will make it.\nOf the startups that needed further funding, I believe all have either closed a round or are likely to soon. Two have already turned down (lowball) acquisition offers.\nWe would have been happy if just one of the eight seemed promising by the end of the summer. What\u0026rsquo;s going on? Did some kind of anomaly make this …"
  },{
    "title": "What I Worked On",
    "url": "/paul_graham/essays_en/worked/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版\nWhat I Worked On February 2021\nBefore college the two main things I worked on, outside of school, were writing and programming. I didn\u0026rsquo;t write essays. I wrote what beginning writers were supposed to write then, and probably still are: short stories. My stories were awful. They had hardly any plot, just characters with strong feelings, which I imagined made them deep.\nThe first programs I tried writing were on the IBM 1401 that our school district used for what was then called \u0026ldquo;data processing.\u0026rdquo; This was in 9th grade, so I was 13 or 14. The school district\u0026rsquo;s 1401 happened to be in the basement of our junior high school, and my friend Rich Draves and I got permission to use it. It was like a mini Bond villain\u0026rsquo;s lair down there, with all these alien-looking machines  CPU, disk drives, printer, card reader  sitting up on a raised floor under bright fluorescent lights.The language we used was an early version of Fortran. You had to type programs on punch cards, then stack them in the card reader and press a button to load the program into memory and run it. The result would ordinarily be to print something on the spectacularly loud printer.I was puzzled by the 1401. I couldn\u0026rsquo;t figure out what to do with it. And in retrospect there\u0026rsquo;s not much I could have done with it. The only form of input to programs was data stored on punched cards, and I didn\u0026rsquo;t have any data stored on punched cards. The only other option was to do things that didn\u0026rsquo;t rely on any input, like calculate approximations of pi, but I didn\u0026rsquo;t know enough math to do anything interesting of that type. So I\u0026rsquo;m not surprised I can\u0026rsquo;t remember any programs I wrote, because they can\u0026rsquo;t have done much. My clearest memory is of the moment I learned it was possible for programs not to terminate, when one of mine didn\u0026rsquo;t. On a machine without time-sharing, this was a social as well as a technical error, as the data center manager\u0026rsquo;s expression made clear.With microcomputers, everything changed. Now you could have a computer sitting right in front of you, on a desk, that could respond to your keystrokes as it was running instead of just churning through a stack of punch cards and then stopping. [1]The first of my friends to get a microcomputer built it himself. It was sold as a kit by Heathkit. I remember vividly how impressed and envious I felt watching him sitting in front of it, typing programs right into the computer.Computers were expensive in those days and it took me years of nagging before I convinced my father to buy one, a TRS-80, in about 1980. The gold standard then was the Apple II, but a TRS-80 was good enough. This was when I really started programming. I wrote simple games, a program to predict how high my model rockets would fly, and a word processor that my father used to write at least one book. There was only room in memory for about 2 pages of text, so he\u0026rsquo;d write 2 pages at a time and then print them out, but it was a lot better than a typewriter.Though I liked programming, I didn\u0026rsquo;t plan to study it in college. In college I was going to study philosophy, which sounded much more powerful. It seemed, to my naive high school self, to be the study of the ultimate truths, compared to which the things studied in other fields would be mere domain knowledge. What I discovered when I got to college was that the other fields took up so much of the space of ideas that there wasn\u0026rsquo;t much left for these supposed ultimate truths. All that seemed left for philosophy were edge cases that people in other fields felt could safely be ignored.I couldn\u0026rsquo;t have put this into words when I was 18. All I knew at the time was that I kept taking philosophy courses and they kept being boring. So I decided to switch to AI.AI was in the air in the mid 1980s, but there were two things especially that made me want to work on it: a novel by Heinlein called The Moon is a Harsh Mistress, which featured an intelligent computer called Mike, and a PBS documentary that showed Terry Winograd using SHRDLU. I haven\u0026rsquo;t tried rereading The Moon is a Harsh Mistress, so I don\u0026rsquo;t know how well it has aged, but when I read it I was drawn entirely into its world. It seemed only a matter of time before we\u0026rsquo;d have Mike, and when I saw Winograd using SHRDLU, it seemed like that time would be a few years at most. All you had to do was teach SHRDLU more words.There weren\u0026rsquo;t any classes in AI at Cornell then, not even graduate classes, so I started trying to teach myself. Which meant learning Lisp, since in those days Lisp was regarded as the language of AI. The commonly used programming languages then were pretty primitive, and programmers\u0026rsquo; ideas correspondingly so. The default language at Cornell was a Pascal-like language called PL/I, and the situation was similar elsewhere. Learning Lisp expanded my concept of a program so fast that it was years before I started to have a sense of where the new limits were. This was more like it; this was what I had expected college to do. It wasn\u0026rsquo;t happening in a class, like it was supposed to, but that was ok. For the next couple years I was on a roll. I knew what I was going to do.For my undergraduate thesis, I reverse-engineered SHRDLU. My God did I love working on that program. It was a pleasing bit of code, but what made it even more exciting was my belief  hard to imagine now, but not unique in 1985  that it was already climbing the lower slopes of intelligence.I had gotten into a program at Cornell that didn\u0026rsquo;t make you choose a major. You could take whatever classes you liked, and choose whatever you liked to put on your degree. I of course chose \u0026ldquo;Artificial Intelligence.\u0026rdquo; When I got the actual physical diploma, I was dismayed to find that the quotes had been included, which made them read as scare-quotes. At the time this bothered me, but now it seems amusingly accurate, for reasons I was about to discover.I applied to 3 grad schools: MIT and Yale, which were renowned for AI at the time, and Harvard, which I\u0026rsquo;d visited because Rich Draves went there, and was also home to Bill Woods, who\u0026rsquo;d invented the type of parser I used in my SHRDLU clone. Only Harvard accepted me, so that was where I went.I don\u0026rsquo;t remember the moment it happened, or if there even was a specific moment, but during the first year of grad school I realized that AI, as practiced at the time, was a hoax. By which I mean the sort of AI in which a program that\u0026rsquo;s told \u0026ldquo;the dog is sitting on the chair\u0026rdquo; translates this into some formal representation and adds it to the list of things it knows.What these programs really showed was that there\u0026rsquo;s a subset of natural language that\u0026rsquo;s a formal language. But a very proper subset. It was clear that there was an unbridgeable gap between what they could do and actually understanding natural language. It was not, in fact, simply a matter of teaching SHRDLU more words. That whole way of doing AI, with explicit data structures representing concepts, was not going to work. Its brokenness did, as so often happens, generate a lot of opportunities to write papers about various band-aids that could be applied to it, but it was never going to get us Mike.So I looked around to see what I could salvage from the wreckage of my plans, and there was Lisp. I knew from experience that Lisp was interesting for its own sake and not just for its association with AI, even though that was the main reason people cared about it at the time. So I decided to focus on Lisp. In fact, I decided to write a book about Lisp hacking. It\u0026rsquo;s scary to think how little I knew about Lisp hacking when I started writing that book. But there\u0026rsquo;s nothing like writing a book about something to help you learn it. The book, On Lisp, wasn\u0026rsquo;t published till 1993, but I wrote much of it in grad school.Computer Science is an uneasy alliance between two halves, theory and systems. The theory people prove things, and the systems people build things. I wanted to build things. I had plenty of respect for theory  indeed, a sneaking suspicion that it was the more admirable of the two halves  but building things seemed so much more exciting.The problem with systems work, though, was that it didn\u0026rsquo;t last. Any program you wrote today, no matter how good, would be obsolete in a couple decades at best. People might mention your software in footnotes, but no one would actually use it. And indeed, it would seem very feeble work. Only people with a sense of the history of the field would even realize that, in its time, it had been good.There were some surplus Xerox Dandelions floating around the computer lab at one point. Anyone who wanted one to play around with could have one. I was briefly tempted, but they were so slow by present standards; what was the point? No one else wanted one either, so off they went. That was what happened to systems work.I wanted not just to build things, but to build things that would last.In this dissatisfied state I went in 1988 to visit Rich Draves at CMU, where he was in grad school. One day I went to visit the Carnegie Institute, where I\u0026rsquo;d spent a lot of time as a kid. While looking at a painting there I realized something that might seem obvious, but was a big surprise to me. There, right on the wall, was something you could make that would last. Paintings didn\u0026rsquo;t become obsolete. Some of the best ones were hundreds of years old.And moreover this was something you could make a living doing. Not as easily as you could by writing software, of course, but I thought if you were really industrious and lived really cheaply, it had to be possible to make enough to survive. And as an artist you could be truly independent. You wouldn\u0026rsquo;t have a boss, or even need to get research funding.I had always liked looking at paintings. Could I make them? I had no idea. I\u0026rsquo;d never imagined it was even possible. I knew intellectually that people made art  that it didn\u0026rsquo;t just appear spontaneously  but it was as if the people who made it were a different species. They either lived long ago or were mysterious geniuses doing strange things in profiles in Life magazine. The idea of actually being able to make art, to put that verb before that noun, seemed almost miraculous.That fall I started taking art classes at Harvard. Grad students could take classes in any department, and my advisor, Tom Cheatham, was very easy going. If he even knew about the strange classes I was taking, he never said anything.So now I was in a PhD program in computer science, yet planning to be an artist, yet also genuinely in love with Lisp hacking and working away at On Lisp. In other words, like many a grad student, I was working energetically on multiple projects that were not my thesis.I didn\u0026rsquo;t see a way out of this situation. I didn\u0026rsquo;t want to drop out of grad school, but how else was I going to get out? I remember when my friend Robert Morris got kicked out of Cornell for writing the internet worm of 1988, I was envious that he\u0026rsquo;d found such a spectacular way to get out of grad school.Then one day in April 1990 a crack appeared in the wall. I ran into professor Cheatham and he asked if I was far enough along to graduate that June. I didn\u0026rsquo;t have a word of my dissertation written, but in what must have been the quickest bit of thinking in my life, I decided to take a shot at writing one in the 5 weeks or so that remained before the deadline, reusing parts of On Lisp where I could, and I was able to respond, with no perceptible delay \u0026ldquo;Yes, I think so. I\u0026rsquo;ll give you something to read in a few days.\u0026ldquo;I picked applications of continuations as the topic. In retrospect I should have written about macros and embedded languages. There\u0026rsquo;s a whole world there that\u0026rsquo;s barely been explored. But all I wanted was to get out of grad school, and my rapidly written dissertation sufficed, just barely.Meanwhile I was applying to art schools. I applied to two: RISD in the US, and the Accademia di Belli Arti in Florence, which, because it was the oldest art school, I imagined would be good. RISD accepted me, and I never heard back from the Accademia, so off to Providence I went.I\u0026rsquo;d applied for the BFA program at RISD, which meant in effect that I had to go to college again. This was not as strange as it sounds, because I was only 25, and art schools are full of people of different ages. RISD counted me as a transfer sophomore and said I had to do the foundation that summer. The foundation means the classes that everyone has to take in fundamental subjects like drawing, color, and design.Toward the end of the summer I got a big surprise: a letter from the Accademia, which had been delayed because they\u0026rsquo;d sent it to Cambridge England instead of Cambridge Massachusetts, inviting me to take the entrance exam in Florence that fall. This was now only weeks away. My nice landlady let me leave my stuff in her attic. I had some money saved from consulting work I\u0026rsquo;d done in grad school; there was probably enough to last a year if I lived cheaply. Now all I had to do was learn Italian.Only stranieri (foreigners) had to take this entrance exam. In retrospect it may well have been a way of excluding them, because there were so many stranieri attracted by the idea of studying art in Florence that the Italian students would otherwise have been outnumbered. I was in decent shape at painting and drawing from the RISD foundation that summer, but I still don\u0026rsquo;t know how I managed to pass the written exam. I remember that I answered the essay question by writing about Cezanne, and that I cranked up the intellectual level as high as I could to make the most of my limited vocabulary. [2]I\u0026rsquo;m only up to age 25 and already there are such conspicuous patterns. Here I was, yet again about to attend some august institution in the hopes of learning about some prestigious subject, and yet again about to be disappointed. The students and faculty in the painting department at the Accademia were the nicest people you could imagine, but they had long since arrived at an arrangement whereby the students wouldn\u0026rsquo;t require the faculty to teach anything, and in return the faculty wouldn\u0026rsquo;t require the students to learn anything. And at the same time all involved would adhere outwardly to the conventions of a 19th century atelier. We actually had one of those little stoves, fed with kindling, that you see in 19th century studio paintings, and a nude model sitting as close to it as possible without getting burned. Except hardly anyone else painted her besides me. The rest of the students spent their time chatting or occasionally trying to imitate things they\u0026rsquo;d seen in American art magazines.Our model turned out to live just down the street from me. She made a living from a combination of modelling and making fakes for a local antique dealer. She\u0026rsquo;d copy an obscure old painting out of a book, and then he\u0026rsquo;d take the copy and maltreat it to make it look old. [3]While I was a student at the Accademia I started painting still lives in my bedroom at night. These paintings were tiny, because the room was, and because I painted them on leftover scraps of canvas, which was all I could afford at the time. Painting still lives is different from painting people, because the subject, as its name suggests, can\u0026rsquo;t move. People can\u0026rsquo;t sit for more than about 15 minutes at a time, and when they do they don\u0026rsquo;t sit very still. So the traditional m.o. for painting people is to know how to paint a generic person, which you then modify to match the specific person you\u0026rsquo;re painting. Whereas a still life you can, if you want, copy pixel by pixel from what you\u0026rsquo;re seeing. You don\u0026rsquo;t want to stop there, of course, or you get merely photographic accuracy, and what makes a still life interesting is that it\u0026rsquo;s been through a head. You want to emphasize the visual cues that tell you, for example, that the reason the color changes suddenly at a certain point is that it\u0026rsquo;s the edge of an object. By subtly emphasizing such things you can make paintings that are more realistic than photographs not just in some metaphorical sense, but in the strict information-theoretic sense. [4]I liked painting still lives because I was curious about what I was seeing. In everyday life, we aren\u0026rsquo;t consciously aware of much we\u0026rsquo;re seeing. Most visual perception is handled by low-level processes that merely tell your brain \u0026ldquo;that\u0026rsquo;s a water droplet\u0026rdquo; without telling you details like where the lightest and darkest points are, or \u0026ldquo;that\u0026rsquo;s a bush\u0026rdquo; without telling you the shape and position of every leaf. This is a feature of brains, not a bug. In everyday life it would be distracting to notice every leaf on every bush. But when you have to paint something, you have to look more closely, and when you do there\u0026rsquo;s a lot to see. You can still be noticing new things after days of trying to paint something people usually take for granted, just as you can after days of trying to write an essay about something people usually take for granted.This is not the only way to paint. I\u0026rsquo;m not 100% sure it\u0026rsquo;s even a good way to paint. But it seemed a good enough bet to be worth trying.Our teacher, professor Ulivi, was a nice guy. He could see I worked hard, and gave me a good grade, which he wrote down in a sort of passport each student had. But the Accademia wasn\u0026rsquo;t teaching me anything except Italian, and my money was running out, so at the end of the first year I went back to the US.I wanted to go back to RISD, but I was now broke and RISD was very expensive, so I decided to get a job for a year and then return to RISD the next fall. I got one at a company called Interleaf, which made software for creating documents. You mean like Microsoft Word? Exactly. That was how I learned that low end software tends to eat high end software. But Interleaf still had a few years to live yet. [5]Interleaf had done something pretty bold. Inspired by Emacs, they\u0026rsquo;d added a scripting language, and even made the scripting language a dialect of Lisp. Now they wanted a Lisp hacker to write things in it. This was the closest thing I\u0026rsquo;ve had to a normal job, and I hereby apologize to my boss and coworkers, because I was a bad employee. Their Lisp was the thinnest icing on a giant C cake, and since I didn\u0026rsquo;t know C and didn\u0026rsquo;t want to learn it, I never understood most of the software. Plus I was terribly irresponsible. This was back when a programming job meant showing up every day during certain working hours. That seemed unnatural to me, and on this point the rest of the world is coming around to my way of thinking, but at the time it caused a lot of friction. Toward the end of the year I spent much of my time surreptitiously working on On Lisp, which I had by this time gotten a contract to publish.The good part was that I got paid huge amounts of money, especially by art student standards. In Florence, after paying my part of the rent, my budget for everything else had been $7 a day. Now I was getting paid more than 4 times that every hour, even when I was just sitting in a meeting. By living cheaply I not only managed to save enough to go back to RISD, but also paid off my college loans.I learned some useful things at Interleaf, though they were mostly about what not to do. I learned that it's better for technology companies to be run by product people than sales people (though sales is a real skill and people who are good at it are really good at it), that it leads to bugs when code is edited by too many people, that cheap office space is no bargain if it's depressing, that planned meetings are inferior to corridor conversations, that big, bureaucratic customers are a dangerous source of money, and that there's not much overlap between conventional office hours and the optimal time for hacking, or conventional offices and the optimal place for it.But the most important thing I learned, and which I used in both Viaweb and Y Combinator, is that the low end eats the high end: that it's good to be the \"entry level\" option, even though that will be less prestigious, because if you're not, someone else will be, and will squash you against the ceiling. Which in turn means that prestige is a danger sign.When I left to go back to RISD the next fall, I arranged to do freelance work for the group that did projects for customers, and this was how I survived for the next several years. When I came back to visit for a project later on, someone told me about a new thing called HTML, which was, as he described it, a derivative of SGML. Markup language enthusiasts were an occupational hazard at Interleaf and I ignored him, but this HTML thing later became a big part of my life.In the fall of 1992 I moved back to Providence to continue at RISD. The foundation had merely been intro stuff, and the Accademia had been a (very civilized) joke. Now I was going to see what real art school was like. But alas it was more like the Accademia than not. Better organized, certainly, and a lot more expensive, but it was now becoming clear that art school did not bear the same relationship to art that medical school bore to medicine. At least not the painting department. The textile department, which my next door neighbor belonged to, seemed to be pretty rigorous. No doubt illustration and architecture were too. But painting was post-rigorous. Painting students were supposed to express themselves, which to the more worldly ones meant to try to cook up some sort of distinctive signature style.A signature style is the visual equivalent of what in show business is known as a \"schtick\": something that immediately identifies the work as yours and no one else's. For example, when you see a painting that looks like a certain kind of cartoon, you know it's by Roy Lichtenstein. So if you see a big painting of this type hanging in the apartment of a hedge fund manager, you know he paid millions of dollars for it. That's not always why artists have a signature style, but it's usually why buyers pay a lot for such work. [6]There were plenty of earnest students too: kids who \"could draw\" in high school, and now had come to what was supposed to be the best art school in the country, to learn to draw even better. They tended to be confused and demoralized by what they found at RISD, but they kept going, because painting was what they did. I was not one of the kids who could draw in high school, but at RISD I was definitely closer to their tribe than the tribe of signature style seekers.I learned a lot in the color class I took at RISD, but otherwise I was basically teaching myself to paint, and I could do that for free. So in 1993 I dropped out. I hung around Providence for a bit, and then my college friend Nancy Parmet did me a big favor. A rent-controlled apartment in a building her mother owned in New York was becoming vacant. Did I want it? It wasn't much more than my current place, and New York was supposed to be where the artists were. So yes, I wanted it! [7]Asterix comics begin by zooming in on a tiny corner of Roman Gaul that turns out not to be controlled by the Romans. You can do something similar on a map of New York City: if you zoom in on the Upper East Side, there's a tiny corner that's not rich, or at least wasn't in 1993. It's called Yorkville, and that was my new home. Now I was a New York artist  in the strictly technical sense of making paintings and living in New York.I was nervous about money, because I could sense that Interleaf was on the way down. Freelance Lisp hacking work was very rare, and I didn't want to have to program in another language, which in those days would have meant C++ if I was lucky. So with my unerring nose for financial opportunity, I decided to write another book on Lisp. This would be a popular book, the sort of book that could be used as a textbook. I imagined myself living frugally off the royalties and spending all my time painting. (The painting on the cover of this book, ANSI Common Lisp, is one that I painted around this time.)The best thing about New York for me was the presence of Idelle and Julian Weber. Idelle Weber was a painter, one of the early photorealists, and I'd taken her painting class at Harvard. I've never known a teacher more beloved by her students. Large numbers of former students kept in touch with her, including me. After I moved to New York I became her de facto studio assistant.She liked to paint on big, square canvases, 4 to 5 feet on a side. One day in late 1994 as I was stretching one of these monsters there was something on the radio about a famous fund manager. He wasn't that much older than me, and was super rich. The thought suddenly occurred to me: why don't I become rich? Then I'll be able to work on whatever I want.Meanwhile I'd been hearing more and more about this new thing called the World Wide Web. Robert Morris showed it to me when I visited him in Cambridge, where he was now in grad school at Harvard. It seemed to me that the web would be a big deal. I'd seen what graphical user interfaces had done for the popularity of microcomputers. It seemed like the web would do the same for the internet.If I wanted to get rich, here was the next train leaving the station. I was right about that part. What I got wrong was the idea. I decided we should start a company to put art galleries online. I can't honestly say, after reading so many Y Combinator applications, that this was the worst startup idea ever, but it was up there. Art galleries didn't want to be online, and still don't, not the fancy ones. That's not how they sell. I wrote some software to generate web sites for galleries, and Robert wrote some to resize images and set up an http server to serve the pages. Then we tried to sign up galleries. To call this a difficult sale would be an understatement. It was difficult to give away. A few galleries let us make sites for them for free, but none paid us.Then some online stores started to appear, and I realized that except for the order buttons they were identical to the sites we'd been generating for galleries. This impressive-sounding thing called an \"internet storefront\" was something we already knew how to build.So in the summer of 1995, after I submitted the camera-ready copy of ANSI Common Lisp to the publishers, we started trying to write software to build online stores. At first this was going to be normal desktop software, which in those days meant Windows software. That was an alarming prospect, because neither of us knew how to write Windows software or wanted to learn. We lived in the Unix world. But we decided we'd at least try writing a prototype store builder on Unix. Robert wrote a shopping cart, and I wrote a new site generator for stores  in Lisp, of course.We were working out of Robert's apartment in Cambridge. His roommate was away for big chunks of time, during which I got to sleep in his room. For some reason there was no bed frame or sheets, just a mattress on the floor. One morning as I was lying on this mattress I had an idea that made me sit up like a capital L. What if we ran the software on the server, and let users control it by clicking on links? Then we'd never have to write anything to run on users' computers. We could generate the sites on the same server we'd serve them from. Users wouldn't need anything more than a browser.This kind of software, known as a web app, is common now, but at the time it wasn't clear that it was even possible. To find out, we decided to try making a version of our store builder that you could control through the browser. A couple days later, on August 12, we had one that worked. The UI was horrible, but it proved you could build a whole store through the browser, without any client software or typing anything into the command line on the server.Now we felt like we were really onto something. I had visions of a whole new generation of software working this way. You wouldn't need versions, or ports, or any of that crap. At Interleaf there had been a whole group called Release Engineering that seemed to be at least as big as the group that actually wrote the software. Now you could just update the software right on the server.We started a new company we called Viaweb, after the fact that our software worked via the web, and we got $10,000 in seed funding from Idelle\u0026rsquo;s husband Julian. In return for that and doing the initial legal work and giving us business advice, we gave him 10% of the company. Ten years later this deal became the model for Y Combinator\u0026rsquo;s. We knew founders needed something like this, because we\u0026rsquo;d needed it ourselves.At this stage I had a negative net worth, because the thousand dollars or so I had in the bank was more than counterbalanced by what I owed the government in taxes. (Had I diligently set aside the proper proportion of the money I\u0026rsquo;d made consulting for Interleaf? No, I had not.) So although Robert had his graduate student stipend, I needed that seed funding to live on.We originally hoped to launch in September, but we got more ambitious about the software as we worked on it. Eventually we managed to build a WYSIWYG site builder, in the sense that as you were creating pages, they looked exactly like the static ones that would be generated later, except that instead of leading to static pages, the links all referred to closures stored in a hash table on the server.It helped to have studied art, because the main goal of an online store builder is to make users look legit, and the key to looking legit is high production values. If you get page layouts and fonts and colors right, you can make a guy running a store out of his bedroom look more legit than a big company.(If you\u0026rsquo;re curious why my site looks so old-fashioned, it\u0026rsquo;s because it\u0026rsquo;s still made with this software. It may look clunky today, but in 1996 it was the last word in slick.)In September, Robert rebelled. \u0026ldquo;We\u0026rsquo;ve been working on this for a month,\u0026rdquo; he said, \u0026ldquo;and it\u0026rsquo;s still not done.\u0026rdquo; This is funny in retrospect, because he would still be working on it almost 3 years later. But I decided it might be prudent to recruit more programmers, and I asked Robert who else in grad school with him was really good. He recommended Trevor Blackwell, which surprised me at first, because at that point I knew Trevor mainly for his plan to reduce everything in his life to a stack of notecards, which he carried around with him. But Rtm was right, as usual. Trevor turned out to be a frighteningly effective hacker.It was a lot of fun working with Robert and Trevor. They\u0026rsquo;re the two most independent-minded people I know, and in completely different ways. If you could see inside Rtm\u0026rsquo;s brain it would look like a colonial New England church, and if you could see inside Trevor\u0026rsquo;s it would look like the worst excesses of Austrian Rococo.We opened for business, with 6 stores, in January 1996. It was just as well we waited a few months, because although we worried we were late, we were actually almost fatally early. There was a lot of talk in the press then about ecommerce, but not many people actually wanted online stores. [8]There were three main parts to the software: the editor, which people used to build sites and which I wrote, the shopping cart, which Robert wrote, and the manager, which kept track of orders and statistics, and which Trevor wrote. In its time, the editor was one of the best general-purpose site builders. I kept the code tight and didn\u0026rsquo;t have to integrate with any other software except Robert\u0026rsquo;s and Trevor\u0026rsquo;s, so it was quite fun to work on. If all I\u0026rsquo;d had to do was work on this software, the next 3 years would have been the easiest of my life. Unfortunately I had to do a lot more, all of it stuff I was worse at than programming, and the next 3 years were instead the most stressful.There were a lot of startups making ecommerce software in the second half of the 90s. We were determined to be the Microsoft Word, not the Interleaf. Which meant being easy to use and inexpensive. It was lucky for us that we were poor, because that caused us to make Viaweb even more inexpensive than we realized. We charged $100 a month for a small store and $300 a month for a big one. This low price was a big attraction, and a constant thorn in the sides of competitors, but it wasn\u0026rsquo;t because of some clever insight that we set the price low. We had no idea what businesses paid for things. $300 a month seemed like a lot of money to us.We did a lot of things right by accident like that. For example, we did what's now called \"doing things that don't scale,\" although at the time we would have described it as \"being so lame that we're driven to the most desperate measures to get users.\" The most common of which was building stores for them. This seemed particularly humiliating, since the whole raison d'etre of our software was that people could use it to make their own stores. But anything to get users.We learned a lot more about retail than we wanted to know. For example, that if you could only have a small image of a man's shirt (and all images were small then by present standards), it was better to have a closeup of the collar than a picture of the whole shirt. The reason I remember learning this was that it meant I had to rescan about 30 images of men's shirts. My first set of scans were so beautiful too.Though this felt wrong, it was exactly the right thing to be doing. Building stores for users taught us about retail, and about how it felt to use our software. I was initially both mystified and repelled by \"business\" and thought we needed a \"business person\" to be in charge of it, but once we started to get users, I was converted, in much the same way I was converted to fatherhood once I had kids. Whatever users wanted, I was all theirs. Maybe one day we'd have so many users that I couldn't scan their images for them, but in the meantime there was nothing more important to do.Another thing I didn't get at the time is that growth rate is the ultimate test of a startup. Our growth rate was fine. We had about 70 stores at the end of 1996 and about 500 at the end of 1997. I mistakenly thought the thing that mattered was the absolute number of users. And that is the thing that matters in the sense that that's how much money you're making, and if you're not making enough, you might go out of business. But in the long term the growth rate takes care of the absolute number. If we'd been a startup I was advising at Y Combinator, I would have said: Stop being so stressed out, because you're doing fine. You're growing 7x a year. Just don't hire too many more people and you'll soon be profitable, and then you'll control your own destiny.Alas I hired lots more people, partly because our investors wanted me to, and partly because that's what startups did during the Internet Bubble. A company with just a handful of employees would have seemed amateurish. So we didn't reach breakeven until about when Yahoo bought us in the summer of 1998. Which in turn meant we were at the mercy of investors for the entire life of the company. And since both we and our investors were noobs at startups, the result was a mess even by startup standards.It was a huge relief when Yahoo bought us. In principle our Viaweb stock was valuable. It was a share in a business that was profitable and growing rapidly. But it didn't feel very valuable to me; I had no idea how to value a business, but I was all too keenly aware of the near-death experiences we seemed to have every few months. Nor had I changed my grad student lifestyle significantly since we started. So when Yahoo bought us it felt like going from rags to riches. Since we were going to California, I bought a car, a yellow 1998 VW GTI. I remember thinking that its leather seats alone were by far the most luxurious thing I owned.The next year, from the summer of 1998 to the summer of 1999, must have been the least productive of my life. I didn't realize it at the time, but I was worn out from the effort and stress of running Viaweb. For a while after I got to California I tried to continue my usual m.o. of programming till 3 in the morning, but fatigue combined with Yahoo's prematurely aged culture and grim cube farm in Santa Clara gradually dragged me down. After a few months it felt disconcertingly like working at Interleaf.Yahoo had given us a lot of options when they bought us. At the time I thought Yahoo was so overvalued that they'd never be worth anything, but to my astonishment the stock went up 5x in the next year. I hung on till the first chunk of options vested, then in the summer of 1999 I left. It had been so long since I'd painted anything that I'd half forgotten why I was doing this. My brain had been entirely full of software and men's shirts for 4 years. But I had done this to get rich so I could paint, I reminded myself, and now I was rich, so I should go paint.When I said I was leaving, my boss at Yahoo had a long conversation with me about my plans. I told him all about the kinds of pictures I wanted to paint. At the time I was touched that he took such an interest in me. Now I realize it was because he thought I was lying. My options at that point were worth about $2 million a month. If I was leaving that kind of money on the table, it could only be to go and start some new startup, and if I did, I might take people with me. This was the height of the Internet Bubble, and Yahoo was ground zero of it. My boss was at that moment a billionaire. Leaving then to start a new startup must have seemed to him an insanely, and yet also plausibly, ambitious plan.But I really was quitting to paint, and I started immediately. There was no time to lose. I\u0026rsquo;d already burned 4 years getting rich. Now when I talk to founders who are leaving after selling their companies, my advice is always the same: take a vacation. That\u0026rsquo;s what I should have done, just gone off somewhere and done nothing for a month or two, but the idea never occurred to me.So I tried to paint, but I just didn\u0026rsquo;t seem to have any energy or ambition. Part of the problem was that I didn\u0026rsquo;t know many people in California. I\u0026rsquo;d compounded this problem by buying a house up in the Santa Cruz Mountains, with a beautiful view but miles from anywhere. I stuck it out for a few more months, then in desperation I went back to New York, where unless you understand about rent control you\u0026rsquo;ll be surprised to hear I still had my apartment, sealed up like a tomb of my old life. Idelle was in New York at least, and there were other people trying to paint there, even though I didn\u0026rsquo;t know any of them.When I got back to New York I resumed my old life, except now I was rich. It was as weird as it sounds. I resumed all my old patterns, except now there were doors where there hadn\u0026rsquo;t been. Now when I was tired of walking, all I had to do was raise my hand, and (unless it was raining) a taxi would stop to pick me up. Now when I walked past charming little restaurants I could go in and order lunch. It was exciting for a while. Painting started to go better. I experimented with a new kind of still life where I\u0026rsquo;d paint one painting in the old way, then photograph it and print it, blown up, on canvas, and then use that as the underpainting for a second still life, painted from the same objects (which hopefully hadn\u0026rsquo;t rotted yet).Meanwhile I looked for an apartment to buy. Now I could actually choose what neighborhood to live in. Where, I asked myself and various real estate agents, is the Cambridge of New York? Aided by occasional visits to actual Cambridge, I gradually realized there wasn\u0026rsquo;t one. Huh.Around this time, in the spring of 2000, I had an idea. It was clear from our experience with Viaweb that web apps were the future. Why not build a web app for making web apps? Why not let people edit code on our server through the browser, and then host the resulting applications for them? [9] You could run all sorts of services on the servers that these applications could use just by making an API call: making and receiving phone calls, manipulating images, taking credit card payments, etc.I got so excited about this idea that I couldn\u0026rsquo;t think about anything else. It seemed obvious that this was the future. I didn\u0026rsquo;t particularly want to start another company, but it was clear that this idea would have to be embodied as one, so I decided to move to Cambridge and start it. I hoped to lure Robert into working on it with me, but there I ran into a hitch. Robert was now a postdoc at MIT, and though he\u0026rsquo;d made a lot of money the last time I\u0026rsquo;d lured him into working on one of my schemes, it had also been a huge time sink. So while he agreed that it sounded like a plausible idea, he firmly refused to work on it.Hmph. Well, I\u0026rsquo;d do it myself then. I recruited Dan Giffin, who had worked for Viaweb, and two undergrads who wanted summer jobs, and we got to work trying to build what it\u0026rsquo;s now clear is about twenty companies and several open source projects worth of software. The language for defining applications would of course be a dialect of Lisp. But I wasn\u0026rsquo;t so naive as to assume I could spring an overt Lisp on a general audience; we\u0026rsquo;d hide the parentheses, like Dylan did.By then there was a name for the kind of company Viaweb was, an \u0026ldquo;application service provider,\u0026rdquo; or ASP. This name didn\u0026rsquo;t last long before it was replaced by \u0026ldquo;software as a service,\u0026rdquo; but it was current for long enough that I named this new company after it: it was going to be called Aspra.I started working on the application builder, Dan worked on network infrastructure, and the two undergrads worked on the first two services (images and phone calls). But about halfway through the summer I realized I really didn\u0026rsquo;t want to run a company  especially not a big one, which it was looking like this would have to be. I\u0026rsquo;d only started Viaweb because I needed the money. Now that I didn\u0026rsquo;t need money anymore, why was I doing this? If this vision had to be realized as a company, then screw the vision. I\u0026rsquo;d build a subset that could be done as an open source project.Much to my surprise, the time I spent working on this stuff was not wasted after all. After we started Y Combinator, I would often encounter startups working on parts of this new architecture, and it was very useful to have spent so much time thinking about it and even trying to write some of it.The subset I would build as an open source project was the new Lisp, whose parentheses I now wouldn\u0026rsquo;t even have to hide. A lot of Lisp hackers dream of building a new Lisp, partly because one of the distinctive features of the language is that it has dialects, and partly, I think, because we have in our minds a Platonic form of Lisp that all existing dialects fall short of. I certainly did. So at the end of the summer Dan and I switched to working on this new dialect of Lisp, which I called Arc, in a house I bought in Cambridge.The following spring, lightning struck. I was invited to give a talk at a Lisp conference, so I gave one about how we\u0026rsquo;d used Lisp at Viaweb. Afterward I put a postscript file of this talk online, on paulgraham.com, which I\u0026rsquo;d created years before using Viaweb but had never used for anything. In one day it got 30,000 page views. What on earth had happened? The referring urls showed that someone had posted it on Slashdot. [10]Wow, I thought, there\u0026rsquo;s an audience. If I write something and put it on the web, anyone can read it. That may seem obvious now, but it was surprising then. In the print era there was a narrow channel to readers, guarded by fierce monsters known as editors. The only way to get an audience for anything you wrote was to get it published as a book, or in a newspaper or magazine. Now anyone could publish anything.This had been possible in principle since 1993, but not many people had realized it yet. I had been intimately involved with building the infrastructure of the web for most of that time, and a writer as well, and it had taken me 8 years to realize it. Even then it took me several years to understand the implications. It meant there would be a whole new generation of essays. [11]In the print era, the channel for publishing essays had been vanishingly small. Except for a few officially anointed thinkers who went to the right parties in New York, the only people allowed to publish essays were specialists writing about their specialties. There were so many essays that had never been written, because there had been no way to publish them. Now they could be, and I was going to write them. [12]I\u0026rsquo;ve worked on several different things, but to the extent there was a turning point where I figured out what to work on, it was when I started publishing essays online. From then on I knew that whatever else I did, I\u0026rsquo;d always write essays too.I knew that online essays would be a marginal medium at first. Socially they\u0026rsquo;d seem more like rants posted by nutjobs on their GeoCities sites than the genteel and beautifully typeset compositions published in The New Yorker. But by this point I knew enough to find that encouraging instead of discouraging.One of the most conspicuous patterns I\u0026rsquo;ve noticed in my life is how well it has worked, for me at least, to work on things that weren\u0026rsquo;t prestigious. Still life has always been the least prestigious form of painting. Viaweb and Y Combinator both seemed lame when we started them. I still get the glassy eye from strangers when they ask what I\u0026rsquo;m writing, and I explain that it\u0026rsquo;s an essay I\u0026rsquo;m going to publish on my web site. Even Lisp, though prestigious intellectually in something like the way Latin is, also seems about as hip.It\u0026rsquo;s not that unprestigious types of work are good per se. But when you find yourself drawn to some kind of work despite its current lack of prestige, it\u0026rsquo;s a sign both that there\u0026rsquo;s something real to be discovered there, and that you have the right kind of motives. Impure motives are a big danger for the ambitious. If anything is going to lead you astray, it will be the desire to impress people. So while working on things that aren\u0026rsquo;t prestigious doesn\u0026rsquo;t guarantee you\u0026rsquo;re on the right track, it at least guarantees you\u0026rsquo;re not on the most common type of wrong one.Over the next several years I wrote lots of essays about all kinds of different topics. O\u0026rsquo;Reilly reprinted a collection of them as a book, called Hackers \u0026amp; Painters after one of the essays in it. I also worked on spam filters, and did some more painting. I used to have dinners for a group of friends every thursday night, which taught me how to cook for groups. And I bought another building in Cambridge, a former candy factory (and later, twas said, porn studio), to use as an office.One night in October 2003 there was a big party at my house. It was a clever idea of my friend Maria Daniels, who was one of the thursday diners. Three separate hosts would all invite their friends to one party. So for every guest, two thirds of the other guests would be people they didn\u0026rsquo;t know but would probably like. One of the guests was someone I didn\u0026rsquo;t know but would turn out to like a lot: a woman called Jessica Livingston. A couple days later I asked her out.Jessica was in charge of marketing at a Boston investment bank. This bank thought it understood startups, but over the next year, as she met friends of mine from the startup world, she was surprised how different reality was. And how colorful their stories were. So she decided to compile a book of interviews with startup founders.When the bank had financial problems and she had to fire half her staff, she started looking for a new job. In early 2005 she interviewed for a marketing job at a Boston VC firm. It took them weeks to make up their minds, and during this time I started telling her about all the things that needed to be fixed about venture capital. They should make a larger number of smaller investments instead of a handful of giant ones, they should be funding younger, more technical founders instead of MBAs, they should let the founders remain as CEO, and so on.One of my tricks for writing essays had always been to give talks. The prospect of having to stand up in front of a group of people and tell them something that won\u0026rsquo;t waste their time is a great spur to the imagination. When the Harvard Computer Society, the undergrad computer club, asked me to give a talk, I decided I would tell them how to start a startup. Maybe they\u0026rsquo;d be able to avoid the worst of the mistakes we\u0026rsquo;d made.So I gave this talk, in the course of which I told them that the best sources of seed funding were successful startup founders, because then they\u0026rsquo;d be sources of advice too. Whereupon it seemed they were all looking expectantly at me. Horrified at the prospect of having my inbox flooded by business plans (if I\u0026rsquo;d only known), I blurted out \u0026ldquo;But not me!\u0026rdquo; and went on with the talk. But afterward it occurred to me that I should really stop procrastinating about angel investing. I\u0026rsquo;d been meaning to since Yahoo bought us, and now it was 7 years later and I still hadn\u0026rsquo;t done one angel investment.Meanwhile I had been scheming with Robert and Trevor about projects we could work on together. I missed working with them, and it seemed like there had to be something we could collaborate on.As Jessica and I were walking home from dinner on March 11, at the corner of Garden and Walker streets, these three threads converged. Screw the VCs who were taking so long to make up their minds. We\u0026rsquo;d start our own investment firm and actually implement the ideas we\u0026rsquo;d been talking about. I\u0026rsquo;d fund it, and Jessica could quit her job and work for it, and we\u0026rsquo;d get Robert and Trevor as partners too. [13]Once again, ignorance worked in our favor. We had no idea how to be angel investors, and in Boston in 2005 there were no Ron Conways to learn from. So we just made what seemed like the obvious choices, and some of the things we did turned out to be novel.There are multiple components to Y Combinator, and we didn\u0026rsquo;t figure them all out at once. The part we got first was to be an angel firm. In those days, those two words didn\u0026rsquo;t go together. There were VC firms, which were organized companies with people whose job it was to make investments, but they only did big, million dollar investments. And there were angels, who did smaller investments, but these were individuals who were usually focused on other things and made investments on the side. And neither of them helped founders enough in the beginning. We knew how helpless founders were in some respects, because we remembered how helpless we\u0026rsquo;d been. For example, one thing Julian had done for us that seemed to us like magic was to get us set up as a company. We were fine writing fairly difficult software, but actually getting incorporated, with bylaws and stock and all that stuff, how on earth did you do that? Our plan was not only to make seed investments, but to do for startups everything Julian had done for us.YC was not organized as a fund. It was cheap enough to run that we funded it with our own money. That went right by 99% of readers, but professional investors are thinking \u0026ldquo;Wow, that means they got all the returns.\u0026rdquo; But once again, this was not due to any particular insight on our part. We didn\u0026rsquo;t know how VC firms were organized. It never occurred to us to try to raise a fund, and if it had, we wouldn\u0026rsquo;t have known where to start. [14]The most distinctive thing about YC is the batch model: to fund a bunch of startups all at once, twice a year, and then to spend three months focusing intensively on trying to help them. That part we discovered by accident, not merely implicitly but explicitly due to our ignorance about investing. We needed to get experience as investors. What better way, we thought, than to fund a whole bunch of startups at once? We knew undergrads got temporary jobs at tech companies during the summer. Why not organize a summer program where they\u0026rsquo;d start startups instead? We wouldn\u0026rsquo;t feel guilty for being in a sense fake investors, because they would in a similar sense be fake founders. So while we probably wouldn\u0026rsquo;t make much money out of it, we\u0026rsquo;d at least get to practice being investors on them, and they for their part would probably have a more interesting summer than they would working at Microsoft.We\u0026rsquo;d use the building I owned in Cambridge as our headquarters. We\u0026rsquo;d all have dinner there once a week  on tuesdays, since I was already cooking for the thursday diners on thursdays  and after dinner we\u0026rsquo;d bring in experts on startups to give talks.We knew undergrads were deciding then about summer jobs, so in a matter of days we cooked up something we called the Summer Founders Program, and I posted an announcement on my site, inviting undergrads to apply. I had never imagined that writing essays would be a way to get \u0026ldquo;deal flow,\u0026rdquo; as investors call it, but it turned out to be the perfect source. [15] We got 225 applications for the Summer Founders Program, and we were surprised to find that a lot of them were from people who\u0026rsquo;d already graduated, or were about to that spring. Already this SFP thing was starting to feel more serious than we\u0026rsquo;d intended.We invited about 20 of the 225 groups to interview in person, and from those we picked 8 to fund. They were an impressive group. That first batch included reddit, Justin Kan and Emmett Shear, who went on to found Twitch, Aaron Swartz, who had already helped write the RSS spec and would a few years later become a martyr for open access, and Sam Altman, who would later become the second president of YC. I don\u0026rsquo;t think it was entirely luck that the first batch was so good. You had to be pretty bold to sign up for a weird thing like the Summer Founders Program instead of a summer job at a legit place like Microsoft or Goldman Sachs.The deal for startups was based on a combination of the deal we did with Julian ($10k for 10%) and what Robert said MIT grad students got for the summer ($6k). We invested $6k per founder, which in the typical two-founder case was $12k, in return for 6%. That had to be fair, because it was twice as good as the deal we ourselves had taken. Plus that first summer, which was really hot, Jessica brought the founders free air conditioners. [16]Fairly quickly I realized that we had stumbled upon the way to scale startup funding. Funding startups in batches was more convenient for us, because it meant we could do things for a lot of startups at once, but being part of a batch was better for the startups too. It solved one of the biggest problems faced by founders: the isolation. Now you not only had colleagues, but colleagues who understood the problems you were facing and could tell you how they were solving them.As YC grew, we started to notice other advantages of scale. The alumni became a tight community, dedicated to helping one another, and especially the current batch, whose shoes they remembered being in. We also noticed that the startups were becoming one another\u0026rsquo;s customers. We used to refer jokingly to the \u0026ldquo;YC GDP,\u0026rdquo; but as YC grows this becomes less and less of a joke. Now lots of startups get their initial set of customers almost entirely from among their batchmates.I had not originally intended YC to be a full-time job. I was going to do three things: hack, write essays, and work on YC. As YC grew, and I grew more excited about it, it started to take up a lot more than a third of my attention. But for the first few years I was still able to work on other things.In the summer of 2006, Robert and I started working on a new version of Arc. This one was reasonably fast, because it was compiled into Scheme. To test this new Arc, I wrote Hacker News in it. It was originally meant to be a news aggregator for startup founders and was called Startup News, but after a few months I got tired of reading about nothing but startups. Plus it wasn\u0026rsquo;t startup founders we wanted to reach. It was future startup founders. So I changed the name to Hacker News and the topic to whatever engaged one\u0026rsquo;s intellectual curiosity.HN was no doubt good for YC, but it was also by far the biggest source of stress for me. If all I\u0026rsquo;d had to do was select and help founders, life would have been so easy. And that implies that HN was a mistake. Surely the biggest source of stress in one\u0026rsquo;s work should at least be something close to the core of the work. Whereas I was like someone who was in pain while running a marathon not from the exertion of running, but because I had a blister from an ill-fitting shoe. When I was dealing with some urgent problem during YC, there was about a 60% chance it had to do with HN, and a 40% chance it had do with everything else combined. [17]As well as HN, I wrote all of YC\u0026rsquo;s internal software in Arc. But while I continued to work a good deal in Arc, I gradually stopped working on Arc, partly because I didn\u0026rsquo;t have time to, and partly because it was a lot less attractive to mess around with the language now that we had all this infrastructure depending on it. So now my three projects were reduced to two: writing essays and working on YC.YC was different from other kinds of work I\u0026rsquo;ve done. Instead of deciding for myself what to work on, the problems came to me. Every 6 months there was a new batch of startups, and their problems, whatever they were, became our problems. It was very engaging work, because their problems were quite varied, and the good founders were very effective. If you were trying to learn the most you could about startups in the shortest possible time, you couldn\u0026rsquo;t have picked a better way to do it.There were parts of the job I didn\u0026rsquo;t like. Disputes between cofounders, figuring out when people were lying to us, fighting with people who maltreated the startups, and so on. But I worked hard even at the parts I didn\u0026rsquo;t like. I was haunted by something Kevin Hale once said about companies: \u0026ldquo;No one works harder than the boss.\u0026rdquo; He meant it both descriptively and prescriptively, and it was the second part that scared me. I wanted YC to be good, so if how hard I worked set the upper bound on how hard everyone else worked, I\u0026rsquo;d better work very hard.One day in 2010, when he was visiting California for interviews, Robert Morris did something astonishing: he offered me unsolicited advice. I can only remember him doing that once before. One day at Viaweb, when I was bent over double from a kidney stone, he suggested that it would be a good idea for him to take me to the hospital. That was what it took for Rtm to offer unsolicited advice. So I remember his exact words very clearly. \u0026ldquo;You know,\u0026rdquo; he said, \u0026ldquo;you should make sure Y Combinator isn\u0026rsquo;t the last cool thing you do.\u0026ldquo;At the time I didn\u0026rsquo;t understand what he meant, but gradually it dawned on me that he was saying I should quit. This seemed strange advice, because YC was doing great. But if there was one thing rarer than Rtm offering advice, it was Rtm being wrong. So this set me thinking. It was true that on my current trajectory, YC would be the last thing I did, because it was only taking up more of my attention. It had already eaten Arc, and was in the process of eating essays too. Either YC was my life\u0026rsquo;s work or I\u0026rsquo;d have to leave eventually. And it wasn\u0026rsquo;t, so I would.In the summer of 2012 my mother had a stroke, and the cause turned out to be a blood clot caused by colon cancer. The stroke destroyed her balance, and she was put in a nursing home, but she really wanted to get out of it and back to her house, and my sister and I were determined to help her do it. I used to fly up to Oregon to visit her regularly, and I had a lot of time to think on those flights. On one of them I realized I was ready to hand YC over to someone else.I asked Jessica if she wanted to be president, but she didn\u0026rsquo;t, so we decided we\u0026rsquo;d try to recruit Sam Altman. We talked to Robert and Trevor and we agreed to make it a complete changing of the guard. Up till that point YC had been controlled by the original LLC we four had started. But we wanted YC to last for a long time, and to do that it couldn\u0026rsquo;t be controlled by the founders. So if Sam said yes, we\u0026rsquo;d let him reorganize YC. Robert and I would retire, and Jessica and Trevor would become ordinary partners.When we asked Sam if he wanted to be president of YC, initially he said no. He wanted to start a startup to make nuclear reactors. But I kept at it, and in October 2013 he finally agreed. We decided he\u0026rsquo;d take over starting with the winter 2014 batch. For the rest of 2013 I left running YC more and more to Sam, partly so he could learn the job, and partly because I was focused on my mother, whose cancer had returned.She died on January 15, 2014. We knew this was coming, but it was still hard when it did.I kept working on YC till March, to help get that batch of startups through Demo Day, then I checked out pretty completely. (I still talk to alumni and to new startups working on things I\u0026rsquo;m interested in, but that only takes a few hours a week.)What should I do next? Rtm\u0026rsquo;s advice hadn\u0026rsquo;t included anything about that. I wanted to do something completely different, so I decided I\u0026rsquo;d paint. I wanted to see how good I could get if I really focused on it. So the day after I stopped working on YC, I started painting. I was rusty and it took a while to get back into shape, but it was at least completely engaging. [18]I spent most of the rest of 2014 painting. I\u0026rsquo;d never been able to work so uninterruptedly before, and I got to be better than I had been. Not good enough, but better. Then in November, right in the middle of a painting, I ran out of steam. Up till that point I\u0026rsquo;d always been curious to see how the painting I was working on would turn out, but suddenly finishing this one seemed like a chore. So I stopped working on it and cleaned my brushes and haven\u0026rsquo;t painted since. So far anyway.I realize that sounds rather wimpy. But attention is a zero sum game. If you can choose what to work on, and you choose a project that\u0026rsquo;s not the best one (or at least a good one) for you, then it\u0026rsquo;s getting in the way of another project that is. And at 50 there was some opportunity cost to screwing around.I started writing essays again, and wrote a bunch of new ones over the next few months. I even wrote a couple that weren\u0026rsquo;t about startups. Then in March 2015 I started working on Lisp again.The distinctive thing about Lisp is that its core is a language defined by writing an interpreter in itself. It wasn\u0026rsquo;t originally intended as a programming language in the ordinary sense. It was meant to be a formal model of computation, an alternative to the Turing machine. If you want to write an interpreter for a language in itself, what\u0026rsquo;s the minimum set of predefined operators you need? The Lisp that John McCarthy invented, or more accurately discovered, is an answer to that question. [19]McCarthy didn\u0026rsquo;t realize this Lisp could even be used to program computers till his grad student Steve Russell suggested it. Russell translated McCarthy\u0026rsquo;s interpreter into IBM 704 machine language, and from that point Lisp started also to be a programming language in the ordinary sense. But its origins as a model of computation gave it a power and elegance that other languages couldn\u0026rsquo;t match. It was this that attracted me in college, though I didn\u0026rsquo;t understand why at the time.McCarthy\u0026rsquo;s 1960 Lisp did nothing more than interpret Lisp expressions. It was missing a lot of things you\u0026rsquo;d want in a programming language. So these had to be added, and when they were, they weren\u0026rsquo;t defined using McCarthy\u0026rsquo;s original axiomatic approach. That wouldn\u0026rsquo;t have been feasible at the time. McCarthy tested his interpreter by hand-simulating the execution of programs. But it was already getting close to the limit of interpreters you could test that way  indeed, there was a bug in it that McCarthy had overlooked. To test a more complicated interpreter, you\u0026rsquo;d have had to run it, and computers then weren\u0026rsquo;t powerful enough.Now they are, though. Now you could continue using McCarthy\u0026rsquo;s axiomatic approach till you\u0026rsquo;d defined a complete programming language. And as long as every change you made to McCarthy\u0026rsquo;s Lisp was a discoveredness-preserving transformation, you could, in principle, end up with a complete language that had this quality. Harder to do than to talk about, of course, but if it was possible in principle, why not try? So I decided to take a shot at it. It took 4 years, from March 26, 2015 to October 12, 2019. It was fortunate that I had a precisely defined goal, or it would have been hard to keep at it for so long.I wrote this new Lisp, called Bel, in itself in Arc. That may sound like a contradiction, but it\u0026rsquo;s an indication of the sort of trickery I had to engage in to make this work. By means of an egregious collection of hacks I managed to make something close enough to an interpreter written in itself that could actually run. Not fast, but fast enough to test.I had to ban myself from writing essays during most of this time, or I\u0026rsquo;d never have finished. In late 2015 I spent 3 months writing essays, and when I went back to working on Bel I could barely understand the code. Not so much because it was badly written as because the problem is so convoluted. When you\u0026rsquo;re working on an interpreter written in itself, it\u0026rsquo;s hard to keep track of what\u0026rsquo;s happening at what level, and errors can be practically encrypted by the time you get them.So I said no more essays till Bel was done. But I told few people about Bel while I was working on it. So for years it must have seemed that I was doing nothing, when in fact I was working harder than I\u0026rsquo;d ever worked on anything. Occasionally after wrestling for hours with some gruesome bug I\u0026rsquo;d check Twitter or HN and see someone asking \u0026ldquo;Does Paul Graham still code?\u0026ldquo;Working on Bel was hard but satisfying. I worked on it so intensively that at any given time I had a decent chunk of the code in my head and could write more there. I remember taking the boys to the coast on a sunny day in 2015 and figuring out how to deal with some problem involving continuations while I watched them play in the tide pools. It felt like I was doing life right. I remember that because I was slightly dismayed at how novel it felt. The good news is that I had more moments like this over the next few years.In the summer of 2016 we moved to England. We wanted our kids to see what it was like living in another country, and since I was a British citizen by birth, that seemed the obvious choice. We only meant to stay for a year, but we liked it so much that we still live there. So most of Bel was written in England.In the fall of 2019, Bel was finally finished. Like McCarthy\u0026rsquo;s original Lisp, it\u0026rsquo;s a spec rather than an implementation, although like McCarthy\u0026rsquo;s Lisp it\u0026rsquo;s a spec expressed as code.Now that I could write essays again, I wrote a bunch about topics I\u0026rsquo;d had stacked up. I kept writing essays through 2020, but I also started to think about other things I could work on. How should I choose what to do? Well, how had I chosen what to work on in the past? I wrote an essay for myself to answer that question, and I was surprised how long and messy the answer turned out to be. If this surprised me, who\u0026rsquo;d lived it, then I thought perhaps it would be interesting to other people, and encouraging to those with similarly messy lives. So I wrote a more detailed version for others to read, and this is the last sentence of it. Notes[1] My experience skipped a step in the evolution of computers: time-sharing machines with interactive OSes. I went straight from batch processing to microcomputers, which made microcomputers seem all the more exciting.[2] Italian words for abstract concepts can nearly always be predicted from their English cognates (except for occasional traps like polluzione). It\u0026rsquo;s the everyday words that differ. So if you string together a lot of abstract concepts with a few simple verbs, you can make a little Italian go a long way.[3] I lived at Piazza San Felice 4, so my walk to the Accademia went straight down the spine of old Florence: past the Pitti, across the bridge, past Orsanmichele, between the Duomo and the Baptistery, and then up Via Ricasoli to Piazza San Marco. I saw Florence at street level in every possible condition, from empty dark winter evenings to sweltering summer days when the streets were packed with tourists.[4] You can of course paint people like still lives if you want to, and they\u0026rsquo;re willing. That sort of portrait is arguably the apex of still life painting, though the long sitting does tend to produce pained expressions in the sitters.[5] Interleaf was one of many companies that had smart people and built impressive technology, and yet got crushed by Moore\u0026rsquo;s Law. In the 1990s the exponential growth in the power of commodity (i.e. Intel) processors rolled up high-end, special-purpose hardware and software companies like a bulldozer.[6] The signature style seekers at RISD weren\u0026rsquo;t specifically mercenary. In the art world, money and coolness are tightly coupled. Anything expensive comes to be seen as cool, and anything seen as cool will soon become equally expensive.[7] Technically the apartment wasn\u0026rsquo;t rent-controlled but rent-stabilized, but this is a refinement only New Yorkers would know or care about. The point is that it was really cheap, less than half market price.[8] Most software you can launch as soon as it\u0026rsquo;s done. But when the software is an online store builder and you\u0026rsquo;re hosting the stores, if you don\u0026rsquo;t have any users yet, that fact will be painfully obvious. So before we could launch publicly we had to launch privately, in the sense of recruiting an initial set of users and making sure they had decent-looking stores.[9] We\u0026rsquo;d had a code editor in Viaweb for users to define their own page styles. They didn\u0026rsquo;t know it, but they were editing Lisp expressions underneath. But this wasn\u0026rsquo;t an app editor, because the code ran when the merchants\u0026rsquo; sites were generated, not when shoppers visited them.[10] This was the first instance of what is now a familiar experience, and so was what happened next, when I read the comments and found they were full of angry people. How could I claim that Lisp was better than other languages? Weren\u0026rsquo;t they all Turing complete? People who see the responses to essays I write sometimes tell me how sorry they feel for me, but I\u0026rsquo;m not exaggerating when I reply that it has always been like this, since the very beginning. It comes with the territory. An essay must tell readers things they don\u0026rsquo;t already know, and some people dislike being told such things.[11] People put plenty of stuff on the internet in the 90s of course, but putting something online is not the same as publishing it online. Publishing online means you treat the online version as the (or at least a) primary version.[12] There is a general lesson here that our experience with Y Combinator also teaches: Customs continue to constrain you long after the restrictions that caused them have disappeared. Customary VC practice had once, like the customs about publishing essays, been based on real constraints. Startups had once been much more expensive to start, and proportionally rare. Now they could be cheap and common, but the VCs\u0026rsquo; customs still reflected the old world, just as customs about writing essays still reflected the constraints of the print era.Which in turn implies that people who are independent-minded (i.e. less influenced by custom) will have an advantage in fields affected by rapid change (where customs are more likely to be obsolete).Here\u0026rsquo;s an interesting point, though: you can\u0026rsquo;t always predict which fields will be affected by rapid change. Obviously software and venture capital will be, but who would have predicted that essay writing would be?[13] Y Combinator was not the original name. At first we were called Cambridge Seed. But we didn\u0026rsquo;t want a regional name, in case someone copied us in Silicon Valley, so we renamed ourselves after one of the coolest tricks in the lambda calculus, the Y combinator.I picked orange as our color partly because it\u0026rsquo;s the warmest, and partly because no VC used it. In 2005 all the VCs used staid colors like maroon, navy blue, and forest green, because they were trying to appeal to LPs, not founders. The YC logo itself is an inside joke: the Viaweb logo had been a white V on a red circle, so I made the YC logo a white Y on an orange square.[14] YC did become a fund for a couple years starting in 2009, because it was getting so big I could no longer afford to fund it personally. But after Heroku got bought we had enough money to go back to being self-funded.[15] I\u0026rsquo;ve never liked the term \u0026ldquo;deal flow,\u0026rdquo; because it implies that the number of new startups at any given time is fixed. This is not only false, but it\u0026rsquo;s the purpose of YC to falsify it, by causing startups to be founded that would not otherwise have existed.[16] She reports that they were all different shapes and sizes, because there was a run on air conditioners and she had to get whatever she could, but that they were all heavier than she could carry now.[17] Another problem with HN was a bizarre edge case that occurs when you both write essays and run a forum. When you run a forum, you\u0026rsquo;re assumed to see if not every conversation, at least every conversation involving you. And when you write essays, people post highly imaginative misinterpretations of them on forums. Individually these two phenomena are tedious but bearable, but the combination is disastrous. You actually have to respond to the misinterpretations, because the assumption that you\u0026rsquo;re present in the conversation means that not responding to any sufficiently upvoted misinterpretation reads as a tacit admission that it\u0026rsquo;s correct. But that in turn encourages more; anyone who wants to pick a fight with you senses that now is their chance.[18] The worst thing about leaving YC was not working with Jessica anymore. We\u0026rsquo;d been working on YC almost the whole time we\u0026rsquo;d known each other, and we\u0026rsquo;d neither tried nor wanted to separate it from our personal lives, so leaving was like pulling up a deeply rooted tree.[19] One way to get more precise about the concept of invented vs discovered is to talk about space aliens. Any sufficiently advanced alien civilization would certainly know about the Pythagorean theorem, for example. I believe, though with less certainty, that they would also know about the Lisp in McCarthy\u0026rsquo;s 1960 paper.But if so there\u0026rsquo;s no reason to suppose that this is the limit of the language that might be known to them. Presumably aliens need numbers and errors and I/O too. So it seems likely there exists at least one path out of McCarthy\u0026rsquo;s Lisp along which discoveredness is preserved.Thanks to Trevor Blackwell, John Collison, Patrick Collison, Daniel Gackle, Ralph Hazell, Jessica Livingston, Robert Morris, and Harj Taggar for reading drafts of this.\n",
    "description": "",
    "tags": ["programming","art","startups","ycombinator","lisp","life","career"],
    "categories": [],
    "content": "→ 中文版\nWhat I Worked On February 2021\nBefore college the two main things I worked on, outside of school, were writing and programming. I didn\u0026rsquo;t write essays. I wrote what beginning writers were supposed to write then, and probably still are: short stories. My stories were awful. They had hardly any plot, just characters with strong feelings, which I imagined made them deep.\nThe first programs I tried writing were on the IBM 1401 that our school district used for what was then called \u0026ldquo;data processing.\u0026rdquo; This was in 9th grade, so I was 13 or 14. The school district\u0026rsquo;s 1401 …"
  },{
    "title": "What I've Learned from Hacker News",
    "url": "/paul_graham/essays_en/hackernews/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nWhat I\u0026rsquo;ve Learned from Hacker News February 2009\nHacker News was two years old last week. Initially it was supposed to be a side project—an application to sharpen Arc on, and a place for current and future Y Combinator founders to exchange news. It\u0026rsquo;s grown bigger and taken up more time than I expected, but I don\u0026rsquo;t regret that because I\u0026rsquo;ve learned so much from working on it.\nGrowth When we launched in February 2007, weekday traffic was around 1600 daily uniques. It\u0026rsquo;s since grown to around 22,000. This growth rate is a bit higher than I\u0026rsquo;d like. I\u0026rsquo;d like the site to grow, since a site that isn\u0026rsquo;t growing at least slowly is probably dead. But I wouldn\u0026rsquo;t want it to grow as large as Digg or Reddit—mainly because that would dilute the character of the site, but also because I don\u0026rsquo;t want to spend all my time dealing with scaling.\n",
    "description": "",
    "tags": ["hacker news","community","social media","platforms","online communities"],
    "categories": [],
    "content": "→ 中文版本\nWhat I\u0026rsquo;ve Learned from Hacker News February 2009\nHacker News was two years old last week. Initially it was supposed to be a side project—an application to sharpen Arc on, and a place for current and future Y Combinator founders to exchange news. It\u0026rsquo;s grown bigger and taken up more time than I expected, but I don\u0026rsquo;t regret that because I\u0026rsquo;ve learned so much from working on it.\nGrowth When we launched in February 2007, weekday traffic was around 1600 daily uniques. It\u0026rsquo;s since grown to around 22,000. This growth rate is a bit higher than I\u0026rsquo;d like. …"
  },{
    "title": "What I've Learned from Users",
    "url": "/paul_graham/essays_en/users/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nWhat I\u0026rsquo;ve Learned from Users September 2022\nI recently told applicants to Y Combinator that the best advice I could give for getting in, per word, was \u0026ldquo;Explain what you\u0026rsquo;ve learned from users.\u0026rdquo; That tests a lot of things: whether you\u0026rsquo;re paying attention to users, how well you understand them, and even how much they need what you\u0026rsquo;re making.\nAfterward I asked myself the same question. What have I learned from YC\u0026rsquo;s users, the startups we\u0026rsquo;ve funded?\n",
    "description": "",
    "tags": ["startup","users","y_combinator","advice","learning","entrepreneurship"],
    "categories": [],
    "content": "→ 中文版本\nWhat I\u0026rsquo;ve Learned from Users September 2022\nI recently told applicants to Y Combinator that the best advice I could give for getting in, per word, was \u0026ldquo;Explain what you\u0026rsquo;ve learned from users.\u0026rdquo; That tests a lot of things: whether you\u0026rsquo;re paying attention to users, how well you understand them, and even how much they need what you\u0026rsquo;re making.\nAfterward I asked myself the same question. What have I learned from YC\u0026rsquo;s users, the startups we\u0026rsquo;ve funded?\nThe first thing that came to mind was that most startups have the same problems. No two have …"
  },{
    "title": "What Kate Saw in Silicon Valley",
    "url": "/paul_graham/essays_en/kate/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nWhat Kate Saw in Silicon Valley August 2009\nKate Courteau is the architect who designed Y Combinator\u0026rsquo;s office. Recently we managed to recruit her to help us run YC when she\u0026rsquo;s not busy with architectural projects. Though she\u0026rsquo;d heard a lot about YC since the beginning, the last 9 months have been a total immersion.\nI\u0026rsquo;ve been around the startup world for so long that it seems normal to me, so I was curious to hear what had surprised her most about it. This was her list:\n",
    "description": "",
    "tags": ["silicon_valley","startup_culture","observation","y_combinator","founders","venture_capital","innovation"],
    "categories": [],
    "content": "→ 中文版本\nWhat Kate Saw in Silicon Valley August 2009\nKate Courteau is the architect who designed Y Combinator\u0026rsquo;s office. Recently we managed to recruit her to help us run YC when she\u0026rsquo;s not busy with architectural projects. Though she\u0026rsquo;d heard a lot about YC since the beginning, the last 9 months have been a total immersion.\nI\u0026rsquo;ve been around the startup world for so long that it seems normal to me, so I was curious to hear what had surprised her most about it. This was her list:\nHow many startups fail. Kate knew in principle that startups were very risky, but she was …"
  },{
    "title": "What Languages Fix",
    "url": "/paul_graham/essays_en/fix/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nWhat Languages Fix Kevin Kelleher suggested an interesting way to compare programming languages: to describe each in terms of the problem it fixes. The surprising thing is how many, and how well, languages can be described this way.\nAlgol: Assembly language is too low-level.\nPascal: Algol doesn\u0026rsquo;t have enough data types.\nModula: Pascal is too wimpy for systems programming.\nSimula: Algol isn\u0026rsquo;t good enough at simulations.\nSmalltalk: Not everything in Simula is an object.\n",
    "description": "",
    "tags": ["programming","languages","software","technology","development"],
    "categories": [],
    "content": "→ 中文版本\nWhat Languages Fix Kevin Kelleher suggested an interesting way to compare programming languages: to describe each in terms of the problem it fixes. The surprising thing is how many, and how well, languages can be described this way.\nAlgol: Assembly language is too low-level.\nPascal: Algol doesn\u0026rsquo;t have enough data types.\nModula: Pascal is too wimpy for systems programming.\nSimula: Algol isn\u0026rsquo;t good enough at simulations.\nSmalltalk: Not everything in Simula is an object.\nFortran: Assembly language is too low-level.\nCobol: Fortran is scary.\nPL/1: Fortran doesn\u0026rsquo;t have …"
  },{
    "title": "What Made Lisp Different",
    "url": "/paul_graham/essays_en/diff/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ Chinese Version\nWhat Made Lisp Different December 2001 (rev. May 2002)\n(This article came about in response to some questions on the LL1 mailing list. It is now incorporated in Revenge of the Nerds.)\nWhen McCarthy designed Lisp in the late 1950s, it was a radical departure from existing languages, the most important of which was Fortran.\nLisp embodied nine new ideas:\nConditionals. A conditional is an if-then-else construct. We take these for granted now. They were invented by McCarthy in the course of developing Lisp. (Fortran at that time only had a conditional goto, closely based on the branch instruction in the underlying hardware.) McCarthy, who was on the Algol committee, got conditionals into Algol, whence they spread to most other languages.\n",
    "description": "",
    "tags": ["lisp","programming languages","history","technology","innovation","computer science"],
    "categories": [],
    "content": "→ Chinese Version\nWhat Made Lisp Different December 2001 (rev. May 2002)\n(This article came about in response to some questions on the LL1 mailing list. It is now incorporated in Revenge of the Nerds.)\nWhen McCarthy designed Lisp in the late 1950s, it was a radical departure from existing languages, the most important of which was Fortran.\nLisp embodied nine new ideas:\nConditionals. A conditional is an if-then-else construct. We take these for granted now. They were invented by McCarthy in the course of developing Lisp. (Fortran at that time only had a conditional goto, closely based on the …"
  },{
    "title": "What Microsoft Is this the Altair Basic of?",
    "url": "/paul_graham/essays_en/altair/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nWhat Microsoft Is this the Altair Basic of? February 2015\nOne of the most valuable exercises you can try if you want to understand startups is to look at the most successful companies and explain why they were not as lame as they seemed when they first launched. Because they practically all seemed lame at first. Not just small, lame. Not just the first step up a big mountain. More like the first step into a swamp.\n",
    "description": "",
    "tags": ["startup","microsoft","ideas","innovation","vision"],
    "categories": [],
    "content": "→ 中文版本\nWhat Microsoft Is this the Altair Basic of? February 2015\nOne of the most valuable exercises you can try if you want to understand startups is to look at the most successful companies and explain why they were not as lame as they seemed when they first launched. Because they practically all seemed lame at first. Not just small, lame. Not just the first step up a big mountain. More like the first step into a swamp.\nA Basic interpreter for the Altair? How could that ever grow into a giant company? People sleeping on airbeds in strangers\u0026rsquo; apartments? A web site for college students …"
  },{
    "title": "What Startups Are Really Like",
    "url": "/paul_graham/essays_en/really/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nWhat Startups Are Really Like October 2009\n(This essay is derived from a talk at the 2009 Startup School.)\nI wasn\u0026rsquo;t sure what to talk about at Startup School, so I decided to ask the founders of the startups we\u0026rsquo;d funded. What hadn\u0026rsquo;t I written about yet?\nI\u0026rsquo;m in the unusual position of being able to test the essays I write about startups. I hope the ones on other topics are right, but I have no way to test them. The ones on startups get tested by about 70 people every 6 months.\n",
    "description": "",
    "tags": ["startup","founder","entrepreneur","persistence","cofounders","emotional","experience"],
    "categories": [],
    "content": "→ 中文版本\nWhat Startups Are Really Like October 2009\n(This essay is derived from a talk at the 2009 Startup School.)\nI wasn\u0026rsquo;t sure what to talk about at Startup School, so I decided to ask the founders of the startups we\u0026rsquo;d funded. What hadn\u0026rsquo;t I written about yet?\nI\u0026rsquo;m in the unusual position of being able to test the essays I write about startups. I hope the ones on other topics are right, but I have no way to test them. The ones on startups get tested by about 70 people every 6 months.\nSo I sent all the founders an email asking what surprised them about starting a startup. …"
  },{
    "title": "What the Bubble Got Right",
    "url": "/paul_graham/essays_en/bubble/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nWhat the Bubble Got Right September 2004\n(This essay is derived from an invited talk at ICFP 2004.)\nI had a front row seat for the Internet Bubble, because I worked at Yahoo during 1998 and 1999. One day, when the stock was trading around $200, I sat down and calculated what I thought the price should be. The answer I got was $12. I went to the next cubicle and told my friend Trevor. \u0026ldquo;Twelve!\u0026rdquo; he said. He tried to sound indignant, but he didn\u0026rsquo;t quite manage it. He knew as well as I did that our valuation was crazy.\n",
    "description": "",
    "tags": ["bubble","internet","startups","technology","business","economy"],
    "categories": [],
    "content": "→ 中文版本\nWhat the Bubble Got Right September 2004\n(This essay is derived from an invited talk at ICFP 2004.)\nI had a front row seat for the Internet Bubble, because I worked at Yahoo during 1998 and 1999. One day, when the stock was trading around $200, I sat down and calculated what I thought the price should be. The answer I got was $12. I went to the next cubicle and told my friend Trevor. \u0026ldquo;Twelve!\u0026rdquo; he said. He tried to sound indignant, but he didn\u0026rsquo;t quite manage it. He knew as well as I did that our valuation was crazy.\nYahoo was a special case. It was not just our price to …"
  },{
    "title": "What to Do",
    "url": "/paul_graham/essays_en/do/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ Chinese Version\nWhat to Do March 2025\nWhat should one do? That may seem a strange question, but it\u0026rsquo;s not meaningless or unanswerable. It\u0026rsquo;s the sort of question kids ask before they learn not to ask big questions. I only came across it myself in the process of investigating something else. But once I did, I thought I should at least try to answer it.\nSo what should one do? One should help people, and take care of the world. Those two are obvious. But is there anything else? When I ask that, the answer that pops up is Make good new things.\n",
    "description": "",
    "tags": ["philosophy","ethics","creativity","purpose","meaning","life","principles","work"],
    "categories": [],
    "content": "→ Chinese Version\nWhat to Do March 2025\nWhat should one do? That may seem a strange question, but it\u0026rsquo;s not meaningless or unanswerable. It\u0026rsquo;s the sort of question kids ask before they learn not to ask big questions. I only came across it myself in the process of investigating something else. But once I did, I thought I should at least try to answer it.\nSo what should one do? One should help people, and take care of the world. Those two are obvious. But is there anything else? When I ask that, the answer that pops up is Make good new things.\nI can\u0026rsquo;t prove that one should do …"
  },{
    "title": "What We Look for in Founders",
    "url": "/paul_graham/essays_en/founders/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nWhat We Look for in Founders Want to start a startup? Get funded by Y Combinator.\nOctober 2010\n(I wrote this for Forbes, who asked me to write something about the qualities we look for in founders. In print they had to cut the last item because they didn\u0026rsquo;t have room.)\n1. Determination This has turned out to be the most important quality in startup founders. We thought when we started Y Combinator that the most important quality would be intelligence. That\u0026rsquo;s the myth in the Valley. And certainly you don\u0026rsquo;t want founders to be stupid. But as long as you\u0026rsquo;re over a certain threshold of intelligence, what matters most is determination. You\u0026rsquo;re going to hit a lot of obstacles. You can\u0026rsquo;t be the sort of person who gets demoralized easily.\n",
    "description": "",
    "tags": ["founders","qualities","determination","flexibility","imagination","naughtiness","friendship"],
    "categories": [],
    "content": "→ 中文版本\nWhat We Look for in Founders Want to start a startup? Get funded by Y Combinator.\nOctober 2010\n(I wrote this for Forbes, who asked me to write something about the qualities we look for in founders. In print they had to cut the last item because they didn\u0026rsquo;t have room.)\n1. Determination This has turned out to be the most important quality in startup founders. We thought when we started Y Combinator that the most important quality would be intelligence. That\u0026rsquo;s the myth in the Valley. And certainly you don\u0026rsquo;t want founders to be stupid. But as long as you\u0026rsquo;re over a …"
  },{
    "title": "What You (Want to)* Want",
    "url": "/paul_graham/essays_en/want/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nWhat You (Want to)* Want November 2022\nSince I was about 9 I\u0026rsquo;ve been puzzled by the apparent contradiction between being made of matter that behaves in a predictable way, and the feeling that I could choose to do whatever I wanted. At the time I had a self-interested motive for exploring the question. At that age (like most succeeding ages) I was always in trouble with the authorities, and it seemed to me that there might possibly be some way to get out of trouble by arguing that I wasn\u0026rsquo;t responsible for my actions. I gradually lost hope of that, but the puzzle remained: How do you reconcile being a machine made of matter with the feeling that you\u0026rsquo;re free to choose what you do? [1]\n",
    "description": "",
    "tags": ["free will","desire","consciousness","decision making","philosophy","psychology"],
    "categories": [],
    "content": "→ 中文版本\nWhat You (Want to)* Want November 2022\nSince I was about 9 I\u0026rsquo;ve been puzzled by the apparent contradiction between being made of matter that behaves in a predictable way, and the feeling that I could choose to do whatever I wanted. At the time I had a self-interested motive for exploring the question. At that age (like most succeeding ages) I was always in trouble with the authorities, and it seemed to me that there might possibly be some way to get out of trouble by arguing that I wasn\u0026rsquo;t responsible for my actions. I gradually lost hope of that, but the puzzle remained: How …"
  },{
    "title": "What You Can't Say",
    "url": "/paul_graham/essays_en/say/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nWhat You Can\u0026rsquo;t Say January 2004\nHave you ever seen an old photo of yourself and been embarrassed at the way you looked? Did we actually dress like that? We did. And we had no idea how silly we looked. It\u0026rsquo;s the nature of fashion to be invisible, in the same way the movement of the earth is invisible to all of us riding on it.\nWhat scares me is that there are moral fashions too. They\u0026rsquo;re just as arbitrary, and just as invisible to most people. But they\u0026rsquo;re much more dangerous. Fashion is mistaken for good design; moral fashion is mistaken for good. Dressing oddly gets you laughed at. Violating moral fashions can get you fired, ostracized, imprisoned, or even killed.\n",
    "description": "",
    "tags": ["free_speech","moral_fashion","heresy","conformity","censorship","critical_thinking"],
    "categories": [],
    "content": "→ 中文版本\nWhat You Can\u0026rsquo;t Say January 2004\nHave you ever seen an old photo of yourself and been embarrassed at the way you looked? Did we actually dress like that? We did. And we had no idea how silly we looked. It\u0026rsquo;s the nature of fashion to be invisible, in the same way the movement of the earth is invisible to all of us riding on it.\nWhat scares me is that there are moral fashions too. They\u0026rsquo;re just as arbitrary, and just as invisible to most people. But they\u0026rsquo;re much more dangerous. Fashion is mistaken for good design; moral fashion is mistaken for good. Dressing oddly …"
  },{
    "title": "What You'll Wish You'd Known",
    "url": "/paul_graham/essays_en/hs/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nWhat You\u0026rsquo;ll Wish You\u0026rsquo;d Known January 2005\n(I wrote this talk for a high school. I never actually gave it, because the school authorities vetoed the plan to invite me.)\nWhen I said I was speaking at a high school, my friends were curious. What will you say to high school students? So I asked them, what do you wish someone had told you in high school? Their answers were remarkably similar. So I\u0026rsquo;m going to tell you what we all wish someone had told us.\n",
    "description": "",
    "tags": ["high school","advice","education","curiosity","ambition","success","life lessons"],
    "categories": [],
    "content": "→ 中文版本\nWhat You\u0026rsquo;ll Wish You\u0026rsquo;d Known January 2005\n(I wrote this talk for a high school. I never actually gave it, because the school authorities vetoed the plan to invite me.)\nWhen I said I was speaking at a high school, my friends were curious. What will you say to high school students? So I asked them, what do you wish someone had told you in high school? Their answers were remarkably similar. So I\u0026rsquo;m going to tell you what we all wish someone had told us.\nI\u0026rsquo;ll start by telling you something you don\u0026rsquo;t have to know in high school: what you want to do with your …"
  },{
    "title": "When To Do What You Love",
    "url": "/paul_graham/essays_en/when/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版\nWhen To Do What You Love September 2024\nThere\u0026rsquo;s some debate about whether it\u0026rsquo;s a good idea to \u0026ldquo;follow your passion.\u0026rdquo; In fact the question is impossible to answer with a simple yes or no. Sometimes you should and sometimes you shouldn\u0026rsquo;t, but the border between should and shouldn\u0026rsquo;t is very complicated. The only way to give a general answer is to trace it.\nWhen people talk about this question, there\u0026rsquo;s always an implicit \u0026ldquo;instead of.\u0026rdquo; All other things being equal, why wouldn\u0026rsquo;t you work on what interests you the most? So even raising the question implies that all other things aren\u0026rsquo;t equal, and that you have to choose between working on what interests you the most and something else, like what pays the best.\n",
    "description": "",
    "tags": ["passion","career","money","startup","work"],
    "categories": [],
    "content": "→ 中文版\nWhen To Do What You Love September 2024\nThere\u0026rsquo;s some debate about whether it\u0026rsquo;s a good idea to \u0026ldquo;follow your passion.\u0026rdquo; In fact the question is impossible to answer with a simple yes or no. Sometimes you should and sometimes you shouldn\u0026rsquo;t, but the border between should and shouldn\u0026rsquo;t is very complicated. The only way to give a general answer is to trace it.\nWhen people talk about this question, there\u0026rsquo;s always an implicit \u0026ldquo;instead of.\u0026rdquo; All other things being equal, why wouldn\u0026rsquo;t you work on what interests you the most? So even raising …"
  },{
    "title": "Where to See Silicon Valley",
    "url": "/paul_graham/essays_en/seesv/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nWhere to See Silicon Valley October 2010\nSilicon Valley proper is mostly suburban sprawl. At first glance it doesn\u0026rsquo;t seem there\u0026rsquo;s anything to see. It\u0026rsquo;s not the sort of place that has conspicuous monuments. But if you look, there are subtle signs you\u0026rsquo;re in a place that\u0026rsquo;s different from other places.\nStanford University Stanford is a strange place. Structurally it is to an ordinary university what suburbia is to a city. It\u0026rsquo;s enormously spread out, and feels surprisingly empty much of the time. But notice the weather. It\u0026rsquo;s probably perfect. And notice the beautiful mountains to the west. And though you can\u0026rsquo;t see it, cosmopolitan San Francisco is 40 minutes to the north. That combination is much of the reason Silicon Valley grew up around this university and not some other one.\n",
    "description": "",
    "tags": ["silicon_valley","startups","venture_capital","tech_culture","y_combinator","geography"],
    "categories": [],
    "content": "→ 中文版本\nWhere to See Silicon Valley October 2010\nSilicon Valley proper is mostly suburban sprawl. At first glance it doesn\u0026rsquo;t seem there\u0026rsquo;s anything to see. It\u0026rsquo;s not the sort of place that has conspicuous monuments. But if you look, there are subtle signs you\u0026rsquo;re in a place that\u0026rsquo;s different from other places.\nStanford University Stanford is a strange place. Structurally it is to an ordinary university what suburbia is to a city. It\u0026rsquo;s enormously spread out, and feels surprisingly empty much of the time. But notice the weather. It\u0026rsquo;s probably perfect. And …"
  },{
    "title": "Why Arc Isn't Especially Object-Oriented",
    "url": "/paul_graham/essays_en/noop/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nWhy Arc Isn\u0026rsquo;t Especially Object-Oriented There is a kind of mania for object-oriented programming at the moment, but some of the smartest programmers I know are some of the least excited about it.\nMy own feeling is that object-oriented programming is a useful technique in some cases, but it isn\u0026rsquo;t something that has to pervade every program you write. You should be able to define new types, but you shouldn\u0026rsquo;t have to express every program as the definition of new types.\n",
    "description": "",
    "tags": ["object-oriented programming","Arc","Lisp","software design","programming languages","code"],
    "categories": [],
    "content": "→ 中文版本\nWhy Arc Isn\u0026rsquo;t Especially Object-Oriented There is a kind of mania for object-oriented programming at the moment, but some of the smartest programmers I know are some of the least excited about it.\nMy own feeling is that object-oriented programming is a useful technique in some cases, but it isn\u0026rsquo;t something that has to pervade every program you write. You should be able to define new types, but you shouldn\u0026rsquo;t have to express every program as the definition of new types.\nI think there are five reasons people like object-oriented programming, and three and a half of them …"
  },{
    "title": "Why It's Safe for Founders to Be Nice",
    "url": "/paul_graham/essays_en/safe/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nWhy It\u0026rsquo;s Safe for Founders to Be Nice August 2015\nI recently got an email from a founder that helped me understand something important: why it\u0026rsquo;s safe for startup founders to be nice people.\nI grew up with a cartoon idea of a very successful businessman (in the cartoon it was always a man): a rapacious, cigar-smoking, table-thumping guy in his fifties who wins by exercising power, and isn\u0026rsquo;t too fussy about how. As I\u0026rsquo;ve written before, one of the things that has surprised me most about startups is how few of the most successful founders are like that. Maybe successful people in other industries are; I don\u0026rsquo;t know; but not startup founders. [1]\n",
    "description": "",
    "tags": ["founders","kindness","growth","startups","business ethics","success"],
    "categories": [],
    "content": "→ 中文版本\nWhy It\u0026rsquo;s Safe for Founders to Be Nice August 2015\nI recently got an email from a founder that helped me understand something important: why it\u0026rsquo;s safe for startup founders to be nice people.\nI grew up with a cartoon idea of a very successful businessman (in the cartoon it was always a man): a rapacious, cigar-smoking, table-thumping guy in his fifties who wins by exercising power, and isn\u0026rsquo;t too fussy about how. As I\u0026rsquo;ve written before, one of the things that has surprised me most about startups is how few of the most successful founders are like that. Maybe …"
  },{
    "title": "Why Nerds are Unpopular",
    "url": "/paul_graham/essays_en/nerds/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nWhy Nerds are Unpopular February 2003\nWhen we were in junior high school, my friend Rich and I made a map of the school lunch tables according to popularity. This was easy to do, because kids only ate lunch with others of about the same popularity. We graded them from A to E. A tables were full of football players and cheerleaders and so on. E tables contained the kids with mild cases of Down\u0026rsquo;s Syndrome, what in the language of the time we called \u0026ldquo;retards.\u0026rdquo;\n",
    "description": "",
    "tags": ["nerds","school","popularity","intelligence","teenagers","social","education"],
    "categories": [],
    "content": "→ 中文版本\nWhy Nerds are Unpopular February 2003\nWhen we were in junior high school, my friend Rich and I made a map of the school lunch tables according to popularity. This was easy to do, because kids only ate lunch with others of about the same popularity. We graded them from A to E. A tables were full of football players and cheerleaders and so on. E tables contained the kids with mild cases of Down\u0026rsquo;s Syndrome, what in the language of the time we called \u0026ldquo;retards.\u0026rdquo;\nWe sat at a D table, as low as you could get without looking physically different. We were not being especially …"
  },{
    "title": "Why Smart People Have Bad Ideas",
    "url": "/paul_graham/essays_en/bronze/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nWhy Smart People Have Bad Ideas Want to start a startup? Get funded by Y Combinator.\nApril 2005\nThis summer, as an experiment, some friends and I are giving seed funding to a bunch of new startups. It\u0026rsquo;s an experiment because we\u0026rsquo;re prepared to fund younger founders than most investors would. That\u0026rsquo;s why we\u0026rsquo;re doing it during the summer—so even college students can participate.\nWe know from Google and Yahoo that grad students can start successful startups. And we know from experience that some undergrads are as capable as most grad students. The accepted age for startup founders has been creeping downward. We\u0026rsquo;re trying to find the lower bound.\n",
    "description": "",
    "tags": ["ideas","startups","learning","business","psychology"],
    "categories": [],
    "content": "→ 中文版本\nWhy Smart People Have Bad Ideas Want to start a startup? Get funded by Y Combinator.\nApril 2005\nThis summer, as an experiment, some friends and I are giving seed funding to a bunch of new startups. It\u0026rsquo;s an experiment because we\u0026rsquo;re prepared to fund younger founders than most investors would. That\u0026rsquo;s why we\u0026rsquo;re doing it during the summer—so even college students can participate.\nWe know from Google and Yahoo that grad students can start successful startups. And we know from experience that some undergrads are as capable as most grad students. The accepted age for …"
  },{
    "title": "Why Startup Hubs Work",
    "url": "/paul_graham/essays_en/hubs/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nWhy Startup Hubs Work Want to start a startup? Get funded by Y Combinator.\nOctober 2011\nIf you look at a list of US cities sorted by population, the number of successful startups per capita varies by orders of magnitude. Somehow it\u0026rsquo;s as if most places were sprayed with startupicide.\nI wondered about this for years. I could see the average town was like a roach motel for startup ambitions: smart, ambitious people went in, but no startups came out. But I was never able to figure out exactly what happened inside the motel—exactly what was killing all the potential startups. [1]\n",
    "description": "",
    "tags": ["startup hubs","Silicon Valley","entrepreneurship","ecosystem","innovation","Y Combinator","community"],
    "categories": [],
    "content": "→ 中文版本\nWhy Startup Hubs Work Want to start a startup? Get funded by Y Combinator.\nOctober 2011\nIf you look at a list of US cities sorted by population, the number of successful startups per capita varies by orders of magnitude. Somehow it\u0026rsquo;s as if most places were sprayed with startupicide.\nI wondered about this for years. I could see the average town was like a roach motel for startup ambitions: smart, ambitious people went in, but no startups came out. But I was never able to figure out exactly what happened inside the motel—exactly what was killing all the potential startups. [1]\nA …"
  },{
    "title": "Why Startups Condense in America",
    "url": "/paul_graham/essays_en/america/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nWhy Startups Condense in America May 2006\n(This essay is derived from a keynote at Xtech.)\nStartups happen in clusters. There are a lot of them in Silicon Valley and Boston, and few in Chicago or Miami. A country that wants startups will probably also have to reproduce whatever makes these clusters form.\nI\u0026rsquo;ve claimed that the recipe is a great university near a town smart people like. If you set up those conditions within the US, startups will form as inevitably as water droplets condense on a cold piece of metal. But when I consider what it would take to reproduce Silicon Valley in another country, it\u0026rsquo;s clear the US is a particularly humid environment. Startups condense more easily here.\n",
    "description": "",
    "tags": ["startup","america","silicon valley","innovation","entrepreneurship"],
    "categories": [],
    "content": "→ 中文版本\nWhy Startups Condense in America May 2006\n(This essay is derived from a keynote at Xtech.)\nStartups happen in clusters. There are a lot of them in Silicon Valley and Boston, and few in Chicago or Miami. A country that wants startups will probably also have to reproduce whatever makes these clusters form.\nI\u0026rsquo;ve claimed that the recipe is a great university near a town smart people like. If you set up those conditions within the US, startups will form as inevitably as water droplets condense on a cold piece of metal. But when I consider what it would take to reproduce Silicon Valley …"
  },{
    "title": "Why There Aren't More Googles",
    "url": "/paul_graham/essays_en/googles/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nWhy There Aren\u0026rsquo;t More Googles April 2008\nUmair Haque wrote recently that the reason there aren\u0026rsquo;t more Googles is that most startups get bought before they can change the world. Google, despite serious interest from Microsoft and Yahoo—what must have seemed like lucrative interest at the time—didn\u0026rsquo;t sell out. Google might simply have been nothing but Yahoo\u0026rsquo;s or MSN\u0026rsquo;s search box.\nWhy isn\u0026rsquo;t it? Because Google had a deeply felt sense of purpose: a conviction to change the world for the better. This has a nice sound to it, but it isn\u0026rsquo;t true. Google\u0026rsquo;s founders were willing to sell early on. They just wanted more than acquirers were willing to pay.\n",
    "description": "",
    "tags": ["startups","google","vc","acquisition","innovation"],
    "categories": [],
    "content": "→ 中文版本\nWhy There Aren\u0026rsquo;t More Googles April 2008\nUmair Haque wrote recently that the reason there aren\u0026rsquo;t more Googles is that most startups get bought before they can change the world. Google, despite serious interest from Microsoft and Yahoo—what must have seemed like lucrative interest at the time—didn\u0026rsquo;t sell out. Google might simply have been nothing but Yahoo\u0026rsquo;s or MSN\u0026rsquo;s search box.\nWhy isn\u0026rsquo;t it? Because Google had a deeply felt sense of purpose: a conviction to change the world for the better. This has a nice sound to it, but it isn\u0026rsquo;t true. …"
  },{
    "title": "Why to Move to a Startup Hub",
    "url": "/paul_graham/essays_en/startuphubs/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ Chinese Version\nWhy to Move to a Startup Hub October 2007\nAfter the last talk I gave, one of the organizers got up on the stage to deliver an impromptu rebuttal. That never happened before. I only heard the first few sentences, but that was enough to tell what I said that upset him: that startups would do better if they moved to Silicon Valley.\nThis conference was in London, and most of the audience seemed to be from the UK. So saying startups should move to Silicon Valley seemed like a nationalistic remark: an obnoxious American telling them that if they wanted to do things right they should all just move to America.\n",
    "description": "",
    "tags": ["Silicon Valley","startup hubs","entrepreneurship","location","innovation"],
    "categories": [],
    "content": "→ Chinese Version\nWhy to Move to a Startup Hub October 2007\nAfter the last talk I gave, one of the organizers got up on the stage to deliver an impromptu rebuttal. That never happened before. I only heard the first few sentences, but that was enough to tell what I said that upset him: that startups would do better if they moved to Silicon Valley.\nThis conference was in London, and most of the audience seemed to be from the UK. So saying startups should move to Silicon Valley seemed like a nationalistic remark: an obnoxious American telling them that if they wanted to do things right they …"
  },{
    "title": "Why to Start a Startup in a Bad Economy",
    "url": "/paul_graham/essays_en/badeconomy/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nWhy to Start a Startup in a Bad Economy Want to start a startup? Get funded by Y Combinator.\nOctober 2008\nThe economic situation is apparently so grim that some experts fear we may be in for a stretch as bad as the mid seventies. When Microsoft and Apple were founded.\nAs those examples suggest, a recession may not be such a bad time to start a startup. I\u0026rsquo;m not claiming it\u0026rsquo;s a particularly good time either. The truth is more boring: the state of the economy doesn\u0026rsquo;t matter much either way.\n",
    "description": "",
    "tags": ["startup","economy","recession","founders","investing","technology"],
    "categories": [],
    "content": "→ 中文版本\nWhy to Start a Startup in a Bad Economy Want to start a startup? Get funded by Y Combinator.\nOctober 2008\nThe economic situation is apparently so grim that some experts fear we may be in for a stretch as bad as the mid seventies. When Microsoft and Apple were founded.\nAs those examples suggest, a recession may not be such a bad time to start a startup. I\u0026rsquo;m not claiming it\u0026rsquo;s a particularly good time either. The truth is more boring: the state of the economy doesn\u0026rsquo;t matter much either way.\nIf we\u0026rsquo;ve learned one thing from funding so many startups, it\u0026rsquo;s that …"
  },{
    "title": "Why TV Lost",
    "url": "/paul_graham/essays_en/convergence/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nWhy TV Lost March 2009\nAbout twenty years ago people noticed computers and TV were on a collision course and started to speculate about what they\u0026rsquo;d produce when they converged. We now know the answer: computers. It\u0026rsquo;s clear now that even by using the word \u0026ldquo;convergence\u0026rdquo; we were giving TV too much credit. This won\u0026rsquo;t be convergence so much as replacement. People may still watch things they call \u0026ldquo;TV shows,\u0026rdquo; but they\u0026rsquo;ll watch them mostly on computers.\n",
    "description": "",
    "tags": ["TV","internet","convergence","media","technology","social","innovation"],
    "categories": [],
    "content": "→ 中文版本\nWhy TV Lost March 2009\nAbout twenty years ago people noticed computers and TV were on a collision course and started to speculate about what they\u0026rsquo;d produce when they converged. We now know the answer: computers. It\u0026rsquo;s clear now that even by using the word \u0026ldquo;convergence\u0026rdquo; we were giving TV too much credit. This won\u0026rsquo;t be convergence so much as replacement. People may still watch things they call \u0026ldquo;TV shows,\u0026rdquo; but they\u0026rsquo;ll watch them mostly on computers.\nWhat decided the contest for computers? Four forces, three of which one could have predicted, …"
  },{
    "title": "Why Twitter is a Big Deal",
    "url": "/paul_graham/essays_en/twitter/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nWhy Twitter is a Big Deal April 2009\nOm Malik is the most recent of many people to ask why Twitter is such a big deal.\nThe reason is that it\u0026rsquo;s a new messaging protocol, where you don\u0026rsquo;t specify the recipients. New protocols are rare. Or more precisely, new protocols that take off are. There are only a handful of commonly used ones: TCP/IP (the Internet), SMTP (email), HTTP (the web), and so on. So any new protocol is a big deal. But Twitter is a protocol owned by a private company. That\u0026rsquo;s even rarer.\n",
    "description": "",
    "tags": ["twitter","protocols","messaging","social_media","innovation","internet"],
    "categories": [],
    "content": "→ 中文版本\nWhy Twitter is a Big Deal April 2009\nOm Malik is the most recent of many people to ask why Twitter is such a big deal.\nThe reason is that it\u0026rsquo;s a new messaging protocol, where you don\u0026rsquo;t specify the recipients. New protocols are rare. Or more precisely, new protocols that take off are. There are only a handful of commonly used ones: TCP/IP (the Internet), SMTP (email), HTTP (the web), and so on. So any new protocol is a big deal. But Twitter is a protocol owned by a private company. That\u0026rsquo;s even rarer.\nCuriously, the fact that the founders of Twitter have been slow to …"
  },{
    "title": "Why YC",
    "url": "/paul_graham/essays_en/whyyc/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版\nWhy YC March 2006, rev August 2009\nYesterday one of the founders we funded asked me why we started Y Combinator. Or more precisely, he asked if we\u0026rsquo;d started YC mainly for fun.\nKind of, but not quite. It is enormously fun to be able to work with Rtm and Trevor again. I missed that after we sold Viaweb, and for all the years after I always had a background process running, looking for something we could do together. There is definitely an aspect of a band reunion to Y Combinator. Every couple days I slip and call it \u0026ldquo;Viaweb.\u0026rdquo;\n",
    "description": "",
    "tags": ["Y Combinator","startup","investing","hacker","entrepreneurship"],
    "categories": [],
    "content": "→ 中文版\nWhy YC March 2006, rev August 2009\nYesterday one of the founders we funded asked me why we started Y Combinator. Or more precisely, he asked if we\u0026rsquo;d started YC mainly for fun.\nKind of, but not quite. It is enormously fun to be able to work with Rtm and Trevor again. I missed that after we sold Viaweb, and for all the years after I always had a background process running, looking for something we could do together. There is definitely an aspect of a band reunion to Y Combinator. Every couple days I slip and call it \u0026ldquo;Viaweb.\u0026rdquo;\nViaweb we started very explicitly to make …"
  },{
    "title": "Write Like You Talk",
    "url": "/paul_graham/essays_en/talk/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nWrite Like You Talk October 2015\nHere\u0026rsquo;s a simple trick for getting more people to read what you write: write in spoken language.\nSomething comes over most people when they start writing. They write in a different language than they\u0026rsquo;d use if they were talking to a friend. The sentence structure and even the words are different. No one uses \u0026ldquo;pen\u0026rdquo; as a verb in spoken English. You\u0026rsquo;d feel like an idiot using \u0026ldquo;pen\u0026rdquo; instead of \u0026ldquo;write\u0026rdquo; in a conversation with a friend.\n",
    "description": "",
    "tags": ["writing","spoken language","communication","style","prose"],
    "categories": [],
    "content": "→ 中文版本\nWrite Like You Talk October 2015\nHere\u0026rsquo;s a simple trick for getting more people to read what you write: write in spoken language.\nSomething comes over most people when they start writing. They write in a different language than they\u0026rsquo;d use if they were talking to a friend. The sentence structure and even the words are different. No one uses \u0026ldquo;pen\u0026rdquo; as a verb in spoken English. You\u0026rsquo;d feel like an idiot using \u0026ldquo;pen\u0026rdquo; instead of \u0026ldquo;write\u0026rdquo; in a conversation with a friend.\nThe last straw for me was a sentence I read a couple days ago: The …"
  },{
    "title": "Write Simply",
    "url": "/paul_graham/essays_en/simply/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nWrite Simply March 2021\nI try to write using ordinary words and simple sentences.\nThat kind of writing is easier to read, and the easier something is to read, the more deeply readers will engage with it. The less energy they expend on your prose, the more they\u0026rsquo;ll have left for your ideas.\nAnd the further they\u0026rsquo;ll read. Most readers\u0026rsquo; energy tends to flag part way through an article or essay. If the friction of reading is low enough, more keep going till the end.\n",
    "description": "",
    "tags": ["writing","simplicity","clarity","communication","style"],
    "categories": [],
    "content": "→ 中文版本\nWrite Simply March 2021\nI try to write using ordinary words and simple sentences.\nThat kind of writing is easier to read, and the easier something is to read, the more deeply readers will engage with it. The less energy they expend on your prose, the more they\u0026rsquo;ll have left for your ideas.\nAnd the further they\u0026rsquo;ll read. Most readers\u0026rsquo; energy tends to flag part way through an article or essay. If the friction of reading is low enough, more keep going till the end.\nThere\u0026rsquo;s an Italian dish called saltimbocca, which means \u0026ldquo;leap into the mouth.\u0026rdquo; My goal when …"
  },{
    "title": "Writes and Write-Nots",
    "url": "/paul_graham/essays_en/writes/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版\nWrites and Write-Nots October 2024\nI\u0026rsquo;m usually reluctant to make predictions about technology, but I feel fairly confident about this one: in a couple decades there won\u0026rsquo;t be many people who can write.\nOne of the strangest things you learn if you\u0026rsquo;re a writer is how many people have trouble writing. Doctors know how many people have a mole they\u0026rsquo;re worried about; people who are good at setting up computers know how many people aren\u0026rsquo;t; writers know how many people need help writing.\n",
    "description": "",
    "tags": ["writing","ai","thinking","future","technology"],
    "categories": [],
    "content": "→ 中文版\nWrites and Write-Nots October 2024\nI\u0026rsquo;m usually reluctant to make predictions about technology, but I feel fairly confident about this one: in a couple decades there won\u0026rsquo;t be many people who can write.\nOne of the strangest things you learn if you\u0026rsquo;re a writer is how many people have trouble writing. Doctors know how many people have a mole they\u0026rsquo;re worried about; people who are good at setting up computers know how many people aren\u0026rsquo;t; writers know how many people need help writing.\nThe reason so many people have trouble writing is that it\u0026rsquo;s fundamentally …"
  },{
    "title": "Writing and Speaking",
    "url": "/paul_graham/essays_en/speak/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nWriting and Speaking March 2012\nI\u0026rsquo;m not a very good speaker. I say \u0026ldquo;um\u0026rdquo; a lot. Sometimes I have to pause when I lose my train of thought. I wish I were a better speaker. But I don\u0026rsquo;t wish I were a better speaker like I wish I were a better writer. What I really want is to have good ideas, and that\u0026rsquo;s a much bigger part of being a good writer than being a good speaker.\n",
    "description": "",
    "tags": ["speaking","writing","communication","ideas","public_speaking","rhetoric","education"],
    "categories": [],
    "content": "→ 中文版本\nWriting and Speaking March 2012\nI\u0026rsquo;m not a very good speaker. I say \u0026ldquo;um\u0026rdquo; a lot. Sometimes I have to pause when I lose my train of thought. I wish I were a better speaker. But I don\u0026rsquo;t wish I were a better speaker like I wish I were a better writer. What I really want is to have good ideas, and that\u0026rsquo;s a much bigger part of being a good writer than being a good speaker.\nHaving good ideas is most of writing well. If you know what you\u0026rsquo;re talking about, you can say it in the plainest words and you\u0026rsquo;ll be perceived as having a good style. With speaking …"
  },{
    "title": "Writing, Briefly",
    "url": "/paul_graham/essays_en/writing44/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版\nWriting, Briefly March 2005\n(In the process of answering an email, I accidentally wrote a tiny essay about writing. I usually spend weeks on an essay. This one took 67 minutes—23 of writing, and 44 of rewriting.)\nI think it\u0026rsquo;s far more important to write well than most people realize. Writing doesn\u0026rsquo;t just communicate ideas; it generates them. If you\u0026rsquo;re bad at writing and don\u0026rsquo;t like to do it, you\u0026rsquo;ll miss out on most of the ideas writing would have generated.\n",
    "description": "",
    "tags": ["writing","advice","tips","process","creativity"],
    "categories": [],
    "content": "→ 中文版\nWriting, Briefly March 2005\n(In the process of answering an email, I accidentally wrote a tiny essay about writing. I usually spend weeks on an essay. This one took 67 minutes—23 of writing, and 44 of rewriting.)\nI think it\u0026rsquo;s far more important to write well than most people realize. Writing doesn\u0026rsquo;t just communicate ideas; it generates them. If you\u0026rsquo;re bad at writing and don\u0026rsquo;t like to do it, you\u0026rsquo;ll miss out on most of the ideas writing would have generated.\nAs for how to write well, here\u0026rsquo;s the short version: Write a bad version 1 as fast as you can; …"
  },{
    "title": "You Weren't Meant to Have a Boss",
    "url": "/paul_graham/essays_en/boss/",
    "section": "paul_graham",
    "date": "0001-01-01",
    "summary": "→ 中文版本\nYou Weren\u0026rsquo;t Meant to Have a Boss Want to start a startup? Get funded by Y Combinator.\nMarch 2008, rev. June 2008\nTechnology tends to separate normal from natural. Our bodies weren\u0026rsquo;t designed to eat the foods that people in rich countries eat, or to get so little exercise. There may be a similar problem with the way we work: a normal job may be as bad for us intellectually as white flour or sugar is for us physically.\n",
    "description": "",
    "tags": ["boss","work","startups","freedom","organizations","programming","management"],
    "categories": [],
    "content": "→ 中文版本\nYou Weren\u0026rsquo;t Meant to Have a Boss Want to start a startup? Get funded by Y Combinator.\nMarch 2008, rev. June 2008\nTechnology tends to separate normal from natural. Our bodies weren\u0026rsquo;t designed to eat the foods that people in rich countries eat, or to get so little exercise. There may be a similar problem with the way we work: a normal job may be as bad for us intellectually as white flour or sugar is for us physically.\nI began to suspect this after spending several years working with startup founders. I\u0026rsquo;ve now worked with over 200 of them, and I\u0026rsquo;ve noticed a …"
  }]
