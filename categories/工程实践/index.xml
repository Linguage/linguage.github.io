<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>工程实践 on Linguista</title>
    <link>https://linguage.github.io/categories/%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/</link>
    <description>Recent content in 工程实践 on Linguista</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Wed, 01 Oct 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://linguage.github.io/categories/%E5%B7%A5%E7%A8%8B%E5%AE%9E%E8%B7%B5/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>「翻译」Anthropic:为人工智能代理进行有效的上下文工程</title>
      <link>https://linguage.github.io/labs/rosetta/anthropic_context_engineering/</link>
      <pubDate>Wed, 01 Oct 2025 00:00:00 +0000</pubDate>
      <guid>https://linguage.github.io/labs/rosetta/anthropic_context_engineering/</guid>
      <description>&lt;p&gt;在提示工程（prompt engineering）成为应用人工智能领域关注焦点几年后，一个新术语开始崭露头角：&lt;strong&gt;上下文工程（context engineering）&lt;/strong&gt;。使用语言模型进行构建，正逐渐从为提示寻找合适的词语和短语，转变为回答一个更宏观的问题：“什么样的上下文配置最有可能产生我们模型的期望行为？”&lt;/p&gt;</description>
    </item>
    <item>
      <title>「翻译」Cognition: 为 Claude Sonnet 4.5 重构 Devin：经验与挑战</title>
      <link>https://linguage.github.io/labs/rosetta/cognition_report_claude-4-5/</link>
      <pubDate>Tue, 30 Sep 2025 11:37:09 +0800</pubDate>
      <guid>https://linguage.github.io/labs/rosetta/cognition_report_claude-4-5/</guid>
      <description>&lt;p&gt;我们为 Claude Sonnet 4.5 重构了 Devin。新版本在我们的初级开发人员评估 (Junior Developer Evals) 中速度提升了 2 倍，表现提高了 12%，现已在“智能代理预览”(Agent Preview) 中提供。对于喜欢旧版 Devin 的用户，该版本仍然可用。&lt;/p&gt;&#xA;&lt;p&gt;2025年9月29日 Cognition 团队&lt;/p&gt;</description>
    </item>
    <item>
      <title>代码“劫后余生”:记一场Git灾难与抢救</title>
      <link>https://linguage.github.io/post/git-incident-2025-09-28/</link>
      <pubDate>Sun, 28 Sep 2025 21:29:00 +0800</pubDate>
      <guid>https://linguage.github.io/post/git-incident-2025-09-28/</guid>
      <description>&lt;p&gt;经过一天的工作，我昨天配置的博客评论区离奇消失，查找记录时发现更惊悚的事：我近几天的Git提交记录全部失踪，并因一个误操作导致代码回滚到三天前的基础版本，所有后期工作成果瞬间清零。我向 GPT-5-Codex 求救，它立即启动高级Git命令进行抢救。最终，在GPT的指导下，我执行了几行恢复命令，代码起死回生，成功回到了误操作前的状态。这次劫后余生的经历，让我深切体会到Git的强大与学习它的必要性。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
